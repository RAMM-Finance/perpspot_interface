{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AddedExternal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "PnL",
          "type": "int256"
        }
      ],
      "name": "Repay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Use",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "externalToken",
          "type": "address"
        }
      ],
      "name": "addExternalTokenToBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "convertToAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "convertToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "externalTokensAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isStrategist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "maxRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "maxWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "PnL",
          "type": "int256"
        }
      ],
      "name": "repayBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountSold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBought",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "externalToken",
          "type": "address"
        }
      ],
      "name": "sellExternalToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "strategist",
          "type": "address"
        }
      ],
      "name": "setStrategist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "useBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "utilizedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506122f3806100206000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80639065714711610130578063ba087652116100b8578063d905777e1161007c578063d905777e14610498578063dd62ed3e146104ab578063ef8b30f71461045f578063f005af3e146104be578063f367cddf146104d157600080fd5b8063ba0876521461044c578063c63d75b614610339578063c6e6f5921461045f578063c7b9d53014610472578063ce96cb771461048557600080fd5b80639e1a4d19116100ff5780639e1a4d19146103f7578063a457c2d714610400578063a9059cbb14610413578063b3d7f6b914610426578063b460af941461043957600080fd5b806390657147146103b657806394bf804d146103c957806395d89b41146103dc57806396721d8a146103e457600080fd5b806338d52e0f116101b35780634cdad506116101825780634cdad506146102585780636734faee1461034e5780636e553f651461037157806370a08231146103845780638f697f91146103ad57600080fd5b806338d52e0f146102f657806339509351146103115780633bc034bd14610324578063402d267d1461033957600080fd5b80630a28a477116101fa5780630a28a4771461028e57806318160ddd146102a157806319f12d50146102a957806323b872dd146102c9578063313ce567146102dc57600080fd5b806301e1d1141461022c57806306fdde031461024357806307a2d13a14610258578063095ea7b31461026b575b600080fd5b609b545b6040519081526020015b60405180910390f35b61024b6104e4565b60405161023a9190611c39565b610230610266366004611c4c565b610576565b61027e610279366004611c81565b610589565b604051901515815260200161023a565b61023061029c366004611c4c565b6105a1565b603554610230565b6102306102b7366004611cab565b60996020526000908152604090205481565b61027e6102d7366004611cc6565b6105ae565b6102e46105d4565b60405160ff909116815260200161023a565b6065546040516001600160a01b03909116815260200161023a565b61027e61031f366004611c81565b6105f3565b610337610332366004611d02565b610615565b005b610230610347366004611cab565b5060001990565b61027e61035c366004611cab565b60986020526000908152604090205460ff1681565b61023061037f366004611d24565b61071a565b610230610392366004611cab565b6001600160a01b031660009081526033602052604090205490565b610230609a5481565b6103376103c4366004611df3565b610734565b6102306103d7366004611d24565b610865565b61024b61087f565b6103376103f2366004611d24565b61088e565b610230609b5481565b61027e61040e366004611c81565b610932565b61027e610421366004611c81565b6109b8565b610230610434366004611c4c565b6109c6565b610230610447366004611e67565b6109d3565b61023061045a366004611e67565b610a4f565b61023061046d366004611c4c565b610ac3565b610337610480366004611cab565b610ad0565b610230610493366004611cab565b610b3c565b6102306104a6366004611cab565b610b60565b6102306104b9366004611ea3565b610b7e565b6103376104cc366004611c4c565b610ba9565b6103376104df366004611ecd565b610cb3565b6060603680546104f390611ef9565b80601f016020809104026020016040519081016040528092919081815260200182805461051f90611ef9565b801561056c5780601f106105415761010080835404028352916020019161056c565b820191906000526020600020905b81548152906001019060200180831161054f57829003601f168201915b5050505050905090565b6000610583826000610da8565b92915050565b600033610597818585610de3565b5060019392505050565b6000610583826001610f07565b6000336105bc858285610f32565b6105c7858585610fa6565b60019150505b9392505050565b6000806065546105ee9190600160a01b900460ff16611f49565b905090565b6000336105978185856106068383610b7e565b6106109190611f62565b610de3565b3360009081526098602052604090205460ff1661064d5760405162461bcd60e51b815260040161064490611f75565b60405180910390fd5b81609a600082825461065f9190611f9a565b909155505060008112156106885761067681611fad565b609b546106839190611f9a565b610696565b80609b546106969190611f62565b609b556106da6106ae6065546001600160a01b031690565b3330600085136106d0576106c185611fad565b6106cb9087611f9a565b611151565b6106cb8587611f62565b604080518381526020810183905233917f2f7d67a2272e05a41bad89b6859934686333f74ec892ad29a9aa69596ab440d891015b60405180910390a25050565b60008061072684610ac3565b90506105cd338486846111db565b600054610100900460ff16158080156107545750600054600160ff909116105b8061076e5750303b15801561076e575060005460ff166001145b6107d15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610644565b6000805460ff1916600117905580156107f4576000805461ff0019166101001790555b6107fd84611268565b610807838361129b565b609780546001600160a01b03191633179055801561085f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b600080610871846109c6565b90506105cd338483876111db565b6060603780546104f390611ef9565b3360009081526098602052604090205460ff166108bd5760405162461bcd60e51b815260040161064490611f75565b6001600160a01b038116600090815260996020526040812080548492906108e5908490611f62565b909155506108f7905081333085611151565b806001600160a01b03167f36ffac572f12ccdd8e663178562b6a764cb46e1e0d7ef0b17a03cc6bf34ca1878360405161070e91815260200190565b600033816109408286610b7e565b9050838110156109a05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610644565b6109ad8286868403610de3565b506001949350505050565b600033610597818585610fa6565b6000610583826001610da8565b60006109de82610b3c565b841115610a2d5760405162461bcd60e51b815260206004820152601f60248201527f455243343632363a207769746864726177206d6f7265207468616e206d6178006044820152606401610644565b6000610a38856105a1565b9050610a4733858588856112d0565b949350505050565b6000610a5a82610b60565b841115610aa95760405162461bcd60e51b815260206004820152601d60248201527f455243343632363a2072656465656d206d6f7265207468616e206d61780000006044820152606401610644565b6000610ab485610576565b9050610a4733858584896112d0565b6000610583826000610f07565b6097546001600160a01b03163314610b135760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610644565b6001600160a01b03166000908152609860205260409020805460ff19811660ff90911615179055565b6001600160a01b038116600090815260336020526040812054610583906000610da8565b6001600160a01b038116600090815260336020526040812054610583565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3360009081526098602052604090205460ff16610bd85760405162461bcd60e51b815260040161064490611f75565b610c04604051806040016040528060078152602001663f3f3f3f3f3f3f60c81b815250609b5483611399565b80609a54610c129190611f62565b609b541015610c4d5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610644565b80609a6000828254610c5f9190611f62565b9091555050606554610c7b906001600160a01b031633836113e0565b60405181815233907f095a6ca7abcfe34d4a2c0943555a21fd5531b0a8c33bf91725429b968d2c81bd9060200160405180910390a250565b3360009081526098602052604090205460ff16610ce25760405162461bcd60e51b815260040161064490611f75565b6001600160a01b038116600090815260996020526040902054831115610d345760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610644565b6001600160a01b03811660009081526099602052604081208054859290610d5c908490611f9a565b9250508190555081609b6000828254610d759190611f62565b90915550610d8690508133846113e0565b610da3610d9b6065546001600160a01b031690565b333085611151565b505050565b60006105cd610db6609b5490565b610dc1906001611f62565b610dcd6000600a6120ad565b603554610dda9190611f62565b85919085611458565b6001600160a01b038316610e455760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610644565b6001600160a01b038216610ea65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610644565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105cd610f1782600a6120ad565b603554610f249190611f62565b609b54610dda906001611f62565b6000610f3e8484610b7e565b9050600019811461085f5781811015610f995760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610644565b61085f8484848403610de3565b6001600160a01b03831661100a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610644565b6001600160a01b03821661106c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610644565b6001600160a01b038316600090815260336020526040902054818110156110e45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610644565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111449086815260200190565b60405180910390a361085f565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806111d45760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610644565b5050505050565b6111f86111f06065546001600160a01b031690565b8530856114b5565b6112028382611520565b81609b60008282546112149190611f62565b909155505060408051838152602081018390526001600160a01b0380861692908716917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a350505050565b600054610100900460ff1661128f5760405162461bcd60e51b8152600401610644906120bc565b611298816115e1565b50565b600054610100900460ff166112c25760405162461bcd60e51b8152600401610644906120bc565b6112cc8282611666565b5050565b826001600160a01b0316856001600160a01b0316146112f4576112f4838683610f32565b81609b60008282546113069190611f9a565b90915550611316905083826116a6565b61133261132b6065546001600160a01b031690565b85846117da565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db858560405161138a929190918252602082015260400190565b60405180910390a45050505050565b610da38383836040516024016113b193929190612107565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b17905261180a565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061085f5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610644565b60008061146686868661182b565b9050600183600281111561147c5761147c61212c565b14801561149957506000848061149457611494612142565b868809115b156114ac576114a9600182611f62565b90505b95945050505050565b6040516001600160a01b038085166024830152831660448201526064810182905261085f9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611915565b6001600160a01b0382166115765760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610644565b80603560008282546115889190611f62565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600054610100900460ff166116085760405162461bcd60e51b8152600401610644906120bc565b600080611614836119ea565b9150915081611624576012611626565b805b606580546001600160a01b039095166001600160a01b031960ff93909316600160a01b02929092166001600160a81b031990951694909417179092555050565b600054610100900460ff1661168d5760405162461bcd60e51b8152600401610644906120bc565b603661169983826121a6565b506037610da382826121a6565b6001600160a01b0382166117065760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610644565b6001600160a01b0382166000908152603360205260409020548181101561177a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610644565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6040516001600160a01b038316602482015260448101829052610da390849063a9059cbb60e01b906064016114e9565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008080600019858709858702925082811083820303915050806000036118655783828161185b5761185b612142565b04925050506105cd565b8084116118ac5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b6044820152606401610644565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600061196a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611ac69092919063ffffffff16565b905080516000148061198b57508080602001905181019061198b9190612266565b610da35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610644565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000918291829182916001600160a01b03871691611a3191612288565b600060405180830381855afa9150503d8060008114611a6c576040519150601f19603f3d011682016040523d82523d6000602084013e611a71565b606091505b5091509150818015611a8557506020815110155b15611ab957600081806020019051810190611aa091906122a4565b905060ff8111611ab7576001969095509350505050565b505b5060009485945092505050565b6060610a47848460008585600080866001600160a01b03168587604051611aed9190612288565b60006040518083038185875af1925050503d8060008114611b2a576040519150601f19603f3d011682016040523d82523d6000602084013e611b2f565b606091505b5091509150611b4087838387611b4b565b979650505050505050565b60608315611bba578251600003611bb3576001600160a01b0385163b611bb35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610644565b5081610a47565b610a478383815115611bcf5781518083602001fd5b8060405162461bcd60e51b81526004016106449190611c39565b60005b83811015611c04578181015183820152602001611bec565b50506000910152565b60008151808452611c25816020860160208601611be9565b601f01601f19169290920160200192915050565b6020815260006105cd6020830184611c0d565b600060208284031215611c5e57600080fd5b5035919050565b80356001600160a01b0381168114611c7c57600080fd5b919050565b60008060408385031215611c9457600080fd5b611c9d83611c65565b946020939093013593505050565b600060208284031215611cbd57600080fd5b6105cd82611c65565b600080600060608486031215611cdb57600080fd5b611ce484611c65565b9250611cf260208501611c65565b9150604084013590509250925092565b60008060408385031215611d1557600080fd5b50508035926020909101359150565b60008060408385031215611d3757600080fd5b82359150611d4760208401611c65565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611d7757600080fd5b813567ffffffffffffffff80821115611d9257611d92611d50565b604051601f8301601f19908116603f01168101908282118183101715611dba57611dba611d50565b81604052838152866020858801011115611dd357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611e0857600080fd5b611e1184611c65565b9250602084013567ffffffffffffffff80821115611e2e57600080fd5b611e3a87838801611d66565b93506040860135915080821115611e5057600080fd5b50611e5d86828701611d66565b9150509250925092565b600080600060608486031215611e7c57600080fd5b83359250611e8c60208501611c65565b9150611e9a60408501611c65565b90509250925092565b60008060408385031215611eb657600080fd5b611ebf83611c65565b9150611d4760208401611c65565b600080600060608486031215611ee257600080fd5b8335925060208401359150611e9a60408501611c65565b600181811c90821680611f0d57607f821691505b602082108103611f2d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60ff818116838216019081111561058357610583611f33565b8082018082111561058357610583611f33565b6020808252600b908201526a085cdd1c985d1959da5cdd60aa1b604082015260600190565b8181038181111561058357610583611f33565b6000600160ff1b8201611fc257611fc2611f33565b5060000390565b600181815b80851115612004578160001904821115611fea57611fea611f33565b80851615611ff757918102915b93841c9390800290611fce565b509250929050565b60008261201b57506001610583565b8161202857506000610583565b816001811461203e576002811461204857612064565b6001915050610583565b60ff84111561205957612059611f33565b50506001821b610583565b5060208310610133831016604e8410600b8410161715612087575081810a610583565b6120918383611fc9565b80600019048211156120a5576120a5611f33565b029392505050565b60006105cd60ff84168361200c565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60608152600061211a6060830186611c0d565b60208301949094525060400152919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b601f821115610da357600081815260208120601f850160051c8101602086101561217f5750805b601f850160051c820191505b8181101561219e5782815560010161218b565b505050505050565b815167ffffffffffffffff8111156121c0576121c0611d50565b6121d4816121ce8454611ef9565b84612158565b602080601f83116001811461220957600084156121f15750858301515b600019600386901b1c1916600185901b17855561219e565b600085815260208120601f198616915b8281101561223857888601518255948401946001909101908401612219565b50858210156122565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561227857600080fd5b815180151581146105cd57600080fd5b6000825161229a818460208701611be9565b9190910192915050565b6000602082840312156122b657600080fd5b505191905056fea264697066735822122055d4e85f2859c3719af85e3befbec89088f4ce3b2bd954a373cd61def0d13f1664736f6c63430008150033",
    "sourceMap": "722:5139:71:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102275760003560e01c80639065714711610130578063ba087652116100b8578063d905777e1161007c578063d905777e14610498578063dd62ed3e146104ab578063ef8b30f71461045f578063f005af3e146104be578063f367cddf146104d157600080fd5b8063ba0876521461044c578063c63d75b614610339578063c6e6f5921461045f578063c7b9d53014610472578063ce96cb771461048557600080fd5b80639e1a4d19116100ff5780639e1a4d19146103f7578063a457c2d714610400578063a9059cbb14610413578063b3d7f6b914610426578063b460af941461043957600080fd5b806390657147146103b657806394bf804d146103c957806395d89b41146103dc57806396721d8a146103e457600080fd5b806338d52e0f116101b35780634cdad506116101825780634cdad506146102585780636734faee1461034e5780636e553f651461037157806370a08231146103845780638f697f91146103ad57600080fd5b806338d52e0f146102f657806339509351146103115780633bc034bd14610324578063402d267d1461033957600080fd5b80630a28a477116101fa5780630a28a4771461028e57806318160ddd146102a157806319f12d50146102a957806323b872dd146102c9578063313ce567146102dc57600080fd5b806301e1d1141461022c57806306fdde031461024357806307a2d13a14610258578063095ea7b31461026b575b600080fd5b609b545b6040519081526020015b60405180910390f35b61024b6104e4565b60405161023a9190611c39565b610230610266366004611c4c565b610576565b61027e610279366004611c81565b610589565b604051901515815260200161023a565b61023061029c366004611c4c565b6105a1565b603554610230565b6102306102b7366004611cab565b60996020526000908152604090205481565b61027e6102d7366004611cc6565b6105ae565b6102e46105d4565b60405160ff909116815260200161023a565b6065546040516001600160a01b03909116815260200161023a565b61027e61031f366004611c81565b6105f3565b610337610332366004611d02565b610615565b005b610230610347366004611cab565b5060001990565b61027e61035c366004611cab565b60986020526000908152604090205460ff1681565b61023061037f366004611d24565b61071a565b610230610392366004611cab565b6001600160a01b031660009081526033602052604090205490565b610230609a5481565b6103376103c4366004611df3565b610734565b6102306103d7366004611d24565b610865565b61024b61087f565b6103376103f2366004611d24565b61088e565b610230609b5481565b61027e61040e366004611c81565b610932565b61027e610421366004611c81565b6109b8565b610230610434366004611c4c565b6109c6565b610230610447366004611e67565b6109d3565b61023061045a366004611e67565b610a4f565b61023061046d366004611c4c565b610ac3565b610337610480366004611cab565b610ad0565b610230610493366004611cab565b610b3c565b6102306104a6366004611cab565b610b60565b6102306104b9366004611ea3565b610b7e565b6103376104cc366004611c4c565b610ba9565b6103376104df366004611ecd565b610cb3565b6060603680546104f390611ef9565b80601f016020809104026020016040519081016040528092919081815260200182805461051f90611ef9565b801561056c5780601f106105415761010080835404028352916020019161056c565b820191906000526020600020905b81548152906001019060200180831161054f57829003601f168201915b5050505050905090565b6000610583826000610da8565b92915050565b600033610597818585610de3565b5060019392505050565b6000610583826001610f07565b6000336105bc858285610f32565b6105c7858585610fa6565b60019150505b9392505050565b6000806065546105ee9190600160a01b900460ff16611f49565b905090565b6000336105978185856106068383610b7e565b6106109190611f62565b610de3565b3360009081526098602052604090205460ff1661064d5760405162461bcd60e51b815260040161064490611f75565b60405180910390fd5b81609a600082825461065f9190611f9a565b909155505060008112156106885761067681611fad565b609b546106839190611f9a565b610696565b80609b546106969190611f62565b609b556106da6106ae6065546001600160a01b031690565b3330600085136106d0576106c185611fad565b6106cb9087611f9a565b611151565b6106cb8587611f62565b604080518381526020810183905233917f2f7d67a2272e05a41bad89b6859934686333f74ec892ad29a9aa69596ab440d891015b60405180910390a25050565b60008061072684610ac3565b90506105cd338486846111db565b600054610100900460ff16158080156107545750600054600160ff909116105b8061076e5750303b15801561076e575060005460ff166001145b6107d15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610644565b6000805460ff1916600117905580156107f4576000805461ff0019166101001790555b6107fd84611268565b610807838361129b565b609780546001600160a01b03191633179055801561085f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b600080610871846109c6565b90506105cd338483876111db565b6060603780546104f390611ef9565b3360009081526098602052604090205460ff166108bd5760405162461bcd60e51b815260040161064490611f75565b6001600160a01b038116600090815260996020526040812080548492906108e5908490611f62565b909155506108f7905081333085611151565b806001600160a01b03167f36ffac572f12ccdd8e663178562b6a764cb46e1e0d7ef0b17a03cc6bf34ca1878360405161070e91815260200190565b600033816109408286610b7e565b9050838110156109a05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610644565b6109ad8286868403610de3565b506001949350505050565b600033610597818585610fa6565b6000610583826001610da8565b60006109de82610b3c565b841115610a2d5760405162461bcd60e51b815260206004820152601f60248201527f455243343632363a207769746864726177206d6f7265207468616e206d6178006044820152606401610644565b6000610a38856105a1565b9050610a4733858588856112d0565b949350505050565b6000610a5a82610b60565b841115610aa95760405162461bcd60e51b815260206004820152601d60248201527f455243343632363a2072656465656d206d6f7265207468616e206d61780000006044820152606401610644565b6000610ab485610576565b9050610a4733858584896112d0565b6000610583826000610f07565b6097546001600160a01b03163314610b135760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610644565b6001600160a01b03166000908152609860205260409020805460ff19811660ff90911615179055565b6001600160a01b038116600090815260336020526040812054610583906000610da8565b6001600160a01b038116600090815260336020526040812054610583565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3360009081526098602052604090205460ff16610bd85760405162461bcd60e51b815260040161064490611f75565b610c04604051806040016040528060078152602001663f3f3f3f3f3f3f60c81b815250609b5483611399565b80609a54610c129190611f62565b609b541015610c4d5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610644565b80609a6000828254610c5f9190611f62565b9091555050606554610c7b906001600160a01b031633836113e0565b60405181815233907f095a6ca7abcfe34d4a2c0943555a21fd5531b0a8c33bf91725429b968d2c81bd9060200160405180910390a250565b3360009081526098602052604090205460ff16610ce25760405162461bcd60e51b815260040161064490611f75565b6001600160a01b038116600090815260996020526040902054831115610d345760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610644565b6001600160a01b03811660009081526099602052604081208054859290610d5c908490611f9a565b9250508190555081609b6000828254610d759190611f62565b90915550610d8690508133846113e0565b610da3610d9b6065546001600160a01b031690565b333085611151565b505050565b60006105cd610db6609b5490565b610dc1906001611f62565b610dcd6000600a6120ad565b603554610dda9190611f62565b85919085611458565b6001600160a01b038316610e455760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610644565b6001600160a01b038216610ea65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610644565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105cd610f1782600a6120ad565b603554610f249190611f62565b609b54610dda906001611f62565b6000610f3e8484610b7e565b9050600019811461085f5781811015610f995760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610644565b61085f8484848403610de3565b6001600160a01b03831661100a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610644565b6001600160a01b03821661106c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610644565b6001600160a01b038316600090815260336020526040902054818110156110e45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610644565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111449086815260200190565b60405180910390a361085f565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806111d45760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610644565b5050505050565b6111f86111f06065546001600160a01b031690565b8530856114b5565b6112028382611520565b81609b60008282546112149190611f62565b909155505060408051838152602081018390526001600160a01b0380861692908716917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a350505050565b600054610100900460ff1661128f5760405162461bcd60e51b8152600401610644906120bc565b611298816115e1565b50565b600054610100900460ff166112c25760405162461bcd60e51b8152600401610644906120bc565b6112cc8282611666565b5050565b826001600160a01b0316856001600160a01b0316146112f4576112f4838683610f32565b81609b60008282546113069190611f9a565b90915550611316905083826116a6565b61133261132b6065546001600160a01b031690565b85846117da565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db858560405161138a929190918252602082015260400190565b60405180910390a45050505050565b610da38383836040516024016113b193929190612107565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b17905261180a565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061085f5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610644565b60008061146686868661182b565b9050600183600281111561147c5761147c61212c565b14801561149957506000848061149457611494612142565b868809115b156114ac576114a9600182611f62565b90505b95945050505050565b6040516001600160a01b038085166024830152831660448201526064810182905261085f9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611915565b6001600160a01b0382166115765760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610644565b80603560008282546115889190611f62565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600054610100900460ff166116085760405162461bcd60e51b8152600401610644906120bc565b600080611614836119ea565b9150915081611624576012611626565b805b606580546001600160a01b039095166001600160a01b031960ff93909316600160a01b02929092166001600160a81b031990951694909417179092555050565b600054610100900460ff1661168d5760405162461bcd60e51b8152600401610644906120bc565b603661169983826121a6565b506037610da382826121a6565b6001600160a01b0382166117065760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610644565b6001600160a01b0382166000908152603360205260409020548181101561177a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610644565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6040516001600160a01b038316602482015260448101829052610da390849063a9059cbb60e01b906064016114e9565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008080600019858709858702925082811083820303915050806000036118655783828161185b5761185b612142565b04925050506105cd565b8084116118ac5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b6044820152606401610644565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600061196a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611ac69092919063ffffffff16565b905080516000148061198b57508080602001905181019061198b9190612266565b610da35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610644565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000918291829182916001600160a01b03871691611a3191612288565b600060405180830381855afa9150503d8060008114611a6c576040519150601f19603f3d011682016040523d82523d6000602084013e611a71565b606091505b5091509150818015611a8557506020815110155b15611ab957600081806020019051810190611aa091906122a4565b905060ff8111611ab7576001969095509350505050565b505b5060009485945092505050565b6060610a47848460008585600080866001600160a01b03168587604051611aed9190612288565b60006040518083038185875af1925050503d8060008114611b2a576040519150601f19603f3d011682016040523d82523d6000602084013e611b2f565b606091505b5091509150611b4087838387611b4b565b979650505050505050565b60608315611bba578251600003611bb3576001600160a01b0385163b611bb35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610644565b5081610a47565b610a478383815115611bcf5781518083602001fd5b8060405162461bcd60e51b81526004016106449190611c39565b60005b83811015611c04578181015183820152602001611bec565b50506000910152565b60008151808452611c25816020860160208601611be9565b601f01601f19169290920160200192915050565b6020815260006105cd6020830184611c0d565b600060208284031215611c5e57600080fd5b5035919050565b80356001600160a01b0381168114611c7c57600080fd5b919050565b60008060408385031215611c9457600080fd5b611c9d83611c65565b946020939093013593505050565b600060208284031215611cbd57600080fd5b6105cd82611c65565b600080600060608486031215611cdb57600080fd5b611ce484611c65565b9250611cf260208501611c65565b9150604084013590509250925092565b60008060408385031215611d1557600080fd5b50508035926020909101359150565b60008060408385031215611d3757600080fd5b82359150611d4760208401611c65565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611d7757600080fd5b813567ffffffffffffffff80821115611d9257611d92611d50565b604051601f8301601f19908116603f01168101908282118183101715611dba57611dba611d50565b81604052838152866020858801011115611dd357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611e0857600080fd5b611e1184611c65565b9250602084013567ffffffffffffffff80821115611e2e57600080fd5b611e3a87838801611d66565b93506040860135915080821115611e5057600080fd5b50611e5d86828701611d66565b9150509250925092565b600080600060608486031215611e7c57600080fd5b83359250611e8c60208501611c65565b9150611e9a60408501611c65565b90509250925092565b60008060408385031215611eb657600080fd5b611ebf83611c65565b9150611d4760208401611c65565b600080600060608486031215611ee257600080fd5b8335925060208401359150611e9a60408501611c65565b600181811c90821680611f0d57607f821691505b602082108103611f2d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60ff818116838216019081111561058357610583611f33565b8082018082111561058357610583611f33565b6020808252600b908201526a085cdd1c985d1959da5cdd60aa1b604082015260600190565b8181038181111561058357610583611f33565b6000600160ff1b8201611fc257611fc2611f33565b5060000390565b600181815b80851115612004578160001904821115611fea57611fea611f33565b80851615611ff757918102915b93841c9390800290611fce565b509250929050565b60008261201b57506001610583565b8161202857506000610583565b816001811461203e576002811461204857612064565b6001915050610583565b60ff84111561205957612059611f33565b50506001821b610583565b5060208310610133831016604e8410600b8410161715612087575081810a610583565b6120918383611fc9565b80600019048211156120a5576120a5611f33565b029392505050565b60006105cd60ff84168361200c565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60608152600061211a6060830186611c0d565b60208301949094525060400152919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b601f821115610da357600081815260208120601f850160051c8101602086101561217f5750805b601f850160051c820191505b8181101561219e5782815560010161218b565b505050505050565b815167ffffffffffffffff8111156121c0576121c0611d50565b6121d4816121ce8454611ef9565b84612158565b602080601f83116001811461220957600084156121f15750858301515b600019600386901b1c1916600185901b17855561219e565b600085815260208120601f198616915b8281101561223857888601518255948401946001909101908401612219565b50858210156122565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561227857600080fd5b815180151581146105cd57600080fd5b6000825161229a818460208701611be9565b9190910192915050565b6000602082840312156122b657600080fd5b505191905056fea264697066735822122055d4e85f2859c3719af85e3befbec89088f4ce3b2bd954a373cd61def0d13f1664736f6c63430008150033",
    "sourceMap": "722:5139:71:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5751:107;5838:12;;5751:107;;;160:25:127;;;148:2;133:18;5751:107:71;;;;;;;;2495:98:21;;;:::i;:::-;;;;;;;:::i;5810:167:23:-;;;;;;:::i;:::-;;:::i;4781:197:21:-;;;;;;:::i;:::-;;:::i;:::-;;;1739:14:127;;1732:22;1714:41;;1702:2;1687:18;4781:197:21;1574:187:127;7178:165:23;;;;;;:::i;:::-;;:::i;3592:106:21:-;3679:12;;3592:106;;1143:53:71;;;;;;:::i;:::-;;;;;;;;;;;;;;5540:256:21;;;;;;:::i;:::-;;:::i;5040:173:23:-;;;:::i;:::-;;;2462:4:127;2450:17;;;2432:36;;2420:2;2405:18;5040:173:23;2290:184:127;5257:103:23;5346:6;;5257:103;;-1:-1:-1;;;;;5346:6:23;;;2625:51:127;;2613:2;2598:18;5257:103:23;2479:203:127;6191:234:21;;;;;;:::i;:::-;;:::i;2166:484:71:-;;;;;;:::i;:::-;;:::i;:::-;;6026:117:23;;;;;;:::i;:::-;-1:-1:-1;;;6119:17:23;6026:117;1093:43:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7606:315:23;;;;;;:::i;:::-;;:::i;3756:125:21:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3856:18:21;3830:7;3856:18;;;:9;:18;;;;;;;3756:125;1204:27:71;;;;;;1270:237;;;;;;:::i;:::-;;:::i;8188:303:23:-;;;;;;:::i;:::-;;:::i;2706:102:21:-;;;:::i;2656:418:71:-;;;;;;:::i;:::-;;:::i;1238:24::-;;;;;;6912:427:21;;;;;;:::i;:::-;;:::i;4077:189::-;;;;;;:::i;:::-;;:::i;6963:161:23:-;;;;;;:::i;:::-;;:::i;8538:339::-;;;;;;:::i;:::-;;:::i;8922:331::-;;;;;;:::i;:::-;;:::i;5589:167::-;;;;;;:::i;:::-;;:::i;1514::71:-;;;;;;:::i;:::-;;:::i;6353:172:23:-;;;;;;:::i;:::-;;:::i;6573:121::-;;;;;;:::i;:::-;;:::i;4324:149:21:-;;;;;;:::i;:::-;;:::i;1687:390:71:-;;;;;;:::i;:::-;;:::i;3203:642::-;;;;;;:::i;:::-;;:::i;2495:98:21:-;2549:13;2581:5;2574:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98;:::o;5810:167:23:-;5889:7;5915:55;5932:6;5940:29;5915:16;:55::i;:::-;5908:62;5810:167;-1:-1:-1;;5810:167:23:o;4781:197:21:-;4864:4;929:10:34;4918:32:21;929:10:34;4934:7:21;4943:6;4918:8;:32::i;:::-;-1:-1:-1;4967:4:21;;4781:197;-1:-1:-1;;;4781:197:21:o;7178:165:23:-;7257:7;7283:53;7300:6;7308:27;7283:16;:53::i;5540:256:21:-;5637:4;929:10:34;5693:38:21;5709:4;929:10:34;5724:6:21;5693:15;:38::i;:::-;5741:27;5751:4;5757:2;5761:6;5741:9;:27::i;:::-;5785:4;5778:11;;;5540:256;;;;;;:::o;5040:173:23:-;5143:5;;5167:19;;:39;;;-1:-1:-1;;;5167:19:23;;;;:39;:::i;:::-;5160:46;;5040:173;:::o;6191:234:21:-;6279:4;929:10:34;6333:64:21;929:10:34;6349:7:21;6386:10;6358:25;929:10:34;6349:7:21;6358:9;:25::i;:::-;:38;;;;:::i;:::-;6333:8;:64::i;2166:484:71:-;2255:10;2242:24;;;;:12;:24;;;;;;;;2234:48;;;;-1:-1:-1;;;2234:48:71;;;;;;;:::i;:::-;;;;;;;;;2313:6;2294:15;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;2351:1:71;2345:7;;;:58;;2398:4;2399:3;2398:4;:::i;:::-;2380:12;;:23;;;;:::i;:::-;2345:58;;;2373:3;2355:12;;:22;;;;:::i;:::-;2330:12;:73;2414:181;2466:7;5346:6:23;;-1:-1:-1;;;;;5346:6:23;;5257:103;2466:7:71;2489:10;2521:4;2546:1;2541:3;:6;:44;;2580:4;2581:3;2580:4;:::i;:::-;2567:18;;:6;:18;:::i;:::-;2414:32;:181::i;2541:44::-;2549:16;2561:3;2549:6;:16;:::i;2414:181::-;2612:30;;;7187:25:127;;;7243:2;7228:18;;7221:34;;;2618:10:71;;2612:30;;7160:18:127;2612:30:71;;;;;;;;2166:484;;:::o;7606:315:23:-;7690:7;7793:14;7810:22;7825:6;7810:14;:22::i;:::-;7793:39;-1:-1:-1;7842:48:23;929:10:34;7865:8:23;7875:6;7883;7842:8;:48::i;1270:237:71:-;3279:19:20;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:20;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:20;1713:19:33;:23;;;3387:66:20;;-1:-1:-1;3436:12:20;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:20;;7827:2:127;3325:201:20;;;7809:21:127;7866:2;7846:18;;;7839:30;7905:34;7885:18;;;7878:62;-1:-1:-1;;;7956:18:127;;;7949:44;8010:19;;3325:201:20;7625:410:127;3325:201:20;3536:12;:16;;-1:-1:-1;;3536:16:20;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:20;;;;;3562:65;1385:47:71::1;1418:12;1385:14;:47::i;:::-;1442:28;1455:5;1462:7;1442:12;:28::i;:::-;1482:5;:18:::0;;-1:-1:-1;;;;;;1482:18:71::1;1490:10;1482:18;::::0;;3647:99:20;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:20;;;3721:14;;-1:-1:-1;2432:36:127;;3721:14:20;;2420:2:127;2405:18;3721:14:20;;;;;;;3647:99;3269:483;1270:237:71;;;:::o;8188:303:23:-;8269:7;8366:14;8383:19;8395:6;8383:11;:19::i;:::-;8366:36;-1:-1:-1;8412:48:23;929:10:34;8435:8:23;8445:6;8453;8412:8;:48::i;2706:102:21:-;2762:13;2794:7;2787:14;;;;;:::i;2656:418:71:-;2769:10;2756:24;;;;:12;:24;;;;;;;;2748:48;;;;-1:-1:-1;;;2748:48:71;;;;;;;:::i;:::-;-1:-1:-1;;;;;2808:35:71;;;;;;:20;:35;;;;;:45;;2847:6;;2808:35;:45;;2847:6;;2808:45;:::i;:::-;;;;-1:-1:-1;2864:149:71;;-1:-1:-1;2916:13:71;2945:10;2977:4;2997:6;2864:32;:149::i;:::-;3044:13;-1:-1:-1;;;;;3030:36:71;;3059:6;3030:36;;;;160:25:127;;148:2;133:18;;14:177;6912:427:21;7005:4;929:10:34;7005:4:21;7086:25;929:10:34;7103:7:21;7086:9;:25::i;:::-;7059:52;;7149:15;7129:16;:35;;7121:85;;;;-1:-1:-1;;;7121:85:21;;8797:2:127;7121:85:21;;;8779:21:127;8836:2;8816:18;;;8809:30;8875:34;8855:18;;;8848:62;-1:-1:-1;;;8926:18:127;;;8919:35;8971:19;;7121:85:21;8595:401:127;7121:85:21;7240:60;7249:5;7256:7;7284:15;7265:16;:34;7240:8;:60::i;:::-;-1:-1:-1;7328:4:21;;6912:427;-1:-1:-1;;;;6912:427:21:o;4077:189::-;4156:4;929:10:34;4210:28:21;929:10:34;4227:2:21;4231:6;4210:9;:28::i;6963:161:23:-;7038:7;7064:53;7081:6;7089:27;7064:16;:53::i;8538:339::-;8638:7;8675:18;8687:5;8675:11;:18::i;:::-;8665:6;:28;;8657:72;;;;-1:-1:-1;;;8657:72:23;;9203:2:127;8657:72:23;;;9185:21:127;9242:2;9222:18;;;9215:30;9281:33;9261:18;;;9254:61;9332:18;;8657:72:23;9001:355:127;8657:72:23;8740:14;8757:23;8773:6;8757:15;:23::i;:::-;8740:40;-1:-1:-1;8790:56:23;929:10:34;8814:8:23;8824:5;8831:6;8839;8790:9;:56::i;:::-;8864:6;8538:339;-1:-1:-1;;;;8538:339:23:o;8922:331::-;9020:7;9057:16;9067:5;9057:9;:16::i;:::-;9047:6;:26;;9039:68;;;;-1:-1:-1;;;9039:68:23;;9563:2:127;9039:68:23;;;9545:21:127;9602:2;9582:18;;;9575:30;9641:31;9621:18;;;9614:59;9690:18;;9039:68:23;9361:353:127;9039:68:23;9118:14;9135:21;9149:6;9135:13;:21::i;:::-;9118:38;-1:-1:-1;9166:56:23;929:10:34;9190:8:23;9200:5;9207:6;9215;9166:9;:56::i;5589:167::-;5668:7;5694:55;5711:6;5719:29;5694:16;:55::i;1514:167:71:-;1595:5;;-1:-1:-1;;;;;1595:5:71;1583:10;:17;1575:36;;;;-1:-1:-1;;;1575:36:71;;9921:2:127;1575:36:71;;;9903:21:127;9960:1;9940:18;;;9933:29;-1:-1:-1;;;9978:18:127;;;9971:36;10024:18;;1575:36:71;9719:329:127;1575:36:71;-1:-1:-1;;;;;1649:24:71;;;;;:12;:24;;;;;;;-1:-1:-1;;1622:51:71;;1649:24;;;;1648:25;1622:51;;;1514:167::o;6353:172:23:-;-1:-1:-1;;;;;3856:18:21;;6427:7:23;3856:18:21;;;:9;:18;;;;;;6453:65:23;;6488:29;6453:16;:65::i;6573:121::-;-1:-1:-1;;;;;3856:18:21;;6645:7:23;3856:18:21;;;:9;:18;;;;;;6671:16:23;3756:125:21;4324:149;-1:-1:-1;;;;;4439:18:21;;;4413:7;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4324:149::o;1687:390:71:-;1762:10;1749:24;;;;:12;:24;;;;;;;;1741:48;;;;-1:-1:-1;;;1741:48:71;;;;;;;:::i;:::-;1800:44;;;;;;;;;;;;;;-1:-1:-1;;;1800:44:71;;;1823:12;;1837:6;1800:11;:44::i;:::-;1897:6;1879:15;;:24;;;;:::i;:::-;1863:12;;:40;;1855:61;;;;-1:-1:-1;;;1855:61:71;;10255:2:127;1855:61:71;;;10237:21:127;10294:1;10274:18;;;10267:29;-1:-1:-1;;;10312:18:127;;;10305:37;10359:18;;1855:61:71;10053:330:127;1855:61:71;1947:6;1928:15;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;5346:6:23;;1965:64:71;;-1:-1:-1;;;;;5346:6:23;2010:10:71;2022:6;1965:28;:64::i;:::-;2046:23;;160:25:127;;;2050:10:71;;2046:23;;148:2:127;133:18;2046:23:71;;;;;;;1687:390;:::o;3203:642::-;3334:10;3321:24;;;;:12;:24;;;;;;;;3313:48;;;;-1:-1:-1;;;3313:48:71;;;;;;;:::i;:::-;-1:-1:-1;;;;;3380:35:71;;;;;;:20;:35;;;;;;:48;-1:-1:-1;3380:48:71;3372:68;;;;-1:-1:-1;;;3372:68:71;;10255:2:127;3372:68:71;;;10237:21:127;10294:1;10274:18;;;10267:29;-1:-1:-1;;;10312:18:127;;;10305:37;10359:18;;3372:68:71;10053:330:127;3372:68:71;-1:-1:-1;;;;;3452:35:71;;;;;;:20;:35;;;;;:49;;3491:10;;3452:35;:49;;3491:10;;3452:49;:::i;:::-;;;;;;;;3528:12;3512;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;3552:123:71;;-1:-1:-1;3600:13:71;3629:10;3653:12;3552:28;:123::i;:::-;3687:149;3739:7;5346:6:23;;-1:-1:-1;;;;;5346:6:23;;5257:103;3739:7:71;3762:10;3794:4;3814:12;3687:32;:149::i;:::-;3203:642;;;:::o;9725:224:23:-;9833:7;9859:83;9873:13;5838:12:71;;;5751:107;9873:13:23;:17;;9889:1;9873:17;:::i;:::-;9908:23;11910:5;9908:2;:23;:::i;:::-;3679:12:21;;9892:39:23;;;;:::i;:::-;9859:6;;:83;9933:8;9859:13;:83::i;10794:340:21:-;-1:-1:-1;;;;;10895:19:21;;10887:68;;;;-1:-1:-1;;;10887:68:21;;11973:2:127;10887:68:21;;;11955:21:127;12012:2;11992:18;;;11985:30;12051:34;12031:18;;;12024:62;-1:-1:-1;;;12102:18:127;;;12095:34;12146:19;;10887:68:21;11771:400:127;10887:68:21;-1:-1:-1;;;;;10973:21:21;;10965:68;;;;-1:-1:-1;;;10965:68:21;;12378:2:127;10965:68:21;;;12360:21:127;12417:2;12397:18;;;12390:30;12456:34;12436:18;;;12429:62;-1:-1:-1;;;12507:18:127;;;12500:32;12549:19;;10965:68:21;12176:398:127;10965:68:21;-1:-1:-1;;;;;11044:18:21;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11095:32;;160:25:127;;;11095:32:21;;133:18:127;11095:32:21;;;;;;;10794:340;;;:::o;9377:224:23:-;9485:7;9511:83;9541:23;9485:7;9541:2;:23;:::i;:::-;3679:12:21;;9525:39:23;;;;:::i;:::-;5838:12:71;;9566:17:23;;9582:1;9566:17;:::i;11415:411:21:-;11515:24;11542:25;11552:5;11559:7;11542:9;:25::i;:::-;11515:52;;-1:-1:-1;;11581:16:21;:37;11577:243;;11662:6;11642:16;:26;;11634:68;;;;-1:-1:-1;;;11634:68:21;;12781:2:127;11634:68:21;;;12763:21:127;12820:2;12800:18;;;12793:30;12859:31;12839:18;;;12832:59;12908:18;;11634:68:21;12579:353:127;11634:68:21;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;7793:788::-;-1:-1:-1;;;;;7889:18:21;;7881:68;;;;-1:-1:-1;;;7881:68:21;;13139:2:127;7881:68:21;;;13121:21:127;13178:2;13158:18;;;13151:30;13217:34;13197:18;;;13190:62;-1:-1:-1;;;13268:18:127;;;13261:35;13313:19;;7881:68:21;12937:401:127;7881:68:21;-1:-1:-1;;;;;7967:16:21;;7959:64;;;;-1:-1:-1;;;7959:64:21;;13545:2:127;7959:64:21;;;13527:21:127;13584:2;13564:18;;;13557:30;13623:34;13603:18;;;13596:62;-1:-1:-1;;;13674:18:127;;;13667:33;13717:19;;7959:64:21;13343:399:127;7959:64:21;-1:-1:-1;;;;;8105:15:21;;8083:19;8105:15;;;:9;:15;;;;;;8138:21;;;;8130:72;;;;-1:-1:-1;;;8130:72:21;;13949:2:127;8130:72:21;;;13931:21:127;13988:2;13968:18;;;13961:30;14027:34;14007:18;;;14000:62;-1:-1:-1;;;14078:18:127;;;14071:36;14124:19;;8130:72:21;13747:402:127;8130:72:21;-1:-1:-1;;;;;8236:15:21;;;;;;;:9;:15;;;;;;8254:20;;;8236:38;;8451:13;;;;;;;;;;:23;;;;;;8500:26;;;;;;8268:6;160:25:127;;148:2;133:18;;14:177;8500:26:21;;;;;;;;8537:37;3203:642:71;1321:1630:111;1421:12;1591:4;1585:11;-1:-1:-1;;;1714:17:111;1707:93;1847:4;1843:1;1824:17;1820:25;1813:39;1931:2;1926;1907:17;1903:26;1896:38;2011:6;2006:2;1987:17;1983:26;1976:42;2863:2;2860:1;2855:3;2836:17;2833:1;2826:5;2819;2814:52;2362:16;2355:24;2349:2;2331:16;2328:24;2324:1;2320;2314:8;2311:15;2307:46;2304:76;2092:792;2065:819;;;2912:7;2904:40;;;;-1:-1:-1;;;2904:40:111;;14356:2:127;2904:40:111;;;14338:21:127;14395:2;14375:18;;;14368:30;-1:-1:-1;;;14414:18:127;;;14407:50;14474:18;;2904:40:111;14154:344:127;2904:40:111;1411:1540;1321:1630;;;;:::o;3851:902:71:-;4527:96;4583:7;5346:6:23;;-1:-1:-1;;;;;5346:6:23;;5257:103;4583:7:71;4593:6;4609:4;4616:6;4527:37;:96::i;:::-;4633:23;4639:8;4649:6;4633:5;:23::i;:::-;4682:6;4666:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;4705:41:71;;;7187:25:127;;;7243:2;7228:18;;7221:34;;;-1:-1:-1;;;;;4705:41:71;;;;;;;;;;7160:18:127;4705:41:71;;;;;;;3851:902;;;;:::o;3539:125:23:-;5374:13:20;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:20;;;;;;;:::i;:::-;3625:32:23::1;3650:6;3625:24;:32::i;:::-;3539:125:::0;:::o;2118:147:21:-;5374:13:20;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:20;;;;;;;:::i;:::-;2220:38:21::1;2243:5;2250:7;2220:22;:38::i;:::-;2118:147:::0;;:::o;4759:986:71:-;4954:5;-1:-1:-1;;;;;4944:15:71;:6;-1:-1:-1;;;;;4944:15:71;;4940:84;;4975:38;4991:5;4998:6;5006;4975:15;:38::i;:::-;5547:6;5531:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;5564:20:71;;-1:-1:-1;5570:5:71;5577:6;5564:5;:20::i;:::-;5594:79;5646:7;5346:6:23;;-1:-1:-1;;;;;5346:6:23;;5257:103;5646:7:71;5656:8;5666:6;5594:33;:79::i;:::-;5716:5;-1:-1:-1;;;;;5689:49:71;5706:8;-1:-1:-1;;;;;5689:49:71;5698:6;-1:-1:-1;;;;;5689:49:71;;5723:6;5731;5689:49;;;;;;7187:25:127;;;7243:2;7228:18;;7221:34;7175:2;7160:18;;7015:246;5689:49:71;;;;;;;;4759:986;;;;;:::o;10843:157:15:-;10916:77;10981:2;10985;10989;10932:60;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10932:60:15;;;;;;;;;;;;;;-1:-1:-1;;;;;10932:60:15;-1:-1:-1;;;10932:60:15;;;10916:15;:77::i;2957:1521:111:-;3039:12;3209:4;3203:11;-1:-1:-1;;;3332:17:111;3325:93;3465:2;3461:1;3442:17;3438:25;3431:37;3545:6;3540:2;3521:17;3517:26;3510:42;4395:2;4392:1;4388:2;4369:17;4366:1;4359:5;4352;4347:51;3896:16;3889:24;3883:2;3865:16;3862:24;3858:1;3854;3848:8;3845:15;3841:46;3838:76;3626:790;3599:817;;;4444:7;4436:35;;;;-1:-1:-1;;;4436:35:111;;15737:2:127;4436:35:111;;;15719:21:127;15776:2;15756:18;;;15749:30;-1:-1:-1;;;15795:18:127;;;15788:45;15850:18;;4436:35:111;15535:339:127;6023:299:38;6124:7;6143:14;6160:25;6167:1;6170;6173:11;6160:6;:25::i;:::-;6143:42;-1:-1:-1;6211:11:38;6199:8;:23;;;;;;;;:::i;:::-;;:56;;;;;6254:1;6239:11;6226:25;;;;;:::i;:::-;6236:1;6233;6226:25;:29;6199:56;6195:98;;;6271:11;6281:1;6271:11;;:::i;:::-;;;6195:98;6309:6;6023:299;-1:-1:-1;;;;;6023:299:38:o;1421:214:26:-;1559:68;;-1:-1:-1;;;;;16401:15:127;;;1559:68:26;;;16383:34:127;16453:15;;16433:18;;;16426:43;16485:18;;;16478:34;;;1532:96:26;;1552:5;;-1:-1:-1;;;1582:27:26;16318:18:127;;1559:68:26;;;;-1:-1:-1;;1559:68:26;;;;;;;;;;;;;;-1:-1:-1;;;;;1559:68:26;-1:-1:-1;;;;;;1559:68:26;;;;;;;;;;1532:19;:96::i;8857:535:21:-;-1:-1:-1;;;;;8940:21:21;;8932:65;;;;-1:-1:-1;;;8932:65:21;;16725:2:127;8932:65:21;;;16707:21:127;16764:2;16744:18;;;16737:30;16803:33;16783:18;;;16776:61;16854:18;;8932:65:21;16523:355:127;8932:65:21;9084:6;9068:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9236:18:21;;;;;;:9;:18;;;;;;;;:28;;;;;;9289:37;160:25:127;;;9289:37:21;;133:18:127;9289:37:21;;;;;;;2118:147;;:::o;3670:254:23:-;5374:13:20;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:20;;;;;;;:::i;:::-;3767:12:23::1;3781:19:::0;3804:28:::1;3825:6;3804:20;:28::i;:::-;3766:66;;;;3864:7;:28;;3890:2;3864:28;;;3874:13;3864:28;3842:19;:50:::0;;-1:-1:-1;;;;;3902:15:23;;::::1;-1:-1:-1::0;;;;;;3842:50:23::1;::::0;;;::::1;-1:-1:-1::0;;;3842:50:23::1;3902:15:::0;;;;-1:-1:-1;;;;;;3902:15:23;;;;;;;::::1;::::0;;;-1:-1:-1;;3670:254:23:o;2271:159:21:-;5374:13:20;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:20;;;;;;;:::i;:::-;2383:5:21::1;:13;2391:5:::0;2383;:13:::1;:::i;:::-;-1:-1:-1::0;2406:7:21::1;:17;2416:7:::0;2406;:17:::1;:::i;9712:659::-:0;-1:-1:-1;;;;;9795:21:21;;9787:67;;;;-1:-1:-1;;;9787:67:21;;19289:2:127;9787:67:21;;;19271:21:127;19328:2;19308:18;;;19301:30;19367:34;19347:18;;;19340:62;-1:-1:-1;;;19418:18:127;;;19411:31;19459:19;;9787:67:21;19087:397:127;9787:67:21;-1:-1:-1;;;;;9950:18:21;;9925:22;9950:18;;;:9;:18;;;;;;9986:24;;;;9978:71;;;;-1:-1:-1;;;9978:71:21;;19691:2:127;9978:71:21;;;19673:21:127;19730:2;19710:18;;;19703:30;19769:34;19749:18;;;19742:62;-1:-1:-1;;;19820:18:127;;;19813:32;19862:19;;9978:71:21;19489:398:127;9978:71:21;-1:-1:-1;;;;;10083:18:21;;;;;;:9;:18;;;;;;;;10104:23;;;10083:44;;10220:12;:22;;;;;;;10268:37;160:25:127;;;10083:18:21;;;10268:37;;133:18:127;10268:37:21;;;;;;;3203:642:71;;;:::o;996:186:26:-;1116:58;;-1:-1:-1;;;;;20084:32:127;;1116:58:26;;;20066:51:127;20133:18;;;20126:34;;;1089:86:26;;1109:5;;-1:-1:-1;;;1139:23:26;20039:18:127;;1116:58:26;19892:274:127;181:376:15;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;1678:4213:38:-;1760:14;;;-1:-1:-1;;2297:1:38;2294;2287:20;2340:1;2337;2333:9;2324:18;;2395:5;2391:2;2388:13;2380:5;2376:2;2372:14;2368:34;2359:43;;;2497:5;2506:1;2497:10;2493:368;;2835:11;2827:5;:19;;;;;:::i;:::-;;2820:26;;;;;;2493:368;2985:5;2971:11;:19;2963:53;;;;-1:-1:-1;;;2963:53:38;;20373:2:127;2963:53:38;;;20355:21:127;20412:2;20392:18;;;20385:30;-1:-1:-1;;;20431:18:127;;;20424:51;20492:18;;2963:53:38;20171:345:127;2963:53:38;3272:17;3407:11;3404:1;3401;3394:25;4785:1;3955;3940:12;;:16;;3925:32;;4060:22;;;;4766:1;:15;;4765:21;;5018;;;5014:25;;5003:36;5087:21;;;5083:25;;5072:36;5157:21;;;5153:25;;5142:36;5227:21;;;5223:25;;5212:36;5297:21;;;5293:25;;5282:36;5368:21;;;5364:25;;;5353:36;;;3910:12;4305;;;4301:23;;;4297:31;;;3521:20;;;3510:32;;;4417:12;;;;3568:21;;4158:16;;;;4408:21;;;;5832:15;;;-1:-1:-1;;;;1678:4213:38:o;5328:653:26:-;5758:23;5784:69;5812:4;5784:69;;;;;;;;;;;;;;;;;5792:5;-1:-1:-1;;;;;5784:27:26;;;:69;;;;;:::i;:::-;5758:95;;5871:10;:17;5892:1;5871:22;:56;;;;5908:10;5897:30;;;;;;;;;;;;:::i;:::-;5863:111;;;;-1:-1:-1;;;5863:111:26;;21005:2:127;5863:111:26;;;20987:21:127;21044:2;21024:18;;;21017:30;21083:34;21063:18;;;21056:62;-1:-1:-1;;;21134:18:127;;;21127:40;21184:19;;5863:111:26;20803:406:127;4067:568:23;4255:67;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4255:67:23;-1:-1:-1;;;4255:67:23;;;4215:117;;4145:4;;;;;;;;-1:-1:-1;;;;;4215:26:23;;;:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4168:164;;;;4346:7;:39;;;;;4383:2;4357:15;:22;:28;;4346:39;4342:260;;;4401:24;4439:15;4428:38;;;;;;;;;;;;:::i;:::-;4401:65;-1:-1:-1;4504:15:23;4484:35;;4480:112;;4547:4;;4559:16;;-1:-1:-1;4067:568:23;-1:-1:-1;;;;4067:568:23:o;4480:112::-;4387:215;4342:260;-1:-1:-1;4619:5:23;;;;-1:-1:-1;4067:568:23;-1:-1:-1;;;4067:568:23:o;4119:223:33:-;4252:12;4283:52;4305:6;4313:4;4319:1;4322:12;4252;5457;5471:23;5498:6;-1:-1:-1;;;;;5498:11:33;5517:5;5524:4;5498:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5456:73;;;;5546:69;5573:6;5581:7;5590:10;5602:12;5546:26;:69::i;:::-;5539:76;5176:446;-1:-1:-1;;;;;;;5176:446:33:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:33;;;8124:60;;;;-1:-1:-1;;;8124:60:33;;22304:2:127;8124:60:33;;;22286:21:127;22343:2;22323:18;;;22316:30;22382:31;22362:18;;;22355:59;22431:18;;8124:60:33;22102:353:127;8124:60:33;-1:-1:-1;8219:10:33;8212:17;;7886:418;8260:33;8268:10;8280:12;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:33;;;;;;;;:::i;196:250:127:-;281:1;291:113;305:6;302:1;299:13;291:113;;;381:11;;;375:18;362:11;;;355:39;327:2;320:10;291:113;;;-1:-1:-1;;438:1:127;420:16;;413:27;196:250::o;451:271::-;493:3;531:5;525:12;558:6;553:3;546:19;574:76;643:6;636:4;631:3;627:14;620:4;613:5;609:16;574:76;:::i;:::-;704:2;683:15;-1:-1:-1;;679:29:127;670:39;;;;711:4;666:50;;451:271;-1:-1:-1;;451:271:127:o;727:220::-;876:2;865:9;858:21;839:4;896:45;937:2;926:9;922:18;914:6;896:45;:::i;952:180::-;1011:6;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;-1:-1:-1;1103:23:127;;952:180;-1:-1:-1;952:180:127:o;1137:173::-;1205:20;;-1:-1:-1;;;;;1254:31:127;;1244:42;;1234:70;;1300:1;1297;1290:12;1234:70;1137:173;;;:::o;1315:254::-;1383:6;1391;1444:2;1432:9;1423:7;1419:23;1415:32;1412:52;;;1460:1;1457;1450:12;1412:52;1483:29;1502:9;1483:29;:::i;:::-;1473:39;1559:2;1544:18;;;;1531:32;;-1:-1:-1;;;1315:254:127:o;1766:186::-;1825:6;1878:2;1866:9;1857:7;1853:23;1849:32;1846:52;;;1894:1;1891;1884:12;1846:52;1917:29;1936:9;1917:29;:::i;1957:328::-;2034:6;2042;2050;2103:2;2091:9;2082:7;2078:23;2074:32;2071:52;;;2119:1;2116;2109:12;2071:52;2142:29;2161:9;2142:29;:::i;:::-;2132:39;;2190:38;2224:2;2213:9;2209:18;2190:38;:::i;:::-;2180:48;;2275:2;2264:9;2260:18;2247:32;2237:42;;1957:328;;;;;:::o;2687:247::-;2754:6;2762;2815:2;2803:9;2794:7;2790:23;2786:32;2783:52;;;2831:1;2828;2821:12;2783:52;-1:-1:-1;;2854:23:127;;;2924:2;2909:18;;;2896:32;;-1:-1:-1;2687:247:127:o;2939:254::-;3007:6;3015;3068:2;3056:9;3047:7;3043:23;3039:32;3036:52;;;3084:1;3081;3074:12;3036:52;3120:9;3107:23;3097:33;;3149:38;3183:2;3172:9;3168:18;3149:38;:::i;:::-;3139:48;;2939:254;;;;;:::o;3198:127::-;3259:10;3254:3;3250:20;3247:1;3240:31;3290:4;3287:1;3280:15;3314:4;3311:1;3304:15;3330:719;3373:5;3426:3;3419:4;3411:6;3407:17;3403:27;3393:55;;3444:1;3441;3434:12;3393:55;3480:6;3467:20;3506:18;3543:2;3539;3536:10;3533:36;;;3549:18;;:::i;:::-;3624:2;3618:9;3592:2;3678:13;;-1:-1:-1;;3674:22:127;;;3698:2;3670:31;3666:40;3654:53;;;3722:18;;;3742:22;;;3719:46;3716:72;;;3768:18;;:::i;:::-;3808:10;3804:2;3797:22;3843:2;3835:6;3828:18;3889:3;3882:4;3877:2;3869:6;3865:15;3861:26;3858:35;3855:55;;;3906:1;3903;3896:12;3855:55;3970:2;3963:4;3955:6;3951:17;3944:4;3936:6;3932:17;3919:54;4017:1;4010:4;4005:2;3997:6;3993:15;3989:26;3982:37;4037:6;4028:15;;;;;;3330:719;;;;:::o;4054:617::-;4151:6;4159;4167;4220:2;4208:9;4199:7;4195:23;4191:32;4188:52;;;4236:1;4233;4226:12;4188:52;4259:29;4278:9;4259:29;:::i;:::-;4249:39;;4339:2;4328:9;4324:18;4311:32;4362:18;4403:2;4395:6;4392:14;4389:34;;;4419:1;4416;4409:12;4389:34;4442:50;4484:7;4475:6;4464:9;4460:22;4442:50;:::i;:::-;4432:60;;4545:2;4534:9;4530:18;4517:32;4501:48;;4574:2;4564:8;4561:16;4558:36;;;4590:1;4587;4580:12;4558:36;;4613:52;4657:7;4646:8;4635:9;4631:24;4613:52;:::i;:::-;4603:62;;;4054:617;;;;;:::o;4676:328::-;4753:6;4761;4769;4822:2;4810:9;4801:7;4797:23;4793:32;4790:52;;;4838:1;4835;4828:12;4790:52;4874:9;4861:23;4851:33;;4903:38;4937:2;4926:9;4922:18;4903:38;:::i;:::-;4893:48;;4960:38;4994:2;4983:9;4979:18;4960:38;:::i;:::-;4950:48;;4676:328;;;;;:::o;5009:260::-;5077:6;5085;5138:2;5126:9;5117:7;5113:23;5109:32;5106:52;;;5154:1;5151;5144:12;5106:52;5177:29;5196:9;5177:29;:::i;:::-;5167:39;;5225:38;5259:2;5248:9;5244:18;5225:38;:::i;5274:322::-;5351:6;5359;5367;5420:2;5408:9;5399:7;5395:23;5391:32;5388:52;;;5436:1;5433;5426:12;5388:52;5472:9;5459:23;5449:33;;5529:2;5518:9;5514:18;5501:32;5491:42;;5552:38;5586:2;5575:9;5571:18;5552:38;:::i;5601:380::-;5680:1;5676:12;;;;5723;;;5744:61;;5798:4;5790:6;5786:17;5776:27;;5744:61;5851:2;5843:6;5840:14;5820:18;5817:38;5814:161;;5897:10;5892:3;5888:20;5885:1;5878:31;5932:4;5929:1;5922:15;5960:4;5957:1;5950:15;5814:161;;5601:380;;;:::o;5986:127::-;6047:10;6042:3;6038:20;6035:1;6028:31;6078:4;6075:1;6068:15;6102:4;6099:1;6092:15;6118:148;6206:4;6185:12;;;6199;;;6181:31;;6224:13;;6221:39;;;6240:18;;:::i;6271:125::-;6336:9;;;6357:10;;;6354:36;;;6370:18;;:::i;6401:335::-;6603:2;6585:21;;;6642:2;6622:18;;;6615:30;-1:-1:-1;;;6676:2:127;6661:18;;6654:41;6727:2;6712:18;;6401:335::o;6741:128::-;6808:9;;;6829:11;;;6826:37;;;6843:18;;:::i;6874:136::-;6909:3;-1:-1:-1;;;6930:22:127;;6927:48;;6955:18;;:::i;:::-;-1:-1:-1;6995:1:127;6991:13;;6874:136::o;10388:422::-;10477:1;10520:5;10477:1;10534:270;10555:7;10545:8;10542:21;10534:270;;;10614:4;10610:1;10606:6;10602:17;10596:4;10593:27;10590:53;;;10623:18;;:::i;:::-;10673:7;10663:8;10659:22;10656:55;;;10693:16;;;;10656:55;10772:22;;;;10732:15;;;;10534:270;;;10538:3;10388:422;;;;;:::o;10815:806::-;10864:5;10894:8;10884:80;;-1:-1:-1;10935:1:127;10949:5;;10884:80;10983:4;10973:76;;-1:-1:-1;11020:1:127;11034:5;;10973:76;11065:4;11083:1;11078:59;;;;11151:1;11146:130;;;;11058:218;;11078:59;11108:1;11099:10;;11122:5;;;11146:130;11183:3;11173:8;11170:17;11167:43;;;11190:18;;:::i;:::-;-1:-1:-1;;11246:1:127;11232:16;;11261:5;;11058:218;;11360:2;11350:8;11347:16;11341:3;11335:4;11332:13;11328:36;11322:2;11312:8;11309:16;11304:2;11298:4;11295:12;11291:35;11288:77;11285:159;;;-1:-1:-1;11397:19:127;;;11429:5;;11285:159;11476:34;11501:8;11495:4;11476:34;:::i;:::-;11546:6;11542:1;11538:6;11534:19;11525:7;11522:32;11519:58;;;11557:18;;:::i;:::-;11595:20;;10815:806;-1:-1:-1;;;10815:806:127:o;11626:140::-;11684:5;11713:47;11754:4;11744:8;11740:19;11734:4;11713:47;:::i;14756:407::-;14958:2;14940:21;;;14997:2;14977:18;;;14970:30;15036:34;15031:2;15016:18;;15009:62;-1:-1:-1;;;15102:2:127;15087:18;;15080:41;15153:3;15138:19;;14756:407::o;15168:362::-;15373:2;15362:9;15355:21;15336:4;15393:45;15434:2;15423:9;15419:18;15411:6;15393:45;:::i;:::-;15469:2;15454:18;;15447:34;;;;-1:-1:-1;15512:2:127;15497:18;15490:34;15385:53;15168:362;-1:-1:-1;15168:362:127:o;15879:127::-;15940:10;15935:3;15931:20;15928:1;15921:31;15971:4;15968:1;15961:15;15995:4;15992:1;15985:15;16011:127;16072:10;16067:3;16063:20;16060:1;16053:31;16103:4;16100:1;16093:15;16127:4;16124:1;16117:15;17009:545;17111:2;17106:3;17103:11;17100:448;;;17147:1;17172:5;17168:2;17161:17;17217:4;17213:2;17203:19;17287:2;17275:10;17271:19;17268:1;17264:27;17258:4;17254:38;17323:4;17311:10;17308:20;17305:47;;;-1:-1:-1;17346:4:127;17305:47;17401:2;17396:3;17392:12;17389:1;17385:20;17379:4;17375:31;17365:41;;17456:82;17474:2;17467:5;17464:13;17456:82;;;17519:17;;;17500:1;17489:13;17456:82;;;17460:3;;;17009:545;;;:::o;17730:1352::-;17856:3;17850:10;17883:18;17875:6;17872:30;17869:56;;;17905:18;;:::i;:::-;17934:97;18024:6;17984:38;18016:4;18010:11;17984:38;:::i;:::-;17978:4;17934:97;:::i;:::-;18086:4;;18150:2;18139:14;;18167:1;18162:663;;;;18869:1;18886:6;18883:89;;;-1:-1:-1;18938:19:127;;;18932:26;18883:89;-1:-1:-1;;17687:1:127;17683:11;;;17679:24;17675:29;17665:40;17711:1;17707:11;;;17662:57;18985:81;;18132:944;;18162:663;16956:1;16949:14;;;16993:4;16980:18;;-1:-1:-1;;18198:20:127;;;18316:236;18330:7;18327:1;18324:14;18316:236;;;18419:19;;;18413:26;18398:42;;18511:27;;;;18479:1;18467:14;;;;18346:19;;18316:236;;;18320:3;18580:6;18571:7;18568:19;18565:201;;;18641:19;;;18635:26;-1:-1:-1;;18724:1:127;18720:14;;;18736:3;18716:24;18712:37;18708:42;18693:58;18678:74;;18565:201;-1:-1:-1;;;;;18812:1:127;18796:14;;;18792:22;18779:36;;-1:-1:-1;17730:1352:127:o;20521:277::-;20588:6;20641:2;20629:9;20620:7;20616:23;20612:32;20609:52;;;20657:1;20654;20647:12;20609:52;20689:9;20683:16;20742:5;20735:13;20728:21;20721:5;20718:32;20708:60;;20764:1;20761;20754:12;21214:287;21343:3;21381:6;21375:13;21397:66;21456:6;21451:3;21444:4;21436:6;21432:17;21397:66;:::i;:::-;21479:16;;;;;21214:287;-1:-1:-1;;21214:287:127:o;21506:184::-;21576:6;21629:2;21617:9;21608:7;21604:23;21600:32;21597:52;;;21645:1;21642;21635:12;21597:52;-1:-1:-1;21668:16:127;;21506:184;-1:-1:-1;21506:184:127:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addExternalTokenToBalance(uint256,address)": "96721d8a",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "asset()": "38d52e0f",
    "balanceOf(address)": "70a08231",
    "convertToAssets(uint256)": "07a2d13a",
    "convertToShares(uint256)": "c6e6f592",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(uint256,address)": "6e553f65",
    "externalTokensAmount(address)": "19f12d50",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,string,string)": "90657147",
    "isStrategist(address)": "6734faee",
    "maxDeposit(address)": "402d267d",
    "maxMint(address)": "c63d75b6",
    "maxRedeem(address)": "d905777e",
    "maxWithdraw(address)": "ce96cb77",
    "mint(uint256,address)": "94bf804d",
    "name()": "06fdde03",
    "previewDeposit(uint256)": "ef8b30f7",
    "previewMint(uint256)": "b3d7f6b9",
    "previewRedeem(uint256)": "4cdad506",
    "previewWithdraw(uint256)": "0a28a477",
    "redeem(uint256,address,address)": "ba087652",
    "repayBalance(uint256,int256)": "3bc034bd",
    "sellExternalToken(uint256,uint256,address)": "f367cddf",
    "setStrategist(address)": "c7b9d530",
    "symbol()": "95d89b41",
    "tokenBalance()": "9e1a4d19",
    "totalAssets()": "01e1d114",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "useBalance(uint256)": "f005af3e",
    "utilizedBalance()": "8f697f91",
    "withdraw(uint256,address,address)": "b460af94"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AddedExternal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"PnL\",\"type\":\"int256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Use\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"externalToken\",\"type\":\"address\"}],\"name\":\"addExternalTokenToBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"externalTokensAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStrategist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"PnL\",\"type\":\"int256\"}],\"name\":\"repayBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBought\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"externalToken\",\"type\":\"address\"}],\"name\":\"sellExternalToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategist\",\"type\":\"address\"}],\"name\":\"setStrategist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"useBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilizedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This \\\"original\\\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals. See {IERC20Metadata-decimals}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256,address)\":{\"details\":\"See {IERC4626-deposit}. \"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"See {IERC4626-mint}. As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero. In this case, the shares will be minted without requiring any assets to be deposited.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"See {IERC4626-previewDeposit}. \"},\"previewMint(uint256)\":{\"details\":\"See {IERC4626-previewMint}. \"},\"previewRedeem(uint256)\":{\"details\":\"See {IERC4626-previewRedeem}. \"},\"previewWithdraw(uint256)\":{\"details\":\"See {IERC4626-previewWithdraw}. \"},\"redeem(uint256,address,address)\":{\"details\":\"See {IERC4626-redeem}. \"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"See {IERC4626-totalAssets}. \"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"withdraw(uint256,address,address)\":{\"details\":\"See {IERC4626-withdraw}. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"repayBalance(uint256,int256)\":{\"notice\":\"using the amount borrowed, record how much loss has been realized \"},\"sellExternalToken(uint256,uint256,address)\":{\"notice\":\"strategist can only be protocol arbitraging to get the best price on behalf of the share holders. \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/periphery/LIM_Token.sol\":\"LIM_Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solmate/=lib/solmate/\",\":universal-router/=lib/universal-router/contracts/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC4626Upgradeable.sol\":{\"keccak256\":\"0xf867351fb48f5c0e3b45f085ce60f374b785417f84370cb2ffb57f421931e7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0fd16ad1caa07b4f505231529dfec2749ffb3d21b93a6c81150081cab0872a7\",\"dweb:/ipfs/QmPY93YZQJb2CeMQM2BpGWBJiLmbsa7u1EchvPnqTEH3jM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC4626Upgradeable.sol\":{\"keccak256\":\"0xa047a2707d2fd6224f0cbd77e5f56320dc58ff1ddfd91d491edd5150055a19c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://800837e91bd705ef327a789e646228c8758d6aa5f10e22378eda7dc5046b9e9b\",\"dweb:/ipfs/QmPGss3xJzeRvG4AYfnbXEdsEsJf8QiPae8oBDm4THyVub\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"src/ERC20.sol\":{\"keccak256\":\"0xd8c103e0b69ef3a5355a369b43fcc04e9252a7abfde1a3fa37a0dceadc4308d4\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88b40b9b8b9bfa64cfca12dddf0bc1a5fafc5b9d40e5d9b42efe7eccc84c9df2\",\"dweb:/ipfs/QmP3qrwSBZhd7E57R7uXvQFzQa2euCrSDSc1StLtQz1VfX\"]},\"src/periphery/LIM_Token.sol\":{\"keccak256\":\"0x07a3ce44c37c232ad6fa829d2f735ac8b67d793731e4620d24f3eadb53b804d8\",\"urls\":[\"bzz-raw://1a798170ea42d1dc68bc46375df198dbb60ba9102e41565ab24db291a7b96670\",\"dweb:/ipfs/QmRwHHYbCcthmzrdePrwCzoRrsUivgD3NhiDtRXh6kBGeQ\"]},\"src/uniswap/FullMath.sol\":{\"keccak256\":\"0x21793f52a5f7cffaa923ac0083f7c2b2641accd8ec14f65efd5817e193a31b8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56d6bae1297b24948ceda4aeae55f0f1ff9a602cd2c6e21c269361af19dc639a\",\"dweb:/ipfs/QmP9MWBqDHrS319PMseEQ2jqeLmDsUUFyzhLukwg6LM22p\"]},\"src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x310d6b8a3264dd84878b8f06124fd68f96a696f4b906afc4b720dfd8a6535c83\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://61c0cf08db52e1a0644c92f88375b36848f82686ade210f6b04cfdc6ee9804a9\",\"dweb:/ipfs/QmdVnGEf2EWhbiCWyhzSFq7Zn1vcbGNZrJagFFA2fzMc8c\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddedExternal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "PnL",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Repay",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Use",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "externalToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addExternalTokenToBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "asset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "externalTokensAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isStrategist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "PnL",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayBalance"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountSold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountBought",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "externalToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sellExternalToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "strategist",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategist"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "useBalance"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "utilizedBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "asset()": {
            "details": "See {IERC4626-asset}. "
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "convertToAssets(uint256)": {
            "details": "See {IERC4626-convertToAssets}. "
          },
          "convertToShares(uint256)": {
            "details": "See {IERC4626-convertToShares}. "
          },
          "decimals()": {
            "details": "Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This \"original\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals. See {IERC20Metadata-decimals}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "deposit(uint256,address)": {
            "details": "See {IERC4626-deposit}. "
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "maxDeposit(address)": {
            "details": "See {IERC4626-maxDeposit}. "
          },
          "maxMint(address)": {
            "details": "See {IERC4626-maxMint}. "
          },
          "maxRedeem(address)": {
            "details": "See {IERC4626-maxRedeem}. "
          },
          "maxWithdraw(address)": {
            "details": "See {IERC4626-maxWithdraw}. "
          },
          "mint(uint256,address)": {
            "details": "See {IERC4626-mint}. As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero. In this case, the shares will be minted without requiring any assets to be deposited."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "previewDeposit(uint256)": {
            "details": "See {IERC4626-previewDeposit}. "
          },
          "previewMint(uint256)": {
            "details": "See {IERC4626-previewMint}. "
          },
          "previewRedeem(uint256)": {
            "details": "See {IERC4626-previewRedeem}. "
          },
          "previewWithdraw(uint256)": {
            "details": "See {IERC4626-previewWithdraw}. "
          },
          "redeem(uint256,address,address)": {
            "details": "See {IERC4626-redeem}. "
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalAssets()": {
            "details": "See {IERC4626-totalAssets}. "
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "withdraw(uint256,address,address)": {
            "details": "See {IERC4626-withdraw}. "
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "repayBalance(uint256,int256)": {
            "notice": "using the amount borrowed, record how much loss has been realized "
          },
          "sellExternalToken(uint256,uint256,address)": {
            "notice": "strategist can only be protocol arbitraging to get the best price on behalf of the share holders. "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solmate/=lib/solmate/",
        "universal-router/=lib/universal-router/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/periphery/LIM_Token.sol": "LIM_Token"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC4626Upgradeable.sol": {
        "keccak256": "0xf867351fb48f5c0e3b45f085ce60f374b785417f84370cb2ffb57f421931e7eb",
        "urls": [
          "bzz-raw://e0fd16ad1caa07b4f505231529dfec2749ffb3d21b93a6c81150081cab0872a7",
          "dweb:/ipfs/QmPY93YZQJb2CeMQM2BpGWBJiLmbsa7u1EchvPnqTEH3jM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC4626Upgradeable.sol": {
        "keccak256": "0xa047a2707d2fd6224f0cbd77e5f56320dc58ff1ddfd91d491edd5150055a19c2",
        "urls": [
          "bzz-raw://800837e91bd705ef327a789e646228c8758d6aa5f10e22378eda7dc5046b9e9b",
          "dweb:/ipfs/QmPGss3xJzeRvG4AYfnbXEdsEsJf8QiPae8oBDm4THyVub"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
        "keccak256": "0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3",
        "urls": [
          "bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622",
          "dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5",
        "urls": [
          "bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166",
          "dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "src/ERC20.sol": {
        "keccak256": "0xd8c103e0b69ef3a5355a369b43fcc04e9252a7abfde1a3fa37a0dceadc4308d4",
        "urls": [
          "bzz-raw://88b40b9b8b9bfa64cfca12dddf0bc1a5fafc5b9d40e5d9b42efe7eccc84c9df2",
          "dweb:/ipfs/QmP3qrwSBZhd7E57R7uXvQFzQa2euCrSDSc1StLtQz1VfX"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/periphery/LIM_Token.sol": {
        "keccak256": "0x07a3ce44c37c232ad6fa829d2f735ac8b67d793731e4620d24f3eadb53b804d8",
        "urls": [
          "bzz-raw://1a798170ea42d1dc68bc46375df198dbb60ba9102e41565ab24db291a7b96670",
          "dweb:/ipfs/QmRwHHYbCcthmzrdePrwCzoRrsUivgD3NhiDtRXh6kBGeQ"
        ],
        "license": null
      },
      "src/uniswap/FullMath.sol": {
        "keccak256": "0x21793f52a5f7cffaa923ac0083f7c2b2641accd8ec14f65efd5817e193a31b8b",
        "urls": [
          "bzz-raw://56d6bae1297b24948ceda4aeae55f0f1ff9a602cd2c6e21c269361af19dc639a",
          "dweb:/ipfs/QmP9MWBqDHrS319PMseEQ2jqeLmDsUUFyzhLukwg6LM22p"
        ],
        "license": "MIT"
      },
      "src/utils/SafeTransferLib.sol": {
        "keccak256": "0x310d6b8a3264dd84878b8f06124fd68f96a696f4b906afc4b720dfd8a6535c83",
        "urls": [
          "bzz-raw://61c0cf08db52e1a0644c92f88375b36848f82686ade210f6b04cfdc6ee9804a9",
          "dweb:/ipfs/QmdVnGEf2EWhbiCWyhzSFq7Zn1vcbGNZrJagFFA2fzMc8c"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/periphery/LIM_Token.sol",
    "id": 74246,
    "exportedSymbols": {
      "ERC20": [
        55385
      ],
      "ERC20Upgradeable": [
        44307
      ],
      "ERC4626Upgradeable": [
        45035
      ],
      "FullMath": [
        79015
      ],
      "IERC20Upgradeable": [
        44385
      ],
      "LIM_Token": [
        74245
      ],
      "SafeERC20Upgradeable": [
        45472
      ],
      "SafeTransferLib": [
        83972
      ],
      "console": [
        21995
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:5863:71",
    "nodes": [
      {
        "id": 73785,
        "nodeType": "PragmaDirective",
        "src": "0:23:71",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 73787,
        "nodeType": "ImportDirective",
        "src": "25:49:71",
        "nodes": [],
        "absolutePath": "src/uniswap/FullMath.sol",
        "file": "../uniswap/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74246,
        "sourceUnit": 79016,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73786,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79015,
              "src": "33:8:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73789,
        "nodeType": "ImportDirective",
        "src": "75:35:71",
        "nodes": [],
        "absolutePath": "src/ERC20.sol",
        "file": "../ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74246,
        "sourceUnit": 55386,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73788,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55385,
              "src": "83:5:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73791,
        "nodeType": "ImportDirective",
        "src": "111:61:71",
        "nodes": [],
        "absolutePath": "src/utils/SafeTransferLib.sol",
        "file": "../utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74246,
        "sourceUnit": 83973,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73790,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 83972,
              "src": "119:15:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73793,
        "nodeType": "ImportDirective",
        "src": "173:120:71",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "../../lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74246,
        "sourceUnit": 44308,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73792,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44307,
              "src": "181:16:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73795,
        "nodeType": "ImportDirective",
        "src": "294:121:71",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "../../lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74246,
        "sourceUnit": 44386,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73794,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44385,
              "src": "302:17:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73797,
        "nodeType": "ImportDirective",
        "src": "416:136:71",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "file": "../../lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74246,
        "sourceUnit": 45036,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73796,
              "name": "ERC4626Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45035,
              "src": "424:18:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73799,
        "nodeType": "ImportDirective",
        "src": "553:135:71",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "../../lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74246,
        "sourceUnit": 45473,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73798,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45472,
              "src": "561:20:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73800,
        "nodeType": "ImportDirective",
        "src": "689:31:71",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74246,
        "sourceUnit": 21996,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74245,
        "nodeType": "ContractDefinition",
        "src": "722:5139:71",
        "nodes": [
          {
            "id": 73805,
            "nodeType": "UsingForDirective",
            "src": "768:27:71",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 73803,
              "name": "FullMath",
              "nameLocations": [
                "774:8:71"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 79015,
              "src": "774:8:71"
            },
            "typeName": {
              "id": 73804,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "787:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 73809,
            "nodeType": "UsingForDirective",
            "src": "801:32:71",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 73806,
              "name": "SafeTransferLib",
              "nameLocations": [
                "807:15:71"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 83972,
              "src": "807:15:71"
            },
            "typeName": {
              "id": 73808,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73807,
                "name": "ERC20",
                "nameLocations": [
                  "827:5:71"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55385,
                "src": "827:5:71"
              },
              "referencedDeclaration": 55385,
              "src": "827:5:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$55385",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 73815,
            "nodeType": "EventDefinition",
            "src": "840:51:71",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "095a6ca7abcfe34d4a2c0943555a21fd5531b0a8c33bf91725429b968d2c81bd",
            "name": "Use",
            "nameLocation": "846:3:71",
            "parameters": {
              "id": 73814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73811,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "866:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 73815,
                  "src": "850:22:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73813,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "883:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 73815,
                  "src": "875:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "849:41:71"
            }
          },
          {
            "id": 73823,
            "nodeType": "EventDefinition",
            "src": "897:64:71",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "2f7d67a2272e05a41bad89b6859934686333f74ec892ad29a9aa69596ab440d8",
            "name": "Repay",
            "nameLocation": "903:5:71",
            "parameters": {
              "id": 73822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73817,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "925:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 73823,
                  "src": "909:22:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73819,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "941:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 73823,
                  "src": "933:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73821,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "PnL",
                  "nameLocation": "956:3:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 73823,
                  "src": "949:10:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 73820,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "908:52:71"
            }
          },
          {
            "id": 73829,
            "nodeType": "EventDefinition",
            "src": "967:59:71",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "36ffac572f12ccdd8e663178562b6a764cb46e1e0d7ef0b17a03cc6bf34ca187",
            "name": "AddedExternal",
            "nameLocation": "973:13:71",
            "parameters": {
              "id": 73828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73825,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1003:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 73829,
                  "src": "987:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73827,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1018:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 73829,
                  "src": "1010:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "986:39:71"
            }
          },
          {
            "id": 73832,
            "nodeType": "VariableDeclaration",
            "src": "1032:33:71",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "precision",
            "nameLocation": "1049:9:71",
            "scope": 74245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73830,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1032:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 73831,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1061:4:71",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "internal"
          },
          {
            "id": 73834,
            "nodeType": "VariableDeclaration",
            "src": "1072:13:71",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1080:5:71",
            "scope": 74245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 73833,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1072:7:71",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 73838,
            "nodeType": "VariableDeclaration",
            "src": "1093:43:71",
            "nodes": [],
            "constant": false,
            "functionSelector": "6734faee",
            "mutability": "mutable",
            "name": "isStrategist",
            "nameLocation": "1124:12:71",
            "scope": 74245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 73837,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 73835,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1101:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1093:23:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 73836,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1111:4:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 73842,
            "nodeType": "VariableDeclaration",
            "src": "1143:53:71",
            "nodes": [],
            "constant": false,
            "functionSelector": "19f12d50",
            "mutability": "mutable",
            "name": "externalTokensAmount",
            "nameLocation": "1176:20:71",
            "scope": 74245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 73841,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 73839,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1151:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1143:25:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 73840,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1160:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 73844,
            "nodeType": "VariableDeclaration",
            "src": "1204:27:71",
            "nodes": [],
            "constant": false,
            "functionSelector": "8f697f91",
            "mutability": "mutable",
            "name": "utilizedBalance",
            "nameLocation": "1216:15:71",
            "scope": 74245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73843,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1204:4:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73846,
            "nodeType": "VariableDeclaration",
            "src": "1238:24:71",
            "nodes": [],
            "constant": false,
            "functionSelector": "9e1a4d19",
            "mutability": "mutable",
            "name": "tokenBalance",
            "nameLocation": "1250:12:71",
            "scope": 74245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73845,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1238:4:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73874,
            "nodeType": "FunctionDefinition",
            "src": "1270:237:71",
            "nodes": [],
            "body": {
              "id": 73873,
              "nodeType": "Block",
              "src": "1375:132:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 73859,
                            "name": "assetAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73848,
                            "src": "1418:12:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73858,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44385,
                          "src": "1400:17:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$44385_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 73860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1400:31:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$44385",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$44385",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      ],
                      "id": 73857,
                      "name": "__ERC4626_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44421,
                      "src": "1385:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$44385_$returns$__$",
                        "typeString": "function (contract IERC20Upgradeable)"
                      }
                    },
                    "id": 73861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:47:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73862,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:47:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73864,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73850,
                        "src": "1455:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 73865,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73852,
                        "src": "1462:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 73863,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43742,
                      "src": "1442:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 73866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1442:28:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73867,
                  "nodeType": "ExpressionStatement",
                  "src": "1442:28:71"
                },
                {
                  "expression": {
                    "id": 73871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73868,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73834,
                      "src": "1482:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 73869,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1490:3:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 73870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1494:6:71",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1490:10:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1482:18:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 73872,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:18:71"
                }
              ]
            },
            "functionSelector": "90657147",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 73855,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73854,
                  "name": "initializer",
                  "nameLocations": [
                    "1363:11:71"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43597,
                  "src": "1363:11:71"
                },
                "nodeType": "ModifierInvocation",
                "src": "1363:11:71"
              }
            ],
            "name": "initialize",
            "nameLocation": "1279:10:71",
            "parameters": {
              "id": 73853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73848,
                  "mutability": "mutable",
                  "name": "assetAddress",
                  "nameLocation": "1298:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 73874,
                  "src": "1290:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1290:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73850,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1326:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 73874,
                  "src": "1312:19:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73849,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73852,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1347:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 73874,
                  "src": "1333:21:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73851,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1289:66:71"
            },
            "returnParameters": {
              "id": 73856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1375:0:71"
            },
            "scope": 74245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 73897,
            "nodeType": "FunctionDefinition",
            "src": "1514:167:71",
            "nodes": [],
            "body": {
              "id": 73896,
              "nodeType": "Block",
              "src": "1565:116:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 73883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 73880,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1583:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 73881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1587:6:71",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1583:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 73882,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73834,
                          "src": "1595:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1583:17:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "216f776e6572",
                        "id": 73884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1602:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f90560991e3f715cdce86f88841433ea2f749a73c924ce7483b146bbc74f1efa",
                          "typeString": "literal_string \"!owner\""
                        },
                        "value": "!owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f90560991e3f715cdce86f88841433ea2f749a73c924ce7483b146bbc74f1efa",
                          "typeString": "literal_string \"!owner\""
                        }
                      ],
                      "id": 73879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1575:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:36:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73886,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:36:71"
                },
                {
                  "expression": {
                    "id": 73894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 73887,
                        "name": "isStrategist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73838,
                        "src": "1622:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 73889,
                      "indexExpression": {
                        "id": 73888,
                        "name": "strategist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73876,
                        "src": "1635:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1622:24:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "1648:25:71",
                      "subExpression": {
                        "baseExpression": {
                          "id": 73890,
                          "name": "isStrategist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73838,
                          "src": "1649:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 73892,
                        "indexExpression": {
                          "id": 73891,
                          "name": "strategist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73876,
                          "src": "1662:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1649:24:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1622:51:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73895,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:51:71"
                }
              ]
            },
            "functionSelector": "c7b9d530",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategist",
            "nameLocation": "1523:13:71",
            "parameters": {
              "id": 73877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73876,
                  "mutability": "mutable",
                  "name": "strategist",
                  "nameLocation": "1545:10:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 73897,
                  "src": "1537:18:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1536:20:71"
            },
            "returnParameters": {
              "id": 73878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1565:0:71"
            },
            "scope": 74245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73950,
            "nodeType": "FunctionDefinition",
            "src": "1687:390:71",
            "nodes": [],
            "body": {
              "id": 73949,
              "nodeType": "Block",
              "src": "1731:346:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 73903,
                          "name": "isStrategist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73838,
                          "src": "1749:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 73906,
                        "indexExpression": {
                          "expression": {
                            "id": 73904,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1762:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 73905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1766:6:71",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1762:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1749:24:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2173747261746567697374",
                        "id": 73907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1775:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        },
                        "value": "!strategist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        }
                      ],
                      "id": 73902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1741:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1741:48:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73909,
                  "nodeType": "ExpressionStatement",
                  "src": "1741:48:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3f3f3f3f3f3f3f",
                        "id": 73913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1812:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13c21921fef90a96884b6a6575825b9270b0997a673e27b7918a9fb32de3e497",
                          "typeString": "literal_string \"???????\""
                        },
                        "value": "???????"
                      },
                      {
                        "id": 73914,
                        "name": "tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73846,
                        "src": "1823:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73915,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73899,
                        "src": "1837:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_13c21921fef90a96884b6a6575825b9270b0997a673e27b7918a9fb32de3e497",
                          "typeString": "literal_string \"???????\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73910,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21995,
                        "src": "1800:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21995_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 73912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1808:3:71",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15166,
                      "src": "1800:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256) view"
                      }
                    },
                    "id": 73916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:44:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73917,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:44:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 73923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73919,
                          "name": "tokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73846,
                          "src": "1863:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 73920,
                            "name": "utilizedBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73844,
                            "src": "1879:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 73921,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73899,
                            "src": "1897:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1879:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1863:40:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21616d6f756e74",
                        "id": 73924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1905:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5985f05241e9f930ee82fd8ec3cfd07f1cb81fa920b4a9977053fe3350791e5",
                          "typeString": "literal_string \"!amount\""
                        },
                        "value": "!amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5985f05241e9f930ee82fd8ec3cfd07f1cb81fa920b4a9977053fe3350791e5",
                          "typeString": "literal_string \"!amount\""
                        }
                      ],
                      "id": 73918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1855:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1855:61:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73926,
                  "nodeType": "ExpressionStatement",
                  "src": "1855:61:71"
                },
                {
                  "expression": {
                    "id": 73929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73927,
                      "name": "utilizedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73844,
                      "src": "1928:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 73928,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73899,
                      "src": "1947:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1928:25:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 73930,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:25:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73935,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44544,
                              "src": "2000:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 73936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2000:7:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73934,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55385,
                          "src": "1994:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$55385_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 73937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1994:14:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$55385",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 73938,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2010:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2014:6:71",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2010:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73940,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73899,
                        "src": "2022:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$55385",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73931,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83972,
                        "src": "1965:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$83972_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 73933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1981:12:71",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83951,
                      "src": "1965:28:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$55385_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 73941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:64:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73942,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:64:71"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73944,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2050:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2054:6:71",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2050:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73946,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73899,
                        "src": "2062:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 73943,
                      "name": "Use",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73815,
                      "src": "2046:3:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 73947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2046:23:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73948,
                  "nodeType": "EmitStatement",
                  "src": "2041:28:71"
                }
              ]
            },
            "functionSelector": "f005af3e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "useBalance",
            "nameLocation": "1696:10:71",
            "parameters": {
              "id": 73900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73899,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1715:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 73950,
                  "src": "1707:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1706:16:71"
            },
            "returnParameters": {
              "id": 73901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1731:0:71"
            },
            "scope": 74245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74030,
            "nodeType": "FunctionDefinition",
            "src": "2166:484:71",
            "nodes": [],
            "body": {
              "id": 74029,
              "nodeType": "Block",
              "src": "2224:426:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 73959,
                          "name": "isStrategist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73838,
                          "src": "2242:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 73962,
                        "indexExpression": {
                          "expression": {
                            "id": 73960,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2255:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 73961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2259:6:71",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2255:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2242:24:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2173747261746567697374",
                        "id": 73963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2268:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        },
                        "value": "!strategist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        }
                      ],
                      "id": 73958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2234:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2234:48:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73965,
                  "nodeType": "ExpressionStatement",
                  "src": "2234:48:71"
                },
                {
                  "expression": {
                    "id": 73968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73966,
                      "name": "utilizedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73844,
                      "src": "2294:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 73967,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73953,
                      "src": "2313:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2294:25:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 73969,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:25:71"
                },
                {
                  "expression": {
                    "id": 73988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73970,
                      "name": "tokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73846,
                      "src": "2330:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 73973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73971,
                          "name": "PnL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73955,
                          "src": "2345:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 73972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2351:1:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2345:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 73986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73980,
                          "name": "tokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73846,
                          "src": "2380:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 73984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "2398:4:71",
                              "subExpression": {
                                "id": 73983,
                                "name": "PnL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73955,
                                "src": "2399:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 73982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2393:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 73981,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2393:4:71",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 73985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2393:10:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2380:23:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 73987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2345:58:71",
                      "trueExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 73979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73974,
                          "name": "tokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73846,
                          "src": "2355:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 73977,
                              "name": "PnL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73955,
                              "src": "2373:3:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 73976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2368:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 73975,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2368:4:71",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 73978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2368:9:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2355:22:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2330:73:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 73989,
                  "nodeType": "ExpressionStatement",
                  "src": "2330:73:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73994,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44544,
                              "src": "2466:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 73995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2466:7:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73993,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55385,
                          "src": "2460:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$55385_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 73996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2460:14:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$55385",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 73997,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2489:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2493:6:71",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2489:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 74001,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2521:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LIM_Token_$74245",
                              "typeString": "contract LIM_Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LIM_Token_$74245",
                              "typeString": "contract LIM_Token"
                            }
                          ],
                          "id": 74000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2513:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73999,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2513:7:71",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2513:13:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 74005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74003,
                            "name": "PnL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73955,
                            "src": "2541:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 74004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2546:1:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2541:6:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74012,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73953,
                            "src": "2567:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 74016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "2580:4:71",
                                "subExpression": {
                                  "id": 74015,
                                  "name": "PnL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73955,
                                  "src": "2581:3:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 74014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2575:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 74013,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2575:4:71",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 74017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2575:10:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2567:18:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 74019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "2541:44:71",
                        "trueExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74006,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73953,
                            "src": "2549:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 74009,
                                "name": "PnL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73955,
                                "src": "2561:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 74008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2556:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 74007,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2556:4:71",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 74010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2556:9:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2549:16:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$55385",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73990,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83972,
                        "src": "2414:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$83972_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 73992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2430:16:71",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83931,
                      "src": "2414:32:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$55385_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 74020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2414:181:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74021,
                  "nodeType": "ExpressionStatement",
                  "src": "2414:181:71"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 74023,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2618:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 74024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2622:6:71",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2618:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74025,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73953,
                        "src": "2630:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74026,
                        "name": "PnL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73955,
                        "src": "2638:3:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 74022,
                      "name": "Repay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73823,
                      "src": "2612:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_int256_$returns$__$",
                        "typeString": "function (address,uint256,int256)"
                      }
                    },
                    "id": 74027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2612:30:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74028,
                  "nodeType": "EmitStatement",
                  "src": "2607:35:71"
                }
              ]
            },
            "documentation": {
              "id": 73951,
              "nodeType": "StructuredDocumentation",
              "src": "2083:78:71",
              "text": "@notice using the amount borrowed, record how much loss has been realized "
            },
            "functionSelector": "3bc034bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBalance",
            "nameLocation": "2175:12:71",
            "parameters": {
              "id": 73956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73953,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2196:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74030,
                  "src": "2188:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73955,
                  "mutability": "mutable",
                  "name": "PnL",
                  "nameLocation": "2211:3:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74030,
                  "src": "2204:10:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 73954,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2204:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2187:28:71"
            },
            "returnParameters": {
              "id": 73957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2224:0:71"
            },
            "scope": 74245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74072,
            "nodeType": "FunctionDefinition",
            "src": "2656:418:71",
            "nodes": [],
            "body": {
              "id": 74071,
              "nodeType": "Block",
              "src": "2738:336:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 74038,
                          "name": "isStrategist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73838,
                          "src": "2756:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 74041,
                        "indexExpression": {
                          "expression": {
                            "id": 74039,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2769:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 74040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2773:6:71",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2769:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2756:24:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2173747261746567697374",
                        "id": 74042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2782:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        },
                        "value": "!strategist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        }
                      ],
                      "id": 74037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2748:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2748:48:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74044,
                  "nodeType": "ExpressionStatement",
                  "src": "2748:48:71"
                },
                {
                  "expression": {
                    "id": 74049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74045,
                        "name": "externalTokensAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73842,
                        "src": "2808:20:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 74047,
                      "indexExpression": {
                        "id": 74046,
                        "name": "externalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74034,
                        "src": "2829:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2808:35:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 74048,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74032,
                      "src": "2847:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2808:45:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74050,
                  "nodeType": "ExpressionStatement",
                  "src": "2808:45:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74055,
                            "name": "externalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74034,
                            "src": "2916:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 74054,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55385,
                          "src": "2910:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$55385_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 74056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2910:20:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$55385",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 74057,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2945:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 74058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2949:6:71",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2945:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 74061,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2977:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LIM_Token_$74245",
                              "typeString": "contract LIM_Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LIM_Token_$74245",
                              "typeString": "contract LIM_Token"
                            }
                          ],
                          "id": 74060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2969:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74059,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2969:7:71",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2969:13:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74063,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74032,
                        "src": "2997:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$55385",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74051,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83972,
                        "src": "2864:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$83972_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 74053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2880:16:71",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83931,
                      "src": "2864:32:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$55385_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 74064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2864:149:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74065,
                  "nodeType": "ExpressionStatement",
                  "src": "2864:149:71"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 74067,
                        "name": "externalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74034,
                        "src": "3044:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74068,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74032,
                        "src": "3059:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74066,
                      "name": "AddedExternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73829,
                      "src": "3030:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 74069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3030:36:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74070,
                  "nodeType": "EmitStatement",
                  "src": "3025:41:71"
                }
              ]
            },
            "functionSelector": "96721d8a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addExternalTokenToBalance",
            "nameLocation": "2665:25:71",
            "parameters": {
              "id": 74035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74032,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2699:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74072,
                  "src": "2691:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74034,
                  "mutability": "mutable",
                  "name": "externalToken",
                  "nameLocation": "2715:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74072,
                  "src": "2707:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2707:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2690:39:71"
            },
            "returnParameters": {
              "id": 74036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2738:0:71"
            },
            "scope": 74245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74137,
            "nodeType": "FunctionDefinition",
            "src": "3203:642:71",
            "nodes": [],
            "body": {
              "id": 74136,
              "nodeType": "Block",
              "src": "3303:542:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 74083,
                          "name": "isStrategist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73838,
                          "src": "3321:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 74086,
                        "indexExpression": {
                          "expression": {
                            "id": 74084,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3334:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 74085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3338:6:71",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3334:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3321:24:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2173747261746567697374",
                        "id": 74087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3347:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        },
                        "value": "!strategist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        }
                      ],
                      "id": 74082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3313:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3313:48:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74089,
                  "nodeType": "ExpressionStatement",
                  "src": "3313:48:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 74091,
                            "name": "externalTokensAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73842,
                            "src": "3380:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 74093,
                          "indexExpression": {
                            "id": 74092,
                            "name": "externalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74079,
                            "src": "3401:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3380:35:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 74094,
                          "name": "amountSold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74075,
                          "src": "3418:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3380:48:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21616d6f756e74",
                        "id": 74096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3430:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5985f05241e9f930ee82fd8ec3cfd07f1cb81fa920b4a9977053fe3350791e5",
                          "typeString": "literal_string \"!amount\""
                        },
                        "value": "!amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5985f05241e9f930ee82fd8ec3cfd07f1cb81fa920b4a9977053fe3350791e5",
                          "typeString": "literal_string \"!amount\""
                        }
                      ],
                      "id": 74090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3372:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3372:68:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74098,
                  "nodeType": "ExpressionStatement",
                  "src": "3372:68:71"
                },
                {
                  "expression": {
                    "id": 74103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74099,
                        "name": "externalTokensAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73842,
                        "src": "3452:20:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 74101,
                      "indexExpression": {
                        "id": 74100,
                        "name": "externalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74079,
                        "src": "3473:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3452:35:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 74102,
                      "name": "amountSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74075,
                      "src": "3491:10:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3452:49:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74104,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:49:71"
                },
                {
                  "expression": {
                    "id": 74107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74105,
                      "name": "tokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73846,
                      "src": "3512:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 74106,
                      "name": "amountBought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74077,
                      "src": "3528:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3512:28:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74108,
                  "nodeType": "ExpressionStatement",
                  "src": "3512:28:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74113,
                            "name": "externalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74079,
                            "src": "3600:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 74112,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55385,
                          "src": "3594:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$55385_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 74114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3594:20:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$55385",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 74115,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3629:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 74116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3633:6:71",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3629:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74117,
                        "name": "amountBought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74077,
                        "src": "3653:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$55385",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74109,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83972,
                        "src": "3552:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$83972_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 74111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3568:12:71",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83951,
                      "src": "3552:28:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$55385_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 74118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3552:123:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74119,
                  "nodeType": "ExpressionStatement",
                  "src": "3552:123:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 74124,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44544,
                              "src": "3739:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3739:7:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 74123,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55385,
                          "src": "3733:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$55385_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 74126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3733:14:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$55385",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 74127,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3762:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 74128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3766:6:71",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3762:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 74131,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3794:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LIM_Token_$74245",
                              "typeString": "contract LIM_Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LIM_Token_$74245",
                              "typeString": "contract LIM_Token"
                            }
                          ],
                          "id": 74130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3786:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74129,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3786:7:71",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3786:13:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74133,
                        "name": "amountBought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74077,
                        "src": "3814:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$55385",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74120,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83972,
                        "src": "3687:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$83972_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 74122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3703:16:71",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83931,
                      "src": "3687:32:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$55385_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 74134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3687:149:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74135,
                  "nodeType": "ExpressionStatement",
                  "src": "3687:149:71"
                }
              ]
            },
            "documentation": {
              "id": 74073,
              "nodeType": "StructuredDocumentation",
              "src": "3080:118:71",
              "text": "@notice strategist can only be protocol arbitraging to get the best price\n on behalf of the share holders. "
            },
            "functionSelector": "f367cddf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellExternalToken",
            "nameLocation": "3212:17:71",
            "parameters": {
              "id": 74080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74075,
                  "mutability": "mutable",
                  "name": "amountSold",
                  "nameLocation": "3238:10:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74137,
                  "src": "3230:18:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3230:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74077,
                  "mutability": "mutable",
                  "name": "amountBought",
                  "nameLocation": "3258:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74137,
                  "src": "3250:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3250:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74079,
                  "mutability": "mutable",
                  "name": "externalToken",
                  "nameLocation": "3280:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74137,
                  "src": "3272:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3229:65:71"
            },
            "returnParameters": {
              "id": 74081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3303:0:71"
            },
            "scope": 74245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74181,
            "nodeType": "FunctionDefinition",
            "src": "3851:902:71",
            "nodes": [],
            "body": {
              "id": 74180,
              "nodeType": "Block",
              "src": "3960:793:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 74153,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44544,
                              "src": "4583:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4583:7:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 74152,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44385,
                          "src": "4565:17:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$44385_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 74155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4565:26:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$44385",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      {
                        "id": 74156,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74139,
                        "src": "4593:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 74159,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4609:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LIM_Token_$74245",
                              "typeString": "contract LIM_Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LIM_Token_$74245",
                              "typeString": "contract LIM_Token"
                            }
                          ],
                          "id": 74158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4601:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74157,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4601:7:71",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4601:13:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74161,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74143,
                        "src": "4616:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$44385",
                          "typeString": "contract IERC20Upgradeable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74149,
                        "name": "SafeERC20Upgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45472,
                        "src": "4527:20:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20Upgradeable_$45472_$",
                          "typeString": "type(library SafeERC20Upgradeable)"
                        }
                      },
                      "id": 74151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4548:16:71",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45156,
                      "src": "4527:37:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$44385_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 74162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4527:96:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74163,
                  "nodeType": "ExpressionStatement",
                  "src": "4527:96:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74165,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74141,
                        "src": "4639:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74166,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74145,
                        "src": "4649:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74164,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44119,
                      "src": "4633:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 74167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4633:23:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74168,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:23:71"
                },
                {
                  "expression": {
                    "id": 74171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74169,
                      "name": "tokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73846,
                      "src": "4666:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 74170,
                      "name": "assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74143,
                      "src": "4682:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4666:22:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74172,
                  "nodeType": "ExpressionStatement",
                  "src": "4666:22:71"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 74174,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74139,
                        "src": "4713:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74175,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74141,
                        "src": "4721:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74176,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74143,
                        "src": "4731:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74177,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74145,
                        "src": "4739:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74173,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43377,
                      "src": "4705:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 74178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4705:41:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74179,
                  "nodeType": "EmitStatement",
                  "src": "4700:46:71"
                }
              ]
            },
            "baseFunctions": [
              44974
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "3860:8:71",
            "overrides": {
              "id": 74147,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3952:8:71"
            },
            "parameters": {
              "id": 74146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74139,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "3877:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74181,
                  "src": "3869:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3869:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74141,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3893:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74181,
                  "src": "3885:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3885:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74143,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "3911:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74181,
                  "src": "3903:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3903:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74145,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "3927:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74181,
                  "src": "3919:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3919:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3868:66:71"
            },
            "returnParameters": {
              "id": 74148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3960:0:71"
            },
            "scope": 74245,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74235,
            "nodeType": "FunctionDefinition",
            "src": "4759:986:71",
            "nodes": [],
            "body": {
              "id": 74234,
              "nodeType": "Block",
              "src": "4930:815:71",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 74197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74195,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74183,
                      "src": "4944:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 74196,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74187,
                      "src": "4954:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4944:15:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74205,
                  "nodeType": "IfStatement",
                  "src": "4940:84:71",
                  "trueBody": {
                    "id": 74204,
                    "nodeType": "Block",
                    "src": "4961:63:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 74199,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74187,
                              "src": "4991:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 74200,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74183,
                              "src": "4998:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 74201,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74191,
                              "src": "5006:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 74198,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44279,
                            "src": "4975:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 74202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4975:38:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74203,
                        "nodeType": "ExpressionStatement",
                        "src": "4975:38:71"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 74208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74206,
                      "name": "tokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73846,
                      "src": "5531:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 74207,
                      "name": "assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74189,
                      "src": "5547:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5531:22:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74209,
                  "nodeType": "ExpressionStatement",
                  "src": "5531:22:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74211,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74187,
                        "src": "5570:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74212,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74191,
                        "src": "5577:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74210,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44191,
                      "src": "5564:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 74213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5564:20:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74214,
                  "nodeType": "ExpressionStatement",
                  "src": "5564:20:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 74219,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44544,
                              "src": "5646:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5646:7:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 74218,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44385,
                          "src": "5628:17:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$44385_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 74221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5628:26:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$44385",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      {
                        "id": 74222,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74185,
                        "src": "5656:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74223,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74189,
                        "src": "5666:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$44385",
                          "typeString": "contract IERC20Upgradeable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74215,
                        "name": "SafeERC20Upgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45472,
                        "src": "5594:20:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20Upgradeable_$45472_$",
                          "typeString": "type(library SafeERC20Upgradeable)"
                        }
                      },
                      "id": 74217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5615:12:71",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45129,
                      "src": "5594:33:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$44385_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 74224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5594:79:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74225,
                  "nodeType": "ExpressionStatement",
                  "src": "5594:79:71"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 74227,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74183,
                        "src": "5698:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74228,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74185,
                        "src": "5706:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74229,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74187,
                        "src": "5716:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74230,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74189,
                        "src": "5723:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74231,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74191,
                        "src": "5731:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74226,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43389,
                      "src": "5689:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 74232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5689:49:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74233,
                  "nodeType": "EmitStatement",
                  "src": "5684:54:71"
                }
              ]
            },
            "baseFunctions": [
              45021
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "4768:9:71",
            "overrides": {
              "id": 74193,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4922:8:71"
            },
            "parameters": {
              "id": 74192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74183,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "4795:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74235,
                  "src": "4787:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4787:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74185,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "4819:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74235,
                  "src": "4811:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4811:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74187,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4845:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74235,
                  "src": "4837:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4837:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74189,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "4868:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74235,
                  "src": "4860:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4860:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74191,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "4892:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 74235,
                  "src": "4884:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4884:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4777:127:71"
            },
            "returnParameters": {
              "id": 74194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4930:0:71"
            },
            "scope": 74245,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74244,
            "nodeType": "FunctionDefinition",
            "src": "5751:107:71",
            "nodes": [],
            "body": {
              "id": 74243,
              "nodeType": "Block",
              "src": "5821:37:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 74241,
                    "name": "tokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73846,
                    "src": "5838:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 74240,
                  "id": 74242,
                  "nodeType": "Return",
                  "src": "5831:19:71"
                }
              ]
            },
            "baseFunctions": [
              44560
            ],
            "functionSelector": "01e1d114",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalAssets",
            "nameLocation": "5760:11:71",
            "overrides": {
              "id": 74237,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5794:8:71"
            },
            "parameters": {
              "id": 74236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5771:2:71"
            },
            "returnParameters": {
              "id": 74240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74239,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74244,
                  "src": "5812:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5812:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5811:9:71"
            },
            "scope": 74245,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 73801,
              "name": "ERC4626Upgradeable",
              "nameLocations": [
                "744:18:71"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45035,
              "src": "744:18:71"
            },
            "id": 73802,
            "nodeType": "InheritanceSpecifier",
            "src": "744:18:71"
          }
        ],
        "canonicalName": "LIM_Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          74245,
          45035,
          43526,
          44307,
          45060,
          44385,
          47362,
          43695
        ],
        "name": "LIM_Token",
        "nameLocation": "731:9:71",
        "scope": 74246,
        "usedErrors": [],
        "usedEvents": [
          43377,
          43389,
          43541,
          44319,
          44328,
          73815,
          73823,
          73829
        ]
      }
    ]
  },
  "id": 71
}