/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Utils, UtilsInterface } from "../../../src/Util.sol/Utils";

const _abi = [
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "price",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "maxSlippage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "down",
        type: "bool",
      },
    ],
    name: "applySlippageX96",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "percentageClosed",
        type: "uint256",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "getAmountsRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0Required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Required",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool",
        type: "IUniswapV3Pool",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getFeeGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "feeGrowthInside0X128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthInside1X128",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "getToken0",
        type: "bool",
      },
      {
        internalType: "int24",
        name: "tickSpacing",
        type: "int24",
      },
    ],
    name: "getFilledAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "filledAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "getToken0",
        type: "bool",
      },
      {
        internalType: "int24",
        name: "tickSpacing",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "getFilledAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "filledAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getMinMaxTicks",
    outputs: [
      {
        internalType: "int24",
        name: "min",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "max",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
    ],
    name: "getRepayInfo",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "arr1",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "arr2",
        type: "tuple[]",
      },
    ],
    name: "mergeSortedArrays",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "down",
        type: "bool",
      },
      {
        internalType: "int24",
        name: "tickSpacing",
        type: "int24",
      },
    ],
    name: "roundTick",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61264a61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061009d5760003560e01c806337a614211161007057806337a614211461012d57806341533fe71461015a57806394cdfca51461017b5780639887b5891461018e578063b45082e2146101a157600080fd5b8063055d1548146100a2578063207b0576146100cf57806330940b88146100fa57806334dc54581461011a575b600080fd5b6100b56100b0366004611ed8565b6101c7565b604080519283526020830191909152015b60405180910390f35b6100e26100dd366004611f67565b610507565b6040516001600160a01b0390911681526020016100c6565b61010d610108366004611fa9565b61056f565b6040516100c6919061200d565b61010d61012836600461209b565b610c05565b61014061013b3660046120e0565b610c92565b60408051600293840b81529190920b6020820152016100c6565b61016d610168366004612115565b610d79565b6040519081526020016100c6565b61016d61018936600461216e565b610ec1565b6100b561019c3660046121d8565b611003565b6101b46101af366004612208565b611292565b60405160029190910b81526020016100c6565b60008060005b87518110156104fc5760006102118983815181106101ed576101ed612238565b6020026020010151602001516001600160801b031689670de0b6b3a7640000611303565b90506102516040518060400160405280602081526020017f2d207574696c732067657474696e6720616d6f756e74732072657175697265648152506113e6565b61027a89838151811061026657610266612238565b60200260200101516000015160020b61142c565b61028c816001600160801b0316611471565b6102a361029b8760018a611292565b60020b61142c565b8560020b8983815181106102b9576102b9612238565b60200260200101516000015160020b1315801561030357508560020b878a84815181106102e8576102e8612238565b6020026020010151600001516102fe9190612264565b60020b135b156103d65760006103458661033f8a8d878151811061032457610324612238565b60200260200101516000015161033a9190612264565b6114b6565b846117d9565b905060006103796103728c868151811061036157610361612238565b6020026020010151600001516114b6565b888561181e565b90506103858287612289565b95506103918186612289565b94506103c36040518060400160405280600d81526020016c2d2d696e6265747765656e2d2d60981b815250838361184d565b6103cf8860020b61142c565b50506104e9565b6103e286600189611292565b60020b8983815181106103f7576103f7612238565b60200260200101516000015160020b136104735761043f6104238a848151811061036157610361612238565b610439898c868151811061032457610324612238565b8361181e565b6104499084612289565b925061046e604051806040016040528060028152602001613f3f60f01b8152506113e6565b6104e9565b61047f86600089611292565b60020b89838151811061049457610494612238565b60200260200101516000015160020b126104e9576104dc6104c08a848151811061036157610361612238565b6104d6898c868151811061032457610324612238565b836117d9565b6104e69085612289565b93505b50806104f48161229c565b9150506101cd565b509550959350505050565b6000816105145782610527565b610527670de0b6b3a76400008085611303565b9250600061054284600160601b670de0b6b3a7640000611303565b905061056461055f866001600160a01b031683600160601b611303565b611899565b9150505b9392505050565b815181516060919060006105838284612289565b905060008167ffffffffffffffff8111156105a0576105a0611d47565b6040519080825280602002602001820160405280156105d957816020015b6105c6611cfe565b8152602001906001900390816105be5790505b50905060008060005b86831080156105f057508582105b156107e457600061063b8b858151811061060c5761060c612238565b6020026020010151600001518b858151811061062a5761062a612238565b6020026020010151600001516118e7565b121561068b5789838151811061065357610653612238565b602002602001015184828151811061066d5761066d612238565b602002602001018190525082806106839061229c565b9350506107d2565b60006106a28b858151811061060c5761060c612238565b13156106f2578882815181106106ba576106ba612238565b60200260200101518482815181106106d4576106d4612238565b602002602001018190525081806106ea9061229c565b9250506107d2565b6040518060e001604052808b858151811061070f5761070f612238565b60200260200101516000015160020b81526020018a848151811061073557610735612238565b6020026020010151602001518c868151811061075357610753612238565b60200260200101516020015161076991906122b5565b6001600160801b031681526020016000815260200160008152602001600081526020016000815260200160008152508482815181106107aa576107aa612238565b602002602001018190525082806107c09061229c565b93505081806107ce9061229c565b9250505b806107dc8161229c565b9150506105e2565b86831015610844578983815181106107fe576107fe612238565b602002602001015184828151811061081857610818612238565b6020026020010181905250828061082e9061229c565b935050808061083c9061229c565b9150506107e4565b858210156108a45788828151811061085e5761085e612238565b602002602001015184828151811061087857610878612238565b6020026020010181905250818061088e9061229c565b925050808061089c9061229c565b915050610844565b60008093505b85841015610a2a5760006108bf856001612289565b93505b868410156109cc578584815181106108dc576108dc612238565b60200260200101516000015160020b8686815181106108fd576108fd612238565b60200260200101516000015160020b036109ba576001905085848151811061092757610927612238565b60200260200101516020015186868151811061094557610945612238565b602002602001015160200181815161095d91906122b5565b6001600160801b0316905250855186908690811061097d5761097d612238565b60200260200101516020015186858151811061099b5761099b612238565b6020908102919091018101516001600160801b039092169101526109cc565b836109c48161229c565b9450506108c2565b80610a17578585815181106109e3576109e3612238565b60200260200101518683815181106109fd576109fd612238565b60200260200101819052508180610a139061229c565b9250505b5083610a228161229c565b9450506108aa565b808552610a43856000610a3e6001856122dc565b611930565b60008167ffffffffffffffff811115610a5e57610a5e611d47565b604051908082528060200260200182016040528015610a9757816020015b610a84611cfe565b815260200190600190039081610a7c5790505b5090506000935060005b8651811015610b5c57868181518110610abc57610abc612238565b60200260200101516000015160020b6000148015610b005750868181518110610ae757610ae7612238565b6020026020010151602001516001600160801b03166000145b610b4a57868181518110610b1657610b16612238565b6020026020010151828681518110610b3057610b30612238565b60200260200101819052508480610b469061229c565b9550505b80610b548161229c565b915050610aa1565b508560018751610b6c91906122dc565b81518110610b7c57610b7c612238565b60200260200101516000015160020b6000148015610bcd57508560018751610ba491906122dc565b81518110610bb457610bb4612238565b6020026020010151602001516001600160801b03166000145b15610be35781610bdc816122ef565b9250508181525b610bf4816000610a3e6001866122dc565b985050505050505050505b92915050565b606060005b8351811015610c8a57610c4c848281518110610c2857610c28612238565b6020026020010151602001516001600160801b031684670de0b6b3a7640000611303565b848281518110610c5e57610c5e612238565b6020908102919091018101516001600160801b0390921691015280610c828161229c565b915050610c0a565b509192915050565b60008082600081518110610ca857610ca8612238565b602090810291909101015151915081905060015b8351811015610d73578260020b848281518110610cdb57610cdb612238565b60200260200101516000015160020b1215610d1557838181518110610d0257610d02612238565b6020026020010151600001519250610d61565b8160020b848281518110610d2b57610d2b612238565b60200260200101516000015160020b1315610d6157838181518110610d5257610d52612238565b60200260200101516000015191505b80610d6b8161229c565b915050610cbc565b50915091565b6000805b8451811015610eb957848181518110610d9857610d98612238565b6020026020010151602001516001600160801b031660000315610ea7578315610e4057610e26610dd386838151811061036157610361612238565b610de98588858151811061032457610324612238565b610e18888581518110610dfe57610dfe612238565b6020026020010151602001516001600160801b0316611ad7565b610e2190612306565b6117d9565b610e2f90612335565b610e399083612289565b9150610ea7565b610e91610e5886838151811061036157610361612238565b610e6e8588858151811061032457610324612238565b610e83888581518110610dfe57610dfe612238565b610e8c90612306565b61181e565b610e9a90612335565b610ea49083612289565b91505b80610eb18161229c565b915050610d7d565b509392505050565b6000805b8551811015610ffa57858181518110610ee057610ee0612238565b6020026020010151602001516001600160801b031660000315610fe8578415610f8c57610f72610f1b87838151811061036157610361612238565b610f318689858151811061032457610324612238565b610e18610f6d8a8681518110610f4957610f49612238565b6020026020010151602001516001600160801b031688670de0b6b3a7640000611303565b611ad7565b610f7b90612335565b610f859083612289565b9150610fe8565b610fd2610fa487838151811061036157610361612238565b610fba8689858151811061032457610324612238565b610e83610f6d8a8681518110610f4957610f49612238565b610fdb90612335565b610fe59083612289565b91505b80610ff28161229c565b915050610ec5565b50949350505050565b6000806000856001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611046573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106a919061236e565b505060405163f30dba9360e01b815260028b900b60048201529395506000945084936001600160a01b038c16935063f30dba939250602401905061010060405180830381865afa1580156110c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e69190612406565b505060405163f30dba9360e01b815260028d900b600482015293975091955060009450849350506001600160a01b038c169163f30dba93915060240161010060405180830381865afa158015611140573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111649190612406565b505050509350935050508860020b8560020b121561118b5781840396508083039550611285565b8760020b8560020b121561127a5760008a6001600160a01b031663f30583996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fd91906124b4565b905060008b6001600160a01b031663461413196040518163ffffffff1660e01b8152600401602060405180830381865afa15801561123f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126391906124b4565b905083868303039850828582030397505050611285565b838203965082810395505b5050505050935093915050565b60008061129f83866124e3565b905060008560020b13156112df57836112cd57826112be826001612264565b6112c8919061251d565b6112d7565b6112d7838261251d565b915050610568565b836112ee576112c8838261251d565b826112f9818361251d565b6112d7919061253d565b600080806000198587098587029250828110838203039150508060000361133c576000841161133157600080fd5b508290049050610568565b8084116113795760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b60448201526064015b60405180910390fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b611429816040516024016113fa91906125a8565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611b17565b50565b6114298160405160240161144291815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316634e0c1d1d60e01b179052611b17565b6114298160405160240161148791815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611b17565b60008060008360020b126114cd578260020b6114d5565b8260020b6000035b9050620d89e88111156114fb576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361151257600160801b611524565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611558576ffff97272373d413259a46990580e213a0260801c5b6004821615611577576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611596576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156115b5576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156115d4576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156115f3576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611612576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611632576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611652576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615611672576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615611692576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156116b2576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156116d2576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156116f2576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611712576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611733576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611753576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615611772576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561178f576b048a170391f7dc42444e8fa20260801c5b60008460020b13156117b05780600019816117ac576117ac6124cd565b0490505b6401000000008106156117c45760016117c7565b60005b60ff16602082901c0192505050919050565b60008082600f0b126117ff576117fa6117f58585856001611b38565b611bf8565b611816565b6118126117f58585856000036000611b38565b6000035b949350505050565b60008082600f0b1261183a576117fa6117f58585856001611c45565b6118126117f58585856000036000611c45565b611894838383604051602401611865939291906125bb565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052611b17565b505050565b806001600160a01b03811681146118e25760405162461bcd60e51b815260206004820152600d60248201526c31b0b9ba34b7339032b93937b960991b6044820152606401611370565b919050565b6000808360020b1280156118fe575060008260020b125b1561191c578260020b8260020b61191591906125e0565b9050610bff565b611926828461253d565b60020b9392505050565b80821061193c57505050565b600161194883836122dc565b1161195257505050565b818160008560026119638486612289565b61196d9190612600565b8151811061197d5761197d612238565b602002602001015190505b818311611aa9575b806000015160020b8684815181106119aa576119aa612238565b60200260200101516000015160020b12156119d157826119c98161229c565b935050611990565b806000015160020b8683815181106119eb576119eb612238565b60200260200101516000015160020b1315611a125781611a0a816122ef565b9250506119d1565b818311611aa457858281518110611a2b57611a2b612238565b6020026020010151868481518110611a4557611a45612238565b6020026020010151878581518110611a5f57611a5f612238565b60200260200101888581518110611a7857611a78612238565b6020026020010182905282905250508280611a929061229c565b9350508180611aa0906122ef565b9250505b611988565b81851015611abc57611abc868684611930565b83831015611acf57611acf868486611930565b505050505050565b80600f81900b81146118e25760405162461bcd60e51b81526020600482015260096024820152681cd859994818d85cdd60ba1b6044820152606401611370565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000836001600160a01b0316856001600160a01b03161115611b58579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b038686038116908716611b8b57600080fd5b83611bc157866001600160a01b0316611bae8383896001600160a01b0316611303565b81611bbb57611bbb6124cd565b04611bed565b611bed611bd88383896001600160a01b0316611cbe565b886001600160a01b0316808204910615150190565b979650505050505050565b6000600160ff1b8210611c415760405162461bcd60e51b8152602060048201526011602482015270191a9b1031b0b9ba34b7339032b93937b960791b6044820152606401611370565b5090565b6000836001600160a01b0316856001600160a01b03161115611c65579293925b81611c9257611c8d836001600160801b03168686036001600160a01b0316600160601b611303565b611cb5565b611cb5836001600160801b03168686036001600160a01b0316600160601b611cbe565b95945050505050565b6000611ccb848484611303565b905060008280611cdd57611cdd6124cd565b8486091115610568576000198110611cf457600080fd5b6001019392505050565b6040518060e00160405280600060020b815260200160006001600160801b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715611d8057611d80611d47565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611daf57611daf611d47565b604052919050565b8060020b811461142957600080fd5b6001600160801b038116811461142957600080fd5b600082601f830112611dec57600080fd5b8135602067ffffffffffffffff821115611e0857611e08611d47565b611e16818360051b01611d86565b82815260e09283028501820192828201919087851115611e3557600080fd5b8387015b85811015611eb65781818a031215611e515760008081fd5b611e59611d5d565b8135611e6481611db7565b815281860135611e7381611dc6565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c080830135908201528452928401928101611e39565b5090979650505050505050565b6001600160a01b038116811461142957600080fd5b600080600080600060a08688031215611ef057600080fd5b853567ffffffffffffffff811115611f0757600080fd5b611f1388828901611ddb565b955050602086013593506040860135611f2b81611db7565b92506060860135611f3b81611db7565b91506080860135611f4b81611ec3565b809150509295509295909350565b801515811461142957600080fd5b600080600060608486031215611f7c57600080fd5b8335611f8781611ec3565b9250602084013591506040840135611f9e81611f59565b809150509250925092565b60008060408385031215611fbc57600080fd5b823567ffffffffffffffff80821115611fd457600080fd5b611fe086838701611ddb565b93506020850135915080821115611ff657600080fd5b5061200385828601611ddb565b9150509250929050565b602080825282518282018190526000919060409081850190868401855b8281101561208e578151805160020b8552868101516001600160801b0316878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0908101519085015260e0909301929085019060010161202a565b5091979650505050505050565b600080604083850312156120ae57600080fd5b823567ffffffffffffffff8111156120c557600080fd5b6120d185828601611ddb565b95602094909401359450505050565b6000602082840312156120f257600080fd5b813567ffffffffffffffff81111561210957600080fd5b61181684828501611ddb565b60008060006060848603121561212a57600080fd5b833567ffffffffffffffff81111561214157600080fd5b61214d86828701611ddb565b935050602084013561215e81611f59565b91506040840135611f9e81611db7565b6000806000806080858703121561218457600080fd5b843567ffffffffffffffff81111561219b57600080fd5b6121a787828801611ddb565b94505060208501356121b881611f59565b925060408501356121c881611db7565b9396929550929360600135925050565b6000806000606084860312156121ed57600080fd5b83356121f881611ec3565b9250602084013561215e81611db7565b60008060006060848603121561221d57600080fd5b833561222881611db7565b9250602084013561215e81611f59565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600281810b9083900b01627fffff8113627fffff1982121715610bff57610bff61224e565b80820180821115610bff57610bff61224e565b6000600182016122ae576122ae61224e565b5060010190565b6001600160801b038181168382160190808211156122d5576122d561224e565b5092915050565b81810381811115610bff57610bff61224e565b6000816122fe576122fe61224e565b506000190190565b600081600f0b6f7fffffffffffffffffffffffffffffff19810361232c5761232c61224e565b60000392915050565b6000600160ff1b820161234a5761234a61224e565b5060000390565b805161ffff811681146118e257600080fd5b80516118e281611f59565b600080600080600080600060e0888a03121561238957600080fd5b875161239481611ec3565b60208901519097506123a581611db7565b95506123b360408901612351565b94506123c160608901612351565b93506123cf60808901612351565b925060a088015160ff811681146123e557600080fd5b60c08901519092506123f681611f59565b8091505092959891949750929550565b600080600080600080600080610100898b03121561242357600080fd5b885161242e81611dc6565b80985050602089015180600f0b811461244657600080fd5b80975050604089015195506060890151945060808901518060060b811461246c57600080fd5b60a08a015190945061247d81611ec3565b60c08a015190935063ffffffff8116811461249757600080fd5b91506124a560e08a01612363565b90509295985092959890939650565b6000602082840312156124c657600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806124fa576124fa6124cd565b627fffff198214600019821416156125145761251461224e565b90059392505050565b60008260020b8260020b028060020b91508082146122d5576122d561224e565b600282810b9082900b03627fffff198112627fffff82131715610bff57610bff61224e565b6000815180845260005b818110156125885760208185018101518683018201520161256c565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006105686020830184612562565b6060815260006125ce6060830186612562565b60208301949094525060400152919050565b81810360008312801583831316838312821617156122d5576122d561224e565b60008261260f5761260f6124cd565b50049056fea2646970667358221220b5bc1b99409219d63498135e741f95fb94aaee52eecd3630cd20a35957f1365f64736f6c63430008120033";

type UtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Utils__factory extends ContractFactory {
  constructor(...args: UtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Utils> {
    return super.deploy(overrides || {}) as Promise<Utils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Utils {
    return super.attach(address) as Utils;
  }
  override connect(signer: Signer): Utils__factory {
    return super.connect(signer) as Utils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilsInterface {
    return new utils.Interface(_abi) as UtilsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Utils {
    return new Contract(address, _abi, signerOrProvider) as Utils;
  }
}
