/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BorrowFacility,
  BorrowFacilityInterface,
} from "../../src/BorrowFacility";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pm",
        type: "address",
      },
      {
        internalType: "address",
        name: "ex",
        type: "address",
      },
      {
        internalType: "address",
        name: "uniswapFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "PositionId",
        name: "",
        type: "bytes32",
      },
    ],
    name: "PremiumDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "borrowToken1",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ltv",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "addPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "pool",
                type: "address",
              },
              {
                internalType: "bool",
                name: "underAuction",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isToken0",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "totalDebtOutput",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalDebtInput",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "recentPremium",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "openTime",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "repayTime",
                type: "uint32",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "tick",
                    type: "int24",
                  },
                  {
                    internalType: "uint128",
                    name: "liquidity",
                    type: "uint128",
                  },
                  {
                    internalType: "uint256",
                    name: "premium",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "Urate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeGrowthInside0LastX128",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeGrowthInside1LastX128",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastGrowth",
                    type: "uint256",
                  },
                ],
                internalType: "struct LiquidityLoan[]",
                name: "borrowInfo",
                type: "tuple[]",
              },
            ],
            internalType: "struct Position",
            name: "base",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct BorrowPosition",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "approveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "pool",
                type: "address",
              },
              {
                internalType: "bool",
                name: "underAuction",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isToken0",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "totalDebtOutput",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalDebtInput",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "recentPremium",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "openTime",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "repayTime",
                type: "uint32",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "tick",
                    type: "int24",
                  },
                  {
                    internalType: "uint128",
                    name: "liquidity",
                    type: "uint128",
                  },
                  {
                    internalType: "uint256",
                    name: "premium",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "Urate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeGrowthInside0LastX128",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeGrowthInside1LastX128",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastGrowth",
                    type: "uint256",
                  },
                ],
                internalType: "struct LiquidityLoan[]",
                name: "borrowInfo",
                type: "tuple[]",
              },
            ],
            internalType: "struct Position",
            name: "base",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct MarginPosition",
        name: "position",
        type: "tuple",
      },
    ],
    name: "canForceClose",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositPremium",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "PositionId",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "maxWithdrawablePremium",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "payPremium",
    outputs: [
      {
        internalType: "uint256",
        name: "premiumOwed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "PositionId",
        name: "",
        type: "bytes32",
      },
    ],
    name: "positions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "bool",
            name: "underAuction",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "recentPremium",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Urate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct Position",
        name: "base",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "totalPosition",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawPremium",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016000553480156200001657600080fd5b5060405162002092380380620020928339810160408190526200003991620000a3565b600180546001600160a01b039485166001600160a01b03199182161790915560028054938516938216939093179092556003805483163317905560048054919093169116179055620000ed565b80516001600160a01b03811681146200009e57600080fd5b919050565b600080600060608486031215620000b957600080fd5b620000c48462000086565b9250620000d46020850162000086565b9150620000e46040850162000086565b90509250925092565b611f9580620000fd6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80635de88c93116100665780635de88c93146101195780637dc8b1a61461019657806386dacdb0146101a9578063d7ae317e146101bd578063dbe5f6cb146101e057600080fd5b8063025df9e4146100985780633eb4adab146100ad578063514ea4bf146100c05780635d4936ff146100eb575b600080fd5b6100ab6100a63660046112bc565b6101f3565b005b6100ab6100bb36600461131c565b6102ba565b6100d36100ce366004611355565b6104f9565b6040516100e2939291906114ac565b60405180910390f35b61010b6100f9366004611355565b60066020526000908152604090205481565b6040519081526020016100e2565b6101886101273660046116e9565b50506040805161016081018252600091810182815260608083018490526080830184905260a0830184905260c0830184905260e083018490526101008301849052610120830184905261014083015281526020810182905294909350915050565b6040516100e292919061175e565b61010b6101a4366004611792565b61063d565b61010b6101b7366004611355565b50600090565b6101d06101cb3660046117f0565b610a4d565b60405190151581526020016100e2565b6100ab6101ee366004611918565b610a73565b6004546000906102259061021e906001600160a01b03166102193688900388018861197b565b610b9d565b3385610c86565b9050811561025f5760405162461bcd60e51b8152602060048201526002602482015261021760f41b60448201526064015b60405180910390fd5b6000818152600660205260408120805484929061027d9084906119e3565b909155506102b49050836102a05761029b60408601602087016119fc565b6102ad565b6102ad60208601866119fc565b3384610cbc565b50505050565b6001546001600160a01b03163314806102dd57506002546001600160a01b031633145b6103115760405162461bcd60e51b8152602060048201526005602482015264042c2eae8d60db1b6044820152606401610256565b60015460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529083169063095ea7b3906044016020604051808303816000875af1158015610365573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103899190611a20565b5060015460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529082169063095ea7b3906044016020604051808303816000875af11580156103de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104029190611a20565b5060025460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529083169063095ea7b3906044016020604051808303816000875af1158015610457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047b9190611a20565b5060025460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529082169063095ea7b3906044016020604051808303816000875af11580156104d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f49190611a20565b505050565b600560208181526000928352604080842081516101208101835281546001600160a01b038116825260ff600160a01b82048116151583870152600160a81b909104161515818401526001820154606082015260028201546080820152600382015460a0820152600482015463ffffffff80821660c08401526401000000009091041660e082015293810180548351818602810186019094528084529195869461010087019493919084015b828210156106255760008481526020908190206040805160e081018252600686029092018054600281810b855263010000009091046001600160801b03168486015260018083015493850193909352810154606084015260038101546080840152600481015460a08401526005015460c083015290835290920191016105a4565b50505091525050600682015460079092015490919083565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390610676908a90600401611a3d565b61018060405180830381865afa158015610694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b89190611a9c565b9250925092506000600560008589896040516020016106d993929190611b7f565b60408051808303601f190181529181528151602092830120835290820192909252016000206004810154909150620151809061072390640100000000900463ffffffff16426119e3565b10156107595760405162461bcd60e51b81526020600482015260056024820152642174696d6560d81b6044820152606401610256565b60606109166040518061010001604052808b80360381019061077b919061197b565b8152604080516101808101825286546001600160a01b0381166060830190815260ff600160a01b8304811615156080850152600160a81b909204909116151560a0830152600188015460c0830152600288015460e08301526003880154610100830152600488015463ffffffff8082166101208501526401000000009091041661014083015260058801805484516020828102820181019096528181529585019593948a94869493869361016087019360009084015b828210156108b25760008481526020908190206040805160e081018252600686029092018054600281810b855263010000009091046001600160801b03168486015260018083015493850193909352810154606084015260038101546080840152600481015460a08401526005015460c08301529083529092019101610831565b50505050815250508152602001600682015481526020016007820154815250508152602001876001600160a01b031681526020018a6001600160a01b0316815260200189151581526020018581526020018660020b81526020016000815250610d34565b60048401805467ffffffff0000000019166401000000004263ffffffff1602179055909650905061094b60058301600061121c565b60005b8151811015610a4057600082828151811061096b5761096b611bb2565b6020026020010151602001516001600160801b03161115610a2e578260000160050182828151811061099f5761099f611bb2565b60209081029190910181015182546001818101855560009485529383902082516006909202018054938301516001600160801b03166301000000026001600160981b031990941662ffffff90921691909117929092178255604081015192820192909255606082015160028201556080820151600382015560a0820151600482015560c0909101516005909101555b80610a3881611bc8565b91505061094e565b5050505050509392505050565b805160e001516000906202a30090610a6b9063ffffffff16426119e3565b101592915050565b6001546000906001600160a01b0316631698ee82610a9460208801886119fc565b610aa46040890160208a016119fc565b610ab460608a0160408b01611be1565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa158015610b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2f9190611bfc565b90508160066000610b41848888610c86565b81526020019081526020016000206000828254610b5e9190611c19565b90915550610b96905083610b7e57610b7960208701876119fc565b610b8e565b610b8e60408701602088016119fc565b333085611199565b5050505050565b600081602001516001600160a01b031682600001516001600160a01b031610610bc557600080fd5b815160208084015160408086015181516001600160a01b0395861681860152949092168482015262ffffff90911660608085019190915281518085038201815260808501909252815191909201206001600160f81b031960a08401529085901b6bffffffffffffffffffffffff191660a183015260b58201527f738b4553433dba2a0d30477190a6acf518c43ca7350b2c2703484c9a04d0ea9360d582015260f50160408051601f1981840301815291905280516020909101209392505050565b6000838383604051602001610c9d93929190611b7f565b6040516020818303038152906040528051906020012090509392505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806102b45760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610256565b60006060604080840151600154608086015160c087015160a08801515160208901515161010001519551630d527ba960e01b8152600096879673__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__96630d527ba996610da79692956001600160a01b039092169490159390600401611c66565b600060405180830381865af4158015610dc4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dec9190810190611ce1565b6020880151516101000192909252925090506000811561102c57600086604001516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610e4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6e9190611dec565b5050505060808a015160405163103d82bb60e11b81526001600160a01b0385166004820152670e92596fd629000060248201529015604482015292935060009273__$d23a8dd93b7205fa6b646ffed38c165d68$__925063207b05769150606401602060405180830381865af4158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f109190611bfc565b8851805160209091015160025460408c015160808d01519495509293919260009283926001600160a01b03169163c90050de9115610f4d8c611e84565b6040516001600160e01b031960e086901b1681526001600160a01b039384166004820152911515602483015260448201528189166064820152818816608482015290861660a482015260c40160408051808303816000875af1158015610fb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdb9190611ea0565b915091508b60800151610fee5781610ff0565b805b9650610ffc878a611c19565b98506110258c60800151156110115784611013565b835b6001546001600160a01b03168a610cbc565b5050505050505b6000866080015161103f57865151611046565b8651602001515b905083600660006110648a604001518b606001518c60800151610c86565b81526020019081526020016000205410156110ac5760405162461bcd60e51b81526020600482015260086024820152670859195c1bdcda5d60c21b6044820152606401610256565b83600660006110c88a604001518b606001518c60800151610c86565b8152602080820192909252604090810160002080549390930390925560015489518a840151928b015151610100015160808c015160e08d01519551631537e25d60e11b81526001600160a01b0390941695632a6fc4ba95611130959093929190600401611ec4565b600060405180830381600087803b15801561114a57600080fd5b505af115801561115e573d6000803e3d6000fd5b505060015461118392508391506001600160a01b031661117e85886119e3565b610cbc565b5050506020909301515161010001519293915050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610b965760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610256565b508054600082556006029060005260206000209081019061123d9190611240565b50565b5b808211156112825780546001600160981b03191681556000600182018190556002820181905560038201819055600482018190556005820155600601611241565b5090565b60006060828403121561129857600080fd5b50919050565b801515811461123d57600080fd5b80356112b78161129e565b919050565b600080600060a084860312156112d157600080fd5b6112db8585611286565b925060608401356112eb8161129e565b929592945050506080919091013590565b6001600160a01b038116811461123d57600080fd5b80356112b7816112fc565b6000806040838503121561132f57600080fd5b823561133a816112fc565b9150602083013561134a816112fc565b809150509250929050565b60006020828403121561136757600080fd5b5035919050565b805160020b82526001600160801b03602082015116602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b600081518084526020808501945080840160005b838110156113f8576113e587835161136e565b60e09690960195908201906001016113d2565b509495945050505050565b600061012060018060a01b0383511684526020830151611427602086018215159052565b50604083015161143b604086018215159052565b50606083015160608501526080830151608085015260a083015160a085015260c083015161147160c086018263ffffffff169052565b5060e083015161148960e086018263ffffffff169052565b506101008084015182828701526114a2838701826113be565b9695505050505050565b6060815260006114bf6060830186611403565b60208301949094525060400152919050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171561150a5761150a6114d1565b60405290565b6040516060810167ffffffffffffffff8111828210171561150a5761150a6114d1565b604051610120810167ffffffffffffffff8111828210171561150a5761150a6114d1565b60405160c0810167ffffffffffffffff8111828210171561150a5761150a6114d1565b60405160a0810167ffffffffffffffff8111828210171561150a5761150a6114d1565b604051601f8201601f1916810167ffffffffffffffff811182821017156115c6576115c66114d1565b604052919050565b600067ffffffffffffffff8211156115e8576115e86114d1565b5060051b60200190565b8060020b811461123d57600080fd5b6001600160801b038116811461123d57600080fd5b600082601f83011261162757600080fd5b8135602061163c611637836115ce565b61159d565b82815260e0928302850182019282820191908785111561165b57600080fd5b8387015b858110156116dc5781818a0312156116775760008081fd5b61167f6114e7565b813561168a816115f2565b81528186013561169981611601565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c08083013590820152845292840192810161165f565b5090979650505050505050565b600080600080600060e0868803121561170157600080fd5b61170b8787611286565b9450606086013561171b8161129e565b93506080860135925060a0860135915060c086013567ffffffffffffffff81111561174557600080fd5b61175188828901611616565b9150509295509295909350565b60408152600083516040808401526117796080840182611403565b6020958601516060850152929094019290925292915050565b600080600060a084860312156117a757600080fd5b6117b18585611286565b925060608401356117c1816112fc565b915060808401356117d18161129e565b809150509250925092565b803563ffffffff811681146112b757600080fd5b60006020828403121561180257600080fd5b813567ffffffffffffffff8082111561181a57600080fd5b908301906060828603121561182e57600080fd5b611836611510565b82358281111561184557600080fd5b8301610120818803121561185857600080fd5b611860611533565b61186982611311565b8152611877602083016112ac565b6020820152611888604083016112ac565b6040820152606082013560608201526080820135608082015260a082013560a08201526118b760c083016117dc565b60c08201526118c860e083016117dc565b60e082015261010080830135858111156118e157600080fd5b6118ed8a828601611616565b8284015250508083525050602083013560208201526040830135604082015280935050505092915050565b60008060008060c0858703121561192e57600080fd5b6119388686611286565b93506060850135611948816112fc565b925060808501356119588161129e565b9396929550929360a00135925050565b803562ffffff811681146112b757600080fd5b60006060828403121561198d57600080fd5b611995611510565b82356119a0816112fc565b815260208301356119b0816112fc565b60208201526119c160408401611968565b60408201529392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156119f6576119f66119cd565b92915050565b600060208284031215611a0e57600080fd5b8135611a19816112fc565b9392505050565b600060208284031215611a3257600080fd5b8151611a198161129e565b606081018235611a4c816112fc565b6001600160a01b039081168352602084013590611a68826112fc565b16602083015262ffffff611a7e60408501611968565b16604083015292915050565b805161ffff811681146112b757600080fd5b6000806000838503610180811215611ab357600080fd5b8451611abe816112fc565b6020860151909450611acf816115f2565b9250603f190161014080821215611ae557600080fd5b611aed611557565b60a0831215611afb57600080fd5b611b0361157a565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015282815260e0870151602082015261010087015160408201526101208701516060820152611b62828801611a8a565b608082015261016087015160a08201528093505050509250925092565b6bffffffffffffffffffffffff19606094851b811682529290931b9091166014830152151560f81b602882015260290190565b634e487b7160e01b600052603260045260246000fd5b600060018201611bda57611bda6119cd565b5060010190565b600060208284031215611bf357600080fd5b611a1982611968565b600060208284031215611c0e57600080fd5b8151611a19816112fc565b808201808211156119f6576119f66119cd565b600081518084526020808501945080840160005b838110156113f857611c5387835161136e565b60e0969096019590820190600101611c40565b600061014060018060a01b03808a16845280891660208501525086151560408401528560020b606084015284516080840152602085015160a0840152604085015160c0840152606085015160e0840152608085015161010084015280610120840152611cd481840185611c2c565b9998505050505050505050565b60008060006060808587031215611cf757600080fd5b845167ffffffffffffffff811115611d0e57600080fd5b8501601f81018713611d1f57600080fd5b80516020611d2f611637836115ce565b82815260e0928302840182019282820191908b851115611d4e57600080fd5b948301945b84861015611dd05780868d031215611d6b5760008081fd5b611d736114e7565b8651611d7e816115f2565b815286850151611d8d81611601565b818601526040878101519082015287870151888201526080808801519082015260a0808801519082015260c0808801519082015283529485019491830191611d53565b5091890151604090990151919a98995090979650505050505050565b600080600080600080600060e0888a031215611e0757600080fd5b8751611e12816112fc565b6020890151909750611e23816115f2565b9550611e3160408901611a8a565b9450611e3f60608901611a8a565b9350611e4d60808901611a8a565b925060a088015160ff81168114611e6357600080fd5b60c0890151909250611e748161129e565b8091505092959891949750929550565b6000600160ff1b8201611e9957611e996119cd565b5060000390565b60008060408385031215611eb357600080fd5b505080516020909101519092909150565b85516001600160a01b03908116825260208088015182168184015260408089015162ffffff1690840152908616606083015260e06080830181905285518382018190526000928781019161010086019190855b81811015611f3a57611f2a84865161136e565b9382019392850192600101611f17565b50505086151560a08601529250611f4f915050565b8260c0830152969550505050505056fea2646970667358221220e202fac2436406960d0e00d0f5e95bdff41392612d0dc45bb0e1ac226437a1a564736f6c63430008120033";

type BorrowFacilityConstructorParams =
  | [linkLibraryAddresses: BorrowFacilityLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BorrowFacilityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class BorrowFacility__factory extends ContractFactory {
  constructor(...args: BorrowFacilityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BorrowFacility__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BorrowFacilityLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    pm: PromiseOrValue<string>,
    ex: PromiseOrValue<string>,
    uniswapFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BorrowFacility> {
    return super.deploy(
      pm,
      ex,
      uniswapFactory,
      overrides || {}
    ) as Promise<BorrowFacility>;
  }
  override getDeployTransaction(
    pm: PromiseOrValue<string>,
    ex: PromiseOrValue<string>,
    uniswapFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(pm, ex, uniswapFactory, overrides || {});
  }
  override attach(address: string): BorrowFacility {
    return super.attach(address) as BorrowFacility;
  }
  override connect(signer: Signer): BorrowFacility__factory {
    return super.connect(signer) as BorrowFacility__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BorrowFacilityInterface {
    return new utils.Interface(_abi) as BorrowFacilityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BorrowFacility {
    return new Contract(address, _abi, signerOrProvider) as BorrowFacility;
  }
}

export interface BorrowFacilityLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/Util.sol:Utils"]: string;
}
