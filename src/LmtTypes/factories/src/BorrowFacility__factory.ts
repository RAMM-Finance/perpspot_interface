/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BorrowFacility,
  BorrowFacilityInterface,
} from "../../src/BorrowFacility";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pm",
        type: "address",
      },
      {
        internalType: "address",
        name: "ex",
        type: "address",
      },
      {
        internalType: "address",
        name: "uniswapFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "PositionId",
        name: "",
        type: "bytes32",
      },
    ],
    name: "PremiumDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "borrowToken1",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ltv",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "addPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "pool",
                type: "address",
              },
              {
                internalType: "bool",
                name: "underAuction",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isToken0",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "totalDebtOutput",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalDebtInput",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "recentPremium",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "openTime",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "repayTime",
                type: "uint32",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "tick",
                    type: "int24",
                  },
                  {
                    internalType: "uint128",
                    name: "liquidity",
                    type: "uint128",
                  },
                  {
                    internalType: "uint256",
                    name: "premium",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "Urate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeGrowthInside0LastX128",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeGrowthInside1LastX128",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastGrowth",
                    type: "uint256",
                  },
                ],
                internalType: "struct LiquidityLoan[]",
                name: "borrowInfo",
                type: "tuple[]",
              },
            ],
            internalType: "struct Position",
            name: "base",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct BorrowPosition",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "approveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "pool",
                type: "address",
              },
              {
                internalType: "bool",
                name: "underAuction",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isToken0",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "totalDebtOutput",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalDebtInput",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "recentPremium",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "openTime",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "repayTime",
                type: "uint32",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "tick",
                    type: "int24",
                  },
                  {
                    internalType: "uint128",
                    name: "liquidity",
                    type: "uint128",
                  },
                  {
                    internalType: "uint256",
                    name: "premium",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "Urate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeGrowthInside0LastX128",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeGrowthInside1LastX128",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastGrowth",
                    type: "uint256",
                  },
                ],
                internalType: "struct LiquidityLoan[]",
                name: "borrowInfo",
                type: "tuple[]",
              },
            ],
            internalType: "struct Position",
            name: "base",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct MarginPosition",
        name: "position",
        type: "tuple",
      },
    ],
    name: "canForceClose",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "PositionId",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "maxWithdrawablePremium",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isDeposit",
        type: "bool",
      },
    ],
    name: "modifyPremium",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "payPremium",
    outputs: [
      {
        internalType: "uint256",
        name: "premiumOwed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "PositionId",
        name: "",
        type: "bytes32",
      },
    ],
    name: "positions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "bool",
            name: "underAuction",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "recentPremium",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Urate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct Position",
        name: "base",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "totalPosition",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f6038038062001f6083398101604081905262000034916200009e565b600080546001600160a01b039485166001600160a01b03199182161790915560018054938516938216939093179092556002805483163317905560038054919093169116179055620000e8565b80516001600160a01b03811681146200009957600080fd5b919050565b600080600060608486031215620000b457600080fd5b620000bf8462000081565b9250620000cf6020850162000081565b9150620000df6040850162000081565b90509250925092565b611e6880620000f86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80635de88c931161005b5780635de88c931461010e5780637dc8b1a61461018b57806386dacdb01461019e578063d7ae317e146101b257600080fd5b806309f068c51461008d5780633eb4adab146100a2578063514ea4bf146100b55780635d4936ff146100e0575b600080fd5b6100a061009b3660046111cf565b6101d5565b005b6100a06100b0366004611236565b610397565b6100c86100c336600461126f565b6105d6565b6040516100d7939291906113c6565b60405180910390f35b6101006100ee36600461126f565b60056020526000908152604090205481565b6040519081526020016100d7565b61017d61011c366004611603565b50506040805161016081018252600091810182815260608083018490526080830184905260a0830184905260c0830184905260e083018490526101008301849052610120830184905261014083015281526020810182905294909350915050565b6040516100d7929190611678565b6101006101993660046116ac565b61071a565b6101006101ac36600461126f565b50600090565b6101c56101c036600461170a565b610b26565b60405190151581526020016100d7565b600080546001600160a01b0316631698ee826101f46020890189611832565b61020460408a0160208b01611832565b61021460608b0160408c01611869565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa15801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f9190611884565b9050600061029e828787610b4c565b9050821561030157600081815260056020526040812080548692906102c49084906118b7565b909155506102fc9050856102e4576102df6020890189611832565b6102f4565b6102f46040890160208a01611832565b333087610b82565b61038e565b83156103395760405162461bcd60e51b8152602060048201526002602482015261021760f41b60448201526064015b60405180910390fd5b600081815260056020526040812080548692906103579084906118d0565b9091555061038e90508561037a576103756040890160208a01611832565b610387565b6103876020890189611832565b3386610c0c565b50505050505050565b6000546001600160a01b03163314806103ba57506001546001600160a01b031633145b6103ee5760405162461bcd60e51b8152602060048201526005602482015264042c2eae8d60db1b6044820152606401610330565b60005460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529083169063095ea7b3906044016020604051808303816000875af1158015610442573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046691906118e3565b5060005460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529082169063095ea7b3906044016020604051808303816000875af11580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df91906118e3565b5060015460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529083169063095ea7b3906044016020604051808303816000875af1158015610534573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055891906118e3565b5060015460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529082169063095ea7b3906044016020604051808303816000875af11580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d191906118e3565b505050565b600460208181526000928352604080842081516101208101835281546001600160a01b038116825260ff600160a01b82048116151583870152600160a81b909104161515818401526001820154606082015260028201546080820152600382015460a08201529381015463ffffffff80821660c08701526401000000009091041660e08501526005810180548351818602810186019094528084529195869461010087019493919084015b828210156107025760008481526020908190206040805160e081018252600686029092018054600281810b855263010000009091046001600160801b03168486015260018083015493850193909352810154606084015260038101546080840152600481015460a08401526005015460c08301529083529092019101610681565b50505091525050600682015460079092015490919083565b60008054604051639525092360e01b81528291829182916001600160a01b03169063952509239061074f908a90600401611900565b61018060405180830381865afa15801561076d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610791919061195f565b9250925092506000600460008589896040516020016107b293929190611a42565b60408051808303601f19018152918152815160209283012083529082019290925201600020600481015490915062015180906107fc90640100000000900463ffffffff16426118d0565b10156108325760405162461bcd60e51b81526020600482015260056024820152642174696d6560d81b6044820152606401610330565b60606109ef6040518061010001604052808b8036038101906108549190611a75565b8152604080516101808101825286546001600160a01b0381166060830190815260ff600160a01b8304811615156080850152600160a81b909204909116151560a0830152600188015460c0830152600288015460e08301526003880154610100830152600488015463ffffffff8082166101208501526401000000009091041661014083015260058801805484516020828102820181019096528181529585019593948a94869493869361016087019360009084015b8282101561098b5760008481526020908190206040805160e081018252600686029092018054600281810b855263010000009091046001600160801b03168486015260018083015493850193909352810154606084015260038101546080840152600481015460a08401526005015460c0830152908352909201910161090a565b50505050815250508152602001600682015481526020016007820154815250508152602001876001600160a01b031681526020018a6001600160a01b0316815260200189151581526020018581526020018660020b81526020016000815250610c8a565b60048401805467ffffffff0000000019166401000000004263ffffffff16021790559096509050610a2460058301600061110f565b60005b8151811015610b19576000828281518110610a4457610a44611ac7565b6020026020010151602001516001600160801b03161115610b075782600001600501828281518110610a7857610a78611ac7565b60209081029190910181015182546001818101855560009485529383902082516006909202018054938301516001600160801b03166301000000026001600160981b031990941662ffffff90921691909117929092178255604081015192820192909255606082015160028201556080820151600382015560a0820151600482015560c0909101516005909101555b80610b1181611add565b915050610a27565b5050505050509392505050565b805160e001516000906202a30090610b449063ffffffff16426118d0565b101592915050565b6000838383604051602001610b6393929190611a42565b6040516020818303038152906040528051906020012090509392505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610c055760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610330565b5050505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610c845760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610330565b50505050565b6000606060408084015160008054608087015160c088015160a08901515160208a01515161010001519651630d527ba960e01b81529496879673__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__96630d527ba996610cff9692956001600160a01b0390911694921593909291600401611b30565b600060405180830381865af4158015610d1c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d449190810190611bab565b60208801515161010001929092529250905060008115610f8457600086604001516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc69190611cb6565b5050505060808a015160405163103d82bb60e11b81526001600160a01b0385166004820152670e92596fd629000060248201529015604482015292935060009273__$d23a8dd93b7205fa6b646ffed38c165d68$__925063207b05769150606401602060405180830381865af4158015610e44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e689190611884565b8851805160209091015160015460408c015160808d01519495509293919260009283926001600160a01b03169163c90050de9115610ea58c611d4e565b6040516001600160e01b031960e086901b1681526001600160a01b039384166004820152911515602483015260448201528189166064820152818816608482015290861660a482015260c40160408051808303816000875af1158015610f0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f339190611d6a565b915091508b60800151610f465781610f48565b805b9650610f54878a6118b7565b9850610f7d8c6080015115610f695784610f6b565b835b6000546001600160a01b03168a610c0c565b5050505050505b8260056000610fa089604001518a606001518b60800151610b4c565b8152602001908152602001600020541015610fe85760405162461bcd60e51b81526020600482015260086024820152670859195c1bdcda5d60c21b6044820152606401610330565b826005600061100489604001518a606001518b60800151610b4c565b81526020019081526020016000206000828254039250508190555060008054906101000a90046001600160a01b03166001600160a01b0316631653fc7d8760000151886040015189602001516000015161010001518a608001518b60e00151878a61106f91906118d0565b896040518863ffffffff1660e01b81526004016110929796959493929190611d8e565b600060405180830381600087803b1580156110ac57600080fd5b505af11580156110c0573d6000803e3d6000fd5b505050506110fa86608001516110d8578651516110df565b8651602001515b6000546001600160a01b03166110f584876118d0565b610c0c565b50506020909301515161010001519293915050565b50805460008255600602906000526020600020908101906111309190611133565b50565b5b808211156111755780546001600160981b03191681556000600182018190556002820181905560038201819055600482018190556005820155600601611134565b5090565b60006060828403121561118b57600080fd5b50919050565b6001600160a01b038116811461113057600080fd5b80356111b181611191565b919050565b801515811461113057600080fd5b80356111b1816111b6565b600080600080600060e086880312156111e757600080fd5b6111f18787611179565b9450606086013561120181611191565b93506080860135611211816111b6565b925060a0860135915060c0860135611228816111b6565b809150509295509295909350565b6000806040838503121561124957600080fd5b823561125481611191565b9150602083013561126481611191565b809150509250929050565b60006020828403121561128157600080fd5b5035919050565b805160020b82526001600160801b03602082015116602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b600081518084526020808501945080840160005b83811015611312576112ff878351611288565b60e09690960195908201906001016112ec565b509495945050505050565b600061012060018060a01b0383511684526020830151611341602086018215159052565b506040830151611355604086018215159052565b50606083015160608501526080830151608085015260a083015160a085015260c083015161138b60c086018263ffffffff169052565b5060e08301516113a360e086018263ffffffff169052565b506101008084015182828701526113bc838701826112d8565b9695505050505050565b6060815260006113d9606083018661131d565b60208301949094525060400152919050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715611424576114246113eb565b60405290565b6040516060810167ffffffffffffffff81118282101715611424576114246113eb565b604051610120810167ffffffffffffffff81118282101715611424576114246113eb565b60405160c0810167ffffffffffffffff81118282101715611424576114246113eb565b60405160a0810167ffffffffffffffff81118282101715611424576114246113eb565b604051601f8201601f1916810167ffffffffffffffff811182821017156114e0576114e06113eb565b604052919050565b600067ffffffffffffffff821115611502576115026113eb565b5060051b60200190565b8060020b811461113057600080fd5b6001600160801b038116811461113057600080fd5b600082601f83011261154157600080fd5b81356020611556611551836114e8565b6114b7565b82815260e0928302850182019282820191908785111561157557600080fd5b8387015b858110156115f65781818a0312156115915760008081fd5b611599611401565b81356115a48161150c565b8152818601356115b38161151b565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c080830135908201528452928401928101611579565b5090979650505050505050565b600080600080600060e0868803121561161b57600080fd5b6116258787611179565b94506060860135611635816111b6565b93506080860135925060a0860135915060c086013567ffffffffffffffff81111561165f57600080fd5b61166b88828901611530565b9150509295509295909350565b6040815260008351604080840152611693608084018261131d565b6020958601516060850152929094019290925292915050565b600080600060a084860312156116c157600080fd5b6116cb8585611179565b925060608401356116db81611191565b915060808401356116eb816111b6565b809150509250925092565b803563ffffffff811681146111b157600080fd5b60006020828403121561171c57600080fd5b813567ffffffffffffffff8082111561173457600080fd5b908301906060828603121561174857600080fd5b61175061142a565b82358281111561175f57600080fd5b8301610120818803121561177257600080fd5b61177a61144d565b611783826111a6565b8152611791602083016111c4565b60208201526117a2604083016111c4565b6040820152606082013560608201526080820135608082015260a082013560a08201526117d160c083016116f6565b60c08201526117e260e083016116f6565b60e082015261010080830135858111156117fb57600080fd5b6118078a828601611530565b8284015250508083525050602083013560208201526040830135604082015280935050505092915050565b60006020828403121561184457600080fd5b813561184f81611191565b9392505050565b803562ffffff811681146111b157600080fd5b60006020828403121561187b57600080fd5b61184f82611856565b60006020828403121561189657600080fd5b815161184f81611191565b634e487b7160e01b600052601160045260246000fd5b808201808211156118ca576118ca6118a1565b92915050565b818103818111156118ca576118ca6118a1565b6000602082840312156118f557600080fd5b815161184f816111b6565b60608101823561190f81611191565b6001600160a01b03908116835260208401359061192b82611191565b16602083015262ffffff61194160408501611856565b16604083015292915050565b805161ffff811681146111b157600080fd5b600080600083850361018081121561197657600080fd5b845161198181611191565b60208601519094506119928161150c565b9250603f1901610140808212156119a857600080fd5b6119b0611471565b60a08312156119be57600080fd5b6119c6611494565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015282815260e0870151602082015261010087015160408201526101208701516060820152611a2582880161194d565b608082015261016087015160a08201528093505050509250925092565b6bffffffffffffffffffffffff19606094851b811682529290931b9091166014830152151560f81b602882015260290190565b600060608284031215611a8757600080fd5b611a8f61142a565b8235611a9a81611191565b81526020830135611aaa81611191565b6020820152611abb60408401611856565b60408201529392505050565b634e487b7160e01b600052603260045260246000fd5b600060018201611aef57611aef6118a1565b5060010190565b600081518084526020808501945080840160005b8381101561131257611b1d878351611288565b60e0969096019590820190600101611b0a565b600061014060018060a01b03808a16845280891660208501525086151560408401528560020b606084015284516080840152602085015160a0840152604085015160c0840152606085015160e0840152608085015161010084015280610120840152611b9e81840185611af6565b9998505050505050505050565b60008060006060808587031215611bc157600080fd5b845167ffffffffffffffff811115611bd857600080fd5b8501601f81018713611be957600080fd5b80516020611bf9611551836114e8565b82815260e0928302840182019282820191908b851115611c1857600080fd5b948301945b84861015611c9a5780868d031215611c355760008081fd5b611c3d611401565b8651611c488161150c565b815286850151611c578161151b565b818601526040878101519082015287870151888201526080808801519082015260a0808801519082015260c0808801519082015283529485019491830191611c1d565b5091890151604090990151919a98995090979650505050505050565b600080600080600080600060e0888a031215611cd157600080fd5b8751611cdc81611191565b6020890151909750611ced8161150c565b9550611cfb6040890161194d565b9450611d096060890161194d565b9350611d176080890161194d565b925060a088015160ff81168114611d2d57600080fd5b60c0890151909250611d3e816111b6565b8091505092959891949750929550565b6000600160ff1b8201611d6357611d636118a1565b5060000390565b60008060408385031215611d7d57600080fd5b505080516020909101519092909150565b87516001600160a01b0390811682526020808a01518216818401526040808b015162ffffff1690840152908816606083015261012060808301819052875190830181905260009161014084019189820191845b82811015611e0757611df4858551611288565b60e0949094019392810192600101611de1565b5050505095151560a08301525060c081019390935260e083019190915261010090910152939250505056fea2646970667358221220bbf7fa6e0172b0d6168c38b619242292572b0f1aee6001b606b63b0a34fa771c64736f6c63430008120033";

type BorrowFacilityConstructorParams =
  | [linkLibraryAddresses: BorrowFacilityLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BorrowFacilityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class BorrowFacility__factory extends ContractFactory {
  constructor(...args: BorrowFacilityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BorrowFacility__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BorrowFacilityLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    pm: PromiseOrValue<string>,
    ex: PromiseOrValue<string>,
    uniswapFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BorrowFacility> {
    return super.deploy(
      pm,
      ex,
      uniswapFactory,
      overrides || {}
    ) as Promise<BorrowFacility>;
  }
  override getDeployTransaction(
    pm: PromiseOrValue<string>,
    ex: PromiseOrValue<string>,
    uniswapFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(pm, ex, uniswapFactory, overrides || {});
  }
  override attach(address: string): BorrowFacility {
    return super.attach(address) as BorrowFacility;
  }
  override connect(signer: Signer): BorrowFacility__factory {
    return super.connect(signer) as BorrowFacility__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BorrowFacilityInterface {
    return new utils.Interface(_abi) as BorrowFacilityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BorrowFacility {
    return new Contract(address, _abi, signerOrProvider) as BorrowFacility;
  }
}

export interface BorrowFacilityLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/Util.sol:Utils"]: string;
}
