/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BorrowFacility,
  BorrowFacilityInterface,
} from "../../src/BorrowFacility";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pm",
        type: "address",
      },
      {
        internalType: "address",
        name: "ex",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PremiumDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "borrowToken1",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ltv",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "addPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "pool",
                type: "address",
              },
              {
                internalType: "bool",
                name: "underAuction",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isToken0",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "totalDebtOutput",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalDebtInput",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "recentPremium",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "openTime",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "repayTime",
                type: "uint32",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "tick",
                    type: "int24",
                  },
                  {
                    internalType: "uint128",
                    name: "liquidity",
                    type: "uint128",
                  },
                  {
                    internalType: "uint256",
                    name: "premium",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "Urate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeGrowthInside0LastX128",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeGrowthInside1LastX128",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastGrowth",
                    type: "uint256",
                  },
                ],
                internalType: "struct LiquidityLoan[]",
                name: "borrowInfo",
                type: "tuple[]",
              },
            ],
            internalType: "struct Position",
            name: "base",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct BorrowPosition",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "approveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "pool",
                type: "address",
              },
              {
                internalType: "bool",
                name: "underAuction",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isToken0",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "totalDebtOutput",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalDebtInput",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "recentPremium",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "openTime",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "repayTime",
                type: "uint32",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "tick",
                    type: "int24",
                  },
                  {
                    internalType: "uint128",
                    name: "liquidity",
                    type: "uint128",
                  },
                  {
                    internalType: "uint256",
                    name: "premium",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "Urate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeGrowthInside0LastX128",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeGrowthInside1LastX128",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastGrowth",
                    type: "uint256",
                  },
                ],
                internalType: "struct LiquidityLoan[]",
                name: "borrowInfo",
                type: "tuple[]",
              },
            ],
            internalType: "struct Position",
            name: "base",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct MarginPosition",
        name: "position",
        type: "tuple",
      },
    ],
    name: "canForceClose",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositPremium",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositPremium",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "maxWithdrawablePremium",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "payPremium",
    outputs: [
      {
        internalType: "uint256",
        name: "premiumOwed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "positions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "bool",
            name: "underAuction",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "recentPremium",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Urate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct Position",
        name: "base",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "totalPosition",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "reciever",
        type: "address",
      },
    ],
    name: "withdrawPremium",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016000553480156200001657600080fd5b5060405162001ce438038062001ce4833981016040819052620000399162000097565b600180546001600160a01b039384166001600160a01b03199182161790915560028054939092169281169290921790556003805490911633179055620000cf565b80516001600160a01b03811681146200009257600080fd5b919050565b60008060408385031215620000ab57600080fd5b620000b6836200007a565b9150620000c6602084016200007a565b90509250929050565b611c0580620000df6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063622aa0b711610071578063622aa0b7146101915780637dc8b1a6146101a4578063868ea000146101c55780639ff5b2dc146101d8578063d7ae317e14610203578063f7533d061461022657600080fd5b80632c54de4f146100ae5780633eb4adab146100c3578063514ea4bf146100d65780635de88c93146101015780635fc91fa11461017e575b600080fd5b6100c16100bc366004610fde565b61023c565b005b6100c16100d136600461102f565b6102c9565b6100e96100e4366004611068565b610508565b6040516100f8939291906111bf565b60405180910390f35b61017061010f36600461142d565b50506040805161016081018252600091810182815260608083018490526080830184905260a0830184905260c0830184905260e083018490526101008301849052610120830184905261014083015281526020810182905294909350915050565b6040516100f89291906114a2565b6100c161018c3660046114d6565b61064c565b6100c161019f366004611502565b610695565b6101b76101b2366004611555565b61078c565b6040519081526020016100f8565b6100c16101d336600461159f565b610bbf565b6101b76101e636600461102f565b600560209081526000928352604080842090915290825290205481565b6102166102113660046115f4565b610c08565b60405190151581526020016100f8565b6101b761023436600461102f565b600092915050565b6001546001600160a01b031633148061025f57506002546001600160a01b031633145b6102985760405162461bcd60e51b8152602060048201526005602482015264042c2eae8d60db1b60448201526064015b60405180910390fd5b6001600160a01b038316156102b8576102b384848484610c2e565b6102c3565b6102c3848383610cb1565b50505050565b6001546001600160a01b03163314806102ec57506002546001600160a01b031633145b6103205760405162461bcd60e51b8152602060048201526005602482015264042c2eae8d60db1b604482015260640161028f565b60015460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529083169063095ea7b3906044016020604051808303816000875af1158015610374573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610398919061171c565b5060015460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529082169063095ea7b3906044016020604051808303816000875af11580156103ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610411919061171c565b5060025460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529083169063095ea7b3906044016020604051808303816000875af1158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a919061171c565b5060025460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529082169063095ea7b3906044016020604051808303816000875af11580156104df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610503919061171c565b505050565b600460208181526000928352604080842081516101208101835281546001600160a01b038116825260ff600160a01b82048116151583870152600160a81b909104161515818401526001820154606082015260028201546080820152600382015460a08201529381015463ffffffff80821660c08701526401000000009091041660e08501526005810180548351818602810186019094528084529195869461010087019493919084015b828210156106345760008481526020908190206040805160e081018252600686029092018054600281810b855263010000009091046001600160801b03168486015260018083015493850193909352810154606084015260038101546080840152600481015460a08401526005015460c083015290835290920191016105b3565b50505091525050600682015460079092015490919083565b6001600160a01b03821660009081526005602090815260408083203384529091528120805483929061067f908490611756565b90915550610691905082333084610c2e565b5050565b81156106c85760405162461bcd60e51b8152602060048201526002602482015261021760f41b604482015260640161028f565b6001600160a01b0384166000908152600560209081526040808320338452909152812080548492906106fb90849061176f565b90915550506040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190611782565b9050610785858383861161077f5785610cb1565b83610cb1565b5050505050565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906107c5908a906004016117ae565b61018060405180830381865afa1580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610807919061180d565b6040516bffffffffffffffffffffffff19606085811b821660208401528b901b16603482015288151560f81b60488201529295509093509150600090600490829060490160408051808303601f190181529181528151602092830120835290820192909252016000206004810154909150620151809061089590640100000000900463ffffffff164261176f565b10156108cb5760405162461bcd60e51b81526020600482015260056024820152642174696d6560d81b604482015260640161028f565b6060610a886040518061010001604052808b8036038101906108ed91906118f0565b8152604080516101808101825286546001600160a01b0381166060830190815260ff600160a01b8304811615156080850152600160a81b909204909116151560a0830152600188015460c0830152600288015460e08301526003880154610100830152600488015463ffffffff8082166101208501526401000000009091041661014083015260058801805484516020828102820181019096528181529585019593948a94869493869361016087019360009084015b82821015610a245760008481526020908190206040805160e081018252600686029092018054600281810b855263010000009091046001600160801b03168486015260018083015493850193909352810154606084015260038101546080840152600481015460a08401526005015460c083015290835290920191016109a3565b50505050815250508152602001600682015481526020016007820154815250508152602001876001600160a01b031681526020018a6001600160a01b0316815260200189151581526020018581526020018660020b81526020016000815250610d29565b60048401805467ffffffff0000000019166401000000004263ffffffff16021790559096509050610abd600583016000610f4f565b60005b8151811015610bb2576000828281518110610add57610add611942565b6020026020010151602001516001600160801b03161115610ba05782600001600501828281518110610b1157610b11611942565b60209081029190910181015182546001818101855560009485529383902082516006909202018054938301516001600160801b03166301000000026001600160981b031990941662ffffff90921691909117929092178255604081015192820192909255606082015160028201556080820151600382015560a0820151600482015560c0909101516005909101555b80610baa81611958565b915050610ac0565b5050505050509392505050565b6001600160a01b03808416600090815260056020908152604080832093861683529290529081208054839290610bf6908490611756565b90915550610503905083333084610c2e565b805160e001516000906202a30090610c269063ffffffff164261176f565b101592915050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806107855760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161028f565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806102c35760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161028f565b604081810151600154608084015160c085015160208601515160e081015160a0880151516101009092015196516311a77ce960e21b8152600097606097899773__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9763469df3a497610da49793966001600160a01b03909316959115949093916004016119ab565b600060405180830381865af4158015610dc1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610de99190810190611a34565b60208601515161010001919091526080850151909150600090610e0e57845151610e15565b8451602001515b6001600160a01b03808216600090815260056020908152604080832060608b015190941683529290522054909150821115610e7d5760405162461bcd60e51b81526020600482015260086024820152670859195c1bdcda5d60c21b604482015260640161028f565b6001600160a01b03808216600090815260056020908152604080832060608a01518516845282529182902080548690039055600154885189840151928a015151610100015160808b015160e08c01519551631537e25d60e11b81529390961695632a6fc4ba95610ef1959394600401611b34565b600060405180830381600087803b158015610f0b57600080fd5b505af1158015610f1f573d6000803e3d6000fd5b5050600154610f3b92508391506001600160a01b031684610cb1565b506020909301515161010001519293915050565b5080546000825560060290600052602060002090810190610f709190610f73565b50565b5b80821115610fb55780546001600160981b03191681556000600182018190556002820181905560038201819055600482018190556005820155600601610f74565b5090565b6001600160a01b0381168114610f7057600080fd5b8035610fd981610fb9565b919050565b60008060008060808587031215610ff457600080fd5b8435610fff81610fb9565b9350602085013561100f81610fb9565b9250604085013561101f81610fb9565b9396929550929360600135925050565b6000806040838503121561104257600080fd5b823561104d81610fb9565b9150602083013561105d81610fb9565b809150509250929050565b60006020828403121561107a57600080fd5b5035919050565b805160020b82526001600160801b03602082015116602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b600081518084526020808501945080840160005b8381101561110b576110f8878351611081565b60e09690960195908201906001016110e5565b509495945050505050565b600061012060018060a01b038351168452602083015161113a602086018215159052565b50604083015161114e604086018215159052565b50606083015160608501526080830151608085015260a083015160a085015260c083015161118460c086018263ffffffff169052565b5060e083015161119c60e086018263ffffffff169052565b506101008084015182828701526111b5838701826110d1565b9695505050505050565b6060815260006111d26060830186611116565b60208301949094525060400152919050565b6000606082840312156111f657600080fd5b50919050565b8015158114610f7057600080fd5b8035610fd9816111fc565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171561124e5761124e611215565b60405290565b6040516060810167ffffffffffffffff8111828210171561124e5761124e611215565b604051610120810167ffffffffffffffff8111828210171561124e5761124e611215565b60405160c0810167ffffffffffffffff8111828210171561124e5761124e611215565b60405160a0810167ffffffffffffffff8111828210171561124e5761124e611215565b604051601f8201601f1916810167ffffffffffffffff8111828210171561130a5761130a611215565b604052919050565b600067ffffffffffffffff82111561132c5761132c611215565b5060051b60200190565b8060020b8114610f7057600080fd5b6001600160801b0381168114610f7057600080fd5b600082601f83011261136b57600080fd5b8135602061138061137b83611312565b6112e1565b82815260e0928302850182019282820191908785111561139f57600080fd5b8387015b858110156114205781818a0312156113bb5760008081fd5b6113c361122b565b81356113ce81611336565b8152818601356113dd81611345565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c0808301359082015284529284019281016113a3565b5090979650505050505050565b600080600080600060e0868803121561144557600080fd5b61144f87876111e4565b9450606086013561145f816111fc565b93506080860135925060a0860135915060c086013567ffffffffffffffff81111561148957600080fd5b6114958882890161135a565b9150509295509295909350565b60408152600083516040808401526114bd6080840182611116565b6020958601516060850152929094019290925292915050565b600080604083850312156114e957600080fd5b82356114f481610fb9565b946020939093013593505050565b6000806000806080858703121561151857600080fd5b843561152381610fb9565b9350602085013561153381610fb9565b925060408501359150606085013561154a81610fb9565b939692955090935050565b600080600060a0848603121561156a57600080fd5b61157485856111e4565b9250606084013561158481610fb9565b91506080840135611594816111fc565b809150509250925092565b6000806000606084860312156115b457600080fd5b83356115bf81610fb9565b925060208401356115cf81610fb9565b929592945050506040919091013590565b803563ffffffff81168114610fd957600080fd5b60006020828403121561160657600080fd5b813567ffffffffffffffff8082111561161e57600080fd5b908301906060828603121561163257600080fd5b61163a611254565b82358281111561164957600080fd5b8301610120818803121561165c57600080fd5b611664611277565b61166d82610fce565b815261167b6020830161120a565b602082015261168c6040830161120a565b6040820152606082013560608201526080820135608082015260a082013560a08201526116bb60c083016115e0565b60c08201526116cc60e083016115e0565b60e082015261010080830135858111156116e557600080fd5b6116f18a82860161135a565b8284015250508083525050602083013560208201526040830135604082015280935050505092915050565b60006020828403121561172e57600080fd5b8151611739816111fc565b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561176957611769611740565b92915050565b8181038181111561176957611769611740565b60006020828403121561179457600080fd5b5051919050565b803562ffffff81168114610fd957600080fd5b6060810182356117bd81610fb9565b6001600160a01b0390811683526020840135906117d982610fb9565b16602083015262ffffff6117ef6040850161179b565b16604083015292915050565b805161ffff81168114610fd957600080fd5b600080600083850361018081121561182457600080fd5b845161182f81610fb9565b602086015190945061184081611336565b9250603f19016101408082121561185657600080fd5b61185e61129b565b60a083121561186c57600080fd5b6118746112be565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015282815260e08701516020820152610100870151604082015261012087015160608201526118d38288016117fb565b608082015261016087015160a08201528093505050509250925092565b60006060828403121561190257600080fd5b61190a611254565b823561191581610fb9565b8152602083013561192581610fb9565b60208201526119366040840161179b565b60408201529392505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161196a5761196a611740565b5060010190565b600081518084526020808501945080840160005b8381101561110b57611998878351611081565b60e0969096019590820190600101611985565b600061016060018060a01b03808b168452808a1660208501525087151560408401528660020b606084015263ffffffff86166080840152845160a0840152602085015160c0840152604085015160e08401526060850151610100840152608085015161012084015280610140840152611a2681840185611971565b9a9950505050505050505050565b6000806040808486031215611a4857600080fd5b835167ffffffffffffffff811115611a5f57600080fd5b8401601f81018613611a7057600080fd5b80516020611a8061137b83611312565b82815260e0928302840182019282820191908a851115611a9f57600080fd5b948301945b84861015611b215780868c031215611abc5760008081fd5b611ac461122b565b8651611acf81611336565b815286850151611ade81611345565b818601528688015188820152606080880151908201526080808801519082015260a0808801519082015260c0808801519082015283529485019491830191611aa4565b5097909101519698969750505050505050565b85516001600160a01b03908116825260208088015182168184015260408089015162ffffff1690840152908616606083015260e06080830181905285518382018190526000928781019161010086019190855b81811015611baa57611b9a848651611081565b9382019392850192600101611b87565b50505086151560a08601529250611bbf915050565b8260c0830152969550505050505056fea2646970667358221220521996b289854650b025bb7169fb43f0d7dc6409d33d7d4c3a351882109f6acc64736f6c63430008120033";

type BorrowFacilityConstructorParams =
  | [linkLibraryAddresses: BorrowFacilityLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BorrowFacilityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class BorrowFacility__factory extends ContractFactory {
  constructor(...args: BorrowFacilityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BorrowFacility__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BorrowFacilityLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    pm: PromiseOrValue<string>,
    ex: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BorrowFacility> {
    return super.deploy(pm, ex, overrides || {}) as Promise<BorrowFacility>;
  }
  override getDeployTransaction(
    pm: PromiseOrValue<string>,
    ex: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(pm, ex, overrides || {});
  }
  override attach(address: string): BorrowFacility {
    return super.attach(address) as BorrowFacility;
  }
  override connect(signer: Signer): BorrowFacility__factory {
    return super.connect(signer) as BorrowFacility__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BorrowFacilityInterface {
    return new utils.Interface(_abi) as BorrowFacilityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BorrowFacility {
    return new Contract(address, _abi, signerOrProvider) as BorrowFacility;
  }
}

export interface BorrowFacilityLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
}
