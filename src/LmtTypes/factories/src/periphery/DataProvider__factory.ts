/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrowFacility",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startingLeverage",
        type: "uint256",
      },
    ],
    name: "findMaxLeverageWithEstimatedSlippage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX160",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getAddOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getBinsDataInBulk",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Borrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Borrowed",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.BinData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken",
        type: "bool",
      },
    ],
    name: "getMarginPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getMinMaxTicks",
    outputs: [
      {
        internalType: "int24",
        name: "min",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "max",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getPostInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getPreInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getRangeCondition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "int24",
        name: "curTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getRangeConditions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getReduceOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getUtilAndAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "int24",
        name: "curTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "maxTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "minTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "rangeConditions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200565138038062005651833981016040819052620000349162000087565b50600080546001600160a01b039283166001600160a01b03199182161790915560018054939092169216919091179055620000d1565b80516001600160a01b03811681146200008257600080fd5b919050565b6000806000606084860312156200009d57600080fd5b620000a8846200006a565b9250620000b8602085016200006a565b9150620000c8604085016200006a565b90509250925092565b61557080620000e16000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806384b88557116100b8578063a55ac3eb1161007c578063a55ac3eb146102ea578063a9b6b32b1461030a578063ac636efb1461032a578063c229a3321461033d578063dd65c3281461037b578063dec8ae011461039b57600080fd5b806384b88557146102615780638e68ad361461028e578063911f1b47146102a1578063912a8e00146102c4578063a36b9168146102d757600080fd5b8063288babd2116100ff578063288babd2146101cf57806329aa3819146101e25780632d6cf1f41461020d5780633aea807f1461022d57806348c6f8661461024057600080fd5b80625295f21461013b578063060429f514610161578063091fcd8714610181578063193a2436146101945780631f2ecd83146101a7575b600080fd5b61014e610149366004614088565b6103ae565b6040519081526020015b60405180910390f35b61017461016f3660046140d2565b610642565b604051610158919061411b565b61014e61018f366004614205565b610a19565b6101746101a23660046140d2565b610cf3565b6101ba6101b536600461426c565b6110c0565b60408051928352602083019190915201610158565b61014e6101dd3660046143b4565b611344565b6101f56101f0366004614428565b61136e565b6040516001600160801b039091168152602001610158565b61022061021b366004614205565b61145c565b60405161015891906145c1565b61014e61023b366004614088565b611974565b61025361024e3660046145d4565b611b97565b60405161015892919061463b565b61027461026f366004614654565b611c89565b60408051600293840b81529190920b602082015201610158565b6101f561029c36600461426c565b611d70565b6102b46102af366004614688565b61203b565b6040519015158152602001610158565b6101f56102d2366004614428565b612433565b61014e6102e53660046146d6565b61246c565b6102fd6102f8366004614747565b6124e3565b6040516101589190614766565b61031d6103183660046147c7565b6128eb565b6040516101589190614818565b61014e61033836600461489a565b612a72565b61035061034b3660046140d2565b612c8d565b604080516001600160a01b03948516815293909216602084015262ffffff1690820152606001610158565b61038e6103893660046140d2565b612dc5565b60405161015891906148eb565b61014e6103a936600461494d565b61318f565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906103e7908a9060040161496a565b6101c060405180830381865afa158015610405573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042991906149f8565b600154604051632411122160e11b815293965091945092506000916001600160a01b0390911690634822244290610464908b9060040161496a565b602060405180830381865afa158015610481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a59190614aad565b6000805460405163d93a904760e01b815292935090916001600160a01b039091169063d93a9047906104df9088908c908c90600401614ac6565b602060405180830381865afa1580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105209190614afe565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b9061055a9089908d908d90600401614ac6565b600060405180830381865afa158015610577573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261059f9190810190614bdc565b60018054865160405163aa7532af60e01b815293945073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9363aa7532af936105f1938c936001600160a01b03909116928c9289918c90600401614c4a565b602060405180830381865af415801561060e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106329190614aad565b96505050505050505b9392505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610699573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106c19190810190614ca6565b90506000815160026106d39190614d55565b6001600160401b038111156106ea576106ea613f41565b60405190808252806020026020018201604052801561072357816020015b610710613e38565b8152602001906001900390816107085790505b5090506000805b8351811015610963576000604051806060016040528086848151811061075257610752614d6c565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190614d82565b6001600160a01b031681526020018684815181106107db576107db614d6c565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610820573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108449190614d82565b6001600160a01b0316815260200186848151811061086457610864614d6c565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190614d9f565b62ffffff168152509050610901878684815181106108ed576108ed614d6c565b60200260200101518360006001888a61331c565b15610914578261091081614dbc565b9350505b61093d8786848151811061092a5761092a614d6c565b602002602001015183600080888a61331c565b15610950578261094c81614dbc565b9350505b508061095b81614dbc565b91505061072a565b506000816001600160401b0381111561097e5761097e613f41565b6040519080825280602002602001820160405280156109b757816020015b6109a4613e38565b81526020019060019003908161099c5790505b50905060005b82811015610a0f578381815181106109d7576109d7614d6c565b60200260200101518282815181106109f1576109f1614d6c565b60200260200101819052508080610a0790614dbc565b9150506109bd565b5095945050505050565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f890610a4e90889088908890600401614ac6565b600060405180830381865afa158015610a6b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a939190810190614de0565b90506000856001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610ad5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af99190614efb565b505050505091505060006040518060600160405280886001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b709190614d82565b6001600160a01b03168152602001886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be09190614d82565b6001600160a01b03168152602001886001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c509190614d9f565b62ffffff169052600154604051639525092360e01b81529192506000916001600160a01b0390911690639525092390610c8d90859060040161496a565b6101c060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf91906149f8565b50915050610ce7846000015160c00151878584611344565b98975050505050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d4a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d729190810190614ca6565b9050600081516002610d849190614d55565b6001600160401b03811115610d9b57610d9b613f41565b604051908082528060200260200182016040528015610dd457816020015b610dc1613e38565b815260200190600190039081610db95790505b5090506000805b83518110156110145760006040518060600160405280868481518110610e0357610e03614d6c565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6c9190614d82565b6001600160a01b03168152602001868481518110610e8c57610e8c614d6c565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ed1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef59190614d82565b6001600160a01b03168152602001868481518110610f1557610f15614d6c565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7e9190614d9f565b62ffffff168152509050610fb187868481518110610f9e57610f9e614d6c565b602002602001015183600180888a61331c565b15610fc45782610fc081614dbc565b9350505b610fee87868481518110610fda57610fda614d6c565b60200260200101518360016000888a61331c565b156110015782610ffd81614dbc565b9350505b508061100c81614dbc565b915050610ddb565b506000816001600160401b0381111561102f5761102f613f41565b60405190808252806020026020018201604052801561106857816020015b611055613e38565b81526020019060019003908161104d5790505b50905060005b82811015610a0f5783818151811061108857611088614d6c565b60200260200101518282815181106110a2576110a2614d6c565b602002602001018190525080806110b890614dbc565b91505061106e565b600154604051639525092360e01b815260009182918291829182916001600160a01b0316906395250923906110f9908b90600401614fd5565b6101c060405180830381865afa158015611117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113b91906149f8565b925092509250600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a99190614efb565b509395508f9450505050505b8a60020b8160020b12156112ea576111db6111d5368f90038f018f614fe3565b82612433565b94506111f56111ef368f90038f018f614fe3565b8261136e565b93506001600160801b038516156112d9576112266001600160801b0385811690670de0b6b3a76400009088166133e7565b8651604051630ca73f1f60e21b81529194506112c0918591670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9163329cfc7c91611278918e9187908b908b90600401614fff565b602060405180830381865af4158015611295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b99190614aad565b91906133e7565b6112ca908b61503a565b99506112d6838a61503a565b98505b6112e3878261504d565b90506111b5565b50505050508187876112fc9190615072565b61130691906150ad565b6113139060020b866150e7565b9450816113208888615072565b61132a91906150ad565b6113379060020b856150e7565b9350505050935093915050565b600080600061135287611c89565b91509150611363868683858861246c565b979650505050505050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda2779082906348222442906113a790889060040161496a565b602060405180830381865afa1580156113c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e89190614aad565b846040518363ffffffff1660e01b815260040161141292919091825260020b602082015260400190565b602060405180830381865afa15801561142f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145391906150fb565b90505b92915050565b611464613ea3565b60006040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d39190614d82565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561151f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115439190614d82565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561158f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b39190614d9f565b62ffffff1690526000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f8906115f490899089908990600401614ac6565b600060405180830381865afa158015611611573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116399190810190614de0565b60008054919250906001600160a01b0316635d4936ff61165a8989896134c5565b6040518263ffffffff1660e01b815260040161167891815260200190565b602060405180830381865afa158015611695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b99190614aad565b905060006116c8848888611974565b9050604051806101c00160405280858152602001871515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff1681526020018381526020018460200151815260200184604001518152602001828152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117aa9190614d82565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180b9190615118565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611851573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118759190614d82565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d69190615118565b60ff168152600054604051632be197cf60e01b81526020909201916001600160a01b0390911690632be197cf906119159089908d908d90600401615133565b602060405180830381865afa158015611932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119569190614aad565b8152602001846000015160c001518152509450505050509392505050565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906119ad908a9060040161496a565b6101c060405180830381865afa1580156119cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ef91906149f8565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a904790611a2e9087908b908b90600401614ac6565b602060405180830381865afa158015611a4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6f9190614afe565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b90611aa99088908c908c90600401614ac6565b600060405180830381865afa158015611ac6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611aee9190810190614bdc565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac92611b43928b926001600160a01b0316918e15918c918b918b90600401615160565b600060405180830381865af4158015611b60573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b8891908101906151c5565b9b9a5050505050505050505050565b6001546040516324637c3360e11b81526000916060916001600160a01b03909116906348c6f86690611bd7908b908b908b908b908b908b9060040161520b565b600060405180830381865afa925050508015611c1557506040513d6000823e601f3d908101601f19168201604052611c12919081019061524b565b60015b611c7857611c21615287565b806308c379a003611c6c5750611c356152a2565b80611c405750611c6e565b611c5e8189611c4f818b61503a565b611c5991906150e7565b61351b565b506000915060609050611c7e565b505b3d6000803e3d6000fd5b90925090505b965096945050505050565b60008082600081518110611c9f57611c9f614d6c565b602090810291909101015151915081905060015b8351811015611d6a578260020b848281518110611cd257611cd2614d6c565b60200260200101516000015160020b1215611d0c57838181518110611cf957611cf9614d6c565b6020026020010151600001519250611d58565b8160020b848281518110611d2257611d22614d6c565b60200260200101516000015160020b1315611d5857838181518110611d4957611d49614d6c565b60200260200101516000015191505b80611d6281614dbc565b915050611cb3565b50915091565b600154604051632411122160e11b815260009182916001600160a01b0390911690634822244290611da5908890600401614fd5565b602060405180830381865afa158015611dc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de69190614aad565b6001546040516315083fbb60e31b8152600481018390529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015611e35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e599190614aad565b600154604051630ca32ed160e31b8152600481018590529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ecc919061532b565b6001600160801b03945090506000808080895b8960020b8160020b121561202c5760015460405163da69b0b360e01b8152600481018a9052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa158015611f40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6491906150fb565b6001546040516319fda27760e01b8152600481018b9052600284900b60248201529196508895506001600160a01b0316906319fda27790604401602060405180830381865afa158015611fbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fdf91906150fb565b925082611fec8587615348565b611ff69190615348565b9150886001600160801b0316826001600160801b0316106120175788612019565b815b9850612025868261504d565b9050611edf565b50505050505050509392505050565b60008082511161207f5760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b60448201526064015b60405180910390fd5b600154604051632411122160e11b8152600091829182916001600160a01b0316906348222442906120b4908990600401614fd5565b602060405180830381865afa1580156120d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f59190614aad565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015612144573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612168919061532b565b6001546040516315083fbb60e31b8152600481018590529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa1580156121b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121db9190614aad565b905060005b875181101561242457828882815181106121fc576121fc614d6c565b602002602001015160000151612212919061536f565b60020b156122505760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b6044820152606401612076565b60015488516001600160a01b039091169063da69b0b39086908b908590811061227b5761227b614d6c565b6020026020010151600001516040518363ffffffff1660e01b81526004016122b092919091825260020b602082015260400190565b602060405180830381865afa1580156122cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f191906150fb565b9550856001600160801b03166000036123135760009650505050505050611456565b60015488516001600160a01b03909116906319fda2779086908b908590811061233e5761233e614d6c565b6020026020010151600001516040518363ffffffff1660e01b815260040161237392919091825260020b602082015260400190565b602060405180830381865afa158015612390573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123b491906150fb565b94508781815181106123c8576123c8614d6c565b602002602001015160200151856123df9190615391565b6001600160801b031682876001600160801b03166123fd91906153b1565b10156124125760009650505050505050611456565b8061241c81614dbc565b9150506121e0565b50600198975050505050505050565b600154604051632411122160e11b81526000916001600160a01b03169063da69b0b39082906348222442906113a790889060040161496a565b600085612481578260020b8560020b12612495565b61248b828561504d565b60020b8560020b12155b156124a2575060016124da565b856124bf576124b1828561504d565b60020b8560020b12156124c9565b8260020b8560020b125b156124d6575060026124da565b5060035b95945050505050565b600154604051632411122160e11b815260609184916000916001600160a01b03169063482224429061251990899060040161496a565b602060405180830381865afa158015612536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255a9190614aad565b600154604051639525092360e01b815291925060009182916001600160a01b031690639525092390612590908b9060040161496a565b6101c060405180830381865afa1580156125ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125d291906149f8565b509092509050806125e381896150ad565b6125ed91906153c4565b9650806125fa81886150ad565b61260491906153c4565b95506000816126138989615072565b61261d91906150ad565b60020b6001600160401b0381111561263757612637613f41565b60405190808252806020026020018201604052801561269a57816020015b6126876040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816126555790505b509050600080846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156126de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127029190614efb565b50505050505090505b8860020b8760020b12156128dc576127b58161272689613564565b612738612733888c61504d565b613564565b60015460405163da69b0b360e01b8152600481018c905260028d900b60248201526001600160a01b039091169063da69b0b3906044015b602060405180830381865afa15801561278c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b091906150fb565b613887565b8484815181106127c7576127c7614d6c565b60200260200101516020018585815181106127e4576127e4614d6c565b6020908102919091010151604001919091525261284c8161280489613564565b612811612733888c61504d565b6001546040516319fda27760e01b8152600481018c905260028d900b60248201526001600160a01b03909116906319fda2779060440161276f565b84848151811061285e5761285e614d6c565b602002602001015160600185858151811061287b5761287b614d6c565b6020908102919091010151608001919091525261289f61289a88613564565b613923565b8383815181106128b1576128b1614d6c565b602090810291909101015152816128c781614dbc565b92506128d59050848861504d565b965061270b565b50909998505050505050505050565b60408051610180810182526000610120820181815261014083018290526101608301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915260005460405163bfd4c2a560e01b81526001600160a01b03878116600483015286811660248301528515156044830152841515606483015290911690639c3f1e9090829063bfd4c2a590608401602060405180830381865afa1580156129b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129d99190614aad565b6040518263ffffffff1660e01b81526004016129f791815260200190565b61016060405180830381865afa158015612a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a3991906153e4565b6101008a01525060c088015260a0870152608086015263ffffffff90811660608601521660408401521515602083015250949350505050565b6000612a7f6014836154b1565b15612ab25760405162461bcd60e51b81526020600482015260036024820152621b5bd960ea1b6044820152606401612076565b600154604051639525092360e01b815260009182918291829182916001600160a01b031690639525092390612aeb908e90600401614fd5565b6101c060405180830381865afa158015612b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b2d91906149f8565b50509050806001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b939190614efb565b50949750929550612baa9350869250613923915050565b935050505b6000612bbc6014876150e7565b612bc69085614d55565b612bd090876153b1565b905080600003612be55793506124da92505050565b600088612c0857612c0384670de0b6b3a76400006112b9858e614d55565b612c1f565b612c1f670de0b6b3a7640000856112b9858e614d55565b9050612c348189670de0b6b3a76400006133e7565b9050600080612c5c8d8d612c496001886153b1565b8f612c549190614d55565b8e878a611b97565b9150915081600014612c7757839750505050505050506124da565b612c8260018861503a565b965050505050612baf565b6000806000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf49190614d82565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d569190614d82565b856001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db89190614d9f565b9196909550909350915050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015612e1c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612e449190810190614ca6565b9050600081516002612e569190614d55565b6001600160401b03811115612e6d57612e6d613f41565b604051908082528060200260200182016040528015612ea657816020015b612e93613ea3565b815260200190600190039081612e8b5790505b5090506000805b83518110156130e35760006040518060600160405280868481518110612ed557612ed5614d6c565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612f1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f3e9190614d82565b6001600160a01b03168152602001868481518110612f5e57612f5e614d6c565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612fa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fc79190614d82565b6001600160a01b03168152602001868481518110612fe757612fe7614d6c565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561302c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130509190614d9f565b62ffffff1681525090506130828786848151811061307057613070614d6c565b60200260200101518360018789613944565b15613095578261309181614dbc565b9350505b6130bd878684815181106130ab576130ab614d6c565b60200260200101518360008789613944565b156130d057826130cc81614dbc565b9350505b50806130db81614dbc565b915050612ead565b506000816001600160401b038111156130fe576130fe613f41565b60405190808252806020026020018201604052801561313757816020015b613124613ea3565b81526020019060019003908161311c5790505b50905060005b82811015610a0f5783818151811061315757613157614d6c565b602002602001015182828151811061317157613171614d6c565b6020026020010181905250808061318790614dbc565b91505061313d565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906131c890899060040161496a565b6101c060405180830381865afa1580156131e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061320a91906149f8565b600154604051632411122160e11b815293965091945092506000916001600160a01b0390911690634822244290613245908a9060040161496a565b602060405180830381865afa158015613262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132869190614aad565b600154835160405163aa7532af60e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263aa7532af926132db9289926001600160a01b03909216918991908d906000908a90600401614c4a565b602060405180830381865af41580156132f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113639190614aad565b60008061332b888a87896128eb565b606081015190915063ffffffff16156133d85760405180610140016040528088815260200187151581526020018615158152602001826040015163ffffffff168152602001826060015163ffffffff168152602001826080015181526020018260a0015181526020018260c0015181526020018260e0015181526020018261010001518152508385815181106133c3576133c3614d6c565b60200260200101819052506001915050611363565b50600098975050505050505050565b6000808060001985870985870292508281108382030391505080600003613420576000841161341557600080fd5b50829004905061063b565b8084116134585760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401612076565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b61356082826040516024016135319291906154c5565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052613d2b565b5050565b60008060008360020b1261357b578260020b613583565b8260020b6000035b9050620d89e88111156135a9576040516315e4079d60e11b815260040160405180910390fd5b6000816001166000036135c057600160801b6135d2565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613606576ffff97272373d413259a46990580e213a0260801c5b6004821615613625576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613644576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613663576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613682576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156136a1576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156136c0576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156136e0576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613700576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613720576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613740576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613760576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613780576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156137a0576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156137c0576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156137e1576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613801576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613820576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561383d576b048a170391f7dc42444e8fa20260801c5b60008460020b131561385e57806000198161385a5761385a615097565b0490505b640100000000810615613872576001613875565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b031611156138a8579293925b846001600160a01b0316866001600160a01b0316116138d3576138cc858585613d4c565b915061391a565b836001600160a01b0316866001600160a01b0316101561390c576138f8868585613d4c565b9150613905858785613dc7565b905061391a565b613917858585613dc7565b90505b94509492505050565b60008061392f83613e11565b905061063b8182670de0b6b3a76400006133e7565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f890613979908a908c908a90600401614ac6565b600060405180830381865afa158015613996573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526139be9190810190614de0565b60008054919250906001600160a01b0316635d4936ff6139df8a8c8a6134c5565b6040518263ffffffff1660e01b81526004016139fd91815260200190565b602060405180830381865afa158015613a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a3e9190614aad565b602083015190915015613d1a57604051806101c00160405280888152602001871515815260200183600001516040015181526020018360000151606001518152602001836000015160a0015163ffffffff16815260200183600001516080015163ffffffff1681526020018281526020018360200151815260200183604001518152602001613ace898c8a611974565b8152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b359190614d82565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b969190615118565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613bdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c009190614d82565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613c3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c619190615118565b60ff168152600054604051632be197cf60e01b81526020909201916001600160a01b0390911690632be197cf90613ca0908c908f908d90600401615133565b602060405180830381865afa158015613cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ce19190614aad565b8152602001836000015160c00151815250848681518110613d0457613d04614d6c565b6020026020010181905250600192505050613d21565b6000925050505b9695505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000826001600160a01b0316846001600160a01b03161115613d6c579192915b6001600160a01b038416613db56fffffffffffffffffffffffffffffffff60601b606085901b16613d9d878761551a565b6001600160a01b0316866001600160a01b03166133e7565b613dbf91906150e7565b949350505050565b6000826001600160a01b0316846001600160a01b03161115613de7579192915b613dbf6001600160801b038316613dfe868661551a565b6001600160a01b0316600160601b6133e7565b60006060613e306001600160a01b038416670de0b6b3a7640000614d55565b901c92915050565b604080516101a0810182526000610140820181815261016083018290526101808301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b60408051610220810190915260006101c082018181526101e08301829052610200830191909152819081526020016000151581526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff16815260200160008152602001606081525090565b634e487b7160e01b600052604160045260246000fd5b606081018181106001600160401b0382111715613f7657613f76613f41565b60405250565b60c081018181106001600160401b0382111715613f7657613f76613f41565b60e081018181106001600160401b0382111715613f7657613f76613f41565b601f8201601f191681016001600160401b0381118282101715613fdf57613fdf613f41565b6040525050565b604051613ff281613f9b565b90565b6001600160a01b038116811461400a57600080fd5b50565b62ffffff8116811461400a57600080fd5b60006060828403121561403057600080fd5b60405161403c81613f57565b809150823561404a81613ff5565b8152602083013561405a81613ff5565b6020820152604083013561406d8161400d565b6040919091015292915050565b801515811461400a57600080fd5b600080600060a0848603121561409d57600080fd5b6140a7858561401e565b925060608401356140b781613ff5565b915060808401356140c78161407a565b809150509250925092565b6000602082840312156140e457600080fd5b813561063b81613ff5565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b602080825282518282018190526000919060409081850190868401855b828110156141f857815161414d8582516140ef565b8681015160606141608188018315159052565b87830151915060806141758189018415159052565b90830151915060a09061418f8883018463ffffffff169052565b830151915060c06141a78882018463ffffffff169052565b9083015160e088810191909152908301516101008089019190915290830151610120808901919091529083015161014088015290910151610160860152506101809093019290850190600101614138565b5091979650505050505050565b60008060006060848603121561421a57600080fd5b833561422581613ff5565b9250602084013561423581613ff5565b915060408401356140c78161407a565b60006060828403121561425757600080fd5b50919050565b8060020b811461400a57600080fd5b600080600060a0848603121561428157600080fd5b61428b8585614245565b9250606084013561429b8161425d565b915060808401356140c78161425d565b60006001600160401b038211156142c4576142c4613f41565b5060051b60200190565b6001600160801b038116811461400a57600080fd5b600082601f8301126142f457600080fd5b81356020614301826142ab565b6040805161430f8382613fba565b84815260c0948502870184019484820193508886111561432e57600080fd5b8488015b868110156143a65781818b03121561434a5760008081fd5b835161435581613f7c565b81356143608161425d565b81528187013561436f816142ce565b818801528185013585820152606080830135908201526080808301359082015260a080830135908201528552938501938101614332565b509098975050505050505050565b600080600080608085870312156143ca57600080fd5b84356001600160401b038111156143e057600080fd5b6143ec878288016142e3565b94505060208501356143fd8161407a565b9250604085013561440d8161425d565b9150606085013561441d8161425d565b939692955090935050565b6000806080838503121561443b57600080fd5b614445848461401e565b915060608301356144558161425d565b809150509250929050565b600081518084526020808501945080840160005b838110156144d0578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c09096019590820190600101614474565b509495945050505050565b60006102006144eb8484516140ef565b602083015180151560608601525060408301516080850152606083015160a0850152608083015161452460c086018263ffffffff169052565b5060a083015163ffffffff811660e08601525060c08301516101008581019190915260e084015161012080870191909152908401516101408087019190915290840151610160808701919091529084015190610180906145888288018460ff169052565b85015191506101a061459e8782018460ff169052565b908501516101c08701528401516101e0860183905290506124da82860182614460565b60208152600061145360208301846144db565b60008060008060008061010087890312156145ee57600080fd5b6145f88888614245565b9550606087013594506080870135935060a08701356146168161407a565b925060c0870135915060e087013561462d81613ff5565b809150509295509295509295565b828152604060208201526000613dbf6040830184614460565b60006020828403121561466657600080fd5b81356001600160401b0381111561467c57600080fd5b613dbf848285016142e3565b6000806080838503121561469b57600080fd5b6146a58484614245565b915060608301356001600160401b038111156146c057600080fd5b6146cc858286016142e3565b9150509250929050565b600080600080600060a086880312156146ee57600080fd5b85356146f98161407a565b945060208601356147098161425d565b935060408601356147198161425d565b925060608601356147298161425d565b915060808601356147398161425d565b809150509295509295909350565b600080600060a0848603121561475c57600080fd5b61428b858561401e565b602080825282518282018190526000919060409081850190868401855b828110156141f85781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101614783565b600080600080608085870312156147dd57600080fd5b84356147e881613ff5565b935060208501356147f881613ff5565b925060408501356148088161407a565b9150606085013561441d8161407a565b60006101608201905061482c8284516140ef565b602083015115156060830152604083015163ffffffff8116608084015250606083015163ffffffff811660a084015250608083015160c083015260a083015160e083015260c0830151610100818185015260e085015161012085015280850151610140850152505092915050565b600080600080600060e086880312156148b257600080fd5b6148bc8787614245565b94506060860135935060808601356148d38161407a565b9497939650939460a0810135945060c0013592915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561494057603f1988860301845261492e8583516144db565b94509285019290850190600101614912565b5092979650505050505050565b6000806080838503121561496057600080fd5b6146a5848461401e565b6060810161145682846140ef565b805161498381613ff5565b919050565b600060c0828403121561499a57600080fd5b6040516149a681613f7c565b809150825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201525092915050565b805161ffff8116811461498357600080fd5b60008060008385036101c0811215614a0f57600080fd5b8451614a1a81613ff5565b6020860151909450614a2b8161425d565b9250610180603f198201811315614a4157600080fd5b6040519150614a4f82613f9b565b614a5c8760408801614988565b8252610100860151602083015261012086015160408301526101408601516060830152614a8c61016087016149e6565b608083015285015160a08201526101a09094015160c0850152509093909250565b600060208284031215614abf57600080fd5b5051919050565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805163ffffffff8116811461498357600080fd5b600060208284031215614b1057600080fd5b61145382614aea565b600082601f830112614b2a57600080fd5b81516020614b37826142ab565b60408051614b458382613fba565b84815260c09485028701840194848201935088861115614b6457600080fd5b8488015b868110156143a65781818b031215614b805760008081fd5b8351614b8b81613f7c565b8151614b968161425d565b815281870151614ba5816142ce565b818801528185015185820152606080830151908201526080808301519082015260a080830151908201528552938501938101614b68565b600060208284031215614bee57600080fd5b81516001600160401b03811115614c0457600080fd5b613dbf84828501614b19565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b6001600160a01b03888116825287166020820152600286900b60408201526000610180614c7a6060840188614c10565b80610120840152614c8d81840187614460565b9415156101408401525050610160015295945050505050565b60006020808385031215614cb957600080fd5b82516001600160401b03811115614ccf57600080fd5b8301601f81018513614ce057600080fd5b8051614ceb816142ab565b604051614cf88282613fba565b82815260059290921b8301840191848101915087831115614d1857600080fd5b928401925b82841015611363578351614d3081613ff5565b82529284019290840190614d1d565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761145657611456614d3f565b634e487b7160e01b600052603260045260246000fd5b600060208284031215614d9457600080fd5b815161063b81613ff5565b600060208284031215614db157600080fd5b815161063b8161400d565b600060018201614dce57614dce614d3f565b5060010190565b80516149838161407a565b600060208284031215614df257600080fd5b81516001600160401b0380821115614e0957600080fd5b9083019060608286031215614e1d57600080fd5b604051614e2981613f57565b825182811115614e3857600080fd5b830160e08188031215614e4a57600080fd5b614e52613fe6565b614e5b82614978565b8152614e6960208301614dd5565b60208201526040820151604082015260608201516060820152614e8e60808301614aea565b6080820152614e9f60a08301614aea565b60a082015260c082015184811115614eb657600080fd5b614ec289828501614b19565b60c0830152508252506020838101519082015260409283015192810192909252509392505050565b805160ff8116811461498357600080fd5b600080600080600080600060e0888a031215614f1657600080fd5b8751614f2181613ff5565b6020890151909750614f328161425d565b9550614f40604089016149e6565b9450614f4e606089016149e6565b9350614f5c608089016149e6565b9250614f6a60a08901614eea565b915060c0880151614f7a8161407a565b8091505092959891949750929550565b8035614f9581613ff5565b6001600160a01b039081168352602082013590614fb182613ff5565b1660208301526040810135614fc58161400d565b62ffffff81166040840152505050565b606081016114568284614f8a565b600060608284031215614ff557600080fd5b611453838361401e565b600286900b815261014081016150186020830187614c10565b60e0820194909452600292830b610100820152910b6101209091015292915050565b8082018082111561145657611456614d3f565b600281810b9083900b01627fffff8113627fffff198212171561145657611456614d3f565b600282810b9082900b03627fffff198112627fffff8213171561145657611456614d3f565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806150c4576150c4615097565b627fffff198214600019821416156150de576150de614d3f565b90059392505050565b6000826150f6576150f6615097565b500490565b60006020828403121561510d57600080fd5b815161063b816142ce565b60006020828403121561512a57600080fd5b61145382614eea565b60a0810161514182866140ef565b6001600160a01b03939093166060820152901515608090910152919050565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff8416608082015260006101806151a460a0840186614c10565b806101608401526151b781840185614460565b9a9950505050505050505050565b600080604083850312156151d857600080fd5b82516001600160401b038111156151ee57600080fd5b6151fa85828601614b19565b925050602083015190509250929050565b610100810161521a8289614f8a565b6060820196909652608081019490945291151560a084015260c08301526001600160a01b031660e090910152919050565b6000806040838503121561525e57600080fd5b8251915060208301516001600160401b0381111561527b57600080fd5b6146cc85828601614b19565b600060033d1115613ff25760046000803e5060005160e01c90565b600060443d10156152b05790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156152df57505050505090565b82850191508151818111156152f75750505050505090565b843d87010160208285010111156153115750505050505090565b61532060208286010187613fba565b509095945050505050565b60006020828403121561533d57600080fd5b815161063b8161425d565b6001600160801b0382811682821603908082111561536857615368614d3f565b5092915050565b60008260020b8061538257615382615097565b808360020b0791505092915050565b6001600160801b0381811683821601908082111561536857615368614d3f565b8181038181111561145657611456614d3f565b60008260020b8260020b028060020b915080821461536857615368614d3f565b6000806000806000806000806000898b0361016081121561540457600080fd5b606081121561541257600080fd5b5060405161541f81613f57565b8a5161542a81613ff5565b815260208b015161543a81613ff5565b602082015260408b015161544d8161400d565b6040820152985061546060608b01614dd5565b975061546e60808b01614aea565b965061547c60a08b01614aea565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b6000826154c0576154c0615097565b500690565b604081526000835180604084015260005b818110156154f357602081870181015160608684010152016154d6565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b6001600160a01b0382811682821603908082111561536857615368614d3f56fea2646970667358221220b8fa99c14ee167b386395171ea970246a71ebd10f81c34ce116d0d4a1b01a49b64736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    borrowFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      borrowFacility,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    borrowFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      borrowFacility,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
}
