/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoterV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "marginInInput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "marginInOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stepSize",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
        ],
        internalType: "struct DataProvider.MaxLeverageParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "computeMaxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX160",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "postInstantaneousApr",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getBinsDataInBulk",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Borrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Borrowed",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.BinData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fillerOutput",
        type: "uint256",
      },
    ],
    name: "getEstimatedPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getMinMaxTicks",
    outputs: [
      {
        internalType: "int24",
        name: "min",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "max",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrderInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getPostInstantaneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getPreInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getUtilAndAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162005bae38038062005bae833981016040819052620000349162000092565b600080546001600160a01b03199081166001600160a01b039485161790915560018054821694841694909417909355600280549093169116179055620000dc565b80516001600160a01b03811681146200008d57600080fd5b919050565b600080600060608486031215620000a857600080fd5b620000b38462000075565b9250620000c36020850162000075565b9150620000d36040850162000075565b90509250925092565b615ac280620000ec6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639255bbc1116100a2578063b192ae8011610071578063b192ae80146102c2578063c229a332146102d5578063c3042bcd14610313578063dd65c32814610326578063dec8ae011461034657600080fd5b80639255bbc114610241578063a55ac3eb14610261578063a9b6b32b14610281578063ad16ab7e146102a157600080fd5b80634fbfe42d116100e95780634fbfe42d146101b857806384b88557146101cb5780638e68ad36146101f8578063911f1b471461020b578063912a8e001461022e57600080fd5b8063093376fe1461011b5780631f2ecd831461014457806329aa38191461016c5780633aea807f14610197575b600080fd5b61012e61012936600461447b565b610359565b60405161013b9190614589565b60405180910390f35b6101576101523660046145ff565b6107a9565b6040805192835260208301919091520161013b565b61017f61017a366004614783565b610a5c565b6040516001600160801b03909116815260200161013b565b6101aa6101a53660046147c9565b610b4a565b60405190815260200161013b565b6101aa6101c6366004614808565b610d6f565b6101de6101d9366004614963565b611363565b60408051600293840b81529190920b60208201520161013b565b61017f6102063660046145ff565b6113e6565b61021e610219366004614997565b61162d565b604051901515815260200161013b565b61017f61023c366004614783565b611a25565b61025461024f3660046149e5565b611a5e565b60405161013b9190614a41565b61027461026f366004614a50565b611f14565b60405161013b9190614a6f565b61029461028f3660046149e5565b61231f565b60405161013b9190614add565b6102b46102af366004614b5f565b6124a6565b60405161013b929190614c38565b6101aa6102d0366004614c51565b612542565b6102e86102e336600461447b565b612b0e565b604080516001600160a01b03948516815293909216602084015262ffffff169082015260600161013b565b6101aa6103213660046147c9565b612c46565b61033961033436600461447b565b612ed8565b60405161013b9190614c64565b6101aa610354366004614ddb565b6132a2565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103d89190810190614e08565b90506000815160046103ea9190614eac565b6001600160401b0381111561040157610401614649565b60405190808252806020026020018201604052801561043a57816020015b61042761432a565b81526020019060019003908161041f5790505b5090506000805b83518110156106f3576000604051806060016040528086848151811061046957610469614ec3565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d29190614ed9565b6001600160a01b031681526020018684815181106104f2576104f2614ec3565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190614ed9565b6001600160a01b0316815260200186848151811061057b5761057b614ec3565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e49190614ef6565b62ffffff1681525090506106178786848151811061060457610604614ec3565b602002602001015183600180888a61343a565b1561062a578261062681614f13565b9350505b6106548786848151811061064057610640614ec3565b60200260200101518360016000888a61343a565b15610667578261066381614f13565b9350505b6106918786848151811061067d5761067d614ec3565b60200260200101518360006001888a61343a565b156106a457826106a081614f13565b9350505b6106cd878684815181106106ba576106ba614ec3565b602002602001015183600080888a61343a565b156106e057826106dc81614f13565b9350505b50806106eb81614f13565b915050610441565b506000816001600160401b0381111561070e5761070e614649565b60405190808252806020026020018201604052801561074757816020015b61073461432a565b81526020019060019003908161072c5790505b50905060005b8281101561079f5783818151811061076757610767614ec3565b602002602001015182828151811061078157610781614ec3565b6020026020010181905250808061079790614f13565b91505061074d565b5095945050505050565b600154604051639525092360e01b815260009182918291829182916001600160a01b0316906395250923906107e2908b90600401614f77565b6101c060405180830381865afa158015610800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108249190614f97565b919450925090508161083681896150a4565b61084091906150de565b96508161084d81886150a4565b61085791906150de565b9550600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c19190615121565b509395508f9450505050505b8a60020b8160020b1215610a02576108f36108ed368f90038f018f6151b0565b82611a25565b945061090d610907368f90038f018f6151b0565b82610a5c565b93506001600160801b038516156109f15761093e6001600160801b0385811690670de0b6b3a764000090881661379f565b8651604051630ca73f1f60e21b81529194506109d8918591670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9163329cfc7c91610990918e9187908b908b90600401615206565b602060405180830381865af41580156109ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d19190615241565b919061379f565b6109e2908b61525a565b99506109ee838a61525a565b98505b6109fb878261526d565b90506108cd565b5050505050818787610a149190615292565b610a1e91906150a4565b610a2b9060020b866152b7565b945081610a388888615292565b610a4291906150a4565b610a4f9060020b856152b7565b9350505050935093915050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda277908290634822244290610a959088906004016152cb565b602060405180830381865afa158015610ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad69190615241565b846040518363ffffffff1660e01b8152600401610b0092919091825260020b602082015260400190565b602060405180830381865afa158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4191906152d9565b90505b92915050565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390610b83908a906004016152cb565b6101c060405180830381865afa158015610ba1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc59190614f97565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a904790610c049087908b908b906004016152f6565b602060405180830381865afa158015610c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c45919061532e565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b90610c7f9088908c908c906004016152f6565b600060405180830381865afa158015610c9c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cc49190810190615400565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac92610d19928b926001600160a01b0316918e15918c918b918b90600401615434565b600060405180830381865af4158015610d36573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d5e919081019061548b565b9750505050505050505b9392505050565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101829052600154604051639525092360e01b81526001600160a01b0390911690639525092390610e07908a906004016152cb565b6101c060405180830381865afa158015610e25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e499190614f97565b5060020b60208301526001600160a01b039081168083526000805460405163118272bf60e31b815291931691638c1395f891610e8c91908b908b906004016152f6565b600060405180830381865afa158015610ea9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ed191908101906154d1565b9050600085670de0b6b3a764000014610f6c57815160c0015160405163069b8a8b60e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__916334dc545891610f2291908a906004016155e8565b600060405180830381865af4158015610f3f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f679190810190615400565b610f73565b815160c001515b6040516337a6142160e01b815290915073__$d23a8dd93b7205fa6b646ffed38c165d68$__906337a6142190610fad90849060040161560a565b6040805180830381865af4158015610fc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fed919061561d565b600290810b6101608601520b610140840152825160408051633850c7bd60e01b815290516001600160a01b0390921691633850c7bd9160048082019260e0929091908290030181865afa158015611048573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106c9190615121565b50505050600291820b606087018190526001600160a01b03939093166040808801919091526101608701516101408801516020890151925163146d722d60e31b81528d15156004820152602481019690965290840b6044860152830b606485015290910b60848301525073__$d23a8dd93b7205fa6b646ffed38c165d68$__9063a36b91689060a401602060405180830381865af4158015611112573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111369190615241565b61018084015260208301516060840151604080860151905162aba2a960e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__9363055d15489361118e938793670de0b6b3a76400009392919060040161564c565b6040805180830381865af41580156111aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ce9190615691565b60a085015260808401526101808301516001036112305760408201516111fd9087670de0b6b3a764000061379f565b8761120c578360800151611212565b8360a001515b61121c90876156b5565b61122691906156b5565b935050505061135a565b60208201516112489087670de0b6b3a764000061379f565b60c08401819052611264908690670de0b6b3a76400009061379f565b60e0840181905261129490670de0b6b3a764000090896112885785608001516109d1565b8560a00151919061379f565b610100840152866112a9578260a001516112af565b82608001515b8361010001516112bf919061525a565b8360c0015110156112d8578160400151611226906156d5565b866112e7578260a001516112ed565b82608001515b8361010001518460c0015161130291906156f1565b61130c91906156f1565b610120840181905260e084015161132c9190670de0b6b3a764000061379f565b610120840152604082015161134a9087670de0b6b3a764000061379f565b83610120015161122691906156b5565b95945050505050565b60008073__$d23a8dd93b7205fa6b646ffed38c165d68$__6337a61421846040518263ffffffff1660e01b815260040161139d919061560a565b6040805180830381865af41580156113b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113dd919061561d565b91509150915091565b600154604051632411122160e11b815260009182916001600160a01b039091169063482224429061141b908890600401614f77565b602060405180830381865afa158015611438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145c9190615241565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa1580156114ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cf9190615704565b6001600160801b039350905060008080875b8760020b8160020b12156116205760015460405163da69b0b360e01b815260048101889052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa158015611542573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156691906152d9565b6001546040516319fda27760e01b815260048101899052600284900b60248201529195506001600160a01b0316906319fda27790604401602060405180830381865afa1580156115ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115de91906152d9565b92506115ea8385615721565b9150866001600160801b0316826001600160801b03161061160b578661160d565b815b9650611619858261526d565b90506114e1565b5050505050509392505050565b6000808251116116715760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b60448201526064015b60405180910390fd5b600154604051632411122160e11b8152600091829182916001600160a01b0316906348222442906116a6908990600401614f77565b602060405180830381865afa1580156116c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e79190615241565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175a9190615704565b6001546040516315083fbb60e31b8152600481018590529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa1580156117a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117cd9190615241565b905060005b8751811015611a1657828882815181106117ee576117ee614ec3565b6020026020010151600001516118049190615741565b60020b156118425760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b6044820152606401611668565b60015488516001600160a01b039091169063da69b0b39086908b908590811061186d5761186d614ec3565b6020026020010151600001516040518363ffffffff1660e01b81526004016118a292919091825260020b602082015260400190565b602060405180830381865afa1580156118bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e391906152d9565b9550856001600160801b03166000036119055760009650505050505050610b44565b60015488516001600160a01b03909116906319fda2779086908b908590811061193057611930614ec3565b6020026020010151600001516040518363ffffffff1660e01b815260040161196592919091825260020b602082015260400190565b602060405180830381865afa158015611982573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a691906152d9565b94508781815181106119ba576119ba614ec3565b602002602001015160200151856119d19190615763565b6001600160801b031682876001600160801b03166119ef91906156f1565b1015611a045760009650505050505050610b44565b80611a0e81614f13565b9150506117d2565b50600198975050505050505050565b600154604051632411122160e11b81526000916001600160a01b03169063da69b0b3908290634822244290610a959088906004016152cb565b611a6661432a565b60006040518060600160405280876001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad59190614ed9565b6001600160a01b03168152602001876001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b459190614ed9565b6001600160a01b03168152602001876001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb59190614ef6565b62ffffff16905290506000611bcc8787878761231f565b6000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f890611c06908b908b908b906004016152f6565b600060405180830381865afa158015611c23573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c4b91908101906154d1565b606083015190915063ffffffff1615611f085760008260e00151600014611c9e57611c99836060015163ffffffff1642611c8591906156f1565b60e085015190670de0b6b3a764000061387d565b611ca8565b670de0b6b3a76400005b6080840151909150600090611cc69083670de0b6b3a764000061379f565b9050808460a0015111611cd95780611cdf565b8360a001515b9050604051806101c0016040528086815260200188151581526020018915158152602001856040015163ffffffff168152602001856060015163ffffffff168152602001856080015181526020018560a0015181526020018560c0015181526020018560e00151815260200185610100015181526020018281526020018b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbe9190614ed9565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611dfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1f9190615783565b60ff1681526020018b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e899190614ed9565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eea9190615783565b60ff1681526020018460600151151581525095505050505050611f0c565b5050505b949350505050565b600154604051632411122160e11b81526060916000916001600160a01b0390911690634822244290611f4a9088906004016152cb565b602060405180830381865afa158015611f67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f8b9190615241565b600154604051639525092360e01b815291925060009182916001600160a01b031690639525092390611fc1908a906004016152cb565b6101c060405180830381865afa158015611fdf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120039190614f97565b5090925090508061201481886150a4565b61201e91906150de565b95508061202b81876150a4565b61203591906150de565b94506000816120448888615292565b61204e91906150a4565b60020b6001600160401b0381111561206857612068614649565b6040519080825280602002602001820160405280156120cb57816020015b6120b86040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816120865790505b509050600080846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561210f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121339190615121565b509495508d9450505050505b8860020b8160020b1215612310576121e98261215a8361393b565b61216c612167898661526d565b61393b565b60015460405163da69b0b360e01b8152600481018d9052600287900b60248201526001600160a01b039091169063da69b0b3906044015b602060405180830381865afa1580156121c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e491906152d9565b613c5e565b8585815181106121fb576121fb614ec3565b602002602001015160200186868151811061221857612218614ec3565b60209081029190910101516040019190915252612280826122388361393b565b612245612167898661526d565b6001546040516319fda27760e01b8152600481018d9052600287900b60248201526001600160a01b03909116906319fda277906044016121a3565b85858151811061229257612292614ec3565b60200260200101516060018686815181106122af576122af614ec3565b602090810291909101015160800191909152526122d36122ce8261393b565b613cfa565b8484815181106122e5576122e5614ec3565b602090810291909101015152826122fb81614f13565b93506123099050858261526d565b905061213f565b50919998505050505050505050565b60408051610180810182526000610120820181815261014083018290526101608301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915260005460405163bfd4c2a560e01b81526001600160a01b03878116600483015286811660248301528515156044830152841515606483015290911690639c3f1e9090829063bfd4c2a590608401602060405180830381865afa1580156123e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240d9190615241565b6040518263ffffffff1660e01b815260040161242b91815260200190565b61016060405180830381865afa158015612449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061246d919061579e565b6101008a01525060c088015260a0870152608086015263ffffffff90811660608601521660408401521515602083015250949350505050565b60015460405163568b55bf60e11b81526000916060916001600160a01b039091169063ad16ab7e906124e4908a908a908a908a908a90600401615867565b600060405180830381865afa92505050801561252257506040513d6000823e601f3d908101601f1916820160405261251f91908101906158a1565b60015b6125325750600090506060612538565b90925090505b9550959350505050565b600154604051639525092360e01b815260009182916001600160a01b0390911690639525092390612577908690600401614f77565b6101c060405180830381865afa158015612595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b99190614f97565b505090506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156125fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126219190615121565b5050600154604051632411122160e11b815295965060c08a013595600095506001600160a01b03909116935063c6c2c2ca925083915063482224429061266b908b90600401614f77565b602060405180830381865afa158015612688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126ac9190615241565b6040518263ffffffff1660e01b81526004016126ca91815260200190565b60a060405180830381865afa1580156126e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061270b91906158dd565b505050506001600160801b031690505b670de0b6b3a7640000821115612b055760008061274061012089016101008a01615948565b156128e75761276e61275a670de0b6b3a7640000866156f1565b60808a013590670de0b6b3a764000061379f565b915060006127858385670de0b6b3a764000061379f565b905061279181846156f1565b6002546040805160a081019091529194506001600160a01b03169063c6a5026a90806127c360808e0160608f01615948565b6127d9576127d460208e018e61447b565b6127e9565b6127e960408e0160208f0161447b565b6001600160a01b0316815260200161280760808e0160608f01615948565b6128205761281b60408e0160208f0161447b565b61282d565b61282d60208e018e61447b565b6001600160a01b031681526020018681526020018c60000160400160208101906128579190615965565b62ffffff16815260006020909101526040516001600160e01b031960e084901b1681526128879190600401615982565b6080604051808303816000875af11580156128a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128ca91906159ca565b509193506128df91505060a08a01358361525a565b915050612a91565b6128fc61275a670de0b6b3a7640000866156f1565b915060006129138385670de0b6b3a764000061379f565b905060006129258260808c01356156f1565b9050600260009054906101000a90046001600160a01b03166001600160a01b031663c6a5026a6040518060a001604052808d60600160208101906129699190615948565b61297f5761297a60208f018f61447b565b612995565b8d6000016020016020810190612995919061447b565b6001600160a01b031681526020018d60600160208101906129b69190615948565b6129d5578d60000160200160208101906129d0919061447b565b6129e2565b6129e260208f018f61447b565b6001600160a01b031681526020016129fa888661525a565b81526020018d6000016040016020810190612a159190615965565b62ffffff16815260006020909101526040516001600160e01b031960e084901b168152612a459190600401615982565b6080604051808303816000875af1158015612a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8891906159ca565b50919450505050505b6000612aaf8984612aa86080830160608401615948565b858a6124a6565b5090508015612ac5575092979650505050505050565b8860e00135851015612ae05750600098975050505050505050565b612afb85670bcbce7f1b150000670de0b6b3a764000061379f565b945050505061271b565b50505050919050565b6000806000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b759190614ed9565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bd79190614ed9565b856001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c399190614ef6565b9196909550909350915050565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390612c7f908a906004016152cb565b6101c060405180830381865afa158015612c9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cc19190614f97565b600154604051632411122160e11b815293965091945092506000916001600160a01b0390911690634822244290612cfc908b906004016152cb565b602060405180830381865afa158015612d19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d3d9190615241565b6000805460405163d93a904760e01b815292935090916001600160a01b039091169063d93a904790612d779088908c908c906004016152f6565b602060405180830381865afa158015612d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db8919061532e565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b90612df29089908d908d906004016152f6565b600060405180830381865afa158015612e0f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612e379190810190615400565b60018054865160405163aa7532af60e01b815293945073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9363aa7532af93612e89938c936001600160a01b03909116928c9289918c90600401615a10565b602060405180830381865af4158015612ea6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eca9190615241565b9a9950505050505050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015612f2f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612f579190810190614e08565b9050600081516002612f699190614eac565b6001600160401b03811115612f8057612f80614649565b604051908082528060200260200182016040528015612fb957816020015b612fa66143b5565b815260200190600190039081612f9e5790505b5090506000805b83518110156131f65760006040518060600160405280868481518110612fe857612fe8614ec3565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561302d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130519190614ed9565b6001600160a01b0316815260200186848151811061307157613071614ec3565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156130b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130da9190614ed9565b6001600160a01b031681526020018684815181106130fa576130fa614ec3565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561313f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131639190614ef6565b62ffffff1681525090506131958786848151811061318357613183614ec3565b60200260200101518360018789613d1b565b156131a857826131a481614f13565b9350505b6131d0878684815181106131be576131be614ec3565b60200260200101518360008789613d1b565b156131e357826131df81614f13565b9350505b50806131ee81614f13565b915050612fc0565b506000816001600160401b0381111561321157613211614649565b60405190808252806020026020018201604052801561324a57816020015b6132376143b5565b81526020019060019003908161322f5790505b50905060005b8281101561079f5783818151811061326a5761326a614ec3565b602002602001015182828151811061328457613284614ec3565b6020026020010181905250808061329a90614f13565b915050613250565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906132db9089906004016152cb565b6101c060405180830381865afa1580156132f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061331d9190614f97565b600154604051632411122160e11b815293965091945092506000916001600160a01b0390911690634822244290613358908a906004016152cb565b602060405180830381865afa158015613375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133999190615241565b600154835160405163aa7532af60e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263aa7532af926133ee9289926001600160a01b03909216918991908d906000908a90600401615a10565b602060405180830381865af415801561340b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061342f9190615241565b979650505050505050565b600080613449888a878961231f565b6000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f890613483908c908e908b906004016152f6565b600060405180830381865afa1580156134a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526134c891908101906154d1565b606083015190915063ffffffff161561378f5760008260e0015160001461350757613502836060015163ffffffff1642611c8591906156f1565b613511565b670de0b6b3a76400005b608084015190915060009061352f9083670de0b6b3a764000061379f565b9050808460a00151116135425780613548565b8360a001515b9050604051806101c001604052808b81526020018a151581526020018915158152602001856040015163ffffffff168152602001856060015163ffffffff168152602001856080015181526020018560a0015181526020018560c0015181526020018560e00151815260200185610100015181526020018281526020018c6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613603573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136279190614ed9565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136889190615783565b60ff1681526020018c6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156136ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136f29190614ed9565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561372f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137539190615783565b60ff1681526020018460600151151581525086888151811061377757613777614ec3565b6020026020010181905250600194505050505061342f565b5060009998505050505050505050565b60008080600019858709858702925082811083820303915050806000036137d857600084116137cd57600080fd5b508290049050610d68565b8084116138105760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401611668565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600083801561391d576001841680156138985785925061389c565b8392505b508260011c8460011c94505b8415613917578560801c156138bc57600080fd5b858602818101818110156138cf57600080fd5b859004965050600185161561390c5785830283878204146138f55786156138f557600080fd5b8181018181101561390557600080fd5b8590049350505b8460011c94506138a8565b50613933565b83801561392d5760009250613931565b8392505b505b509392505050565b60008060008360020b12613952578260020b61395a565b8260020b6000035b9050620d89e8811115613980576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361399757600160801b6139a9565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156139dd576ffff97272373d413259a46990580e213a0260801c5b60048216156139fc576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613a1b576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613a3a576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613a59576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613a78576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613a97576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613ab7576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613ad7576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613af7576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613b17576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613b37576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613b57576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613b77576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613b97576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613bb8576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613bd8576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613bf7576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613c14576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613c35578060001981613c3157613c3161508e565b0490505b640100000000810615613c49576001613c4c565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b03161115613c7f579293925b846001600160a01b0316866001600160a01b031611613caa57613ca3858585614246565b9150613cf1565b836001600160a01b0316866001600160a01b03161015613ce357613ccf868585614246565b9150613cdc8587856142b9565b9050613cf1565b613cee8585856142b9565b90505b94509492505050565b600080613d0683614303565b9050610d688182670de0b6b3a764000061379f565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f890613d50908a908c908a906004016152f6565b600060405180830381865afa158015613d6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613d9591908101906154d1565b60008054919250906001600160a01b0316635d4936ff613e078a8c8a6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b6040518263ffffffff1660e01b8152600401613e2591815260200190565b602060405180830381865afa158015613e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e669190615241565b90506000613e75888b89610b4a565b9050826060015115613f9e57600154604051632411122160e11b81526000916001600160a01b03169063c6c2c2ca908290634822244290613eba908e906004016152cb565b602060405180830381865afa158015613ed7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613efb9190615241565b6040518263ffffffff1660e01b8152600401613f1991815260200190565b60a060405180830381865afa158015613f36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f5a91906158dd565b505050506001600160801b03169050613f96670de0b6b3a764000082670de0b6b3a7640000613f8991906156f1565b865160600151919061379f565b845160600152505b60208301511561423457604051806102000160405280898152602001881515815260200184606001511515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff16815260200183815260200184602001518152602001846040015181526020016140378a8d8b610b4a565b81526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561407a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061409e9190614ed9565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156140db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140ff9190615783565b60ff1681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015614145573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141699190614ed9565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156141a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141ca9190615783565b60ff1681526020018284116141e05760006141ea565b6141ea83856156f1565b81526020016141fa8a8d8b612c46565b8152602001846000015160c0015181525085878151811061421d5761421d614ec3565b60200260200101819052506001935050505061423c565b600093505050505b9695505050505050565b6000826001600160a01b0316846001600160a01b03161115614266579192915b6001600160a01b0384166142af6fffffffffffffffffffffffffffffffff60601b606085901b166142978787615a6c565b6001600160a01b0316866001600160a01b031661379f565b611f0c91906152b7565b6000826001600160a01b0316846001600160a01b031611156142d9579192915b611f0c6001600160801b0383166142f08686615a6c565b6001600160a01b0316600160601b61379f565b600060606143226001600160a01b038416670de0b6b3a7640000614eac565b901c92915050565b604080516102208101825260006101c082018181526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b604080516102608101909152600061020082018181526102208301829052610240830191909152819081526020016000151581526020016000151581526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff1681526020016000815260200160008152602001606081525090565b6001600160a01b038116811461447857600080fd5b50565b60006020828403121561448d57600080fd5b8135610d6881614463565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b6144cf828251614498565b60208101518015156060840152506040810151801515608084015250606081015163ffffffff811660a084015250608081015163ffffffff811660c08401525060a081015160e08381019190915260c0820151610100808501919091529082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015161018080850191909152908201516101a080850191909152908201516101c0840152015115156101e090910152565b6020808252825182820181905260009190848201906040850190845b818110156145cc576145b88385516144c4565b9284019261020092909201916001016145a5565b50909695505050505050565b6000606082840312156145ea57600080fd5b50919050565b8060020b811461447857600080fd5b600080600060a0848603121561461457600080fd5b61461e85856145d8565b9250606084013561462e816145f0565b9150608084013561463e816145f0565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561468157614681614649565b60405290565b60405160c081016001600160401b038111828210171561468157614681614649565b60405160e081016001600160401b038111828210171561468157614681614649565b604051608081016001600160401b038111828210171561468157614681614649565b604051601f8201601f191681016001600160401b038111828210171561471557614715614649565b604052919050565b62ffffff8116811461447857600080fd5b60006060828403121561474057600080fd5b61474861465f565b9050813561475581614463565b8152602082013561476581614463565b602082015260408201356147788161471d565b604082015292915050565b6000806080838503121561479657600080fd5b6147a0848461472e565b915060608301356147b0816145f0565b809150509250929050565b801515811461447857600080fd5b600080600060a084860312156147de57600080fd5b6147e8858561472e565b925060608401356147f881614463565b9150608084013561463e816147bb565b600080600080600060e0868803121561482057600080fd5b61482a878761472e565b9450606086013561483a81614463565b9350608086013561484a816147bb565b9497939650939460a0810135945060c0013592915050565b60006001600160401b0382111561487b5761487b614649565b5060051b60200190565b6001600160801b038116811461447857600080fd5b600082601f8301126148ab57600080fd5b813560206148c06148bb83614862565b6146ed565b82815260c092830285018201928282019190878511156148df57600080fd5b8387015b858110156149565781818a0312156148fb5760008081fd5b614903614687565b813561490e816145f0565b81528186013561491d81614885565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015284529284019281016148e3565b5090979650505050505050565b60006020828403121561497557600080fd5b81356001600160401b0381111561498b57600080fd5b611f0c8482850161489a565b600080608083850312156149aa57600080fd5b6149b484846145d8565b915060608301356001600160401b038111156149cf57600080fd5b6149db8582860161489a565b9150509250929050565b600080600080608085870312156149fb57600080fd5b8435614a0681614463565b93506020850135614a1681614463565b92506040850135614a26816147bb565b91506060850135614a36816147bb565b939692955090935050565b6102008101610b4482846144c4565b600080600060a08486031215614a6557600080fd5b61461e858561472e565b602080825282518282018190526000919060409081850190868401855b82811015614ad05781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101614a8c565b5091979650505050505050565b600061016082019050614af1828451614498565b602083015115156060830152604083015163ffffffff8116608084015250606083015163ffffffff811660a084015250608083015160c083015260a083015160e083015260c0830151610100818185015260e085015161012085015280850151610140850152505092915050565b600080600080600060e08688031215614b7757600080fd5b614b8187876145d8565b9450606086013593506080860135614b98816147bb565b925060a0860135915060c0860135614baf81614463565b809150509295509295909350565b600081518084526020808501945080840160005b83811015614c2d578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c09096019590820190600101614bd1565b509495945050505050565b828152604060208201526000611f0c6040830184614bbd565b600061012082840312156145ea57600080fd5b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015614dcd57603f198984030185528151610240614cac858351614498565b888201516060614cbf8188018315159052565b8984015191506080614cd48189018415159052565b9084015160a0888101919091529084015160c08089019190915290840151915060e090614d088289018463ffffffff169052565b8401519150610100614d218882018463ffffffff169052565b90840151610120888101919091529084015161014080890191909152908401516101608089019190915290840151610180808901919091529084015191506101a090614d718289018460ff169052565b84015191506101c0614d878882018460ff169052565b908401516101e088810191909152908401516102008801529092015161022086018290529150614db981860183614bbd565b968901969450505090860190600101614c8b565b509098975050505050505050565b60008060808385031215614dee57600080fd5b6149b4848461472e565b8051614e0381614463565b919050565b60006020808385031215614e1b57600080fd5b82516001600160401b03811115614e3157600080fd5b8301601f81018513614e4257600080fd5b8051614e506148bb82614862565b81815260059190911b82018301908381019087831115614e6f57600080fd5b928401925b8284101561342f578351614e8781614463565b82529284019290840190614e74565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610b4457610b44614e96565b634e487b7160e01b600052603260045260246000fd5b600060208284031215614eeb57600080fd5b8151610d6881614463565b600060208284031215614f0857600080fd5b8151610d688161471d565b600060018201614f2557614f25614e96565b5060010190565b8035614f3781614463565b6001600160a01b039081168352602082013590614f5382614463565b1660208301526040810135614f678161471d565b62ffffff81166040840152505050565b60608101610b448284614f2c565b805161ffff81168114614e0357600080fd5b60008060008385036101c0811215614fae57600080fd5b8451614fb981614463565b6020860151909450614fca816145f0565b9250603f190161018080821215614fe057600080fd5b614fe86146a9565b60c0831215614ff657600080fd5b614ffe614687565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a084015282815261010087015160208201526101208701516040820152610140870151606082015261506a6101608801614f85565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806150bb576150bb61508e565b627fffff198214600019821416156150d5576150d5614e96565b90059392505050565b60008260020b8260020b028060020b91508082146150fe576150fe614e96565b5092915050565b805160ff81168114614e0357600080fd5b8051614e03816147bb565b600080600080600080600060e0888a03121561513c57600080fd5b875161514781614463565b6020890151909750615158816145f0565b955061516660408901614f85565b945061517460608901614f85565b935061518260808901614f85565b925061519060a08901615105565b915060c08801516151a0816147bb565b8091505092959891949750929550565b6000606082840312156151c257600080fd5b610b41838361472e565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600286900b8152610140810161521f60208301876151cc565b60e0820194909452600292830b610100820152910b6101209091015292915050565b60006020828403121561525357600080fd5b5051919050565b80820180821115610b4457610b44614e96565b600281810b9083900b01627fffff8113627fffff1982121715610b4457610b44614e96565b600282810b9082900b03627fffff198112627fffff82131715610b4457610b44614e96565b6000826152c6576152c661508e565b500490565b60608101610b448284614498565b6000602082840312156152eb57600080fd5b8151610d6881614885565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805163ffffffff81168114614e0357600080fd5b60006020828403121561534057600080fd5b610b418261531a565b600082601f83011261535a57600080fd5b8151602061536a6148bb83614862565b82815260c0928302850182019282820191908785111561538957600080fd5b8387015b858110156149565781818a0312156153a55760008081fd5b6153ad614687565b81516153b8816145f0565b8152818601516153c781614885565b8187015260408281015190820152606080830151908201526080808301519082015260a08083015190820152845292840192810161538d565b60006020828403121561541257600080fd5b81516001600160401b0381111561542857600080fd5b611f0c84828501615349565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff84166080820152600061018061547860a08401866151cc565b80610160840152612eca81840185614bbd565b6000806040838503121561549e57600080fd5b82516001600160401b038111156154b457600080fd5b6154c085828601615349565b925050602083015190509250929050565b6000602082840312156154e357600080fd5b81516001600160401b03808211156154fa57600080fd5b908301906080828603121561550e57600080fd5b6155166146cb565b82518281111561552557600080fd5b830160e0818803121561553757600080fd5b61553f6146a9565b61554882614df8565b815261555660208301615116565b6020820152604082015160408201526060820151606082015261557b6080830161531a565b608082015261558c60a0830161531a565b60a082015260c0820151848111156155a357600080fd5b6155af89828501615349565b60c083015250808352505060208301516020820152604083015160408201526155da60608401615116565b606082015295945050505050565b6040815260006155fb6040830185614bbd565b90508260208301529392505050565b602081526000610b416020830184614bbd565b6000806040838503121561563057600080fd5b825161563b816145f0565b60208401519092506147b0816145f0565b60a08152600061565f60a0830188614bbd565b602083019690965250600293840b60408201529190920b60608201526001600160a01b03909116608090910152919050565b600080604083850312156156a457600080fd5b505080516020909101519092909150565b81810360008312801583831316838312821617156150fe576150fe614e96565b6000600160ff1b82016156ea576156ea614e96565b5060000390565b81810381811115610b4457610b44614e96565b60006020828403121561571657600080fd5b8151610d68816145f0565b6001600160801b038281168282160390808211156150fe576150fe614e96565b60008260020b806157545761575461508e565b808360020b0791505092915050565b6001600160801b038181168382160190808211156150fe576150fe614e96565b60006020828403121561579557600080fd5b610b4182615105565b6000806000806000806000806000898b036101608112156157be57600080fd5b60608112156157cc57600080fd5b506157d561465f565b8a516157e081614463565b815260208b01516157f081614463565b602082015260408b01516158038161471d565b6040820152985061581660608b01615116565b975061582460808b0161531a565b965061583260a08b0161531a565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b60e081016158758288614f2c565b6060820195909552921515608084015260a08301919091526001600160a01b031660c090910152919050565b600080604083850312156158b457600080fd5b8251915060208301516001600160401b038111156158d157600080fd5b6149db85828601615349565b600080600080600060a086880312156158f557600080fd5b855161590081614885565b602087015190955061591181614885565b604087015190945061592281614885565b606087015190935061593381614885565b80925050608086015190509295509295909350565b60006020828403121561595a57600080fd5b8135610d68816147bb565b60006020828403121561597757600080fd5b8135610d688161471d565b81516001600160a01b0390811682526020808401518216908301526040808401519083015260608084015162ffffff1690830152608092830151169181019190915260a00190565b600080600080608085870312156159e057600080fd5b8451935060208501516159f281614463565b9250615a006040860161531a565b6060959095015193969295505050565b6001600160a01b03888116825287166020820152600286900b60408201526000610180615a4060608401886151cc565b80610120840152615a5381840187614bbd565b9415156101408401525050610160015295945050505050565b6001600160a01b038281168282160390808211156150fe576150fe614e9656fea2646970667358221220cc01325bfd71439aadd571462e014e0751e43d02e2556d03a6ac2f8bf12ab55f64736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/Util.sol:Utils"]: string;
}
