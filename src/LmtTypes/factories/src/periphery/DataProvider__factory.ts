/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrowFacility",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getExpectedFeesOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getExpectedInterestOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken",
        type: "bool",
      },
    ],
    name: "getMarginPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620038cf380380620038cf833981016040819052620000349162000087565b50600080546001600160a01b039283166001600160a01b03199182161790915560018054939092169216919091179055620000d1565b80516001600160a01b03811681146200008257600080fd5b919050565b6000806000606084860312156200009d57600080fd5b620000a8846200006a565b9250620000b8602085016200006a565b9150620000c8604085016200006a565b90509250925092565b6137ee80620000e16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063911f1b4711610066578063911f1b471461013a578063912a8e001461015d578063bc6312a514610170578063c229a33214610183578063dd65c328146101c157600080fd5b806310f8b463146100a357806329aa3819146100c95780632d6cf1f4146100f45780633aea807f146101145780638e68ad3614610127575b600080fd5b6100b66100b1366004612c1e565b6101e1565b6040519081526020015b60405180910390f35b6100dc6100d7366004612d48565b610409565b6040516001600160801b0390911681526020016100c0565b610107610102366004612d80565b6104f7565b6040516100c09190612ea0565b6100b6610122366004612eaf565b610984565b6100dc610135366004612f06565b610ad2565b61014d610148366004612f45565b610d9d565b60405190151581526020016100c0565b6100dc61016b366004612d48565b611195565b6100b661017e366004612f93565b6111ce565b610196610191366004613007565b6114cb565b604080516001600160a01b03948516815293909216602084015262ffffff16908201526060016100c0565b6101d46101cf366004613007565b611603565b6040516100c09190613024565b6000806000805b88518110156103fd5760015489516001600160a01b03909116906304ad52fc9088908c908590811061021c5761021c613073565b60209081029190910181015151604080516001600160e01b031960e087901b1681526001600160a01b03909416600485015260029190910b60248401528b516044840152908b015160648301528a0151608482015260608a015160a482015260808a015160c482015260e401602060405180830381865afa1580156102a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c99190613089565b925087610397576103926102f98a83815181106102e8576102e8613073565b60200260200101516000015161214a565b61032a878c858151811061030f5761030f613073565b60200260200101516000015161032591906130b8565b61214a565b61038d8c858151811061033f5761033f613073565b6020026020010151602001516001600160801b0316670de0b6b3a76400008e878151811061036f5761036f613073565b602002602001015160a001518961038691906130dd565b919061246d565b61254b565b6103df565b6103df6103af8a83815181106102e8576102e8613073565b6103c5878c858151811061030f5761030f613073565b6103da8c858151811061033f5761033f613073565b6125bd565b6103e990836130f0565b9150806103f581613103565b9150506101e8565b50979650505050505050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda27790829063482224429061044290889060040161311c565b602060405180830381865afa15801561045f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104839190613089565b846040518363ffffffff1660e01b81526004016104ad92919091825260020b602082015260400190565b602060405180830381865afa1580156104ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ee9190613150565b90505b92915050565b6104ff612960565b60006040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e9190613178565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105de9190613178565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064e9190613195565b62ffffff1690526000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f89061068f908990899089906004016131b2565b600060405180830381865afa1580156106ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106d491908101906132ac565b60008054919250906001600160a01b0316635d4936ff6106f5898989612607565b6040518263ffffffff1660e01b815260040161071391815260200190565b602060405180830381865afa158015610730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190613089565b90506000610763848888610984565b9050604051806101800160405280858152602001871515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff168152602001846000015160c0015163ffffffff1681526020018381526020018460200151815260200184604001518152602001828152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610821573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108459190613178565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610882573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a691906133ce565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109109190613178565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561094d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097191906133ce565b60ff1690529450505050505b9392505050565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906109bd908a9060040161311c565b6101a060405180830381865afa1580156109db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ff91906133fb565b6000805460405163118272bf60e31b8152949750929550909350916001600160a01b0390911690638c1395f890610a3e908a9088908b906004016131b2565b600060405180830381865afa158015610a5b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a8391908101906132ac565b90506000610a9b826000015160e001518887876111ce565b90506000610ab8836000015160e0015189866000015189896101e1565b9050610ac481836130f0565b9a9950505050505050505050565b600154604051632411122160e11b815260009182916001600160a01b0390911690634822244290610b079088906004016134e7565b602060405180830381865afa158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b489190613089565b6001546040516315083fbb60e31b8152600481018390529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015610b97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbb9190613089565b600154604051630ca32ed160e31b8152600481018590529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015610c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2e9190613538565b6001600160801b03945090506000808080895b8960020b8160020b1215610d8e5760015460405163da69b0b360e01b8152600481018a9052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa158015610ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc69190613150565b6001546040516319fda27760e01b8152600481018b9052600284900b60248201529196508895506001600160a01b0316906319fda27790604401602060405180830381865afa158015610d1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d419190613150565b925082610d4e8587613555565b610d589190613555565b9150886001600160801b0316826001600160801b031610610d795788610d7b565b815b9850610d8786826130b8565b9050610c41565b50505050505050509392505050565b600080825111610de15760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b60448201526064015b60405180910390fd5b600154604051632411122160e11b8152600091829182916001600160a01b031690634822244290610e169089906004016134e7565b602060405180830381865afa158015610e33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e579190613089565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015610ea6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eca9190613538565b6001546040516315083fbb60e31b8152600481018590529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015610f19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3d9190613089565b905060005b87518110156111865782888281518110610f5e57610f5e613073565b602002602001015160000151610f749190613592565b60020b15610fb25760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b6044820152606401610dd8565b60015488516001600160a01b039091169063da69b0b39086908b9085908110610fdd57610fdd613073565b6020026020010151600001516040518363ffffffff1660e01b815260040161101292919091825260020b602082015260400190565b602060405180830381865afa15801561102f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110539190613150565b9550856001600160801b031660000361107557600096505050505050506104f1565b60015488516001600160a01b03909116906319fda2779086908b90859081106110a0576110a0613073565b6020026020010151600001516040518363ffffffff1660e01b81526004016110d592919091825260020b602082015260400190565b602060405180830381865afa1580156110f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111169190613150565b945087818151811061112a5761112a613073565b6020026020010151602001518561114191906135b4565b6001600160801b031682876001600160801b031661115f91906130dd565b101561117457600096505050505050506104f1565b8061117e81613103565b915050610f42565b50600198975050505050505050565b600154604051632411122160e11b81526000916001600160a01b03169063da69b0b390829063482224429061044290889060040161311c565b60008060008060005b885181101561139a5760008073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__639887b5898a8d868151811061121057611210613073565b6020026020010151600001518b8f888151811061122f5761122f613073565b60200260200101516000015161124591906130b8565b6040516001600160e01b031960e086901b1681526001600160a01b039093166004840152600291820b6024840152900b60448201526064016040805180830381865af4158015611299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bd91906135d4565b9150915061131f8b84815181106112d6576112d6613073565b6020026020010151602001516001600160801b0316600160801b8d868151811061130257611302613073565b602002602001015160600151850361246d9092919063ffffffff16565b860195506113818b848151811061133857611338613073565b6020026020010151602001516001600160801b0316600160801b8d868151811061136457611364613073565b602002602001015160800151840361246d9092919063ffffffff16565b850194505050808061139290613103565b9150506111d7565b506000866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156113db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ff91906135f8565b5050505050509050871561143f5761142e81606461141e826065613687565b61142891906136b9565b8661265d565b61143890846130f0565b9150611477565b611460816064611450826065613687565b61145a91906136b9565b856126a2565b61146a90856130f0565b61147490836130f0565b91505b5061148560026000196136df565b8111156114c05760405162461bcd60e51b8152602060048201526009602482015268746f6f62696766656560b81b6044820152606401610dd8565b979650505050505050565b6000806000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561150e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115329190613178565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115949190613178565b856001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f69190613195565b9196909550909350915050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561165a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261168291908101906136f3565b90506000815160026116949190613781565b90506000816001600160401b038111156116b0576116b06129db565b6040519080825280602002602001820160405280156116e957816020015b6116d6612960565b8152602001906001900390816116ce5790505b5090506000805b8451811015612081576000604051806060016040528087848151811061171857611718613073565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561175d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117819190613178565b6001600160a01b031681526020018784815181106117a1576117a1613073565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180a9190613178565b6001600160a01b0316815260200187848151811061182a5761182a613073565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561186f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118939190613195565b62ffffff16905260008054885192935090916001600160a01b0390911690638c1395f8908990869081106118c9576118c9613073565b60200260200101518b60006040518463ffffffff1660e01b81526004016118f2939291906131b2565b600060405180830381865afa15801561190f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261193791908101906132ac565b905060008060009054906101000a90046001600160a01b03166001600160a01b0316635d4936ff6119838a878151811061197357611973613073565b60200260200101518d6000612607565b6040518263ffffffff1660e01b81526004016119a191815260200190565b602060405180830381865afa1580156119be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e29190613089565b905060008060009054906101000a90046001600160a01b03166001600160a01b0316638c1395f88a8781518110611a1b57611a1b613073565b60200260200101518d60016040518463ffffffff1660e01b8152600401611a44939291906131b2565b600060405180830381865afa158015611a61573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a8991908101906132ac565b905060008060009054906101000a90046001600160a01b03166001600160a01b0316635d4936ff611ad58c8981518110611ac557611ac5613073565b60200260200101518f6001612607565b6040518263ffffffff1660e01b8152600401611af391815260200190565b602060405180830381865afa158015611b10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b349190613089565b825160a0015190915063ffffffff1615611dc25760405180610180016040528086815260200160011515815260200183600001516040015181526020018360000151606001518152602001836000015160a0015163ffffffff168152602001836000015160c0015163ffffffff1681526020018281526020018360200151815260200183604001518152602001611bcd878f6001610984565b81526020018b8881518110611be457611be4613073565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4d9190613178565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cae91906133ce565b60ff1681526020018b8881518110611cc857611cc8613073565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d319190613178565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9291906133ce565b60ff16905288611da289896130dd565b81518110611db257611db2613073565b6020026020010181905250611dd0565b86611dcc81613103565b9750505b835160a0015163ffffffff161561205b5760405180610180016040528086815260200160001515815260200185600001516040015181526020018560000151606001518152602001856000015160a0015163ffffffff168152602001856000015160c0015163ffffffff1681526020018481526020018560200151815260200185604001518152602001611e66878f6000610984565b81526020018b8881518110611e7d57611e7d613073565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ec2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee69190613178565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4791906133ce565b60ff1681526020018b8881518110611f6157611f61613073565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fca9190613178565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202b91906133ce565b60ff1690528861203b89896130dd565b8151811061204b5761204b613073565b6020026020010181905250612069565b8661206581613103565b9750505b5050505050808061207990613103565b9150506116f0565b50600061208e82856130dd565b6001600160401b038111156120a5576120a56129db565b6040519080825280602002602001820160405280156120de57816020015b6120cb612960565b8152602001906001900390816120c35790505b50905060005b6120ee83866130dd565b81101561213f5783818151811061210757612107613073565b602002602001015182828151811061212157612121613073565b6020026020010181905250808061213790613103565b9150506120e4565b509695505050505050565b60008060008360020b12612161578260020b612169565b8260020b6000035b9050620d89e881111561218f576040516315e4079d60e11b815260040160405180910390fd5b6000816001166000036121a657600160801b6121b8565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156121ec576ffff97272373d413259a46990580e213a0260801c5b600482161561220b576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561222a576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612249576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612268576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612287576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156122a6576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156122c6576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156122e6576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615612306576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615612326576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612346576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612366576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612386576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156123a6576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156123c7576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156123e7576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615612406576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612423576b048a170391f7dc42444e8fa20260801c5b60008460020b13156124445780600019816124405761244061357c565b0490505b64010000000081061561245857600161245b565b60005b60ff16602082901c0192505050919050565b60008080600019858709858702925082811083820303915050806000036124a6576000841161249b57600080fd5b50829004905061097d565b8084116124de5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401610dd8565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000826001600160a01b0316846001600160a01b0316111561256b579192915b6001600160a01b0384166125ab600160601b600160e01b03606085901b166125938787613798565b6001600160a01b0316866001600160a01b031661246d565b6125b591906136df565b949350505050565b6000826001600160a01b0316846001600160a01b031611156125dd579192915b6125b56001600160801b0383166125f48686613798565b6001600160a01b0316600160601b61246d565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b6000826001600160a01b0316846001600160a01b0316111561267d579192915b600061268a8585856126de565b90506126998585836000612788565b95945050505050565b6000826001600160a01b0316846001600160a01b031611156126c2579192915b60006126cf8585856127f8565b9050612699858583600061282e565b6000826001600160a01b0316846001600160a01b031611156126fe579192915b6000612721856001600160a01b0316856001600160a01b0316600160601b61246d565b905080156127565761274e612749848361273b8989613798565b6001600160a01b031661246d565b6128da565b91505061097d565b61274e612749612774856001600160a01b03891661273b8a8a613798565b866001600160a01b0316600160601b61246d565b6000836001600160a01b0316856001600160a01b031611156127a8579293925b816127d5576127d0836001600160801b03168686036001600160a01b0316600160601b61246d565b612699565b612699836001600160801b03168686036001600160a01b0316600160601b612920565b6000826001600160a01b0316846001600160a01b03161115612818579192915b6125b561274983600160601b61273b8888613798565b6000836001600160a01b0316856001600160a01b0316111561284e579293925b600160601b600160e01b03606084901b166001600160a01b03868603811690871661287857600080fd5b836128ae57866001600160a01b031661289b8383896001600160a01b031661246d565b816128a8576128a861357c565b046114c0565b6114c06128c58383896001600160a01b0316612920565b886001600160a01b0316808204910615150190565b806001600160801b038116811461291b5760405162461bcd60e51b81526020600482015260056024820152640858d85cdd60da1b6044820152606401610dd8565b919050565b600061292d84848461246d565b90506000828061293f5761293f61357c565b848609111561097d57600019811061295657600080fd5b6001019392505050565b604080516101e081018252600061018082018181526101a083018290526101c08301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715612a1357612a136129db565b60405290565b60405160a081016001600160401b0381118282101715612a1357612a136129db565b604051606081016001600160401b0381118282101715612a1357612a136129db565b60405161010081016001600160401b0381118282101715612a1357612a136129db565b60405160e081016001600160401b0381118282101715612a1357612a136129db565b604051601f8201601f191681016001600160401b0381118282101715612aca57612aca6129db565b604052919050565b60006001600160401b03821115612aeb57612aeb6129db565b5060051b60200190565b8060020b8114612b0457600080fd5b50565b803561291b81612af5565b6001600160801b0381168114612b0457600080fd5b600082601f830112612b3857600080fd5b81356020612b4d612b4883612ad2565b612aa2565b82815260c09283028501820192828201919087851115612b6c57600080fd5b8387015b85811015612be35781818a031215612b885760008081fd5b612b906129f1565b8135612b9b81612af5565b815281860135612baa81612b12565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101612b70565b5090979650505050505050565b8015158114612b0457600080fd5b6001600160a01b0381168114612b0457600080fd5b803561291b81612bfe565b6000806000806000858703610120811215612c3857600080fd5b86356001600160401b03811115612c4e57600080fd5b612c5a89828a01612b27565b9650506020870135612c6b81612bf0565b945060a0603f1982011215612c7f57600080fd5b50612c88612a19565b60408701358152606087013560208201526080870135604082015260a0870135606082015260c0870135608082015280935050612cc760e08701612c13565b9150612cd66101008701612b07565b90509295509295909350565b62ffffff81168114612b0457600080fd5b600060608284031215612d0557600080fd5b612d0d612a3b565b90508135612d1a81612bfe565b81526020820135612d2a81612bfe565b60208201526040820135612d3d81612ce2565b604082015292915050565b60008060808385031215612d5b57600080fd5b612d658484612cf3565b91506060830135612d7581612af5565b809150509250929050565b600080600060608486031215612d9557600080fd5b8335612da081612bfe565b92506020840135612db081612bfe565b91506040840135612dc081612bf0565b809150509250925092565b612dfd82825180516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b602081015180151560608401525060408101516080830152606081015160a08301526080810151612e3660c084018263ffffffff169052565b5060a081015163ffffffff1660e08381019190915260c0820151610100808501919091529082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015160ff908116610180850152910151166101a090910152565b6101c081016104f18284612dcb565b600080600060a08486031215612ec457600080fd5b612ece8585612cf3565b92506060840135612ede81612bfe565b91506080840135612dc081612bf0565b600060608284031215612f0057600080fd5b50919050565b600080600060a08486031215612f1b57600080fd5b612f258585612eee565b92506060840135612f3581612af5565b91506080840135612dc081612af5565b60008060808385031215612f5857600080fd5b612f628484612eee565b915060608301356001600160401b03811115612f7d57600080fd5b612f8985828601612b27565b9150509250929050565b60008060008060808587031215612fa957600080fd5b84356001600160401b03811115612fbf57600080fd5b612fcb87828801612b27565b9450506020850135612fdc81612bf0565b92506040850135612fec81612bfe565b91506060850135612ffc81612af5565b939692955090935050565b60006020828403121561301957600080fd5b813561097d81612bfe565b6020808252825182820181905260009190848201906040850190845b8181101561306757613053838551612dcb565b928401926101c09290920191600101613040565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561309b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600281810b9083900b01627fffff8113627fffff19821217156104f1576104f16130a2565b818103818111156104f1576104f16130a2565b808201808211156104f1576104f16130a2565b600060018201613115576131156130a2565b5060010190565b81516001600160a01b0390811682526020808401519091169082015260408083015162ffffff1690820152606081016104f1565b60006020828403121561316257600080fd5b815161097d81612b12565b805161291b81612bfe565b60006020828403121561318a57600080fd5b815161097d81612bfe565b6000602082840312156131a757600080fd5b815161097d81612ce2565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805161291b81612bf0565b805163ffffffff8116811461291b57600080fd5b600082601f83011261320657600080fd5b81516020613216612b4883612ad2565b82815260c0928302850182019282820191908785111561323557600080fd5b8387015b85811015612be35781818a0312156132515760008081fd5b6132596129f1565b815161326481612af5565b81528186015161327381612b12565b8187015260408281015190820152606080830151908201526080808301519082015260a080830151908201528452928401928101613239565b6000602082840312156132be57600080fd5b81516001600160401b03808211156132d557600080fd5b90830190606082860312156132e957600080fd5b6132f1612a3b565b82518281111561330057600080fd5b8301610100818803121561331357600080fd5b61331b612a5d565b6133248261316d565b8152613332602083016131d6565b602082015260408201516040820152606082015160608201526080820151608082015261336160a083016131e1565b60a082015261337260c083016131e1565b60c082015260e08201518481111561338957600080fd5b613395898285016131f5565b60e0830152508252506020838101519082015260409283015192810192909252509392505050565b805160ff8116811461291b57600080fd5b6000602082840312156133e057600080fd5b6104ee826133bd565b805161ffff8116811461291b57600080fd5b60008060008385036101a081121561341257600080fd5b845161341d81612bfe565b602086015190945061342e81612af5565b9250603f19016101608082121561344457600080fd5b61344c612a80565b60a083121561345a57600080fd5b613462612a19565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015282815260e08701516020820152610100870151604082015261012087015160608201526134c361014088016133e9565b60808201529086015160a08201526101809095015160c08601525091949093509050565b6060810182356134f681612bfe565b6001600160a01b03908116835260208401359061351282612bfe565b166020830152604083013561352681612ce2565b62ffffff811660408401525092915050565b60006020828403121561354a57600080fd5b815161097d81612af5565b6001600160801b03828116828216039080821115613575576135756130a2565b5092915050565b634e487b7160e01b600052601260045260246000fd5b60008260020b806135a5576135a561357c565b808360020b0791505092915050565b6001600160801b03818116838216019080821115613575576135756130a2565b600080604083850312156135e757600080fd5b505080516020909101519092909150565b600080600080600080600060e0888a03121561361357600080fd5b875161361e81612bfe565b602089015190975061362f81612af5565b955061363d604089016133e9565b945061364b606089016133e9565b9350613659608089016133e9565b925061366760a089016133bd565b915060c088015161367781612bf0565b8091505092959891949750929550565b6001600160a01b038281168282168181028316929181158285048214176136b0576136b06130a2565b50505092915050565b60006001600160a01b03838116806136d3576136d361357c565b92169190910492915050565b6000826136ee576136ee61357c565b500490565b6000602080838503121561370657600080fd5b82516001600160401b0381111561371c57600080fd5b8301601f8101851361372d57600080fd5b805161373b612b4882612ad2565b81815260059190911b8201830190838101908783111561375a57600080fd5b928401925b828410156114c057835161377281612bfe565b8252928401929084019061375f565b80820281158282048414176104f1576104f16130a2565b6001600160a01b03828116828216039080821115613575576135756130a256fea26469706673582212200995efc5fcc06d94afe1d540af3297aaad142069e4af269a1c296b0a804aba5d64736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    borrowFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      borrowFacility,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    borrowFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      borrowFacility,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
}
