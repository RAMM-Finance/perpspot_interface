/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoterV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stepSize",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.MaxLeverageParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "computeMaxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX160",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getAddOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getBinsDataInBulk",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Borrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Borrowed",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.BinData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fillerOutput",
        type: "uint256",
      },
    ],
    name: "getEstimatedPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken",
        type: "bool",
      },
    ],
    name: "getMarginPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrderInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getPostInstantaneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getPreInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getReduceOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getUtilAndAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162005fa738038062005fa7833981016040819052620000349162000092565b600080546001600160a01b03199081166001600160a01b039485161790915560018054821694841694909417909355600280549093169116179055620000dc565b80516001600160a01b03811681146200008d57600080fd5b919050565b600080600060608486031215620000a857600080fd5b620000b38462000075565b9250620000c36020850162000075565b9150620000d36040850162000075565b90509250925092565b615ebb80620000ec6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638e68ad36116100ad578063a9b6b32b11610071578063a9b6b32b146102c6578063c229a332146102e6578063c3042bcd14610324578063dd65c32814610337578063dec8ae011461035757600080fd5b80638e68ad361461023d578063911f1b4714610250578063912a8e00146102735780639255bbc114610286578063a55ac3eb146102a657600080fd5b80632d6cf1f4116100f45780632d6cf1f4146101b55780633aea807f146101d5578063433a1e18146101f657806348c6f866146102095780634fbfe42d1461022a57600080fd5b8063060429f514610126578063193a24361461014f5780631f2ecd831461016257806329aa38191461018a575b600080fd5b610139610134366004614901565b61036a565b60405161014691906149ff565b60405180910390f35b61013961015d366004614901565b610741565b610175610170366004614a75565b610b0e565b60408051928352602083019190915201610146565b61019d610198366004614bd7565b610dc1565b6040516001600160801b039091168152602001610146565b6101c86101c3366004614c1d565b610eaf565b6040516101469190614dbe565b6101e86101e3366004614dd1565b611368565b604051908152602001610146565b6101e8610204366004614e10565b61158b565b61021c610217366004614e22565b6119ec565b604051610146929190614e89565b6101e8610238366004614ea2565b611abe565b61019d61024b366004614a75565b6120b2565b61026361025e366004614ffd565b61237d565b6040519015158152602001610146565b61019d610281366004614bd7565b612775565b61029961029436600461504b565b6127ae565b60405161014691906150a7565b6102b96102b43660046150b6565b612bd7565b60405161014691906150d5565b6102d96102d436600461504b565b612fdf565b6040516101469190615143565b6102f96102f4366004614901565b613166565b604080516001600160a01b03948516815293909216602084015262ffffff1690820152606001610146565b6101e8610332366004614dd1565b61329e565b61034a610345366004614901565b613530565b60405161014691906151c5565b6101e8610365366004615227565b6138fa565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103e99190810190615254565b90506000815160026103fb91906152f8565b6001600160401b0381111561041257610412614abf565b60405190808252806020026020018201604052801561044b57816020015b6104386147b8565b8152602001906001900390816104305790505b5090506000805b835181101561068b576000604051806060016040528086848151811061047a5761047a61530f565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e39190615325565b6001600160a01b031681526020018684815181106105035761050361530f565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c9190615325565b6001600160a01b0316815260200186848151811061058c5761058c61530f565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f59190615342565b62ffffff168152509050610629878684815181106106155761061561530f565b60200260200101518360006001888a613a92565b1561063c57826106388161535f565b9350505b610665878684815181106106525761065261530f565b602002602001015183600080888a613a92565b1561067857826106748161535f565b9350505b50806106838161535f565b915050610452565b506000816001600160401b038111156106a6576106a6614abf565b6040519080825280602002602001820160405280156106df57816020015b6106cc6147b8565b8152602001906001900390816106c45790505b50905060005b82811015610737578381815181106106ff576106ff61530f565b60200260200101518282815181106107195761071961530f565b6020026020010181905250808061072f9061535f565b9150506106e5565b5095945050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610798573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107c09190810190615254565b90506000815160026107d291906152f8565b6001600160401b038111156107e9576107e9614abf565b60405190808252806020026020018201604052801561082257816020015b61080f6147b8565b8152602001906001900390816108075790505b5090506000805b8351811015610a6257600060405180606001604052808684815181106108515761085161530f565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610896573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ba9190615325565b6001600160a01b031681526020018684815181106108da576108da61530f565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561091f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109439190615325565b6001600160a01b031681526020018684815181106109635761096361530f565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cc9190615342565b62ffffff1681525090506109ff878684815181106109ec576109ec61530f565b602002602001015183600180888a613a92565b15610a125782610a0e8161535f565b9350505b610a3c87868481518110610a2857610a2861530f565b60200260200101518360016000888a613a92565b15610a4f5782610a4b8161535f565b9350505b5080610a5a8161535f565b915050610829565b506000816001600160401b03811115610a7d57610a7d614abf565b604051908082528060200260200182016040528015610ab657816020015b610aa36147b8565b815260200190600190039081610a9b5790505b50905060005b8281101561073757838181518110610ad657610ad661530f565b6020026020010151828281518110610af057610af061530f565b60200260200101819052508080610b069061535f565b915050610abc565b600154604051639525092360e01b815260009182918291829182916001600160a01b031690639525092390610b47908b906004016153c3565b6101c060405180830381865afa158015610b65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8991906153e3565b9194509250905081610b9b81896154f0565b610ba5919061552a565b965081610bb281886154f0565b610bbc919061552a565b9550600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c26919061556d565b509395508f9450505050505b8a60020b8160020b1215610d6757610c58610c52368f90038f018f6155fc565b82612775565b9450610c72610c6c368f90038f018f6155fc565b82610dc1565b93506001600160801b03851615610d5657610ca36001600160801b0385811690670de0b6b3a7640000908816613d6a565b8651604051630ca73f1f60e21b8152919450610d3d918591670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9163329cfc7c91610cf5918e9187908b908b90600401615652565b602060405180830381865af4158015610d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d36919061568d565b9190613d6a565b610d47908b6156a6565b9950610d53838a6156a6565b98505b610d6087826156b9565b9050610c32565b5050505050818787610d7991906156de565b610d8391906154f0565b610d909060020b86615703565b945081610d9d88886156de565b610da791906154f0565b610db49060020b85615703565b9350505050935093915050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda277908290634822244290610dfa908890600401615717565b602060405180830381865afa158015610e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3b919061568d565b846040518363ffffffff1660e01b8152600401610e6592919091825260020b602082015260400190565b602060405180830381865afa158015610e82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea69190615725565b90505b92915050565b610eb761484b565b60006040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f269190615325565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f969190615325565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110069190615342565b62ffffff1690526000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f89061104790899089908990600401615742565b600060405180830381865afa158015611064573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261108c9190810190615831565b60008054919250906001600160a01b0316635d4936ff6110ad898989613e48565b6040518263ffffffff1660e01b81526004016110cb91815260200190565b602060405180830381865afa1580156110e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110c919061568d565b9050600061111b848888611368565b9050604051806101c00160405280858152602001871515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff1681526020018381526020018460200151815260200184604001518152602001828152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fd9190615325565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561123a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125e9190615937565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c89190615325565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113299190615937565b60ff16815260200182841161133f576000611349565b6113498385615952565b8152602001846000015160c001518152509450505050505b9392505050565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906113a1908a90600401615717565b6101c060405180830381865afa1580156113bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e391906153e3565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a9047906114229087908b908b90600401615742565b602060405180830381865afa15801561143f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114639190615965565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b9061149d9088908c908c90600401615742565b600060405180830381865afa1580156114ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114e29190810190615980565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac92611537928b926001600160a01b0316918e15918c918b918b906004016159b4565b600060405180830381865af4158015611554573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261157c9190810190615a0b565b9b9a5050505050505050505050565b600154604051639525092360e01b815260009182916001600160a01b03909116906395250923906115c09086906004016153c3565b6101c060405180830381865afa1580156115de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160291906153e3565b505090506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611646573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166a919061556d565b5050600154604051632411122160e11b815295965060a08a013595600095506001600160a01b03909116935063c6c2c2ca92508391506348222442906116b4908b906004016153c3565b602060405180830381865afa1580156116d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f5919061568d565b6040518263ffffffff1660e01b815260040161171391815260200190565b60a060405180830381865afa158015611730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117549190615a51565b505050506001600160801b031690505b670de0b6b3a76400008211156119e357600061179f61178b670de0b6b3a764000085615952565b608089013590670de0b6b3a7640000613d6a565b905060006117be83670de0b6b3a7640000610d368560808d01356156a6565b905060006117d08260808b0135615952565b90506000600260009054906101000a90046001600160a01b03166001600160a01b031663c6a5026a6040518060a001604052808d60600160208101906118169190615abc565b61182c5761182760208f018f614901565b611842565b8d60000160200160208101906118429190614901565b6001600160a01b031681526020018d60600160208101906118639190615abc565b611882578d600001602001602081019061187d9190614901565b61188f565b61188f60208f018f614901565b6001600160a01b031681526020016118a788876156a6565b81526020018d60000160400160208101906118c29190615ad9565b62ffffff908116825260006020928301526040805160e086901b6001600160e01b031916815284516001600160a01b03908116600483015293850151841660248201529084015160448201526060840151909116606482015260809092015116608482015260a4016080604051808303816000875af1158015611949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196d9190615af6565b509192506000915061199490508b848761198d6080840160608501615abc565b868d6119ec565b50905080156119ac5750949998505050505050505050565b8a60c001358710156119c9575060009a9950505050505050505050565b6119d760c08c013588615952565b96505050505050611764565b50505050919050565b6001546040516324637c3360e11b81526000916060916001600160a01b03909116906348c6f86690611a2c908b908b908b908b908b908b90600401615b3c565b600060405180830381865afa925050508015611a6a57506040513d6000823e601f3d908101601f19168201604052611a679190810190615b7c565b60015b611aad573d808015611a98576040519150601f19603f3d011682016040523d82523d6000602084013e611a9d565b606091505b506000925060609150611ab39050565b90925090505b965096945050505050565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101829052600154604051639525092360e01b81526001600160a01b0390911690639525092390611b56908a90600401615717565b6101c060405180830381865afa158015611b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9891906153e3565b5060020b60208301526001600160a01b039081168083526000805460405163118272bf60e31b815291931691638c1395f891611bdb91908b908b90600401615742565b600060405180830381865afa158015611bf8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c209190810190615831565b9050600085670de0b6b3a764000014611cbb57815160c0015160405163069b8a8b60e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__916334dc545891611c7191908a90600401615bb8565b600060405180830381865af4158015611c8e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611cb69190810190615980565b611cc2565b815160c001515b6040516337a6142160e01b815290915073__$d23a8dd93b7205fa6b646ffed38c165d68$__906337a6142190611cfc908490600401615bda565b6040805180830381865af4158015611d18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3c9190615bed565b600290810b6101608601520b610140840152825160408051633850c7bd60e01b815290516001600160a01b0390921691633850c7bd9160048082019260e0929091908290030181865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb919061556d565b50505050600291820b606087018190526001600160a01b03939093166040808801919091526101608701516101408801516020890151925163146d722d60e31b81528d15156004820152602481019690965290840b6044860152830b606485015290910b60848301525073__$d23a8dd93b7205fa6b646ffed38c165d68$__9063a36b91689060a401602060405180830381865af4158015611e61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e85919061568d565b61018084015260208301516060840151604080860151905162aba2a960e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__9363055d154893611edd938793670de0b6b3a764000093929190600401615c1c565b6040805180830381865af4158015611ef9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1d9190615c61565b60a08501526080840152610180830151600103611f7f576040820151611f4c9087670de0b6b3a7640000613d6a565b87611f5b578360800151611f61565b8360a001515b611f6b9087615c85565b611f759190615c85565b93505050506120a9565b6020820151611f979087670de0b6b3a7640000613d6a565b60c08401819052611fb3908690670de0b6b3a764000090613d6a565b60e08401819052611fe390670de0b6b3a76400009089611fd7578560800151610d36565b8560a001519190613d6a565b61010084015286611ff8578260a00151611ffe565b82608001515b83610100015161200e91906156a6565b8360c001511015612027578160400151611f7590615ca5565b86612036578260a0015161203c565b82608001515b8361010001518460c001516120519190615952565b61205b9190615952565b610120840181905260e084015161207b9190670de0b6b3a7640000613d6a565b61012084015260408201516120999087670de0b6b3a7640000613d6a565b836101200151611f759190615c85565b95945050505050565b600154604051632411122160e11b815260009182916001600160a01b03909116906348222442906120e79088906004016153c3565b602060405180830381865afa158015612104573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612128919061568d565b6001546040516315083fbb60e31b8152600481018390529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015612177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061219b919061568d565b600154604051630ca32ed160e31b8152600481018590529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa1580156121ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061220e9190615cc1565b6001600160801b03945090506000808080895b8960020b8160020b121561236e5760015460405163da69b0b360e01b8152600481018a9052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa158015612282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122a69190615725565b6001546040516319fda27760e01b8152600481018b9052600284900b60248201529196508895506001600160a01b0316906319fda27790604401602060405180830381865afa1580156122fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123219190615725565b92508261232e8587615cde565b6123389190615cde565b9150886001600160801b0316826001600160801b031610612359578861235b565b815b985061236786826156b9565b9050612221565b50505050505050509392505050565b6000808251116123c15760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b60448201526064015b60405180910390fd5b600154604051632411122160e11b8152600091829182916001600160a01b0316906348222442906123f69089906004016153c3565b602060405180830381865afa158015612413573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612437919061568d565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015612486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124aa9190615cc1565b6001546040516315083fbb60e31b8152600481018590529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa1580156124f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061251d919061568d565b905060005b8751811015612766578288828151811061253e5761253e61530f565b6020026020010151600001516125549190615cfe565b60020b156125925760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b60448201526064016123b8565b60015488516001600160a01b039091169063da69b0b39086908b90859081106125bd576125bd61530f565b6020026020010151600001516040518363ffffffff1660e01b81526004016125f292919091825260020b602082015260400190565b602060405180830381865afa15801561260f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126339190615725565b9550856001600160801b03166000036126555760009650505050505050610ea9565b60015488516001600160a01b03909116906319fda2779086908b90859081106126805761268061530f565b6020026020010151600001516040518363ffffffff1660e01b81526004016126b592919091825260020b602082015260400190565b602060405180830381865afa1580156126d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f69190615725565b945087818151811061270a5761270a61530f565b602002602001015160200151856127219190615d20565b6001600160801b031682876001600160801b031661273f9190615952565b10156127545760009650505050505050610ea9565b8061275e8161535f565b915050612522565b50600198975050505050505050565b600154604051632411122160e11b81526000916001600160a01b03169063da69b0b3908290634822244290610dfa908890600401615717565b6127b66147b8565b60006040518060600160405280876001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612801573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128259190615325565b6001600160a01b03168152602001876001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612871573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128959190615325565b6001600160a01b03168152602001876001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156128e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129059190615342565b62ffffff1690529050600061291c87878787612fdf565b606081015190915063ffffffff1615612bcc5760008160e0015160001461296f5761296a826060015163ffffffff16426129569190615952565b60e084015190670de0b6b3a7640000613e9e565b612979565b670de0b6b3a76400005b60808301519091506000906129979083670de0b6b3a7640000613d6a565b9050808360a00151116129aa57806129b0565b8260a001515b9050604051806101a0016040528085815260200187151581526020018815158152602001846040015163ffffffff168152602001846060015163ffffffff168152602001846080015181526020018460a0015181526020018460c0015181526020018460e00151815260200184610100015181526020018281526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8f9190615325565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612af09190615937565b60ff1681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b5a9190615325565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bbb9190615937565b60ff16815250945050505050612bcf565b50505b949350505050565b600154604051632411122160e11b815260609184916000916001600160a01b031690634822244290612c0d908990600401615717565b602060405180830381865afa158015612c2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4e919061568d565b600154604051639525092360e01b815291925060009182916001600160a01b031690639525092390612c84908b90600401615717565b6101c060405180830381865afa158015612ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cc691906153e3565b50909250905080612cd781896154f0565b612ce1919061552a565b965080612cee81886154f0565b612cf8919061552a565b9550600081612d0789896156de565b612d1191906154f0565b60020b6001600160401b03811115612d2b57612d2b614abf565b604051908082528060200260200182016040528015612d8e57816020015b612d7b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b815260200190600190039081612d495790505b509050600080846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612dd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612df6919061556d565b50505050505090505b8860020b8760020b1215612fd057612ea981612e1a89613f5c565b612e2c612e27888c6156b9565b613f5c565b60015460405163da69b0b360e01b8152600481018c905260028d900b60248201526001600160a01b039091169063da69b0b3906044015b602060405180830381865afa158015612e80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ea49190615725565b61427f565b848481518110612ebb57612ebb61530f565b6020026020010151602001858581518110612ed857612ed861530f565b60209081029190910101516040019190915252612f4081612ef889613f5c565b612f05612e27888c6156b9565b6001546040516319fda27760e01b8152600481018c905260028d900b60248201526001600160a01b03909116906319fda27790604401612e63565b848481518110612f5257612f5261530f565b6020026020010151606001858581518110612f6f57612f6f61530f565b60209081029190910101516080019190915252612f93612f8e88613f5c565b61431b565b838381518110612fa557612fa561530f565b60209081029190910101515281612fbb8161535f565b9250612fc9905084886156b9565b9650612dff565b50909998505050505050505050565b60408051610180810182526000610120820181815261014083018290526101608301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915260005460405163bfd4c2a560e01b81526001600160a01b03878116600483015286811660248301528515156044830152841515606483015290911690639c3f1e9090829063bfd4c2a590608401602060405180830381865afa1580156130a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130cd919061568d565b6040518263ffffffff1660e01b81526004016130eb91815260200190565b61016060405180830381865afa158015613109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061312d9190615d40565b6101008a01525060c088015260a0870152608086015263ffffffff90811660608601521660408401521515602083015250949350505050565b6000806000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156131a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131cd9190615325565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561320b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061322f9190615325565b856001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561326d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132919190615342565b9196909550909350915050565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906132d7908a90600401615717565b6101c060405180830381865afa1580156132f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061331991906153e3565b600154604051632411122160e11b815293965091945092506000916001600160a01b0390911690634822244290613354908b90600401615717565b602060405180830381865afa158015613371573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613395919061568d565b6000805460405163d93a904760e01b815292935090916001600160a01b039091169063d93a9047906133cf9088908c908c90600401615742565b602060405180830381865afa1580156133ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134109190615965565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b9061344a9089908d908d90600401615742565b600060405180830381865afa158015613467573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261348f9190810190615980565b60018054865160405163aa7532af60e01b815293945073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9363aa7532af936134e1938c936001600160a01b03909116928c9289918c90600401615e09565b602060405180830381865af41580156134fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613522919061568d565b9a9950505050505050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015613587573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526135af9190810190615254565b90506000815160026135c191906152f8565b6001600160401b038111156135d8576135d8614abf565b60405190808252806020026020018201604052801561361157816020015b6135fe61484b565b8152602001906001900390816135f65790505b5090506000805b835181101561384e57600060405180606001604052808684815181106136405761364061530f565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136a99190615325565b6001600160a01b031681526020018684815181106136c9576136c961530f565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561370e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137329190615325565b6001600160a01b031681526020018684815181106137525761375261530f565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015613797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137bb9190615342565b62ffffff1681525090506137ed878684815181106137db576137db61530f565b6020026020010151836001878961433c565b1561380057826137fc8161535f565b9350505b613828878684815181106138165761381661530f565b6020026020010151836000878961433c565b1561383b57826138378161535f565b9350505b50806138468161535f565b915050613618565b506000816001600160401b0381111561386957613869614abf565b6040519080825280602002602001820160405280156138a257816020015b61388f61484b565b8152602001906001900390816138875790505b50905060005b82811015610737578381815181106138c2576138c261530f565b60200260200101518282815181106138dc576138dc61530f565b602002602001018190525080806138f29061535f565b9150506138a8565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390613933908990600401615717565b6101c060405180830381865afa158015613951573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061397591906153e3565b600154604051632411122160e11b815293965091945092506000916001600160a01b03909116906348222442906139b0908a90600401615717565b602060405180830381865afa1580156139cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139f1919061568d565b600154835160405163aa7532af60e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263aa7532af92613a469289926001600160a01b03909216918991908d906000908a90600401615e09565b602060405180830381865af4158015613a63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a87919061568d565b979650505050505050565b600080613aa1888a8789612fdf565b606081015190915063ffffffff1615613d5b5760008160e00151600014613ae057613adb826060015163ffffffff16426129569190615952565b613aea565b670de0b6b3a76400005b6080830151909150600090613b089083670de0b6b3a7640000613d6a565b9050808360a0015111613b1b5780613b21565b8260a001515b9050604051806101a001604052808a815260200189151581526020018815158152602001846040015163ffffffff168152602001846060015163ffffffff168152602001846080015181526020018460a0015181526020018460c0015181526020018460e00151815260200184610100015181526020018281526020018b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613bdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c009190615325565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613c3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c619190615937565b60ff1681526020018b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ccb9190615325565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d2c9190615937565b60ff16815250858781518110613d4457613d4461530f565b602002602001018190525060019350505050613a87565b50600098975050505050505050565b6000808060001985870985870292508281108382030391505080600003613da35760008411613d9857600080fd5b508290049050611361565b808411613ddb5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b60448201526064016123b8565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b6000838015613f3e57600184168015613eb957859250613ebd565b8392505b508260011c8460011c94505b8415613f38578560801c15613edd57600080fd5b85860281810181811015613ef057600080fd5b8590049650506001851615613f2d578583028387820414613f16578615613f1657600080fd5b81810181811015613f2657600080fd5b8590049350505b8460011c9450613ec9565b50613f54565b838015613f4e5760009250613f52565b8392505b505b509392505050565b60008060008360020b12613f73578260020b613f7b565b8260020b6000035b9050620d89e8811115613fa1576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003613fb857600160801b613fca565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613ffe576ffff97272373d413259a46990580e213a0260801c5b600482161561401d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561403c576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561405b576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561407a576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615614099576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156140b8576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156140d8576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156140f8576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615614118576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615614138576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615614158576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615614178576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615614198576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156141b8576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156141d9576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156141f9576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615614218576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615614235576b048a170391f7dc42444e8fa20260801c5b60008460020b1315614256578060001981614252576142526154da565b0490505b64010000000081061561426a57600161426d565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b031611156142a0579293925b846001600160a01b0316866001600160a01b0316116142cb576142c48585856146d4565b9150614312565b836001600160a01b0316866001600160a01b03161015614304576142f08685856146d4565b91506142fd858785614747565b9050614312565b61430f858585614747565b90505b94509492505050565b60008061432783614791565b90506113618182670de0b6b3a7640000613d6a565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f890614371908a908c908a90600401615742565b600060405180830381865afa15801561438e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526143b69190810190615831565b60008054919250906001600160a01b0316635d4936ff6143d78a8c8a613e48565b6040518263ffffffff1660e01b81526004016143f591815260200190565b602060405180830381865afa158015614412573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614436919061568d565b90506000614445888b89611368565b6020840151909150156146c257604051806101c00160405280898152602001881515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff16815260200183815260200184602001518152602001846040015181526020016144d58a8d8b611368565b81526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015614518573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061453c9190615325565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015614579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061459d9190615937565b60ff1681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156145e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146079190615325565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015614644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146689190615937565b60ff16815260200182841161467e576000614688565b6146888385615952565b8152602001846000015160c001518152508587815181106146ab576146ab61530f565b6020026020010181905250600193505050506146ca565b600093505050505b9695505050505050565b6000826001600160a01b0316846001600160a01b031611156146f4579192915b6001600160a01b03841661473d6fffffffffffffffffffffffffffffffff60601b606085901b166147258787615e65565b6001600160a01b0316866001600160a01b0316613d6a565b612bcf9190615703565b6000826001600160a01b0316846001600160a01b03161115614767579192915b612bcf6001600160801b03831661477e8686615e65565b6001600160a01b0316600160601b613d6a565b600060606147b06001600160a01b038416670de0b6b3a76400006152f8565b901c92915050565b60408051610200810190915260006101a082018181526101c083018290526101e083019190915281908152602001600015158152602001600015158152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610220810190915260006101c082018181526101e08301829052610200830191909152819081526020016000151581526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff16815260200160008152602001606081525090565b6001600160a01b03811681146148fe57600080fd5b50565b60006020828403121561491357600080fd5b8135611361816148e9565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b61495582825161491e565b60208101518015156060840152506040810151801515608084015250606081015163ffffffff811660a084015250608081015163ffffffff811660c08401525060a081015160e08381019190915260c0820151610100808501919091529082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015161018080850191909152908201516101a084015201516101c090910152565b6020808252825182820181905260009190848201906040850190845b81811015614a4257614a2e83855161494a565b928401926101e09290920191600101614a1b565b50909695505050505050565b600060608284031215614a6057600080fd5b50919050565b8060020b81146148fe57600080fd5b600080600060a08486031215614a8a57600080fd5b614a948585614a4e565b92506060840135614aa481614a66565b91506080840135614ab481614a66565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715614af757614af7614abf565b60405290565b60405160c081016001600160401b0381118282101715614af757614af7614abf565b60405160e081016001600160401b0381118282101715614af757614af7614abf565b604051601f8201601f191681016001600160401b0381118282101715614b6957614b69614abf565b604052919050565b62ffffff811681146148fe57600080fd5b600060608284031215614b9457600080fd5b614b9c614ad5565b90508135614ba9816148e9565b81526020820135614bb9816148e9565b60208201526040820135614bcc81614b71565b604082015292915050565b60008060808385031215614bea57600080fd5b614bf48484614b82565b91506060830135614c0481614a66565b809150509250929050565b80151581146148fe57600080fd5b600080600060608486031215614c3257600080fd5b8335614c3d816148e9565b92506020840135614c4d816148e9565b91506040840135614ab481614c0f565b600081518084526020808501945080840160005b83811015614ccd578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c09096019590820190600101614c71565b509495945050505050565b6000610200614ce884845161491e565b602083015180151560608601525060408301516080850152606083015160a08501526080830151614d2160c086018263ffffffff169052565b5060a083015163ffffffff811660e08601525060c08301516101008581019190915260e08401516101208087019190915290840151610140808701919091529084015161016080870191909152908401519061018090614d858288018460ff169052565b85015191506101a0614d9b8782018460ff169052565b908501516101c08701528401516101e0860183905290506120a982860182614c5d565b602081526000610ea66020830184614cd8565b600080600060a08486031215614de657600080fd5b614df08585614b82565b92506060840135614e00816148e9565b91506080840135614ab481614c0f565b600060e08284031215614a6057600080fd5b6000806000806000806101008789031215614e3c57600080fd5b614e468888614a4e565b9550606087013594506080870135935060a0870135614e6481614c0f565b925060c0870135915060e0870135614e7b816148e9565b809150509295509295509295565b828152604060208201526000612bcf6040830184614c5d565b600080600080600060e08688031215614eba57600080fd5b614ec48787614b82565b94506060860135614ed4816148e9565b93506080860135614ee481614c0f565b9497939650939460a0810135945060c0013592915050565b60006001600160401b03821115614f1557614f15614abf565b5060051b60200190565b6001600160801b03811681146148fe57600080fd5b600082601f830112614f4557600080fd5b81356020614f5a614f5583614efc565b614b41565b82815260c09283028501820192828201919087851115614f7957600080fd5b8387015b85811015614ff05781818a031215614f955760008081fd5b614f9d614afd565b8135614fa881614a66565b815281860135614fb781614f1f565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101614f7d565b5090979650505050505050565b6000806080838503121561501057600080fd5b61501a8484614a4e565b915060608301356001600160401b0381111561503557600080fd5b61504185828601614f34565b9150509250929050565b6000806000806080858703121561506157600080fd5b843561506c816148e9565b9350602085013561507c816148e9565b9250604085013561508c81614c0f565b9150606085013561509c81614c0f565b939692955090935050565b6101e08101610ea9828461494a565b600080600060a084860312156150cb57600080fd5b614a948585614b82565b602080825282518282018190526000919060409081850190868401855b828110156151365781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a090930192908501906001016150f2565b5091979650505050505050565b60006101608201905061515782845161491e565b602083015115156060830152604083015163ffffffff8116608084015250606083015163ffffffff811660a084015250608083015160c083015260a083015160e083015260c0830151610100818185015260e085015161012085015280850151610140850152505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561521a57603f19888603018452615208858351614cd8565b945092850192908501906001016151ec565b5092979650505050505050565b6000806080838503121561523a57600080fd5b61501a8484614b82565b805161524f816148e9565b919050565b6000602080838503121561526757600080fd5b82516001600160401b0381111561527d57600080fd5b8301601f8101851361528e57600080fd5b805161529c614f5582614efc565b81815260059190911b820183019083810190878311156152bb57600080fd5b928401925b82841015613a875783516152d3816148e9565b825292840192908401906152c0565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ea957610ea96152e2565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561533757600080fd5b8151611361816148e9565b60006020828403121561535457600080fd5b815161136181614b71565b600060018201615371576153716152e2565b5060010190565b8035615383816148e9565b6001600160a01b03908116835260208201359061539f826148e9565b16602083015260408101356153b381614b71565b62ffffff81166040840152505050565b60608101610ea98284615378565b805161ffff8116811461524f57600080fd5b60008060008385036101c08112156153fa57600080fd5b8451615405816148e9565b602086015190945061541681614a66565b9250603f19016101808082121561542c57600080fd5b615434614b1f565b60c083121561544257600080fd5b61544a614afd565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a08401528281526101008701516020820152610120870151604082015261014087015160608201526154b661016088016153d1565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b80615507576155076154da565b627fffff19821460001982141615615521576155216152e2565b90059392505050565b60008260020b8260020b028060020b915080821461554a5761554a6152e2565b5092915050565b805160ff8116811461524f57600080fd5b805161524f81614c0f565b600080600080600080600060e0888a03121561558857600080fd5b8751615593816148e9565b60208901519097506155a481614a66565b95506155b2604089016153d1565b94506155c0606089016153d1565b93506155ce608089016153d1565b92506155dc60a08901615551565b915060c08801516155ec81614c0f565b8091505092959891949750929550565b60006060828403121561560e57600080fd5b610ea68383614b82565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600286900b8152610140810161566b6020830187615618565b60e0820194909452600292830b610100820152910b6101209091015292915050565b60006020828403121561569f57600080fd5b5051919050565b80820180821115610ea957610ea96152e2565b600281810b9083900b01627fffff8113627fffff1982121715610ea957610ea96152e2565b600282810b9082900b03627fffff198112627fffff82131715610ea957610ea96152e2565b600082615712576157126154da565b500490565b60608101610ea9828461491e565b60006020828403121561573757600080fd5b815161136181614f1f565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805163ffffffff8116811461524f57600080fd5b600082601f83011261578b57600080fd5b8151602061579b614f5583614efc565b82815260c092830285018201928282019190878511156157ba57600080fd5b8387015b85811015614ff05781818a0312156157d65760008081fd5b6157de614afd565b81516157e981614a66565b8152818601516157f881614f1f565b8187015260408281015190820152606080830151908201526080808301519082015260a0808301519082015284529284019281016157be565b60006020828403121561584357600080fd5b81516001600160401b038082111561585a57600080fd5b908301906060828603121561586e57600080fd5b615876614ad5565b82518281111561588557600080fd5b830160e0818803121561589757600080fd5b61589f614b1f565b6158a882615244565b81526158b660208301615562565b602082015260408201516040820152606082015160608201526158db60808301615766565b60808201526158ec60a08301615766565b60a082015260c08201518481111561590357600080fd5b61590f8982850161577a565b60c0830152508252506020838101519082015260409283015192810192909252509392505050565b60006020828403121561594957600080fd5b610ea682615551565b81810381811115610ea957610ea96152e2565b60006020828403121561597757600080fd5b610ea682615766565b60006020828403121561599257600080fd5b81516001600160401b038111156159a857600080fd5b612bcf8482850161577a565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff8416608082015260006101806159f860a0840186615618565b8061016084015261352281840185614c5d565b60008060408385031215615a1e57600080fd5b82516001600160401b03811115615a3457600080fd5b615a408582860161577a565b925050602083015190509250929050565b600080600080600060a08688031215615a6957600080fd5b8551615a7481614f1f565b6020870151909550615a8581614f1f565b6040870151909450615a9681614f1f565b6060870151909350615aa781614f1f565b80925050608086015190509295509295909350565b600060208284031215615ace57600080fd5b813561136181614c0f565b600060208284031215615aeb57600080fd5b813561136181614b71565b60008060008060808587031215615b0c57600080fd5b845193506020850151615b1e816148e9565b9250615b2c60408601615766565b6060959095015193969295505050565b6101008101615b4b8289615378565b6060820196909652608081019490945291151560a084015260c08301526001600160a01b031660e090910152919050565b60008060408385031215615b8f57600080fd5b8251915060208301516001600160401b03811115615bac57600080fd5b6150418582860161577a565b604081526000615bcb6040830185614c5d565b90508260208301529392505050565b602081526000610ea66020830184614c5d565b60008060408385031215615c0057600080fd5b8251615c0b81614a66565b6020840151909250614c0481614a66565b60a081526000615c2f60a0830188614c5d565b602083019690965250600293840b60408201529190920b60608201526001600160a01b03909116608090910152919050565b60008060408385031215615c7457600080fd5b505080516020909101519092909150565b818103600083128015838313168383128216171561554a5761554a6152e2565b6000600160ff1b8201615cba57615cba6152e2565b5060000390565b600060208284031215615cd357600080fd5b815161136181614a66565b6001600160801b0382811682821603908082111561554a5761554a6152e2565b60008260020b80615d1157615d116154da565b808360020b0791505092915050565b6001600160801b0381811683821601908082111561554a5761554a6152e2565b6000806000806000806000806000898b03610160811215615d6057600080fd5b6060811215615d6e57600080fd5b50615d77614ad5565b8a51615d82816148e9565b815260208b0151615d92816148e9565b602082015260408b0151615da581614b71565b60408201529850615db860608b01615562565b9750615dc660808b01615766565b9650615dd460a08b01615766565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b6001600160a01b03888116825287166020820152600286900b60408201526000610180615e396060840188615618565b80610120840152615e4c81840187614c5d565b9415156101408401525050610160015295945050505050565b6001600160a01b0382811682821603908082111561554a5761554a6152e256fea2646970667358221220b1cdc2a405e410fa76bdc6fea62bb5515f23a6143c4a6fb0cbe3237f2f790c1d64736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/Util.sol:Utils"]: string;
}
