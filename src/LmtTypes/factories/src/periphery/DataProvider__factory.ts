/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoterV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stepSize",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.MaxLeverageParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "computeMaxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX160",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getBinsDataInBulk",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Borrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Borrowed",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.BinData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fillerOutput",
        type: "uint256",
      },
    ],
    name: "getEstimatedPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken",
        type: "bool",
      },
    ],
    name: "getMarginPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getMinMaxTicks",
    outputs: [
      {
        internalType: "int24",
        name: "min",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "max",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrderInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getPostInstantaneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getPreInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getUtilAndAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162005cf138038062005cf1833981016040819052620000349162000092565b600080546001600160a01b03199081166001600160a01b039485161790915560018054821694841694909417909355600280549093169116179055620000dc565b80516001600160a01b03811681146200008d57600080fd5b919050565b600080600060608486031215620000a857600080fd5b620000b38462000075565b9250620000c36020850162000075565b9150620000d36040850162000075565b90509250925092565b615c0580620000ec6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638e68ad36116100ad578063a9b6b32b11610071578063a9b6b32b146102e0578063c229a33214610300578063c3042bcd1461033e578063dd65c32814610351578063dec8ae011461037157600080fd5b80638e68ad3614610257578063911f1b471461026a578063912a8e001461028d5780639255bbc1146102a0578063a55ac3eb146102c057600080fd5b80633aea807f116100f45780633aea807f146101c2578063433a1e18146101e357806348c6f866146101f65780634fbfe42d1461021757806384b885571461022a57600080fd5b8063093376fe146101265780631f2ecd831461014f57806329aa3819146101775780632d6cf1f4146101a2575b600080fd5b610139610134366004614617565b610384565b6040516101469190614715565b60405180910390f35b61016261015d36600461478b565b6107d4565b60408051928352602083019190915201610146565b61018a6101853660046148ed565b610a87565b6040516001600160801b039091168152602001610146565b6101b56101b0366004614933565b610b75565b6040516101469190614ad4565b6101d56101d0366004614ae7565b61102e565b604051908152602001610146565b6101d56101f1366004614b26565b611251565b610209610204366004614b38565b6116b2565b604051610146929190614b9f565b6101d5610225366004614bb8565b611751565b61023d610238366004614d13565b611d45565b60408051600293840b81529190920b602082015201610146565b61018a61026536600461478b565b611dc8565b61027d610278366004614d47565b612093565b6040519015158152602001610146565b61018a61029b3660046148ed565b61248b565b6102b36102ae366004614d95565b6124c4565b6040516101469190614df1565b6102d36102ce366004614e00565b6128ed565b6040516101469190614e1f565b6102f36102ee366004614d95565b612cf5565b6040516101469190614e8d565b61031361030e366004614617565b612e7c565b604080516001600160a01b03948516815293909216602084015262ffffff1690820152606001610146565b6101d561034c366004614ae7565b612fb4565b61036461035f366004614617565b613246565b6040516101469190614f0f565b6101d561037f366004614f71565b613610565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104039190810190614f9e565b90506000815160046104159190615042565b6001600160401b0381111561042c5761042c6147d5565b60405190808252806020026020018201604052801561046557816020015b6104526144ce565b81526020019060019003908161044a5790505b5090506000805b835181101561071e576000604051806060016040528086848151811061049457610494615059565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd919061506f565b6001600160a01b0316815260200186848151811061051d5761051d615059565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610586919061506f565b6001600160a01b031681526020018684815181106105a6576105a6615059565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f919061508c565b62ffffff1681525090506106428786848151811061062f5761062f615059565b602002602001015183600180888a6137a8565b156106555782610651816150a9565b9350505b61067f8786848151811061066b5761066b615059565b60200260200101518360016000888a6137a8565b15610692578261068e816150a9565b9350505b6106bc878684815181106106a8576106a8615059565b60200260200101518360006001888a6137a8565b156106cf57826106cb816150a9565b9350505b6106f8878684815181106106e5576106e5615059565b602002602001015183600080888a6137a8565b1561070b5782610707816150a9565b9350505b5080610716816150a9565b91505061046c565b506000816001600160401b03811115610739576107396147d5565b60405190808252806020026020018201604052801561077257816020015b61075f6144ce565b8152602001906001900390816107575790505b50905060005b828110156107ca5783818151811061079257610792615059565b60200260200101518282815181106107ac576107ac615059565b602002602001018190525080806107c2906150a9565b915050610778565b5095945050505050565b600154604051639525092360e01b815260009182918291829182916001600160a01b03169063952509239061080d908b9060040161510d565b6101c060405180830381865afa15801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f919061512d565b9194509250905081610861818961523a565b61086b9190615274565b965081610878818861523a565b6108829190615274565b9550600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156108c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ec91906152b7565b509395508f9450505050505b8a60020b8160020b1215610a2d5761091e610918368f90038f018f615346565b8261248b565b9450610938610932368f90038f018f615346565b82610a87565b93506001600160801b03851615610a1c576109696001600160801b0385811690670de0b6b3a7640000908816613a80565b8651604051630ca73f1f60e21b8152919450610a03918591670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9163329cfc7c916109bb918e9187908b908b9060040161539c565b602060405180830381865af41580156109d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fc91906153d7565b9190613a80565b610a0d908b6153f0565b9950610a19838a6153f0565b98505b610a268782615403565b90506108f8565b5050505050818787610a3f9190615428565b610a49919061523a565b610a569060020b8661544d565b945081610a638888615428565b610a6d919061523a565b610a7a9060020b8561544d565b9350505050935093915050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda277908290634822244290610ac0908890600401615461565b602060405180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0191906153d7565b846040518363ffffffff1660e01b8152600401610b2b92919091825260020b602082015260400190565b602060405180830381865afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c919061546f565b90505b92915050565b610b7d614561565b60006040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec919061506f565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c919061506f565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccc919061508c565b62ffffff1690526000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f890610d0d9089908990899060040161548c565b600060405180830381865afa158015610d2a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d52919081019061557b565b60008054919250906001600160a01b0316635d4936ff610d73898989613b5e565b6040518263ffffffff1660e01b8152600401610d9191815260200190565b602060405180830381865afa158015610dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd291906153d7565b90506000610de184888861102e565b9050604051806101c00160405280858152602001871515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff1681526020018381526020018460200151815260200184604001518152602001828152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec3919061506f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f249190615681565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061506f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fef9190615681565b60ff16815260200182841161100557600061100f565b61100f838561569c565b8152602001846000015160c001518152509450505050505b9392505050565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390611067908a90600401615461565b6101c060405180830381865afa158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a9919061512d565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a9047906110e89087908b908b9060040161548c565b602060405180830381865afa158015611105573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112991906156af565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b906111639088908c908c9060040161548c565b600060405180830381865afa158015611180573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111a891908101906156ca565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac926111fd928b926001600160a01b0316918e15918c918b918b906004016156fe565b600060405180830381865af415801561121a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112429190810190615755565b9b9a5050505050505050505050565b600154604051639525092360e01b815260009182916001600160a01b039091169063952509239061128690869060040161510d565b6101c060405180830381865afa1580156112a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c8919061512d565b505090506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561130c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133091906152b7565b5050600154604051632411122160e11b815295965060a08a013595600095506001600160a01b03909116935063c6c2c2ca925083915063482224429061137a908b9060040161510d565b602060405180830381865afa158015611397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bb91906153d7565b6040518263ffffffff1660e01b81526004016113d991815260200190565b60a060405180830381865afa1580156113f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141a919061579b565b505050506001600160801b031690505b670de0b6b3a76400008211156116a9576000611465611451670de0b6b3a76400008561569c565b608089013590670de0b6b3a7640000613a80565b9050600061148483670de0b6b3a76400006109fc8560808d01356153f0565b905060006114968260808b013561569c565b90506000600260009054906101000a90046001600160a01b03166001600160a01b031663c6a5026a6040518060a001604052808d60600160208101906114dc9190615806565b6114f2576114ed60208f018f614617565b611508565b8d60000160200160208101906115089190614617565b6001600160a01b031681526020018d60600160208101906115299190615806565b611548578d60000160200160208101906115439190614617565b611555565b61155560208f018f614617565b6001600160a01b0316815260200161156d88876153f0565b81526020018d60000160400160208101906115889190615823565b62ffffff908116825260006020928301526040805160e086901b6001600160e01b031916815284516001600160a01b03908116600483015293850151841660248201529084015160448201526060840151909116606482015260809092015116608482015260a4016080604051808303816000875af115801561160f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116339190615840565b509192506000915061165a90508b84876116536080840160608501615806565b868d6116b2565b50905080156116725750949998505050505050505050565b8a60c0013587101561168f575060009a9950505050505050505050565b61169d60c08c01358861569c565b9650505050505061142a565b50505050919050565b6001546040516324637c3360e11b81526000916060916001600160a01b03909116906348c6f866906116f2908b908b908b908b908b908b90600401615886565b600060405180830381865afa92505050801561173057506040513d6000823e601f3d908101601f1916820160405261172d91908101906158c6565b60015b6117405750600090506060611746565b90925090505b965096945050505050565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101829052600154604051639525092360e01b81526001600160a01b03909116906395250923906117e9908a90600401615461565b6101c060405180830381865afa158015611807573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182b919061512d565b5060020b60208301526001600160a01b039081168083526000805460405163118272bf60e31b815291931691638c1395f89161186e91908b908b9060040161548c565b600060405180830381865afa15801561188b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118b3919081019061557b565b9050600085670de0b6b3a76400001461194e57815160c0015160405163069b8a8b60e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__916334dc54589161190491908a90600401615902565b600060405180830381865af4158015611921573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261194991908101906156ca565b611955565b815160c001515b6040516337a6142160e01b815290915073__$d23a8dd93b7205fa6b646ffed38c165d68$__906337a614219061198f908490600401615924565b6040805180830381865af41580156119ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119cf9190615937565b600290810b6101608601520b610140840152825160408051633850c7bd60e01b815290516001600160a01b0390921691633850c7bd9160048082019260e0929091908290030181865afa158015611a2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4e91906152b7565b50505050600291820b606087018190526001600160a01b03939093166040808801919091526101608701516101408801516020890151925163146d722d60e31b81528d15156004820152602481019690965290840b6044860152830b606485015290910b60848301525073__$d23a8dd93b7205fa6b646ffed38c165d68$__9063a36b91689060a401602060405180830381865af4158015611af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1891906153d7565b61018084015260208301516060840151604080860151905162aba2a960e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__9363055d154893611b70938793670de0b6b3a764000093929190600401615966565b6040805180830381865af4158015611b8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb091906159ab565b60a08501526080840152610180830151600103611c12576040820151611bdf9087670de0b6b3a7640000613a80565b87611bee578360800151611bf4565b8360a001515b611bfe90876159cf565b611c0891906159cf565b9350505050611d3c565b6020820151611c2a9087670de0b6b3a7640000613a80565b60c08401819052611c46908690670de0b6b3a764000090613a80565b60e08401819052611c7690670de0b6b3a76400009089611c6a5785608001516109fc565b8560a001519190613a80565b61010084015286611c8b578260a00151611c91565b82608001515b836101000151611ca191906153f0565b8360c001511015611cba578160400151611c08906159ef565b86611cc9578260a00151611ccf565b82608001515b8361010001518460c00151611ce4919061569c565b611cee919061569c565b610120840181905260e0840151611d0e9190670de0b6b3a7640000613a80565b6101208401526040820151611d2c9087670de0b6b3a7640000613a80565b836101200151611c0891906159cf565b95945050505050565b60008073__$d23a8dd93b7205fa6b646ffed38c165d68$$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9363aa7532af936131f7938c936001600160a01b03909116928c9289918c90600401615b53565b602060405180830381865af4158015613214573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061323891906153d7565b9a9950505050505050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561329d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526132c59190810190614f9e565b90506000815160026132d79190615042565b6001600160401b038111156132ee576132ee6147d5565b60405190808252806020026020018201604052801561332757816020015b613314614561565b81526020019060019003908161330c5790505b5090506000805b8351811015613564576000604051806060016040528086848151811061335657613356615059565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561339b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133bf919061506f565b6001600160a01b031681526020018684815181106133df576133df615059565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613424573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613448919061506f565b6001600160a01b0316815260200186848151811061346857613468615059565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156134ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134d1919061508c565b62ffffff168152509050613503878684815181106134f1576134f1615059565b60200260200101518360018789614052565b156135165782613512816150a9565b9350505b61353e8786848151811061352c5761352c615059565b60200260200101518360008789614052565b15613551578261354d816150a9565b9350505b508061355c816150a9565b91505061332e565b506000816001600160401b0381111561357f5761357f6147d5565b6040519080825280602002602001820160405280156135b857816020015b6135a5614561565b81526020019060019003908161359d5790505b50905060005b828110156107ca578381815181106135d8576135d8615059565b60200260200101518282815181106135f2576135f2615059565b60200260200101819052508080613608906150a9565b9150506135be565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390613649908990600401615461565b6101c060405180830381865afa158015613667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061368b919061512d565b600154604051632411122160e11b815293965091945092506000916001600160a01b03909116906348222442906136c6908a90600401615461565b602060405180830381865afa1580156136e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061370791906153d7565b600154835160405163aa7532af60e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263aa7532af9261375c9289926001600160a01b03909216918991908d906000908a90600401615b53565b602060405180830381865af4158015613779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061379d91906153d7565b979650505050505050565b6000806137b7888a8789612cf5565b606081015190915063ffffffff1615613a715760008160e001516000146137f6576137f1826060015163ffffffff164261266c919061569c565b613800565b670de0b6b3a76400005b608083015190915060009061381e9083670de0b6b3a7640000613a80565b9050808360a00151116138315780613837565b8260a001515b9050604051806101a001604052808a815260200189151581526020018815158152602001846040015163ffffffff168152602001846060015163ffffffff168152602001846080015181526020018460a0015181526020018460c0015181526020018460e00151815260200184610100015181526020018281526020018b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613916919061506f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139779190615681565b60ff1681526020018b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156139bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139e1919061506f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a429190615681565b60ff16815250858781518110613a5a57613a5a615059565b60200260200101819052506001935050505061379d565b50600098975050505050505050565b6000808060001985870985870292508281108382030391505080600003613ab95760008411613aae57600080fd5b508290049050611027565b808411613af15760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b60448201526064016120ce565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b6000838015613c5457600184168015613bcf57859250613bd3565b8392505b508260011c8460011c94505b8415613c4e578560801c15613bf357600080fd5b85860281810181811015613c0657600080fd5b8590049650506001851615613c43578583028387820414613c2c578615613c2c57600080fd5b81810181811015613c3c57600080fd5b8590049350505b8460011c9450613bdf565b50613c6a565b838015613c645760009250613c68565b8392505b505b509392505050565b60008060008360020b12613c89578260020b613c91565b8260020b6000035b9050620d89e8811115613cb7576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003613cce57600160801b613ce0565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613d14576ffff97272373d413259a46990580e213a0260801c5b6004821615613d33576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613d52576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613d71576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613d90576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613daf576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613dce576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613dee576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613e0e576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613e2e576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613e4e576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613e6e576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613e8e576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613eae576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613ece576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613eef576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613f0f576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613f2e576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613f4b576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613f6c578060001981613f6857613f68615224565b0490505b640100000000810615613f80576001613f83565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b03161115613fb6579293925b846001600160a01b0316866001600160a01b031611613fe157613fda8585856143ea565b9150614028565b836001600160a01b0316866001600160a01b0316101561401a576140068685856143ea565b915061401385878561445d565b9050614028565b61402585858561445d565b90505b94509492505050565b60008061403d836144a7565b90506110278182670de0b6b3a7640000613a80565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f890614087908a908c908a9060040161548c565b600060405180830381865afa1580156140a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526140cc919081019061557b565b60008054919250906001600160a01b0316635d4936ff6140ed8a8c8a613b5e565b6040518263ffffffff1660e01b815260040161410b91815260200190565b602060405180830381865afa158015614128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061414c91906153d7565b9050600061415b888b8961102e565b6020840151909150156143d857604051806101c00160405280898152602001881515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff16815260200183815260200184602001518152602001846040015181526020016141eb8a8d8b61102e565b81526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561422e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614252919061506f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561428f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142b39190615681565b60ff1681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156142f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061431d919061506f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561435a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061437e9190615681565b60ff16815260200182841161439457600061439e565b61439e838561569c565b8152602001846000015160c001518152508587815181106143c1576143c1615059565b6020026020010181905250600193505050506143e0565b600093505050505b9695505050505050565b6000826001600160a01b0316846001600160a01b0316111561440a579192915b6001600160a01b0384166144536fffffffffffffffffffffffffffffffff60601b606085901b1661443b8787615baf565b6001600160a01b0316866001600160a01b0316613a80565b6128e5919061544d565b6000826001600160a01b0316846001600160a01b0316111561447d579192915b6128e56001600160801b0383166144948686615baf565b6001600160a01b0316600160601b613a80565b600060606144c66001600160a01b038416670de0b6b3a7640000615042565b901c92915050565b60408051610200810190915260006101a082018181526101c083018290526101e083019190915281908152602001600015158152602001600015158152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610220810190915260006101c082018181526101e08301829052610200830191909152819081526020016000151581526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff16815260200160008152602001606081525090565b6001600160a01b038116811461461457600080fd5b50565b60006020828403121561462957600080fd5b8135611027816145ff565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b61466b828251614634565b60208101518015156060840152506040810151801515608084015250606081015163ffffffff811660a084015250608081015163ffffffff811660c08401525060a081015160e08381019190915260c0820151610100808501919091529082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015161018080850191909152908201516101a084015201516101c090910152565b6020808252825182820181905260009190848201906040850190845b8181101561475857614744838551614660565b928401926101e09290920191600101614731565b50909695505050505050565b60006060828403121561477657600080fd5b50919050565b8060020b811461461457600080fd5b600080600060a084860312156147a057600080fd5b6147aa8585614764565b925060608401356147ba8161477c565b915060808401356147ca8161477c565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561480d5761480d6147d5565b60405290565b60405160c081016001600160401b038111828210171561480d5761480d6147d5565b60405160e081016001600160401b038111828210171561480d5761480d6147d5565b604051601f8201601f191681016001600160401b038111828210171561487f5761487f6147d5565b604052919050565b62ffffff8116811461461457600080fd5b6000606082840312156148aa57600080fd5b6148b26147eb565b905081356148bf816145ff565b815260208201356148cf816145ff565b602082015260408201356148e281614887565b604082015292915050565b6000806080838503121561490057600080fd5b61490a8484614898565b9150606083013561491a8161477c565b809150509250929050565b801515811461461457600080fd5b60008060006060848603121561494857600080fd5b8335614953816145ff565b92506020840135614963816145ff565b915060408401356147ca81614925565b600081518084526020808501945080840160005b838110156149e3578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c09096019590820190600101614987565b509495945050505050565b60006102006149fe848451614634565b602083015180151560608601525060408301516080850152606083015160a08501526080830151614a3760c086018263ffffffff169052565b5060a083015163ffffffff811660e08601525060c08301516101008581019190915260e08401516101208087019190915290840151610140808701919091529084015161016080870191909152908401519061018090614a9b8288018460ff169052565b85015191506101a0614ab18782018460ff169052565b908501516101c08701528401516101e086018390529050611d3c82860182614973565b602081526000610b6c60208301846149ee565b600080600060a08486031215614afc57600080fd5b614b068585614898565b92506060840135614b16816145ff565b915060808401356147ca81614925565b600060e0828403121561477657600080fd5b6000806000806000806101008789031215614b5257600080fd5b614b5c8888614764565b9550606087013594506080870135935060a0870135614b7a81614925565b925060c0870135915060e0870135614b91816145ff565b809150509295509295509295565b8281526040602082015260006128e56040830184614973565b600080600080600060e08688031215614bd057600080fd5b614bda8787614898565b94506060860135614bea816145ff565b93506080860135614bfa81614925565b9497939650939460a0810135945060c0013592915050565b60006001600160401b03821115614c2b57614c2b6147d5565b5060051b60200190565b6001600160801b038116811461461457600080fd5b600082601f830112614c5b57600080fd5b81356020614c70614c6b83614c12565b614857565b82815260c09283028501820192828201919087851115614c8f57600080fd5b8387015b85811015614d065781818a031215614cab5760008081fd5b614cb3614813565b8135614cbe8161477c565b815281860135614ccd81614c35565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101614c93565b5090979650505050505050565b600060208284031215614d2557600080fd5b81356001600160401b03811115614d3b57600080fd5b6128e584828501614c4a565b60008060808385031215614d5a57600080fd5b614d648484614764565b915060608301356001600160401b03811115614d7f57600080fd5b614d8b85828601614c4a565b9150509250929050565b60008060008060808587031215614dab57600080fd5b8435614db6816145ff565b93506020850135614dc6816145ff565b92506040850135614dd681614925565b91506060850135614de681614925565b939692955090935050565b6101e08101610b6f8284614660565b600080600060a08486031215614e1557600080fd5b6147aa8585614898565b602080825282518282018190526000919060409081850190868401855b82811015614e805781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101614e3c565b5091979650505050505050565b600061016082019050614ea1828451614634565b602083015115156060830152604083015163ffffffff8116608084015250606083015163ffffffff811660a084015250608083015160c083015260a083015160e083015260c0830151610100818185015260e085015161012085015280850151610140850152505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614f6457603f19888603018452614f528583516149ee565b94509285019290850190600101614f36565b5092979650505050505050565b60008060808385031215614f8457600080fd5b614d648484614898565b8051614f99816145ff565b919050565b60006020808385031215614fb157600080fd5b82516001600160401b03811115614fc757600080fd5b8301601f81018513614fd857600080fd5b8051614fe6614c6b82614c12565b81815260059190911b8201830190838101908783111561500557600080fd5b928401925b8284101561379d57835161501d816145ff565b8252928401929084019061500a565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610b6f57610b6f61502c565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561508157600080fd5b8151611027816145ff565b60006020828403121561509e57600080fd5b815161102781614887565b6000600182016150bb576150bb61502c565b5060010190565b80356150cd816145ff565b6001600160a01b0390811683526020820135906150e9826145ff565b16602083015260408101356150fd81614887565b62ffffff81166040840152505050565b60608101610b6f82846150c2565b805161ffff81168114614f9957600080fd5b60008060008385036101c081121561514457600080fd5b845161514f816145ff565b60208601519094506151608161477c565b9250603f19016101808082121561517657600080fd5b61517e614835565b60c083121561518c57600080fd5b615194614813565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a0840152828152610100870151602082015261012087015160408201526101408701516060820152615200610160880161511b565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b8061525157615251615224565b627fffff1982146000198214161561526b5761526b61502c565b90059392505050565b60008260020b8260020b028060020b91508082146152945761529461502c565b5092915050565b805160ff81168114614f9957600080fd5b8051614f9981614925565b600080600080600080600060e0888a0312156152d257600080fd5b87516152dd816145ff565b60208901519097506152ee8161477c565b95506152fc6040890161511b565b945061530a6060890161511b565b93506153186080890161511b565b925061532660a0890161529b565b915060c088015161533681614925565b8091505092959891949750929550565b60006060828403121561535857600080fd5b610b6c8383614898565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600286900b815261014081016153b56020830187615362565b60e0820194909452600292830b610100820152910b6101209091015292915050565b6000602082840312156153e957600080fd5b5051919050565b80820180821115610b6f57610b6f61502c565b600281810b9083900b01627fffff8113627fffff1982121715610b6f57610b6f61502c565b600282810b9082900b03627fffff198112627fffff82131715610b6f57610b6f61502c565b60008261545c5761545c615224565b500490565b60608101610b6f8284614634565b60006020828403121561548157600080fd5b815161102781614c35565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805163ffffffff81168114614f9957600080fd5b600082601f8301126154d557600080fd5b815160206154e5614c6b83614c12565b82815260c0928302850182019282820191908785111561550457600080fd5b8387015b85811015614d065781818a0312156155205760008081fd5b615528614813565b81516155338161477c565b81528186015161554281614c35565b8187015260408281015190820152606080830151908201526080808301519082015260a080830151908201528452928401928101615508565b60006020828403121561558d57600080fd5b81516001600160401b03808211156155a457600080fd5b90830190606082860312156155b857600080fd5b6155c06147eb565b8251828111156155cf57600080fd5b830160e081880312156155e157600080fd5b6155e9614835565b6155f282614f8e565b8152615600602083016152ac565b60208201526040820151604082015260608201516060820152615625608083016154b0565b608082015261563660a083016154b0565b60a082015260c08201518481111561564d57600080fd5b615659898285016154c4565b60c0830152508252506020838101519082015260409283015192810192909252509392505050565b60006020828403121561569357600080fd5b610b6c8261529b565b81810381811115610b6f57610b6f61502c565b6000602082840312156156c157600080fd5b610b6c826154b0565b6000602082840312156156dc57600080fd5b81516001600160401b038111156156f257600080fd5b6128e5848285016154c4565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff84166080820152600061018061574260a0840186615362565b8061016084015261323881840185614973565b6000806040838503121561576857600080fd5b82516001600160401b0381111561577e57600080fd5b61578a858286016154c4565b925050602083015190509250929050565b600080600080600060a086880312156157b357600080fd5b85516157be81614c35565b60208701519095506157cf81614c35565b60408701519094506157e081614c35565b60608701519093506157f181614c35565b80925050608086015190509295509295909350565b60006020828403121561581857600080fd5b813561102781614925565b60006020828403121561583557600080fd5b813561102781614887565b6000806000806080858703121561585657600080fd5b845193506020850151615868816145ff565b9250615876604086016154b0565b6060959095015193969295505050565b610100810161589582896150c2565b6060820196909652608081019490945291151560a084015260c08301526001600160a01b031660e090910152919050565b600080604083850312156158d957600080fd5b8251915060208301516001600160401b038111156158f657600080fd5b614d8b858286016154c4565b6040815260006159156040830185614973565b90508260208301529392505050565b602081526000610b6c6020830184614973565b6000806040838503121561594a57600080fd5b82516159558161477c565b602084015190925061491a8161477c565b60a08152600061597960a0830188614973565b602083019690965250600293840b60408201529190920b60608201526001600160a01b03909116608090910152919050565b600080604083850312156159be57600080fd5b505080516020909101519092909150565b81810360008312801583831316838312821617156152945761529461502c565b6000600160ff1b8201615a0457615a0461502c565b5060000390565b600060208284031215615a1d57600080fd5b81516110278161477c565b6001600160801b038281168282160390808211156152945761529461502c565b60008260020b80615a5b57615a5b615224565b808360020b0791505092915050565b6001600160801b038181168382160190808211156152945761529461502c565b6000806000806000806000806000898b03610160811215615aaa57600080fd5b6060811215615ab857600080fd5b50615ac16147eb565b8a51615acc816145ff565b815260208b0151615adc816145ff565b602082015260408b0151615aef81614887565b60408201529850615b0260608b016152ac565b9750615b1060808b016154b0565b9650615b1e60a08b016154b0565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b6001600160a01b03888116825287166020820152600286900b60408201526000610180615b836060840188615362565b80610120840152615b9681840187614973565b9415156101408401525050610160015295945050505050565b6001600160a01b038281168282160390808211156152945761529461502c56fea264697066735822122008561243dc698e72f226cebbff29fedad141b9d75e775708ea767c09c7fbd93d64736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/Util.sol:Utils"]: string;
}
