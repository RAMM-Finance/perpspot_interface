/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrowFacility",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startingLeverage",
        type: "uint256",
      },
    ],
    name: "findMaxLeverageWithEstimatedSlippage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getAddOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getExpectedFeesOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getExpectedInterestOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken",
        type: "bool",
      },
    ],
    name: "getMarginPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getReduceOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200559938038062005599833981016040819052620000349162000087565b50600080546001600160a01b039283166001600160a01b03199182161790915560018054939092169216919091179055620000d1565b80516001600160a01b03811681146200008257600080fd5b919050565b6000806000606084860312156200009d57600080fd5b620000a8846200006a565b9250620000b8602085016200006a565b9150620000c8604085016200006a565b90509250925092565b6154b880620000e16000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80639983379d116100a2578063bc6312a511610071578063bc6312a51461025a578063c229a3321461026d578063c53a490a146102ab578063d069f1ac146102cb578063dd65c328146102ec57600080fd5b80639983379d14610201578063a5f3f47414610214578063a9b6b32b14610227578063ac636efb1461024757600080fd5b80633aea807f116100de5780633aea807f146101975780638e68ad36146101b8578063911f1b47146101cb578063912a8e00146101ee57600080fd5b8063060429f514610110578063193a24361461013957806329aa38191461014c5780632d6cf1f414610177575b600080fd5b61012361011e366004613eff565b61030c565b6040516101309190613f48565b60405180910390f35b610123610147366004613eff565b6106e3565b61015f61015a36600461416d565b610ab0565b6040516001600160801b039091168152602001610130565b61018a6101853660046141b3565b610b9e565b60405161013091906142ac565b6101aa6101a53660046142bb565b61102b565b604051908152602001610130565b61015f6101c6366004614312565b61124e565b6101de6101d936600461445a565b611519565b6040519015158152602001610130565b61015f6101fc36600461416d565b611911565b6101aa61020f3660046144a8565b61194a565b6101aa6102223660046142bb565b611b33565b61023a61023536600461457b565b611d4c565b604051610130919061464e565b6101aa61025536600461465d565b611e7b565b6101aa6102683660046146ae565b6121a6565b61028061027b366004613eff565b6124a5565b604080516001600160a01b03948516815293909216602084015262ffffff1690820152606001610130565b6102be6102b9366004613eff565b6125dd565b6040516101309190614717565b6102de6102d9366004614766565b612ade565b6040516101309291906147fd565b6102ff6102fa366004613eff565b612bcd565b6040516101309190614855565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610363573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261038b91908101906148a3565b905060008151600261039d9190614952565b6001600160401b038111156103b4576103b4614032565b6040519080825280602002602001820160405280156103ed57816020015b6103da613d96565b8152602001906001900390816103d25790505b5090506000805b835181101561062d576000604051806060016040528086848151811061041c5761041c614969565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610461573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610485919061497f565b6001600160a01b031681526020018684815181106104a5576104a5614969565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050e919061497f565b6001600160a01b0316815260200186848151811061052e5761052e614969565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610573573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610597919061499c565b62ffffff1681525090506105cb878684815181106105b7576105b7614969565b60200260200101518360006001888a612f97565b156105de57826105da816149b9565b9350505b610607878684815181106105f4576105f4614969565b602002602001015183600080888a612f97565b1561061a5782610616816149b9565b9350505b5080610625816149b9565b9150506103f4565b506000816001600160401b0381111561064857610648614032565b60405190808252806020026020018201604052801561068157816020015b61066e613d96565b8152602001906001900390816106665790505b50905060005b828110156106d9578381815181106106a1576106a1614969565b60200260200101518282815181106106bb576106bb614969565b602002602001018190525080806106d1906149b9565b915050610687565b5095945050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561073a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261076291908101906148a3565b90506000815160026107749190614952565b6001600160401b0381111561078b5761078b614032565b6040519080825280602002602001820160405280156107c457816020015b6107b1613d96565b8152602001906001900390816107a95790505b5090506000805b8351811015610a0457600060405180606001604052808684815181106107f3576107f3614969565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610838573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085c919061497f565b6001600160a01b0316815260200186848151811061087c5761087c614969565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e5919061497f565b6001600160a01b0316815260200186848151811061090557610905614969565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561094a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096e919061499c565b62ffffff1681525090506109a18786848151811061098e5761098e614969565b602002602001015183600180888a612f97565b156109b457826109b0816149b9565b9350505b6109de878684815181106109ca576109ca614969565b60200260200101518360016000888a612f97565b156109f157826109ed816149b9565b9350505b50806109fc816149b9565b9150506107cb565b506000816001600160401b03811115610a1f57610a1f614032565b604051908082528060200260200182016040528015610a5857816020015b610a45613d96565b815260200190600190039081610a3d5790505b50905060005b828110156106d957838181518110610a7857610a78614969565b6020026020010151828281518110610a9257610a92614969565b60200260200101819052508080610aa8906149b9565b915050610a5e565b600154604051632411122160e11b81526000916001600160a01b0316906319fda277908290634822244290610ae99088906004016149d2565b602060405180830381865afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a91906149e0565b846040518363ffffffff1660e01b8152600401610b5492919091825260020b602082015260400190565b602060405180830381865afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9591906149f9565b90505b92915050565b610ba6613e01565b60006040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c15919061497f565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c85919061497f565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf5919061499c565b62ffffff1690526000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f890610d3690899089908990600401614a16565b600060405180830381865afa158015610d53573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d7b9190810190614b1c565b60008054919250906001600160a01b0316635d4936ff610d9c898989613064565b6040518263ffffffff1660e01b8152600401610dba91815260200190565b602060405180830381865afa158015610dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfb91906149e0565b90506000610e0a84888861102b565b9050604051806101800160405280858152602001871515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff1681526020018381526020018460200151815260200184604001518152602001828152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eec919061497f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4d9190614c37565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb7919061497f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ff4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110189190614c37565b60ff1690529450505050505b9392505050565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390611064908a906004016149d2565b6101c060405180830381865afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a69190614cc2565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a9047906110e59087908b908b90600401614a16565b602060405180830381865afa158015611102573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111269190614d77565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b906111609088908c908c90600401614a16565b600060405180830381865afa15801561117d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111a59190810190614d92565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac926111fa928b926001600160a01b0316918e15918c918b918b90600401614e45565b600060405180830381865af4158015611217573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261123f9190810190614eaa565b9b9a5050505050505050505050565b600154604051632411122160e11b815260009182916001600160a01b0390911690634822244290611283908890600401614f3b565b602060405180830381865afa1580156112a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c491906149e0565b6001546040516315083fbb60e31b8152600481018390529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015611313573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133791906149e0565b600154604051630ca32ed160e31b8152600481018590529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113aa9190614f49565b6001600160801b03945090506000808080895b8960020b8160020b121561150a5760015460405163da69b0b360e01b8152600481018a9052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa15801561141e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144291906149f9565b6001546040516319fda27760e01b8152600481018b9052600284900b60248201529196508895506001600160a01b0316906319fda27790604401602060405180830381865afa158015611499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bd91906149f9565b9250826114ca8587614f66565b6114d49190614f66565b9150886001600160801b0316826001600160801b0316106114f557886114f7565b815b98506115038682614f8d565b90506113bd565b50505050505050509392505050565b60008082511161155d5760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b60448201526064015b60405180910390fd5b600154604051632411122160e11b8152600091829182916001600160a01b031690634822244290611592908990600401614f3b565b602060405180830381865afa1580156115af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d391906149e0565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611622573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116469190614f49565b6001546040516315083fbb60e31b8152600481018590529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015611695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b991906149e0565b905060005b875181101561190257828882815181106116da576116da614969565b6020026020010151600001516116f09190614fc8565b60020b1561172e5760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b6044820152606401611554565b60015488516001600160a01b039091169063da69b0b39086908b908590811061175957611759614969565b6020026020010151600001516040518363ffffffff1660e01b815260040161178e92919091825260020b602082015260400190565b602060405180830381865afa1580156117ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117cf91906149f9565b9550856001600160801b03166000036117f15760009650505050505050610b98565b60015488516001600160a01b03909116906319fda2779086908b908590811061181c5761181c614969565b6020026020010151600001516040518363ffffffff1660e01b815260040161185192919091825260020b602082015260400190565b602060405180830381865afa15801561186e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189291906149f9565b94508781815181106118a6576118a6614969565b602002602001015160200151856118bd9190614fea565b6001600160801b031682876001600160801b03166118db919061500a565b10156118f05760009650505050505050610b98565b806118fa816149b9565b9150506116be565b50600198975050505050505050565b600154604051632411122160e11b81526000916001600160a01b03169063da69b0b3908290634822244290610ae99088906004016149d2565b6000806000805b8851811015611b255760015489516001600160a01b039091169063683356919088908c908590811061198557611985614969565b6020026020010151600001518a6040518463ffffffff1660e01b81526004016119b09392919061501d565b602060405180830381865afa1580156119cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f191906149e0565b925087611abf57611aba611a218a8381518110611a1057611a10614969565b6020026020010151600001516130ba565b611a52878c8581518110611a3757611a37614969565b602002602001015160000151611a4d9190614f8d565b6130ba565b611ab58c8581518110611a6757611a67614969565b6020026020010151602001516001600160801b0316670de0b6b3a76400008e8781518110611a9757611a97614969565b602002602001015160a0015189611aae919061500a565b91906133dd565b6134bb565b611b07565b611b07611ad78a8381518110611a1057611a10614969565b611aed878c8581518110611a3757611a37614969565b611b028c8581518110611a6757611a67614969565b613525565b611b119083615045565b915080611b1d816149b9565b915050611951565b509150505b95945050505050565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390611b6c908a906004016149d2565b6101c060405180830381865afa158015611b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bae9190614cc2565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a904790611bed9087908b908b90600401614a16565b602060405180830381865afa158015611c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2e9190614d77565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b90611c689088908c908c90600401614a16565b600060405180830381865afa158015611c85573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611cad9190810190614d92565b600154845160405163c49eee8160e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263c49eee8192611cfe928a926001600160a01b03909216918a9189918990600401615058565b602060405180830381865af4158015611d1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3f91906149e0565b9998505050505050505050565b611d54613e7c565b60005460405163bfd4c2a560e01b81526001600160a01b03878116600483015286811660248301528515156044830152841515606483015290911690639c3f1e9090829063bfd4c2a590608401602060405180830381865afa158015611dbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de291906149e0565b6040518263ffffffff1660e01b8152600401611e0091815260200190565b61016060405180830381865afa158015611e1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4291906150a7565b6101008a01525060c088015260a0870152608086015263ffffffff90811660608601521660408401521515602083015250949350505050565b6000611e88601483615174565b15611ebb5760405162461bcd60e51b81526020600482015260036024820152621b5bd960ea1b6044820152606401611554565b600154604051639525092360e01b8152600091829182916001600160a01b031690639525092390611ef0908c90600401614f3b565b6101c060405180830381865afa158015611f0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f329190614cc2565b50509050600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611f77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9b9190615188565b505050505091509150611fad8261356f565b9350611fd4604051806040016040528060048152602001637469636b60e01b815250613590565b611fe08160020b6135d6565b50505060005b6000611ff3601487615217565b611ffd9085614952565b612007908761500a565b90508060000361201c579350611b2a92505050565b8761203d5761203883670de0b6b3a7640000611aae848d614952565b612054565b612054670de0b6b3a764000084611aae848d614952565b91506120698288670de0b6b3a76400006133dd565b91506120a96040518060400160405280600f81526020016e1cda5b5d5b185d195913dd5d1c1d5d608a1b815250828b6120a29190614952565b848661361b565b6000806120cd8c8c6120bc60018761500a565b6120c6908f614952565b8d88612ade565b91509150816000146121915761210c60405180604001604052806011815260200170666f756e6420626f72726f77696e666f7360781b8152508361366a565b60005b81518110156121825761214182828151811061212d5761212d614969565b60200260200101516000015160020b6135d6565b61217082828151811061215657612156614969565b6020026020010151602001516001600160801b03166136b3565b8061217a816149b9565b91505061210f565b50829650505050505050611b2a565b61219c600187615045565b9550505050611fe6565b60008060008060005b88518110156123725760008073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__639887b5898a8d86815181106121e8576121e8614969565b6020026020010151600001518b8f888151811061220757612207614969565b60200260200101516000015161221d9190614f8d565b6040516001600160e01b031960e086901b1681526001600160a01b039093166004840152600291820b6024840152900b60448201526064016040805180830381865af4158015612271573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612295919061522b565b915091506122f78b84815181106122ae576122ae614969565b6020026020010151602001516001600160801b0316600160801b8d86815181106122da576122da614969565b60200260200101516060015185036133dd9092919063ffffffff16565b860195506123598b848151811061231057612310614969565b6020026020010151602001516001600160801b0316600160801b8d868151811061233c5761233c614969565b60200260200101516080015184036133dd9092919063ffffffff16565b850194505050808061236a906149b9565b9150506121af565b506000866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156123b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d79190615188565b50505050505090508715612417576124068160646123f682606561524f565b6124009190615281565b866136f8565b6124109084615045565b915061244f565b61243881606461242882606561524f565b6124329190615281565b85613734565b6124429085615045565b61244c9083615045565b91505b5061245d6002600019615217565b8111156124985760405162461bcd60e51b8152602060048201526009602482015268746f6f62696766656560b81b6044820152606401611554565b925050505b949350505050565b6000806000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156124e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061250c919061497f565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561254a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061256e919061497f565b856001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125d0919061499c565b9196909550909350915050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015612634573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261265c91908101906148a3565b90506000808251600461266f9190614952565b6001600160401b0381111561268657612686614032565b6040519080825280602002602001820160405280156126bf57816020015b6126ac613e7c565b8152602001906001900390816126a45790505b5090506126ca613e7c565b60005b8451811015612a2757600060405180606001604052808784815181106126f5576126f5614969565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561273a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275e919061497f565b6001600160a01b0316815260200187848151811061277e5761277e614969565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e7919061497f565b6001600160a01b0316815260200187848151811061280757612807614969565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561284c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612870919061499c565b62ffffff1681525090506128a086838151811061288f5761288f614969565b602002602001015189600180611d4c565b6080810151909350156128e057808352835183908590879081106128c6576128c6614969565b602002602001018190525084806128dc906149b9565b9550505b6129078683815181106128f5576128f5614969565b60200260200101518960016000611d4c565b608081015190935015612947578083528351839085908790811061292d5761292d614969565b60200260200101819052508480612943906149b9565b9550505b61296e86838151811061295c5761295c614969565b60200260200101518960006001611d4c565b6080810151909350156129ae578083528351839085908790811061299457612994614969565b602002602001018190525084806129aa906149b9565b9550505b6129d48683815181106129c3576129c3614969565b602002602001015189600080611d4c565b608081015190935015612a1457808352835183908590879081106129fa576129fa614969565b60200260200101819052508480612a10906149b9565b9550505b5080612a1f816149b9565b9150506126cd565b506000836001600160401b03811115612a4257612a42614032565b604051908082528060200260200182016040528015612a7b57816020015b612a68613e7c565b815260200190600190039081612a605790505b50905060005b84811015612ad357838181518110612a9b57612a9b614969565b6020026020010151828281518110612ab557612ab5614969565b60200260200101819052508080612acb906149b9565b915050612a81565b509695505050505050565b60015460405163341a7c6b60e21b81526000916060916001600160a01b039091169063d069f1ac90612b1c908a908a908a908a908a906004016152a7565b600060405180830381865afa925050508015612b5a57506040513d6000823e601f3d908101601f19168201604052612b5791908101906152d8565b60015b612bbd57612b66615314565b806308c379a003612bb15750612b7a61532f565b80612b855750612bb3565b612ba38188612b94818a615045565b612b9e9190615217565b61366a565b506000915060609050612bc3565b505b3d6000803e3d6000fd5b90925090505b9550959350505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015612c24573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612c4c91908101906148a3565b9050600081516002612c5e9190614952565b6001600160401b03811115612c7557612c75614032565b604051908082528060200260200182016040528015612cae57816020015b612c9b613e01565b815260200190600190039081612c935790505b5090506000805b8351811015612eeb5760006040518060600160405280868481518110612cdd57612cdd614969565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d46919061497f565b6001600160a01b03168152602001868481518110612d6657612d66614969565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612dab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dcf919061497f565b6001600160a01b03168152602001868481518110612def57612def614969565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015612e34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e58919061499c565b62ffffff168152509050612e8a87868481518110612e7857612e78614969565b60200260200101518360018789613770565b15612e9d5782612e99816149b9565b9350505b612ec587868481518110612eb357612eb3614969565b60200260200101518360008789613770565b15612ed85782612ed4816149b9565b9350505b5080612ee3816149b9565b915050612cb5565b506000816001600160401b03811115612f0657612f06614032565b604051908082528060200260200182016040528015612f3f57816020015b612f2c613e01565b815260200190600190039081612f245790505b50905060005b828110156106d957838181518110612f5f57612f5f614969565b6020026020010151828281518110612f7957612f79614969565b60200260200101819052508080612f8f906149b9565b915050612f45565b600080612fa6888a8789611d4c565b606081015190915063ffffffff16156130535760405180610140016040528088815260200187151581526020018615158152602001826040015163ffffffff168152602001826060015163ffffffff168152602001826080015181526020018260a0015181526020018260c0015181526020018260e00151815260200182610100015181525083858151811061303e5761303e614969565b60200260200101819052506001915050613059565b60009150505b979650505050505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b60008060008360020b126130d1578260020b6130d9565b8260020b6000035b9050620d89e88111156130ff576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361311657600160801b613128565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561315c576ffff97272373d413259a46990580e213a0260801c5b600482161561317b576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561319a576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156131b9576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156131d8576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156131f7576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613216576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613236576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613256576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613276576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613296576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156132b6576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156132d6576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156132f6576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613316576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613337576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613357576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613376576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613393576b048a170391f7dc42444e8fa20260801c5b60008460020b13156133b45780600019816133b0576133b0614fb2565b0490505b6401000000008106156133c85760016133cb565b60005b60ff16602082901c0192505050919050565b6000808060001985870985870292508281108382030391505080600003613416576000841161340b57600080fd5b508290049050611024565b80841161344e5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401611554565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000826001600160a01b0316846001600160a01b031611156134db579192915b6001600160a01b03841661351b600160601b600160e01b03606085901b1661350387876153b8565b6001600160a01b0316866001600160a01b03166133dd565b61249d9190615217565b6000826001600160a01b0316846001600160a01b03161115613545579192915b61249d6001600160801b03831661355c86866153b8565b6001600160a01b0316600160601b6133dd565b60008061357b83613acc565b90506110248182670de0b6b3a76400006133dd565b6135d3816040516024016135a4919061541e565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052613af3565b50565b6135d3816040516024016135ec91815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316634e0c1d1d60e01b179052613af3565b613664848484846040516024016136359493929190615431565b60408051601f198184030181529190526020810180516001600160e01b03166304772b3360e11b179052613af3565b50505050565b6136af8282604051602401613680929190615460565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052613af3565b5050565b6135d3816040516024016136c991815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052613af3565b6000826001600160a01b0316846001600160a01b03161115613718579192915b6000613725858585613b14565b9050611b2a8585836000613bbe565b6000826001600160a01b0316846001600160a01b03161115613754579192915b6000613761858585613c2e565b9050611b2a8585836000613c64565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f8906137a5908a908c908a90600401614a16565b600060405180830381865afa1580156137c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526137ea9190810190614b1c565b60008054919250906001600160a01b0316635d4936ff61380b8a8c8a613064565b6040518263ffffffff1660e01b815260040161382991815260200190565b602060405180830381865afa158015613846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061386a91906149e0565b602083015190915015613abb57604051806101800160405280888152602001871515815260200183600001516040015181526020018360000151606001518152602001836000015160a0015163ffffffff16815260200183600001516080015163ffffffff16815260200182815260200183602001518152602001836040015181526020016138fa898c8a61102b565b8152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561393d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613961919061497f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561399e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139c29190614c37565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a2c919061497f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a8d9190614c37565b60ff16815250848681518110613aa557613aa5614969565b6020026020010181905250600192505050613ac2565b6000925050505b9695505050505050565b60006060613aeb6001600160a01b038416670de0b6b3a7640000614952565b901c92915050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000826001600160a01b0316846001600160a01b03161115613b34579192915b6000613b57856001600160a01b0316856001600160a01b0316600160601b6133dd565b90508015613b8c57613b84613b7f8483613b7189896153b8565b6001600160a01b03166133dd565b613d10565b915050611024565b613b84613b7f613baa856001600160a01b038916613b718a8a6153b8565b866001600160a01b0316600160601b6133dd565b6000836001600160a01b0316856001600160a01b03161115613bde579293925b81613c0b57613c06836001600160801b03168686036001600160a01b0316600160601b6133dd565b611b2a565b611b2a836001600160801b03168686036001600160a01b0316600160601b613d56565b6000826001600160a01b0316846001600160a01b03161115613c4e579192915b61249d613b7f83600160601b613b7188886153b8565b6000836001600160a01b0316856001600160a01b03161115613c84579293925b600160601b600160e01b03606084901b166001600160a01b038686038116908716613cae57600080fd5b83613ce457866001600160a01b0316613cd18383896001600160a01b03166133dd565b81613cde57613cde614fb2565b04612498565b612498613cfb8383896001600160a01b0316613d56565b886001600160a01b0316808204910615150190565b806001600160801b0381168114613d515760405162461bcd60e51b81526020600482015260056024820152640858d85cdd60da1b6044820152606401611554565b919050565b6000613d638484846133dd565b905060008280613d7557613d75614fb2565b8486091115611024576000198110613d8c57600080fd5b6001019392505050565b604080516101a0810182526000610140820181815261016083018290526101808301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b604080516101e081018252600061018082018181526101a083018290526101c08301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b60408051610180810182526000610120820181815261014083018290526101608301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915290565b6001600160a01b03811681146135d357600080fd5b8035613d5181613edf565b600060208284031215613f1157600080fd5b813561102481613edf565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b602080825282518282018190526000919060409081850190868401855b82811015614025578151613f7a858251613f1c565b868101516060613f8d8188018315159052565b8783015191506080613fa28189018415159052565b90830151915060a090613fbc8883018463ffffffff169052565b830151915060c0613fd48882018463ffffffff169052565b9083015160e088810191909152908301516101008089019190915290830151610120808901919091529083015161014088015290910151610160860152506101809093019290850190600101613f65565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b606081018181106001600160401b038211171561406757614067614032565b60405250565b60c081018181106001600160401b038211171561406757614067614032565b60e081018181106001600160401b038211171561406757614067614032565b601f8201601f191681016001600160401b03811182821017156140d0576140d0614032565b6040525050565b6040516140e38161408c565b90565b62ffffff811681146135d357600080fd5b60006060828403121561410957600080fd5b60405161411581614048565b809150823561412381613edf565b8152602083013561413381613edf565b60208201526040830135614146816140e6565b6040919091015292915050565b8060020b81146135d357600080fd5b8035613d5181614153565b6000806080838503121561418057600080fd5b61418a84846140f7565b9150606083013561419a81614153565b809150509250929050565b80151581146135d357600080fd5b6000806000606084860312156141c857600080fd5b83356141d381613edf565b925060208401356141e381613edf565b915060408401356141f3816141a5565b809150509250925092565b614209828251613f1c565b602081015180151560608401525060408101516080830152606081015160a0830152608081015161424260c084018263ffffffff169052565b5060a081015163ffffffff1660e08381019190915260c0820151610100808501919091529082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015160ff908116610180850152910151166101a090910152565b6101c08101610b9882846141fe565b600080600060a084860312156142d057600080fd5b6142da85856140f7565b925060608401356142ea81613edf565b915060808401356141f3816141a5565b60006060828403121561430c57600080fd5b50919050565b600080600060a0848603121561432757600080fd5b61433185856142fa565b9250606084013561434181614153565b915060808401356141f381614153565b60006001600160401b0382111561436a5761436a614032565b5060051b60200190565b6001600160801b03811681146135d357600080fd5b600082601f83011261439a57600080fd5b813560206143a782614351565b604080516143b583826140ab565b84815260c094850287018401948482019350888611156143d457600080fd5b8488015b8681101561444c5781818b0312156143f05760008081fd5b83516143fb8161406d565b813561440681614153565b81528187013561441581614374565b818801528185013585820152606080830135908201526080808301359082015260a0808301359082015285529385019381016143d8565b509098975050505050505050565b6000806080838503121561446d57600080fd5b61447784846142fa565b915060608301356001600160401b0381111561449257600080fd5b61449e85828601614389565b9150509250929050565b60008060008060008587036101408112156144c257600080fd5b86356001600160401b038111156144d857600080fd5b6144e489828a01614389565b96505060208701356144f5816141a5565b945060c0603f198201121561450957600080fd5b506040516145168161406d565b60408701358152606087013560208201526080870135604082015260a0870135606082015260c0870135608082015260e087013560a0820152809350506145606101008701613ef4565b915061456f6101208701614162565b90509295509295909350565b6000806000806080858703121561459157600080fd5b843561459c81613edf565b935060208501356145ac81613edf565b925060408501356145bc816141a5565b915060608501356145cc816141a5565b939692955090935050565b6145e2828251613f1c565b602081015115156060830152604081015163ffffffff8116608084015250606081015163ffffffff811660a084015250608081015160c083015260a081015160e083015260c0810151610100818185015260e08301516101208501528083015161014085015250505050565b6101608101610b9882846145d7565b600080600080600060e0868803121561467557600080fd5b61467f87876142fa565b9450606086013593506080860135614696816141a5565b9497939650939460a0810135945060c0013592915050565b600080600080608085870312156146c457600080fd5b84356001600160401b038111156146da57600080fd5b6146e687828801614389565b94505060208501356146f7816141a5565b9250604085013561470781613edf565b915060608501356145cc81614153565b6020808252825182820181905260009190848201906040850190845b8181101561475a576147468385516145d7565b928401926101609290920191600101614733565b50909695505050505050565b600080600080600060e0868803121561477e57600080fd5b61478887876142fa565b9450606086013593506080860135925060a08601356147a6816141a5565b9497939650919460c0013592915050565b805160020b82526001600160801b03602082015116602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b6000604082018483526020604081850152818551808452606086019150828701935060005b81811015614848576148358386516147b7565b9383019360c09290920191600101614822565b5090979650505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561475a576148848385516141fe565b928401926101c09290920191600101614871565b8051613d5181613edf565b600060208083850312156148b657600080fd5b82516001600160401b038111156148cc57600080fd5b8301601f810185136148dd57600080fd5b80516148e881614351565b6040516148f582826140ab565b82815260059290921b830184019184810191508783111561491557600080fd5b928401925b8284101561305957835161492d81613edf565b8252928401929084019061491a565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610b9857610b9861493c565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561499157600080fd5b815161102481613edf565b6000602082840312156149ae57600080fd5b8151611024816140e6565b6000600182016149cb576149cb61493c565b5060010190565b60608101610b988284613f1c565b6000602082840312156149f257600080fd5b5051919050565b600060208284031215614a0b57600080fd5b815161102481614374565b6001600160a01b039384168152919092166020820152901515604082015260600190565b8051613d51816141a5565b805163ffffffff81168114613d5157600080fd5b600082601f830112614a6a57600080fd5b81516020614a7782614351565b60408051614a8583826140ab565b84815260c09485028701840194848201935088861115614aa457600080fd5b8488015b8681101561444c5781818b031215614ac05760008081fd5b8351614acb8161406d565b8151614ad681614153565b815281870151614ae581614374565b818801528185015185820152606080830151908201526080808301519082015260a080830151908201528552938501938101614aa8565b600060208284031215614b2e57600080fd5b81516001600160401b0380821115614b4557600080fd5b9083019060608286031215614b5957600080fd5b604051614b6581614048565b825182811115614b7457600080fd5b830160e08188031215614b8657600080fd5b614b8e6140d7565b614b9782614898565b8152614ba560208301614a3a565b60208201526040820151604082015260608201516060820152614bca60808301614a45565b6080820152614bdb60a08301614a45565b60a082015260c082015184811115614bf257600080fd5b614bfe89828501614a59565b60c0830152508252506020838101519082015260409283015192810192909252509392505050565b805160ff81168114613d5157600080fd5b600060208284031215614c4957600080fd5b610b9582614c26565b600060c08284031215614c6457600080fd5b604051614c708161406d565b809150825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201525092915050565b805161ffff81168114613d5157600080fd5b60008060008385036101c0811215614cd957600080fd5b8451614ce481613edf565b6020860151909450614cf581614153565b9250610180603f198201811315614d0b57600080fd5b6040519150614d198261408c565b614d268760408801614c52565b8252610100860151602083015261012086015160408301526101408601516060830152614d566101608701614cb0565b608083015285015160a08201526101a09094015160c0850152509093909250565b600060208284031215614d8957600080fd5b610b9582614a45565b600060208284031215614da457600080fd5b81516001600160401b03811115614dba57600080fd5b61249d84828501614a59565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600081518084526020808501945080840160005b83811015614e3a57614e278783516147b7565b60c0969096019590820190600101614e14565b509495945050505050565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff841660808201526000610180614e8960a0840186614dc6565b80610160840152614e9c81840185614e00565b9a9950505050505050505050565b60008060408385031215614ebd57600080fd5b82516001600160401b03811115614ed357600080fd5b614edf85828601614a59565b925050602083015190509250929050565b8035614efb81613edf565b6001600160a01b039081168352602082013590614f1782613edf565b1660208301526040810135614f2b816140e6565b62ffffff81166040840152505050565b60608101610b988284614ef0565b600060208284031215614f5b57600080fd5b815161102481614153565b6001600160801b03828116828216039080821115614f8657614f8661493c565b5092915050565b600281810b9083900b01627fffff8113627fffff1982121715610b9857610b9861493c565b634e487b7160e01b600052601260045260246000fd5b60008260020b80614fdb57614fdb614fb2565b808360020b0791505092915050565b6001600160801b03818116838216019080821115614f8657614f8661493c565b81810381811115610b9857610b9861493c565b6001600160a01b0384168152600283900b6020820152610100810161249d6040830184614dc6565b80820180821115610b9857610b9861493c565b6001600160a01b03878116825286166020820152600285900b604082015263ffffffff8416606082015260006101606150946080840186614dc6565b80610140840152611d3f81840185614e00565b6000806000806000806000806000898b036101608112156150c757600080fd5b60608112156150d557600080fd5b506040516150e281614048565b8a516150ed81613edf565b815260208b01516150fd81613edf565b602082015260408b0151615110816140e6565b6040820152985061512360608b01614a3a565b975061513160808b01614a45565b965061513f60a08b01614a45565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b60008261518357615183614fb2565b500690565b600080600080600080600060e0888a0312156151a357600080fd5b87516151ae81613edf565b60208901519097506151bf81614153565b95506151cd60408901614cb0565b94506151db60608901614cb0565b93506151e960808901614cb0565b92506151f760a08901614c26565b915060c0880151615207816141a5565b8091505092959891949750929550565b60008261522657615226614fb2565b500490565b6000806040838503121561523e57600080fd5b505080516020909101519092909150565b6001600160a01b038281168282168181028316929181158285048214176152785761527861493c565b50505092915050565b60006001600160a01b038381168061529b5761529b614fb2565b92169190910492915050565b60e081016152b58288614ef0565b6060820195909552608081019390935290151560a083015260c090910152919050565b600080604083850312156152eb57600080fd5b8251915060208301516001600160401b0381111561530857600080fd5b61449e85828601614a59565b600060033d11156140e35760046000803e5060005160e01c90565b600060443d101561533d5790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561536c57505050505090565b82850191508151818111156153845750505050505090565b843d870101602082850101111561539e5750505050505090565b6153ad602082860101876140ab565b509095945050505050565b6001600160a01b03828116828216039080821115614f8657614f8661493c565b6000815180845260005b818110156153fe576020818501810151868301820152016153e2565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610b9560208301846153d8565b60808152600061544460808301876153d8565b6020830195909552506040810192909252606090910152919050565b60408152600061547360408301856153d8565b9050826020830152939250505056fea2646970667358221220b72fd8de629c8c58ce42724549403313fd682ce738fa6c92f545fd3ece3b0ef164736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    borrowFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      borrowFacility,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    borrowFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      borrowFacility,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
}
