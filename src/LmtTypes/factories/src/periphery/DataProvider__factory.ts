/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoterV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stepSize",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.MaxLeverageParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "computeMaxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX160",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getBinsDataInBulk",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Borrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Borrowed",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.BinData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fillerOutput",
        type: "uint256",
      },
    ],
    name: "getEstimatedPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken",
        type: "bool",
      },
    ],
    name: "getMarginPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getMinMaxTicks",
    outputs: [
      {
        internalType: "int24",
        name: "min",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "max",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrderInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getPostInstantaneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getPreInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getUtilAndAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162005d6238038062005d62833981016040819052620000349162000092565b600080546001600160a01b03199081166001600160a01b039485161790915560018054821694841694909417909355600280549093169116179055620000dc565b80516001600160a01b03811681146200008d57600080fd5b919050565b600080600060608486031215620000a857600080fd5b620000b38462000075565b9250620000c36020850162000075565b9150620000d36040850162000075565b90509250925092565b615c7680620000ec6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638e68ad36116100ad578063a9b6b32b11610071578063a9b6b32b146102e0578063c229a33214610300578063c3042bcd1461033e578063dd65c32814610351578063dec8ae011461037157600080fd5b80638e68ad3614610257578063911f1b471461026a578063912a8e001461028d5780639255bbc1146102a0578063a55ac3eb146102c057600080fd5b80633aea807f116100f45780633aea807f146101c2578063433a1e18146101e357806348c6f866146101f65780634fbfe42d1461021757806384b885571461022a57600080fd5b8063093376fe146101265780631f2ecd831461014f57806329aa3819146101775780632d6cf1f4146101a2575b600080fd5b610139610134366004614646565b610384565b6040516101469190614744565b60405180910390f35b61016261015d3660046147ba565b6107d4565b60408051928352602083019190915201610146565b61018a61018536600461493e565b610a87565b6040516001600160801b039091168152602001610146565b6101b56101b0366004614984565b610b75565b6040516101469190614b3a565b6101d56101d0366004614b4d565b61103a565b604051908152602001610146565b6101d56101f1366004614b8c565b61125d565b610209610204366004614b9e565b6116cb565b604051610146929190614c05565b6101d5610225366004614c1e565b611768565b61023d610238366004614d79565b611d5c565b60408051600293840b81529190920b602082015201610146565b61018a6102653660046147ba565b611ddf565b61027d610278366004614dad565b6120aa565b6040519015158152602001610146565b61018a61029b36600461493e565b6124a2565b6102b36102ae366004614dfb565b6124db565b6040516101469190614e57565b6102d36102ce366004614e66565b612904565b6040516101469190614e85565b6102f36102ee366004614dfb565b612d0f565b6040516101469190614ef3565b61031361030e366004614646565b612e96565b604080516001600160a01b03948516815293909216602084015262ffffff1690820152606001610146565b6101d561034c366004614b4d565b612fce565b61036461035f366004614646565b613260565b6040516101469190614f75565b6101d561037f366004614fd7565b61362a565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104039190810190615004565b905060008151600461041591906150a8565b6001600160401b0381111561042c5761042c614804565b60405190808252806020026020018201604052801561046557816020015b6104526144f4565b81526020019060019003908161044a5790505b5090506000805b835181101561071e5760006040518060600160405280868481518110610494576104946150bf565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd91906150d5565b6001600160a01b0316815260200186848151811061051d5761051d6150bf565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058691906150d5565b6001600160a01b031681526020018684815181106105a6576105a66150bf565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f91906150f2565b62ffffff1681525090506106428786848151811061062f5761062f6150bf565b602002602001015183600180888a6137c2565b1561065557826106518161510f565b9350505b61067f8786848151811061066b5761066b6150bf565b60200260200101518360016000888a6137c2565b15610692578261068e8161510f565b9350505b6106bc878684815181106106a8576106a86150bf565b60200260200101518360006001888a6137c2565b156106cf57826106cb8161510f565b9350505b6106f8878684815181106106e5576106e56150bf565b602002602001015183600080888a6137c2565b1561070b57826107078161510f565b9350505b50806107168161510f565b91505061046c565b506000816001600160401b0381111561073957610739614804565b60405190808252806020026020018201604052801561077257816020015b61075f6144f4565b8152602001906001900390816107575790505b50905060005b828110156107ca57838181518110610792576107926150bf565b60200260200101518282815181106107ac576107ac6150bf565b602002602001018190525080806107c29061510f565b915050610778565b5095945050505050565b600154604051639525092360e01b815260009182918291829182916001600160a01b03169063952509239061080d908b90600401615173565b6101c060405180830381865afa15801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f9190615193565b919450925090508161086181896152a0565b61086b91906152da565b96508161087881886152a0565b61088291906152da565b9550600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156108c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ec919061531d565b509395508f9450505050505b8a60020b8160020b1215610a2d5761091e610918368f90038f018f6153ac565b826124a2565b9450610938610932368f90038f018f6153ac565b82610a87565b93506001600160801b03851615610a1c576109696001600160801b0385811690670de0b6b3a7640000908816613a9a565b8651604051630ca73f1f60e21b8152919450610a03918591670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9163329cfc7c916109bb918e9187908b908b90600401615402565b602060405180830381865af41580156109d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fc919061543d565b9190613a9a565b610a0d908b615456565b9950610a19838a615456565b98505b610a268782615469565b90506108f8565b5050505050818787610a3f919061548e565b610a4991906152a0565b610a569060020b866154b3565b945081610a63888861548e565b610a6d91906152a0565b610a7a9060020b856154b3565b9350505050935093915050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda277908290634822244290610ac09088906004016154c7565b602060405180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b01919061543d565b846040518363ffffffff1660e01b8152600401610b2b92919091825260020b602082015260400190565b602060405180830381865afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c91906154d5565b90505b92915050565b610b7d614587565b60006040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec91906150d5565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c91906150d5565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccc91906150f2565b62ffffff1690526000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f890610d0d908990899089906004016154f2565b600060405180830381865afa158015610d2a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d5291908101906155e1565b60008054919250906001600160a01b0316635d4936ff610d73898989613b78565b6040518263ffffffff1660e01b8152600401610d9191815260200190565b602060405180830381865afa158015610dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd2919061543d565b90506000610de184888861103a565b9050604051806101e00160405280858152602001871515815260200184606001511515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff1681526020018381526020018460200151815260200184604001518152602001828152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecf91906150d5565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3091906156f8565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9a91906150d5565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffb91906156f8565b60ff16815260200182841161101157600061101b565b61101b8385615713565b8152602001846000015160c001518152509450505050505b9392505050565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390611073908a906004016154c7565b6101c060405180830381865afa158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b59190615193565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a9047906110f49087908b908b906004016154f2565b602060405180830381865afa158015611111573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111359190615726565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b9061116f9088908c908c906004016154f2565b600060405180830381865afa15801561118c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b49190810190615741565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac92611209928b926001600160a01b0316918e15918c918b918b90600401615775565b600060405180830381865af4158015611226573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261124e91908101906157cc565b9b9a5050505050505050505050565b600154604051639525092360e01b815260009182916001600160a01b0390911690639525092390611292908690600401615173565b6101c060405180830381865afa1580156112b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d49190615193565b505090506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133c919061531d565b5050600154604051632411122160e11b815295965060a08a013595600095506001600160a01b03909116935063c6c2c2ca9250839150634822244290611386908b90600401615173565b602060405180830381865afa1580156113a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c7919061543d565b6040518263ffffffff1660e01b81526004016113e591815260200190565b60a060405180830381865afa158015611402573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114269190615812565b505050506001600160801b031690505b670de0b6b3a76400008211156116c257600061147161145d670de0b6b3a764000085615713565b608089013590670de0b6b3a7640000613a9a565b9050600061149083670de0b6b3a76400006109fc8560808d0135615456565b905060006114a28260808b0135615713565b90506000600260009054906101000a90046001600160a01b03166001600160a01b031663c6a5026a6040518060a001604052808d60600160208101906114e8919061587d565b6114fe576114f960208f018f614646565b611514565b8d60000160200160208101906115149190614646565b6001600160a01b031681526020018d6060016020810190611535919061587d565b611554578d600001602001602081019061154f9190614646565b611561565b61156160208f018f614646565b6001600160a01b031681526020016115798887615456565b81526020018d6000016040016020810190611594919061589a565b62ffffff908116825260006020928301526040805160e086901b6001600160e01b031916815284516001600160a01b03908116600483015293850151841660248201529084015160448201526060840151909116606482015260809092015116608482015260a4016080604051808303816000875af115801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f91906158b7565b509192506000915061166690508b848761165f608084016060850161587d565b868d6116cb565b509050801561167e5750949998505050505050505050565b8a60c0013587101561169b575060009a9950505050505050505050565b6116b687670bcbce7f1b150000670de0b6b3a7640000613a9a565b96505050505050611436565b50505050919050565b60015460405163568b55bf60e11b81526000916060916001600160a01b039091169063ad16ab7e90611709908b908a908a908a908a906004016158fd565b600060405180830381865afa92505050801561174757506040513d6000823e601f3d908101601f191682016040526117449190810190615937565b60015b611757575060009050606061175d565b90925090505b965096945050505050565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101829052600154604051639525092360e01b81526001600160a01b0390911690639525092390611800908a906004016154c7565b6101c060405180830381865afa15801561181e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118429190615193565b5060020b60208301526001600160a01b039081168083526000805460405163118272bf60e31b815291931691638c1395f89161188591908b908b906004016154f2565b600060405180830381865afa1580156118a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118ca91908101906155e1565b9050600085670de0b6b3a76400001461196557815160c0015160405163069b8a8b60e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__916334dc54589161191b91908a90600401615973565b600060405180830381865af4158015611938573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119609190810190615741565b61196c565b815160c001515b6040516337a6142160e01b815290915073__$d23a8dd93b7205fa6b646ffed38c165d68$__906337a61421906119a6908490600401615995565b6040805180830381865af41580156119c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e691906159a8565b600290810b6101608601520b610140840152825160408051633850c7bd60e01b815290516001600160a01b0390921691633850c7bd9160048082019260e0929091908290030181865afa158015611a41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a65919061531d565b50505050600291820b606087018190526001600160a01b03939093166040808801919091526101608701516101408801516020890151925163146d722d60e31b81528d15156004820152602481019690965290840b6044860152830b606485015290910b60848301525073__$d23a8dd93b7205fa6b646ffed38c165d68$__9063a36b91689060a401602060405180830381865af4158015611b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2f919061543d565b61018084015260208301516060840151604080860151905162aba2a960e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__9363055d154893611b87938793670de0b6b3a7640000939291906004016159d7565b6040805180830381865af4158015611ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc79190615a1c565b60a08501526080840152610180830151600103611c29576040820151611bf69087670de0b6b3a7640000613a9a565b87611c05578360800151611c0b565b8360a001515b611c159087615a40565b611c1f9190615a40565b9350505050611d53565b6020820151611c419087670de0b6b3a7640000613a9a565b60c08401819052611c5d908690670de0b6b3a764000090613a9a565b60e08401819052611c8d90670de0b6b3a76400009089611c815785608001516109fc565b8560a001519190613a9a565b61010084015286611ca2578260a00151611ca8565b82608001515b836101000151611cb89190615456565b8360c001511015611cd1578160400151611c1f90615a60565b86611ce0578260a00151611ce6565b82608001515b8361010001518460c00151611cfb9190615713565b611d059190615713565b610120840181905260e0840151611d259190670de0b6b3a7640000613a9a565b6101208401526040820151611d439087670de0b6b3a7640000613a9a565b836101200151611c1f9190615a40565b95945050505050565b60008073__$d23a8dd93b7205fa6b646ffed38c165d68$$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9363aa7532af93613211938c936001600160a01b03909116928c9289918c90600401615bc4565b602060405180830381865af415801561322e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613252919061543d565b9a9950505050505050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156132b7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526132df9190810190615004565b90506000815160026132f191906150a8565b6001600160401b0381111561330857613308614804565b60405190808252806020026020018201604052801561334157816020015b61332e614587565b8152602001906001900390816133265790505b5090506000805b835181101561357e5760006040518060600160405280868481518110613370576133706150bf565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156133b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133d991906150d5565b6001600160a01b031681526020018684815181106133f9576133f96150bf565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561343e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061346291906150d5565b6001600160a01b03168152602001868481518110613482576134826150bf565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156134c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134eb91906150f2565b62ffffff16815250905061351d8786848151811061350b5761350b6150bf565b6020026020010151836001878961406c565b15613530578261352c8161510f565b9350505b61355887868481518110613546576135466150bf565b6020026020010151836000878961406c565b1561356b57826135678161510f565b9350505b50806135768161510f565b915050613348565b506000816001600160401b0381111561359957613599614804565b6040519080825280602002602001820160405280156135d257816020015b6135bf614587565b8152602001906001900390816135b75790505b50905060005b828110156107ca578381815181106135f2576135f26150bf565b602002602001015182828151811061360c5761360c6150bf565b602002602001018190525080806136229061510f565b9150506135d8565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906136639089906004016154c7565b6101c060405180830381865afa158015613681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136a59190615193565b600154604051632411122160e11b815293965091945092506000916001600160a01b03909116906348222442906136e0908a906004016154c7565b602060405180830381865afa1580156136fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613721919061543d565b600154835160405163aa7532af60e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263aa7532af926137769289926001600160a01b03909216918991908d906000908a90600401615bc4565b602060405180830381865af4158015613793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137b7919061543d565b979650505050505050565b6000806137d1888a8789612d0f565b606081015190915063ffffffff1615613a8b5760008160e001516000146138105761380b826060015163ffffffff16426126839190615713565b61381a565b670de0b6b3a76400005b60808301519091506000906138389083670de0b6b3a7640000613a9a565b9050808360a001511161384b5780613851565b8260a001515b9050604051806101a001604052808a815260200189151581526020018815158152602001846040015163ffffffff168152602001846060015163ffffffff168152602001846080015181526020018460a0015181526020018460c0015181526020018460e00151815260200184610100015181526020018281526020018b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561390c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061393091906150d5565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561396d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061399191906156f8565b60ff1681526020018b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156139d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139fb91906150d5565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a5c91906156f8565b60ff16815250858781518110613a7457613a746150bf565b6020026020010181905250600193505050506137b7565b50600098975050505050505050565b6000808060001985870985870292508281108382030391505080600003613ad35760008411613ac857600080fd5b508290049050611033565b808411613b0b5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b60448201526064016120e5565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b6000838015613c6e57600184168015613be957859250613bed565b8392505b508260011c8460011c94505b8415613c68578560801c15613c0d57600080fd5b85860281810181811015613c2057600080fd5b8590049650506001851615613c5d578583028387820414613c46578615613c4657600080fd5b81810181811015613c5657600080fd5b8590049350505b8460011c9450613bf9565b50613c84565b838015613c7e5760009250613c82565b8392505b505b509392505050565b60008060008360020b12613ca3578260020b613cab565b8260020b6000035b9050620d89e8811115613cd1576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003613ce857600160801b613cfa565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613d2e576ffff97272373d413259a46990580e213a0260801c5b6004821615613d4d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613d6c576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613d8b576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613daa576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613dc9576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613de8576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613e08576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613e28576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613e48576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613e68576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613e88576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613ea8576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613ec8576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613ee8576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613f09576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613f29576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613f48576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613f65576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613f86578060001981613f8257613f8261528a565b0490505b640100000000810615613f9a576001613f9d565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b03161115613fd0579293925b846001600160a01b0316866001600160a01b031611613ffb57613ff4858585614410565b9150614042565b836001600160a01b0316866001600160a01b0316101561403457614020868585614410565b915061402d858785614483565b9050614042565b61403f858585614483565b90505b94509492505050565b600080614057836144cd565b90506110338182670de0b6b3a7640000613a9a565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f8906140a1908a908c908a906004016154f2565b600060405180830381865afa1580156140be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526140e691908101906155e1565b60008054919250906001600160a01b0316635d4936ff6141078a8c8a613b78565b6040518263ffffffff1660e01b815260040161412591815260200190565b602060405180830381865afa158015614142573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614166919061543d565b90506000614175888b8961103a565b6020840151909150156143fe57604051806101e00160405280898152602001881515815260200184606001511515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff16815260200183815260200184602001518152602001846040015181526020016142118a8d8b61103a565b81526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015614254573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061427891906150d5565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156142b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142d991906156f8565b60ff1681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561431f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061434391906150d5565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015614380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143a491906156f8565b60ff1681526020018284116143ba5760006143c4565b6143c48385615713565b8152602001846000015160c001518152508587815181106143e7576143e76150bf565b602002602001018190525060019350505050614406565b600093505050505b9695505050505050565b6000826001600160a01b0316846001600160a01b03161115614430579192915b6001600160a01b0384166144796fffffffffffffffffffffffffffffffff60601b606085901b166144618787615c20565b6001600160a01b0316866001600160a01b0316613a9a565b6128fc91906154b3565b6000826001600160a01b0316846001600160a01b031611156144a3579192915b6128fc6001600160801b0383166144ba8686615c20565b6001600160a01b0316600160601b613a9a565b600060606144ec6001600160a01b038416670de0b6b3a76400006150a8565b901c92915050565b60408051610200810190915260006101a082018181526101c083018290526101e083019190915281908152602001600015158152602001600015158152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610240810190915260006101e082018181526102008301829052610220830191909152819081526020016000151581526020016000151581526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff16815260200160008152602001606081525090565b6001600160a01b038116811461464357600080fd5b50565b60006020828403121561465857600080fd5b81356110338161462e565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b61469a828251614663565b60208101518015156060840152506040810151801515608084015250606081015163ffffffff811660a084015250608081015163ffffffff811660c08401525060a081015160e08381019190915260c0820151610100808501919091529082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015161018080850191909152908201516101a084015201516101c090910152565b6020808252825182820181905260009190848201906040850190845b818110156147875761477383855161468f565b928401926101e09290920191600101614760565b50909695505050505050565b6000606082840312156147a557600080fd5b50919050565b8060020b811461464357600080fd5b600080600060a084860312156147cf57600080fd5b6147d98585614793565b925060608401356147e9816147ab565b915060808401356147f9816147ab565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561483c5761483c614804565b60405290565b60405160c081016001600160401b038111828210171561483c5761483c614804565b60405160e081016001600160401b038111828210171561483c5761483c614804565b604051608081016001600160401b038111828210171561483c5761483c614804565b604051601f8201601f191681016001600160401b03811182821017156148d0576148d0614804565b604052919050565b62ffffff8116811461464357600080fd5b6000606082840312156148fb57600080fd5b61490361481a565b905081356149108161462e565b815260208201356149208161462e565b60208201526040820135614933816148d8565b604082015292915050565b6000806080838503121561495157600080fd5b61495b84846148e9565b9150606083013561496b816147ab565b809150509250929050565b801515811461464357600080fd5b60008060006060848603121561499957600080fd5b83356149a48161462e565b925060208401356149b48161462e565b915060408401356147f981614976565b600081518084526020808501945080840160005b83811015614a34578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c090960195908201906001016149d8565b509495945050505050565b6000610220614a4f848451614663565b60208301518015156060860152506040830151801515608086015250606083015160a0850152608083015160c085015260a0830151614a9660e086018263ffffffff169052565b5060c0830151610100614ab08187018363ffffffff169052565b60e0850151610120878101919091529085015161014080880191909152908501516101608088019190915290850151610180808801919091529085015191506101a0614b008188018460ff169052565b9085015191506101c090614b188783018460ff169052565b8501516101e087015284015161020086018390529050611d53828601826149c4565b602081526000610b6c6020830184614a3f565b600080600060a08486031215614b6257600080fd5b614b6c85856148e9565b92506060840135614b7c8161462e565b915060808401356147f981614976565b600060e082840312156147a557600080fd5b6000806000806000806101008789031215614bb857600080fd5b614bc28888614793565b9550606087013594506080870135935060a0870135614be081614976565b925060c0870135915060e0870135614bf78161462e565b809150509295509295509295565b8281526040602082015260006128fc60408301846149c4565b600080600080600060e08688031215614c3657600080fd5b614c4087876148e9565b94506060860135614c508161462e565b93506080860135614c6081614976565b9497939650939460a0810135945060c0013592915050565b60006001600160401b03821115614c9157614c91614804565b5060051b60200190565b6001600160801b038116811461464357600080fd5b600082601f830112614cc157600080fd5b81356020614cd6614cd183614c78565b6148a8565b82815260c09283028501820192828201919087851115614cf557600080fd5b8387015b85811015614d6c5781818a031215614d115760008081fd5b614d19614842565b8135614d24816147ab565b815281860135614d3381614c9b565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101614cf9565b5090979650505050505050565b600060208284031215614d8b57600080fd5b81356001600160401b03811115614da157600080fd5b6128fc84828501614cb0565b60008060808385031215614dc057600080fd5b614dca8484614793565b915060608301356001600160401b03811115614de557600080fd5b614df185828601614cb0565b9150509250929050565b60008060008060808587031215614e1157600080fd5b8435614e1c8161462e565b93506020850135614e2c8161462e565b92506040850135614e3c81614976565b91506060850135614e4c81614976565b939692955090935050565b6101e08101610b6f828461468f565b600080600060a08486031215614e7b57600080fd5b6147d985856148e9565b602080825282518282018190526000919060409081850190868401855b82811015614ee65781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101614ea2565b5091979650505050505050565b600061016082019050614f07828451614663565b602083015115156060830152604083015163ffffffff8116608084015250606083015163ffffffff811660a084015250608083015160c083015260a083015160e083015260c0830151610100818185015260e085015161012085015280850151610140850152505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614fca57603f19888603018452614fb8858351614a3f565b94509285019290850190600101614f9c565b5092979650505050505050565b60008060808385031215614fea57600080fd5b614dca84846148e9565b8051614fff8161462e565b919050565b6000602080838503121561501757600080fd5b82516001600160401b0381111561502d57600080fd5b8301601f8101851361503e57600080fd5b805161504c614cd182614c78565b81815260059190911b8201830190838101908783111561506b57600080fd5b928401925b828410156137b75783516150838161462e565b82529284019290840190615070565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610b6f57610b6f615092565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156150e757600080fd5b81516110338161462e565b60006020828403121561510457600080fd5b8151611033816148d8565b60006001820161512157615121615092565b5060010190565b80356151338161462e565b6001600160a01b03908116835260208201359061514f8261462e565b1660208301526040810135615163816148d8565b62ffffff81166040840152505050565b60608101610b6f8284615128565b805161ffff81168114614fff57600080fd5b60008060008385036101c08112156151aa57600080fd5b84516151b58161462e565b60208601519094506151c6816147ab565b9250603f1901610180808212156151dc57600080fd5b6151e4614864565b60c08312156151f257600080fd5b6151fa614842565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a08401528281526101008701516020820152610120870151604082015261014087015160608201526152666101608801615181565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806152b7576152b761528a565b627fffff198214600019821416156152d1576152d1615092565b90059392505050565b60008260020b8260020b028060020b91508082146152fa576152fa615092565b5092915050565b805160ff81168114614fff57600080fd5b8051614fff81614976565b600080600080600080600060e0888a03121561533857600080fd5b87516153438161462e565b6020890151909750615354816147ab565b955061536260408901615181565b945061537060608901615181565b935061537e60808901615181565b925061538c60a08901615301565b915060c088015161539c81614976565b8091505092959891949750929550565b6000606082840312156153be57600080fd5b610b6c83836148e9565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600286900b8152610140810161541b60208301876153c8565b60e0820194909452600292830b610100820152910b6101209091015292915050565b60006020828403121561544f57600080fd5b5051919050565b80820180821115610b6f57610b6f615092565b600281810b9083900b01627fffff8113627fffff1982121715610b6f57610b6f615092565b600282810b9082900b03627fffff198112627fffff82131715610b6f57610b6f615092565b6000826154c2576154c261528a565b500490565b60608101610b6f8284614663565b6000602082840312156154e757600080fd5b815161103381614c9b565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805163ffffffff81168114614fff57600080fd5b600082601f83011261553b57600080fd5b8151602061554b614cd183614c78565b82815260c0928302850182019282820191908785111561556a57600080fd5b8387015b85811015614d6c5781818a0312156155865760008081fd5b61558e614842565b8151615599816147ab565b8152818601516155a881614c9b565b8187015260408281015190820152606080830151908201526080808301519082015260a08083015190820152845292840192810161556e565b6000602082840312156155f357600080fd5b81516001600160401b038082111561560a57600080fd5b908301906080828603121561561e57600080fd5b615626614886565b82518281111561563557600080fd5b830160e0818803121561564757600080fd5b61564f614864565b61565882614ff4565b815261566660208301615312565b6020820152604082015160408201526060820151606082015261568b60808301615516565b608082015261569c60a08301615516565b60a082015260c0820151848111156156b357600080fd5b6156bf8982850161552a565b60c083015250808352505060208301516020820152604083015160408201526156ea60608401615312565b606082015295945050505050565b60006020828403121561570a57600080fd5b610b6c82615301565b81810381811115610b6f57610b6f615092565b60006020828403121561573857600080fd5b610b6c82615516565b60006020828403121561575357600080fd5b81516001600160401b0381111561576957600080fd5b6128fc8482850161552a565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff8416608082015260006101806157b960a08401866153c8565b80610160840152613252818401856149c4565b600080604083850312156157df57600080fd5b82516001600160401b038111156157f557600080fd5b6158018582860161552a565b925050602083015190509250929050565b600080600080600060a0868803121561582a57600080fd5b855161583581614c9b565b602087015190955061584681614c9b565b604087015190945061585781614c9b565b606087015190935061586881614c9b565b80925050608086015190509295509295909350565b60006020828403121561588f57600080fd5b813561103381614976565b6000602082840312156158ac57600080fd5b8135611033816148d8565b600080600080608085870312156158cd57600080fd5b8451935060208501516158df8161462e565b92506158ed60408601615516565b6060959095015193969295505050565b60e0810161590b8288615128565b6060820195909552921515608084015260a08301919091526001600160a01b031660c090910152919050565b6000806040838503121561594a57600080fd5b8251915060208301516001600160401b0381111561596757600080fd5b614df18582860161552a565b60408152600061598660408301856149c4565b90508260208301529392505050565b602081526000610b6c60208301846149c4565b600080604083850312156159bb57600080fd5b82516159c6816147ab565b602084015190925061496b816147ab565b60a0815260006159ea60a08301886149c4565b602083019690965250600293840b60408201529190920b60608201526001600160a01b03909116608090910152919050565b60008060408385031215615a2f57600080fd5b505080516020909101519092909150565b81810360008312801583831316838312821617156152fa576152fa615092565b6000600160ff1b8201615a7557615a75615092565b5060000390565b600060208284031215615a8e57600080fd5b8151611033816147ab565b6001600160801b038281168282160390808211156152fa576152fa615092565b60008260020b80615acc57615acc61528a565b808360020b0791505092915050565b6001600160801b038181168382160190808211156152fa576152fa615092565b6000806000806000806000806000898b03610160811215615b1b57600080fd5b6060811215615b2957600080fd5b50615b3261481a565b8a51615b3d8161462e565b815260208b0151615b4d8161462e565b602082015260408b0151615b60816148d8565b60408201529850615b7360608b01615312565b9750615b8160808b01615516565b9650615b8f60a08b01615516565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b6001600160a01b03888116825287166020820152600286900b60408201526000610180615bf460608401886153c8565b80610120840152615c07818401876149c4565b9415156101408401525050610160015295945050505050565b6001600160a01b038281168282160390808211156152fa576152fa61509256fea264697066735822122039d09f4e415a320cdf8159b0e3517c4e391a087c7d4140c498ca5acc9c64288d64736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/Util.sol:Utils"]: string;
}
