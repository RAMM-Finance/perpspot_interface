/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoterV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stepSize",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
        ],
        internalType: "struct DataProvider.MaxLeverageParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "computeMaxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX160",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "postInstantaneousApr",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getBinsDataInBulk",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Borrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Borrowed",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.BinData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fillerOutput",
        type: "uint256",
      },
    ],
    name: "getEstimatedPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getMinMaxTicks",
    outputs: [
      {
        internalType: "int24",
        name: "min",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "max",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrderInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getPostInstantaneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getPreInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getUtilAndAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162005ca838038062005ca8833981016040819052620000349162000092565b600080546001600160a01b03199081166001600160a01b039485161790915560018054821694841694909417909355600280549093169116179055620000dc565b80516001600160a01b03811681146200008d57600080fd5b919050565b600080600060608486031215620000a857600080fd5b620000b38462000075565b9250620000c36020850162000075565b9150620000d36040850162000075565b90509250925092565b615bbc80620000ec6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639255bbc1116100a2578063ad16ab7e11610071578063ad16ab7e146102b4578063c229a332146102d5578063c3042bcd14610313578063dd65c32814610326578063dec8ae011461034657600080fd5b80639255bbc11461024157806398afeac714610261578063a55ac3eb14610274578063a9b6b32b1461029457600080fd5b80634fbfe42d116100e95780634fbfe42d146101b857806384b88557146101cb5780638e68ad36146101f8578063911f1b471461020b578063912a8e001461022e57600080fd5b8063093376fe1461011b5780631f2ecd831461014457806329aa38191461016c5780633aea807f14610197575b600080fd5b61012e61012936600461457b565b610359565b60405161013b9190614689565b60405180910390f35b6101576101523660046146f9565b6107a9565b6040805192835260208301919091520161013b565b61017f61017a36600461487d565b610a5c565b6040516001600160801b03909116815260200161013b565b6101aa6101a53660046148c3565b610b4a565b60405190815260200161013b565b6101aa6101c6366004614902565b610d6f565b6101de6101d9366004614a5d565b611363565b60408051600293840b81529190920b60208201520161013b565b61017f6102063660046146f9565b6113e6565b61021e610219366004614a91565b61162d565b604051901515815260200161013b565b61017f61023c36600461487d565b611a25565b61025461024f366004614adf565b611a5e565b60405161013b9190614b3b565b6101aa61026f366004614b4a565b611f14565b610287610282366004614b5d565b6125e0565b60405161013b9190614b7c565b6102a76102a2366004614adf565b6129eb565b60405161013b9190614bea565b6102c76102c2366004614c6c565b612b72565b60405161013b929190614d45565b6102e86102e336600461457b565b612c0e565b604080516001600160a01b03948516815293909216602084015262ffffff169082015260600161013b565b6101aa6103213660046148c3565b612d46565b61033961033436600461457b565b612fd8565b60405161013b9190614d5e565b6101aa610354366004614ed5565b6133a2565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103d89190810190614f02565b90506000815160046103ea9190614fa6565b6001600160401b0381111561040157610401614743565b60405190808252806020026020018201604052801561043a57816020015b61042761442a565b81526020019060019003908161041f5790505b5090506000805b83518110156106f3576000604051806060016040528086848151811061046957610469614fbd565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d29190614fd3565b6001600160a01b031681526020018684815181106104f2576104f2614fbd565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190614fd3565b6001600160a01b0316815260200186848151811061057b5761057b614fbd565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e49190614ff0565b62ffffff1681525090506106178786848151811061060457610604614fbd565b602002602001015183600180888a61353a565b1561062a57826106268161500d565b9350505b6106548786848151811061064057610640614fbd565b60200260200101518360016000888a61353a565b1561066757826106638161500d565b9350505b6106918786848151811061067d5761067d614fbd565b60200260200101518360006001888a61353a565b156106a457826106a08161500d565b9350505b6106cd878684815181106106ba576106ba614fbd565b602002602001015183600080888a61353a565b156106e057826106dc8161500d565b9350505b50806106eb8161500d565b915050610441565b506000816001600160401b0381111561070e5761070e614743565b60405190808252806020026020018201604052801561074757816020015b61073461442a565b81526020019060019003908161072c5790505b50905060005b8281101561079f5783818151811061076757610767614fbd565b602002602001015182828151811061078157610781614fbd565b602002602001018190525080806107979061500d565b91505061074d565b5095945050505050565b600154604051639525092360e01b815260009182918291829182916001600160a01b0316906395250923906107e2908b90600401615071565b6101c060405180830381865afa158015610800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108249190615091565b9194509250905081610836818961519e565b61084091906151d8565b96508161084d818861519e565b61085791906151d8565b9550600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c1919061521b565b509395508f9450505050505b8a60020b8160020b1215610a02576108f36108ed368f90038f018f6152aa565b82611a25565b945061090d610907368f90038f018f6152aa565b82610a5c565b93506001600160801b038516156109f15761093e6001600160801b0385811690670de0b6b3a764000090881661389f565b8651604051630ca73f1f60e21b81529194506109d8918591670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9163329cfc7c91610990918e9187908b908b90600401615300565b602060405180830381865af41580156109ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d1919061533b565b919061389f565b6109e2908b615354565b99506109ee838a615354565b98505b6109fb8782615367565b90506108cd565b5050505050818787610a14919061538c565b610a1e919061519e565b610a2b9060020b866153b1565b945081610a38888861538c565b610a42919061519e565b610a4f9060020b856153b1565b9350505050935093915050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda277908290634822244290610a959088906004016153c5565b602060405180830381865afa158015610ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad6919061533b565b846040518363ffffffff1660e01b8152600401610b0092919091825260020b602082015260400190565b602060405180830381865afa158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4191906153d3565b90505b92915050565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390610b83908a906004016153c5565b6101c060405180830381865afa158015610ba1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc59190615091565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a904790610c049087908b908b906004016153f0565b602060405180830381865afa158015610c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c459190615428565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b90610c7f9088908c908c906004016153f0565b600060405180830381865afa158015610c9c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cc491908101906154fa565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac92610d19928b926001600160a01b0316918e15918c918b918b9060040161552e565b600060405180830381865af4158015610d36573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d5e9190810190615585565b9750505050505050505b9392505050565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101829052600154604051639525092360e01b81526001600160a01b0390911690639525092390610e07908a906004016153c5565b6101c060405180830381865afa158015610e25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e499190615091565b5060020b60208301526001600160a01b039081168083526000805460405163118272bf60e31b815291931691638c1395f891610e8c91908b908b906004016153f0565b600060405180830381865afa158015610ea9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ed191908101906155cb565b9050600085670de0b6b3a764000014610f6c57815160c0015160405163069b8a8b60e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__916334dc545891610f2291908a906004016156e2565b600060405180830381865af4158015610f3f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f6791908101906154fa565b610f73565b815160c001515b6040516337a6142160e01b815290915073__$d23a8dd93b7205fa6b646ffed38c165d68$__906337a6142190610fad908490600401615704565b6040805180830381865af4158015610fc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fed9190615717565b600290810b6101608601520b610140840152825160408051633850c7bd60e01b815290516001600160a01b0390921691633850c7bd9160048082019260e0929091908290030181865afa158015611048573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106c919061521b565b50505050600291820b606087018190526001600160a01b03939093166040808801919091526101608701516101408801516020890151925163146d722d60e31b81528d15156004820152602481019690965290840b6044860152830b606485015290910b60848301525073__$d23a8dd93b7205fa6b646ffed38c165d68$__9063a36b91689060a401602060405180830381865af4158015611112573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611136919061533b565b61018084015260208301516060840151604080860151905162aba2a960e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__9363055d15489361118e938793670de0b6b3a764000093929190600401615746565b6040805180830381865af41580156111aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ce919061578b565b60a085015260808401526101808301516001036112305760408201516111fd9087670de0b6b3a764000061389f565b8761120c578360800151611212565b8360a001515b61121c90876157af565b61122691906157af565b935050505061135a565b60208201516112489087670de0b6b3a764000061389f565b60c08401819052611264908690670de0b6b3a76400009061389f565b60e0840181905261129490670de0b6b3a764000090896112885785608001516109d1565b8560a00151919061389f565b610100840152866112a9578260a001516112af565b82608001515b8361010001516112bf9190615354565b8360c0015110156112d8578160400151611226906157cf565b866112e7578260a001516112ed565b82608001515b8361010001518460c0015161130291906157eb565b61130c91906157eb565b610120840181905260e084015161132c9190670de0b6b3a764000061389f565b610120840152604082015161134a9087670de0b6b3a764000061389f565b83610120015161122691906157af565b95945050505050565b60008073__$d23a8dd93b7205fa6b646ffed38c165d68$__6337a61421846040518263ffffffff1660e01b815260040161139d9190615704565b6040805180830381865af41580156113b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113dd9190615717565b91509150915091565b600154604051632411122160e11b815260009182916001600160a01b039091169063482224429061141b908890600401615071565b602060405180830381865afa158015611438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145c919061533b565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa1580156114ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cf91906157fe565b6001600160801b039350905060008080875b8760020b8160020b12156116205760015460405163da69b0b360e01b815260048101889052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa158015611542573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156691906153d3565b6001546040516319fda27760e01b815260048101899052600284900b60248201529195506001600160a01b0316906319fda27790604401602060405180830381865afa1580156115ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115de91906153d3565b92506115ea838561581b565b9150866001600160801b0316826001600160801b03161061160b578661160d565b815b96506116198582615367565b90506114e1565b5050505050509392505050565b6000808251116116715760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b60448201526064015b60405180910390fd5b600154604051632411122160e11b8152600091829182916001600160a01b0316906348222442906116a6908990600401615071565b602060405180830381865afa1580156116c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e7919061533b565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175a91906157fe565b6001546040516315083fbb60e31b8152600481018590529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa1580156117a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117cd919061533b565b905060005b8751811015611a1657828882815181106117ee576117ee614fbd565b602002602001015160000151611804919061583b565b60020b156118425760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b6044820152606401611668565b60015488516001600160a01b039091169063da69b0b39086908b908590811061186d5761186d614fbd565b6020026020010151600001516040518363ffffffff1660e01b81526004016118a292919091825260020b602082015260400190565b602060405180830381865afa1580156118bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e391906153d3565b9550856001600160801b03166000036119055760009650505050505050610b44565b60015488516001600160a01b03909116906319fda2779086908b908590811061193057611930614fbd565b6020026020010151600001516040518363ffffffff1660e01b815260040161196592919091825260020b602082015260400190565b602060405180830381865afa158015611982573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a691906153d3565b94508781815181106119ba576119ba614fbd565b602002602001015160200151856119d1919061585d565b6001600160801b031682876001600160801b03166119ef91906157eb565b1015611a045760009650505050505050610b44565b80611a0e8161500d565b9150506117d2565b50600198975050505050505050565b600154604051632411122160e11b81526000916001600160a01b03169063da69b0b3908290634822244290610a959088906004016153c5565b611a6661442a565b60006040518060600160405280876001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad59190614fd3565b6001600160a01b03168152602001876001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b459190614fd3565b6001600160a01b03168152602001876001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb59190614ff0565b62ffffff16905290506000611bcc878787876129eb565b6000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f890611c06908b908b908b906004016153f0565b600060405180830381865afa158015611c23573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c4b91908101906155cb565b606083015190915063ffffffff1615611f085760008260e00151600014611c9e57611c99836060015163ffffffff1642611c8591906157eb565b60e085015190670de0b6b3a764000061397d565b611ca8565b670de0b6b3a76400005b6080840151909150600090611cc69083670de0b6b3a764000061389f565b9050808460a0015111611cd95780611cdf565b8360a001515b9050604051806101c0016040528086815260200188151581526020018915158152602001856040015163ffffffff168152602001856060015163ffffffff168152602001856080015181526020018560a0015181526020018560c0015181526020018560e00151815260200185610100015181526020018281526020018b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbe9190614fd3565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611dfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1f919061587d565b60ff1681526020018b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e899190614fd3565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eea919061587d565b60ff1681526020018460600151151581525095505050505050611f0c565b5050505b949350505050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052600154604051639525092360e01b81526001600160a01b0390911690639525092390611f84908690600401615071565b6101c060405180830381865afa158015611fa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc69190615091565b50506001600160a01b031680825260408051633850c7bd60e01b81529051633850c7bd9160048082019260e0929091908290030181865afa15801561200f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612033919061521b565b5050506001600160a01b03938416602086015250505060a08401356040808401919091526001549051632411122160e11b815291169063c6c2c2ca908290634822244290612085908890600401615071565b602060405180830381865afa1580156120a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120c6919061533b565b6040518263ffffffff1660e01b81526004016120e491815260200190565b60a060405180830381865afa158015612101573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121259190615898565b505050506001600160801b03166060828101919091526080848101803591840191909152612154918501615903565b61216a57612165602084018461457b565b61217a565b61217a604084016020850161457b565b6001600160a01b031660c08201526121986080840160608501615903565b6121b1576121ac604084016020850161457b565b6121be565b6121be602084018461457b565b6001600160a01b031660e0808301919091526121e1906101008501908501615903565b156122be57608083013560a080830182905260025460408051928301815260e08501516001600160a01b03908116845260c0860151811660208501528382019490945292169163c6a5026a9190606080830191612242918901908901615920565b62ffffff16815260006020909101526040516001600160e01b031960e084901b168152612272919060040161593d565b6080604051808303816000875af1158015612291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122b59190615985565b50505060808201525b670de0b6b3a7640000816040015111156125da576000806122e6610100860160e08701615903565b1561242e5761231a670de0b6b3a7640000846040015161230691906157eb565b608085015190670de0b6b3a764000061389f565b9150600061233f8460600151670de0b6b3a76400008561389f9092919063ffffffff16565b905061234b81846157eb565b6002546040805160a08101825260c08801516001600160a01b03908116825260e089015181166020830152818301859052939650929091169163c6a5026a9160608083019161239e918c01908c01615920565b62ffffff16815260006020909101526040516001600160e01b031960e084901b1681526123ce919060040161593d565b6080604051808303816000875af11580156123ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124119190615985565b50505060a08501519092506124269083615354565b915050612558565b612449670de0b6b3a7640000846040015161230691906157eb565b9150600061246e8460600151670de0b6b3a76400008561389f9092919063ffffffff16565b9050600081856080015161248291906157eb565b6002546040805160a08101825260c08901516001600160a01b03908116825260e08a015181166020830152939450929091169163c6a5026a9181016124c78886615354565b81526020016124dc60608c0160408d01615920565b62ffffff16815260006020909101526040516001600160e01b031960e084901b16815261250c919060040161593d565b6080604051808303816000875af115801561252b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061254f9190615985565b50919450505050505b600061257a868461256f6080830160608401615903565b858860200151612b72565b5090508015612590575050506040015192915050565b8560c00135846040015110156125ac5750600095945050505050565b60408401516125cc90670bcbce7f1b150000670de0b6b3a764000061389f565b6040850152506122be915050565b50919050565b600154604051632411122160e11b81526060916000916001600160a01b03909116906348222442906126169088906004016153c5565b602060405180830381865afa158015612633573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612657919061533b565b600154604051639525092360e01b815291925060009182916001600160a01b03169063952509239061268d908a906004016153c5565b6101c060405180830381865afa1580156126ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126cf9190615091565b509092509050806126e0818861519e565b6126ea91906151d8565b9550806126f7818761519e565b61270191906151d8565b9450600081612710888861538c565b61271a919061519e565b60020b6001600160401b0381111561273457612734614743565b60405190808252806020026020018201604052801561279757816020015b6127846040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816127525790505b509050600080846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156127db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ff919061521b565b509495508d9450505050505b8860020b8160020b12156129dc576128b58261282683613a3b565b6128386128338986615367565b613a3b565b60015460405163da69b0b360e01b8152600481018d9052600287900b60248201526001600160a01b039091169063da69b0b3906044015b602060405180830381865afa15801561288c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128b091906153d3565b613d5e565b8585815181106128c7576128c7614fbd565b60200260200101516020018686815181106128e4576128e4614fbd565b6020908102919091010151604001919091525261294c8261290483613a3b565b6129116128338986615367565b6001546040516319fda27760e01b8152600481018d9052600287900b60248201526001600160a01b03909116906319fda2779060440161286f565b85858151811061295e5761295e614fbd565b602002602001015160600186868151811061297b5761297b614fbd565b6020908102919091010151608001919091525261299f61299a82613a3b565b613dfa565b8484815181106129b1576129b1614fbd565b602090810291909101015152826129c78161500d565b93506129d590508582615367565b905061280b565b50919998505050505050505050565b60408051610180810182526000610120820181815261014083018290526101608301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915260005460405163bfd4c2a560e01b81526001600160a01b03878116600483015286811660248301528515156044830152841515606483015290911690639c3f1e9090829063bfd4c2a590608401602060405180830381865afa158015612ab5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ad9919061533b565b6040518263ffffffff1660e01b8152600401612af791815260200190565b61016060405180830381865afa158015612b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b3991906159cb565b6101008a01525060c088015260a0870152608086015263ffffffff90811660608601521660408401521515602083015250949350505050565b60015460405163568b55bf60e11b81526000916060916001600160a01b039091169063ad16ab7e90612bb0908a908a908a908a908a90600401615a94565b600060405180830381865afa925050508015612bee57506040513d6000823e601f3d908101601f19168201604052612beb9190810190615ace565b60015b612bfe5750600090506060612c04565b90925090505b9550959350505050565b6000806000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c759190614fd3565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612cb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cd79190614fd3565b856001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d399190614ff0565b9196909550909350915050565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390612d7f908a906004016153c5565b6101c060405180830381865afa158015612d9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dc19190615091565b600154604051632411122160e11b815293965091945092506000916001600160a01b0390911690634822244290612dfc908b906004016153c5565b602060405180830381865afa158015612e19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e3d919061533b565b6000805460405163d93a904760e01b815292935090916001600160a01b039091169063d93a904790612e779088908c908c906004016153f0565b602060405180830381865afa158015612e94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eb89190615428565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b90612ef29089908d908d906004016153f0565b600060405180830381865afa158015612f0f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612f3791908101906154fa565b60018054865160405163aa7532af60e01b815293945073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9363aa7532af93612f89938c936001600160a01b03909116928c9289918c90600401615b0a565b602060405180830381865af4158015612fa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fca919061533b565b9a9950505050505050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561302f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526130579190810190614f02565b90506000815160026130699190614fa6565b6001600160401b0381111561308057613080614743565b6040519080825280602002602001820160405280156130b957816020015b6130a66144b5565b81526020019060019003908161309e5790505b5090506000805b83518110156132f657600060405180606001604052808684815181106130e8576130e8614fbd565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561312d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131519190614fd3565b6001600160a01b0316815260200186848151811061317157613171614fbd565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156131b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131da9190614fd3565b6001600160a01b031681526020018684815181106131fa576131fa614fbd565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561323f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132639190614ff0565b62ffffff1681525090506132958786848151811061328357613283614fbd565b60200260200101518360018789613e1b565b156132a857826132a48161500d565b9350505b6132d0878684815181106132be576132be614fbd565b60200260200101518360008789613e1b565b156132e357826132df8161500d565b9350505b50806132ee8161500d565b9150506130c0565b506000816001600160401b0381111561331157613311614743565b60405190808252806020026020018201604052801561334a57816020015b6133376144b5565b81526020019060019003908161332f5790505b50905060005b8281101561079f5783818151811061336a5761336a614fbd565b602002602001015182828151811061338457613384614fbd565b6020026020010181905250808061339a9061500d565b915050613350565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906133db9089906004016153c5565b6101c060405180830381865afa1580156133f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061341d9190615091565b600154604051632411122160e11b815293965091945092506000916001600160a01b0390911690634822244290613458908a906004016153c5565b602060405180830381865afa158015613475573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613499919061533b565b600154835160405163aa7532af60e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263aa7532af926134ee9289926001600160a01b03909216918991908d906000908a90600401615b0a565b602060405180830381865af415801561350b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061352f919061533b565b979650505050505050565b600080613549888a87896129eb565b6000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f890613583908c908e908b906004016153f0565b600060405180830381865afa1580156135a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526135c891908101906155cb565b606083015190915063ffffffff161561388f5760008260e0015160001461360757613602836060015163ffffffff1642611c8591906157eb565b613611565b670de0b6b3a76400005b608084015190915060009061362f9083670de0b6b3a764000061389f565b9050808460a00151116136425780613648565b8360a001515b9050604051806101c001604052808b81526020018a151581526020018915158152602001856040015163ffffffff168152602001856060015163ffffffff168152602001856080015181526020018560a0015181526020018560c0015181526020018560e00151815260200185610100015181526020018281526020018c6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137279190614fd3565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613764573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613788919061587d565b60ff1681526020018c6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156137ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137f29190614fd3565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561382f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613853919061587d565b60ff1681526020018460600151151581525086888151811061387757613877614fbd565b6020026020010181905250600194505050505061352f565b5060009998505050505050505050565b60008080600019858709858702925082811083820303915050806000036138d857600084116138cd57600080fd5b508290049050610d68565b8084116139105760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401611668565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000838015613a1d576001841680156139985785925061399c565b8392505b508260011c8460011c94505b8415613a17578560801c156139bc57600080fd5b858602818101818110156139cf57600080fd5b8590049650506001851615613a0c5785830283878204146139f55786156139f557600080fd5b81810181811015613a0557600080fd5b8590049350505b8460011c94506139a8565b50613a33565b838015613a2d5760009250613a31565b8392505b505b509392505050565b60008060008360020b12613a52578260020b613a5a565b8260020b6000035b9050620d89e8811115613a80576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003613a9757600160801b613aa9565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613add576ffff97272373d413259a46990580e213a0260801c5b6004821615613afc576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613b1b576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613b3a576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613b59576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613b78576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613b97576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613bb7576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613bd7576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613bf7576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613c17576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613c37576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613c57576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613c77576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613c97576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613cb8576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613cd8576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613cf7576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613d14576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613d35578060001981613d3157613d31615188565b0490505b640100000000810615613d49576001613d4c565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b03161115613d7f579293925b846001600160a01b0316866001600160a01b031611613daa57613da3858585614346565b9150613df1565b836001600160a01b0316866001600160a01b03161015613de357613dcf868585614346565b9150613ddc8587856143b9565b9050613df1565b613dee8585856143b9565b90505b94509492505050565b600080613e0683614403565b9050610d688182670de0b6b3a764000061389f565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f890613e50908a908c908a906004016153f0565b600060405180830381865afa158015613e6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613e9591908101906155cb565b60008054919250906001600160a01b0316635d4936ff613f078a8c8a6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b6040518263ffffffff1660e01b8152600401613f2591815260200190565b602060405180830381865afa158015613f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f66919061533b565b90506000613f75888b89610b4a565b905082606001511561409e57600154604051632411122160e11b81526000916001600160a01b03169063c6c2c2ca908290634822244290613fba908e906004016153c5565b602060405180830381865afa158015613fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ffb919061533b565b6040518263ffffffff1660e01b815260040161401991815260200190565b60a060405180830381865afa158015614036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061405a9190615898565b505050506001600160801b03169050614096670de0b6b3a764000082670de0b6b3a764000061408991906157eb565b865160600151919061389f565b845160600152505b60208301511561433457604051806102000160405280898152602001881515815260200184606001511515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff16815260200183815260200184602001518152602001846040015181526020016141378a8d8b610b4a565b81526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561417a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061419e9190614fd3565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156141db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141ff919061587d565b60ff1681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015614245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142699190614fd3565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156142a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142ca919061587d565b60ff1681526020018284116142e05760006142ea565b6142ea83856157eb565b81526020016142fa8a8d8b612d46565b8152602001846000015160c0015181525085878151811061431d5761431d614fbd565b60200260200101819052506001935050505061433c565b600093505050505b9695505050505050565b6000826001600160a01b0316846001600160a01b03161115614366579192915b6001600160a01b0384166143af6fffffffffffffffffffffffffffffffff60601b606085901b166143978787615b66565b6001600160a01b0316866001600160a01b031661389f565b611f0c91906153b1565b6000826001600160a01b0316846001600160a01b031611156143d9579192915b611f0c6001600160801b0383166143f08686615b66565b6001600160a01b0316600160601b61389f565b600060606144226001600160a01b038416670de0b6b3a7640000614fa6565b901c92915050565b604080516102208101825260006101c082018181526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b604080516102608101909152600061020082018181526102208301829052610240830191909152819081526020016000151581526020016000151581526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff1681526020016000815260200160008152602001606081525090565b6001600160a01b038116811461457857600080fd5b50565b60006020828403121561458d57600080fd5b8135610d6881614563565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b6145cf828251614598565b60208101518015156060840152506040810151801515608084015250606081015163ffffffff811660a084015250608081015163ffffffff811660c08401525060a081015160e08381019190915260c0820151610100808501919091529082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015161018080850191909152908201516101a080850191909152908201516101c0840152015115156101e090910152565b6020808252825182820181905260009190848201906040850190845b818110156146cc576146b88385516145c4565b9284019261020092909201916001016146a5565b50909695505050505050565b6000606082840312156125da57600080fd5b8060020b811461457857600080fd5b600080600060a0848603121561470e57600080fd5b61471885856146d8565b92506060840135614728816146ea565b91506080840135614738816146ea565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561477b5761477b614743565b60405290565b60405160c081016001600160401b038111828210171561477b5761477b614743565b60405160e081016001600160401b038111828210171561477b5761477b614743565b604051608081016001600160401b038111828210171561477b5761477b614743565b604051601f8201601f191681016001600160401b038111828210171561480f5761480f614743565b604052919050565b62ffffff8116811461457857600080fd5b60006060828403121561483a57600080fd5b614842614759565b9050813561484f81614563565b8152602082013561485f81614563565b6020820152604082013561487281614817565b604082015292915050565b6000806080838503121561489057600080fd5b61489a8484614828565b915060608301356148aa816146ea565b809150509250929050565b801515811461457857600080fd5b600080600060a084860312156148d857600080fd5b6148e28585614828565b925060608401356148f281614563565b91506080840135614738816148b5565b600080600080600060e0868803121561491a57600080fd5b6149248787614828565b9450606086013561493481614563565b93506080860135614944816148b5565b9497939650939460a0810135945060c0013592915050565b60006001600160401b0382111561497557614975614743565b5060051b60200190565b6001600160801b038116811461457857600080fd5b600082601f8301126149a557600080fd5b813560206149ba6149b58361495c565b6147e7565b82815260c092830285018201928282019190878511156149d957600080fd5b8387015b85811015614a505781818a0312156149f55760008081fd5b6149fd614781565b8135614a08816146ea565b815281860135614a178161497f565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015284529284019281016149dd565b5090979650505050505050565b600060208284031215614a6f57600080fd5b81356001600160401b03811115614a8557600080fd5b611f0c84828501614994565b60008060808385031215614aa457600080fd5b614aae84846146d8565b915060608301356001600160401b03811115614ac957600080fd5b614ad585828601614994565b9150509250929050565b60008060008060808587031215614af557600080fd5b8435614b0081614563565b93506020850135614b1081614563565b92506040850135614b20816148b5565b91506060850135614b30816148b5565b939692955090935050565b6102008101610b4482846145c4565b600061010082840312156125da57600080fd5b600080600060a08486031215614b7257600080fd5b6147188585614828565b602080825282518282018190526000919060409081850190868401855b82811015614bdd5781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101614b99565b5091979650505050505050565b600061016082019050614bfe828451614598565b602083015115156060830152604083015163ffffffff8116608084015250606083015163ffffffff811660a084015250608083015160c083015260a083015160e083015260c0830151610100818185015260e085015161012085015280850151610140850152505092915050565b600080600080600060e08688031215614c8457600080fd5b614c8e87876146d8565b9450606086013593506080860135614ca5816148b5565b925060a0860135915060c0860135614cbc81614563565b809150509295509295909350565b600081518084526020808501945080840160005b83811015614d3a578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c09096019590820190600101614cde565b509495945050505050565b828152604060208201526000611f0c6040830184614cca565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015614ec757603f198984030185528151610240614da6858351614598565b888201516060614db98188018315159052565b8984015191506080614dce8189018415159052565b9084015160a0888101919091529084015160c08089019190915290840151915060e090614e028289018463ffffffff169052565b8401519150610100614e1b8882018463ffffffff169052565b90840151610120888101919091529084015161014080890191909152908401516101608089019190915290840151610180808901919091529084015191506101a090614e6b8289018460ff169052565b84015191506101c0614e818882018460ff169052565b908401516101e088810191909152908401516102008801529092015161022086018290529150614eb381860183614cca565b968901969450505090860190600101614d85565b509098975050505050505050565b60008060808385031215614ee857600080fd5b614aae8484614828565b8051614efd81614563565b919050565b60006020808385031215614f1557600080fd5b82516001600160401b03811115614f2b57600080fd5b8301601f81018513614f3c57600080fd5b8051614f4a6149b58261495c565b81815260059190911b82018301908381019087831115614f6957600080fd5b928401925b8284101561352f578351614f8181614563565b82529284019290840190614f6e565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610b4457610b44614f90565b634e487b7160e01b600052603260045260246000fd5b600060208284031215614fe557600080fd5b8151610d6881614563565b60006020828403121561500257600080fd5b8151610d6881614817565b60006001820161501f5761501f614f90565b5060010190565b803561503181614563565b6001600160a01b03908116835260208201359061504d82614563565b166020830152604081013561506181614817565b62ffffff81166040840152505050565b60608101610b448284615026565b805161ffff81168114614efd57600080fd5b60008060008385036101c08112156150a857600080fd5b84516150b381614563565b60208601519094506150c4816146ea565b9250603f1901610180808212156150da57600080fd5b6150e26147a3565b60c08312156150f057600080fd5b6150f8614781565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a0840152828152610100870151602082015261012087015160408201526101408701516060820152615164610160880161507f565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806151b5576151b5615188565b627fffff198214600019821416156151cf576151cf614f90565b90059392505050565b60008260020b8260020b028060020b91508082146151f8576151f8614f90565b5092915050565b805160ff81168114614efd57600080fd5b8051614efd816148b5565b600080600080600080600060e0888a03121561523657600080fd5b875161524181614563565b6020890151909750615252816146ea565b95506152606040890161507f565b945061526e6060890161507f565b935061527c6080890161507f565b925061528a60a089016151ff565b915060c088015161529a816148b5565b8091505092959891949750929550565b6000606082840312156152bc57600080fd5b610b418383614828565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600286900b8152610140810161531960208301876152c6565b60e0820194909452600292830b610100820152910b6101209091015292915050565b60006020828403121561534d57600080fd5b5051919050565b80820180821115610b4457610b44614f90565b600281810b9083900b01627fffff8113627fffff1982121715610b4457610b44614f90565b600282810b9082900b03627fffff198112627fffff82131715610b4457610b44614f90565b6000826153c0576153c0615188565b500490565b60608101610b448284614598565b6000602082840312156153e557600080fd5b8151610d688161497f565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805163ffffffff81168114614efd57600080fd5b60006020828403121561543a57600080fd5b610b4182615414565b600082601f83011261545457600080fd5b815160206154646149b58361495c565b82815260c0928302850182019282820191908785111561548357600080fd5b8387015b85811015614a505781818a03121561549f5760008081fd5b6154a7614781565b81516154b2816146ea565b8152818601516154c18161497f565b8187015260408281015190820152606080830151908201526080808301519082015260a080830151908201528452928401928101615487565b60006020828403121561550c57600080fd5b81516001600160401b0381111561552257600080fd5b611f0c84828501615443565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff84166080820152600061018061557260a08401866152c6565b80610160840152612fca81840185614cca565b6000806040838503121561559857600080fd5b82516001600160401b038111156155ae57600080fd5b6155ba85828601615443565b925050602083015190509250929050565b6000602082840312156155dd57600080fd5b81516001600160401b03808211156155f457600080fd5b908301906080828603121561560857600080fd5b6156106147c5565b82518281111561561f57600080fd5b830160e0818803121561563157600080fd5b6156396147a3565b61564282614ef2565b815261565060208301615210565b6020820152604082015160408201526060820151606082015261567560808301615414565b608082015261568660a08301615414565b60a082015260c08201518481111561569d57600080fd5b6156a989828501615443565b60c083015250808352505060208301516020820152604083015160408201526156d460608401615210565b606082015295945050505050565b6040815260006156f56040830185614cca565b90508260208301529392505050565b602081526000610b416020830184614cca565b6000806040838503121561572a57600080fd5b8251615735816146ea565b60208401519092506148aa816146ea565b60a08152600061575960a0830188614cca565b602083019690965250600293840b60408201529190920b60608201526001600160a01b03909116608090910152919050565b6000806040838503121561579e57600080fd5b505080516020909101519092909150565b81810360008312801583831316838312821617156151f8576151f8614f90565b6000600160ff1b82016157e4576157e4614f90565b5060000390565b81810381811115610b4457610b44614f90565b60006020828403121561581057600080fd5b8151610d68816146ea565b6001600160801b038281168282160390808211156151f8576151f8614f90565b60008260020b8061584e5761584e615188565b808360020b0791505092915050565b6001600160801b038181168382160190808211156151f8576151f8614f90565b60006020828403121561588f57600080fd5b610b41826151ff565b600080600080600060a086880312156158b057600080fd5b85516158bb8161497f565b60208701519095506158cc8161497f565b60408701519094506158dd8161497f565b60608701519093506158ee8161497f565b80925050608086015190509295509295909350565b60006020828403121561591557600080fd5b8135610d68816148b5565b60006020828403121561593257600080fd5b8135610d6881614817565b81516001600160a01b0390811682526020808401518216908301526040808401519083015260608084015162ffffff1690830152608092830151169181019190915260a00190565b6000806000806080858703121561599b57600080fd5b8451935060208501516159ad81614563565b92506159bb60408601615414565b6060959095015193969295505050565b6000806000806000806000806000898b036101608112156159eb57600080fd5b60608112156159f957600080fd5b50615a02614759565b8a51615a0d81614563565b815260208b0151615a1d81614563565b602082015260408b0151615a3081614817565b60408201529850615a4360608b01615210565b9750615a5160808b01615414565b9650615a5f60a08b01615414565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b60e08101615aa28288615026565b6060820195909552921515608084015260a08301919091526001600160a01b031660c090910152919050565b60008060408385031215615ae157600080fd5b8251915060208301516001600160401b03811115615afe57600080fd5b614ad585828601615443565b6001600160a01b03888116825287166020820152600286900b60408201526000610180615b3a60608401886152c6565b80610120840152615b4d81840187614cca565b9415156101408401525050610160015295945050505050565b6001600160a01b038281168282160390808211156151f8576151f8614f9056fea2646970667358221220f011cc95380d6bfde978e68a20612cb66697937aa2da8f0a9aa372f465dbbce064736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/Util.sol:Utils"]: string;
}
