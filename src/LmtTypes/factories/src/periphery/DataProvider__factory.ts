/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoterV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stepSize",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.MaxLeverageParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "computeMaxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX160",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getBinsDataInBulk",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Borrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Borrowed",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.BinData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fillerOutput",
        type: "uint256",
      },
    ],
    name: "getEstimatedPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken",
        type: "bool",
      },
    ],
    name: "getMarginPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getMinMaxTicks",
    outputs: [
      {
        internalType: "int24",
        name: "min",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "max",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrderInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getPostInstantaneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getPreInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getUtilAndAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162005d0138038062005d01833981016040819052620000349162000092565b600080546001600160a01b03199081166001600160a01b039485161790915560018054821694841694909417909355600280549093169116179055620000dc565b80516001600160a01b03811681146200008d57600080fd5b919050565b600080600060608486031215620000a857600080fd5b620000b38462000075565b9250620000c36020850162000075565b9150620000d36040850162000075565b90509250925092565b615c1580620000ec6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638e68ad36116100ad578063a9b6b32b11610071578063a9b6b32b146102e0578063c229a33214610300578063c3042bcd1461033e578063dd65c32814610351578063dec8ae011461037157600080fd5b80638e68ad3614610257578063911f1b471461026a578063912a8e001461028d5780639255bbc1146102a0578063a55ac3eb146102c057600080fd5b80633aea807f116100f45780633aea807f146101c2578063433a1e18146101e357806348c6f866146101f65780634fbfe42d1461021757806384b885571461022a57600080fd5b8063093376fe146101265780631f2ecd831461014f57806329aa3819146101775780632d6cf1f4146101a2575b600080fd5b610139610134366004614627565b610384565b6040516101469190614725565b60405180910390f35b61016261015d36600461479b565b6107d4565b60408051928352602083019190915201610146565b61018a6101853660046148fd565b610a87565b6040516001600160801b039091168152602001610146565b6101b56101b0366004614943565b610b75565b6040516101469190614ae4565b6101d56101d0366004614af7565b61102e565b604051908152602001610146565b6101d56101f1366004614b36565b611251565b610209610204366004614b48565b6116bf565b604051610146929190614baf565b6101d5610225366004614bc8565b61175e565b61023d610238366004614d23565b611d52565b60408051600293840b81529190920b602082015201610146565b61018a61026536600461479b565b611dd5565b61027d610278366004614d57565b6120a0565b6040519015158152602001610146565b61018a61029b3660046148fd565b612498565b6102b36102ae366004614da5565b6124d1565b6040516101469190614e01565b6102d36102ce366004614e10565b6128fa565b6040516101469190614e2f565b6102f36102ee366004614da5565b612d05565b6040516101469190614e9d565b61031361030e366004614627565b612e8c565b604080516001600160a01b03948516815293909216602084015262ffffff1690820152606001610146565b6101d561034c366004614af7565b612fc4565b61036461035f366004614627565b613256565b6040516101469190614f1f565b6101d561037f366004614f81565b613620565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104039190810190614fae565b90506000815160046104159190615052565b6001600160401b0381111561042c5761042c6147e5565b60405190808252806020026020018201604052801561046557816020015b6104526144de565b81526020019060019003908161044a5790505b5090506000805b835181101561071e576000604051806060016040528086848151811061049457610494615069565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd919061507f565b6001600160a01b0316815260200186848151811061051d5761051d615069565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610586919061507f565b6001600160a01b031681526020018684815181106105a6576105a6615069565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f919061509c565b62ffffff1681525090506106428786848151811061062f5761062f615069565b602002602001015183600180888a6137b8565b156106555782610651816150b9565b9350505b61067f8786848151811061066b5761066b615069565b60200260200101518360016000888a6137b8565b15610692578261068e816150b9565b9350505b6106bc878684815181106106a8576106a8615069565b60200260200101518360006001888a6137b8565b156106cf57826106cb816150b9565b9350505b6106f8878684815181106106e5576106e5615069565b602002602001015183600080888a6137b8565b1561070b5782610707816150b9565b9350505b5080610716816150b9565b91505061046c565b506000816001600160401b03811115610739576107396147e5565b60405190808252806020026020018201604052801561077257816020015b61075f6144de565b8152602001906001900390816107575790505b50905060005b828110156107ca5783818151811061079257610792615069565b60200260200101518282815181106107ac576107ac615069565b602002602001018190525080806107c2906150b9565b915050610778565b5095945050505050565b600154604051639525092360e01b815260009182918291829182916001600160a01b03169063952509239061080d908b9060040161511d565b6101c060405180830381865afa15801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f919061513d565b9194509250905081610861818961524a565b61086b9190615284565b965081610878818861524a565b6108829190615284565b9550600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156108c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ec91906152c7565b509395508f9450505050505b8a60020b8160020b1215610a2d5761091e610918368f90038f018f615356565b82612498565b9450610938610932368f90038f018f615356565b82610a87565b93506001600160801b03851615610a1c576109696001600160801b0385811690670de0b6b3a7640000908816613a90565b8651604051630ca73f1f60e21b8152919450610a03918591670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9163329cfc7c916109bb918e9187908b908b906004016153ac565b602060405180830381865af41580156109d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fc91906153e7565b9190613a90565b610a0d908b615400565b9950610a19838a615400565b98505b610a268782615413565b90506108f8565b5050505050818787610a3f9190615438565b610a49919061524a565b610a569060020b8661545d565b945081610a638888615438565b610a6d919061524a565b610a7a9060020b8561545d565b9350505050935093915050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda277908290634822244290610ac0908890600401615471565b602060405180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0191906153e7565b846040518363ffffffff1660e01b8152600401610b2b92919091825260020b602082015260400190565b602060405180830381865afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c919061547f565b90505b92915050565b610b7d614571565b60006040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec919061507f565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c919061507f565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccc919061509c565b62ffffff1690526000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f890610d0d9089908990899060040161549c565b600060405180830381865afa158015610d2a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d52919081019061558b565b60008054919250906001600160a01b0316635d4936ff610d73898989613b6e565b6040518263ffffffff1660e01b8152600401610d9191815260200190565b602060405180830381865afa158015610dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd291906153e7565b90506000610de184888861102e565b9050604051806101c00160405280858152602001871515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff1681526020018381526020018460200151815260200184604001518152602001828152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec3919061507f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f249190615691565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061507f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fef9190615691565b60ff16815260200182841161100557600061100f565b61100f83856156ac565b8152602001846000015160c001518152509450505050505b9392505050565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390611067908a90600401615471565b6101c060405180830381865afa158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a9919061513d565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a9047906110e89087908b908b9060040161549c565b602060405180830381865afa158015611105573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112991906156bf565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b906111639088908c908c9060040161549c565b600060405180830381865afa158015611180573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111a891908101906156da565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac926111fd928b926001600160a01b0316918e15918c918b918b9060040161570e565b600060405180830381865af415801561121a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112429190810190615765565b9b9a5050505050505050505050565b600154604051639525092360e01b815260009182916001600160a01b039091169063952509239061128690869060040161511d565b6101c060405180830381865afa1580156112a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c8919061513d565b505090506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561130c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133091906152c7565b5050600154604051632411122160e11b815295965060a08a013595600095506001600160a01b03909116935063c6c2c2ca925083915063482224429061137a908b9060040161511d565b602060405180830381865afa158015611397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bb91906153e7565b6040518263ffffffff1660e01b81526004016113d991815260200190565b60a060405180830381865afa1580156113f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141a91906157ab565b505050506001600160801b031690505b670de0b6b3a76400008211156116b6576000611465611451670de0b6b3a7640000856156ac565b608089013590670de0b6b3a7640000613a90565b9050600061148483670de0b6b3a76400006109fc8560808d0135615400565b905060006114968260808b01356156ac565b90506000600260009054906101000a90046001600160a01b03166001600160a01b031663c6a5026a6040518060a001604052808d60600160208101906114dc9190615816565b6114f2576114ed60208f018f614627565b611508565b8d60000160200160208101906115089190614627565b6001600160a01b031681526020018d60600160208101906115299190615816565b611548578d60000160200160208101906115439190614627565b611555565b61155560208f018f614627565b6001600160a01b0316815260200161156d8887615400565b81526020018d60000160400160208101906115889190615833565b62ffffff908116825260006020928301526040805160e086901b6001600160e01b031916815284516001600160a01b03908116600483015293850151841660248201529084015160448201526060840151909116606482015260809092015116608482015260a4016080604051808303816000875af115801561160f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116339190615850565b509192506000915061165a90508b84876116536080840160608501615816565b868d6116bf565b50905080156116725750949998505050505050505050565b8a60c0013587101561168f575060009a9950505050505050505050565b6116aa87670bcbce7f1b150000670de0b6b3a7640000613a90565b9650505050505061142a565b50505050919050565b6001546040516324637c3360e11b81526000916060916001600160a01b03909116906348c6f866906116ff908b908b908b908b908b908b90600401615896565b600060405180830381865afa92505050801561173d57506040513d6000823e601f3d908101601f1916820160405261173a91908101906158d6565b60015b61174d5750600090506060611753565b90925090505b965096945050505050565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101829052600154604051639525092360e01b81526001600160a01b03909116906395250923906117f6908a90600401615471565b6101c060405180830381865afa158015611814573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611838919061513d565b5060020b60208301526001600160a01b039081168083526000805460405163118272bf60e31b815291931691638c1395f89161187b91908b908b9060040161549c565b600060405180830381865afa158015611898573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118c0919081019061558b565b9050600085670de0b6b3a76400001461195b57815160c0015160405163069b8a8b60e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__916334dc54589161191191908a90600401615912565b600060405180830381865af415801561192e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261195691908101906156da565b611962565b815160c001515b6040516337a6142160e01b815290915073__$d23a8dd93b7205fa6b646ffed38c165d68$__906337a614219061199c908490600401615934565b6040805180830381865af41580156119b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119dc9190615947565b600290810b6101608601520b610140840152825160408051633850c7bd60e01b815290516001600160a01b0390921691633850c7bd9160048082019260e0929091908290030181865afa158015611a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5b91906152c7565b50505050600291820b606087018190526001600160a01b03939093166040808801919091526101608701516101408801516020890151925163146d722d60e31b81528d15156004820152602481019690965290840b6044860152830b606485015290910b60848301525073__$d23a8dd93b7205fa6b646ffed38c165d68$__9063a36b91689060a401602060405180830381865af4158015611b01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2591906153e7565b61018084015260208301516060840151604080860151905162aba2a960e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__9363055d154893611b7d938793670de0b6b3a764000093929190600401615976565b6040805180830381865af4158015611b99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bbd91906159bb565b60a08501526080840152610180830151600103611c1f576040820151611bec9087670de0b6b3a7640000613a90565b87611bfb578360800151611c01565b8360a001515b611c0b90876159df565b611c1591906159df565b9350505050611d49565b6020820151611c379087670de0b6b3a7640000613a90565b60c08401819052611c53908690670de0b6b3a764000090613a90565b60e08401819052611c8390670de0b6b3a76400009089611c775785608001516109fc565b8560a001519190613a90565b61010084015286611c98578260a00151611c9e565b82608001515b836101000151611cae9190615400565b8360c001511015611cc7578160400151611c15906159ff565b86611cd6578260a00151611cdc565b82608001515b8361010001518460c00151611cf191906156ac565b611cfb91906156ac565b610120840181905260e0840151611d1b9190670de0b6b3a7640000613a90565b6101208401526040820151611d399087670de0b6b3a7640000613a90565b836101200151611c1591906159df565b95945050505050565b60008073__$d23a8dd93b7205fa6b646ffed38c165d68$$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9363aa7532af93613207938c936001600160a01b03909116928c9289918c90600401615b63565b602060405180830381865af4158015613224573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061324891906153e7565b9a9950505050505050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156132ad573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526132d59190810190614fae565b90506000815160026132e79190615052565b6001600160401b038111156132fe576132fe6147e5565b60405190808252806020026020018201604052801561333757816020015b613324614571565b81526020019060019003908161331c5790505b5090506000805b8351811015613574576000604051806060016040528086848151811061336657613366615069565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156133ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133cf919061507f565b6001600160a01b031681526020018684815181106133ef576133ef615069565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613434573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613458919061507f565b6001600160a01b0316815260200186848151811061347857613478615069565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156134bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134e1919061509c565b62ffffff1681525090506135138786848151811061350157613501615069565b60200260200101518360018789614062565b156135265782613522816150b9565b9350505b61354e8786848151811061353c5761353c615069565b60200260200101518360008789614062565b15613561578261355d816150b9565b9350505b508061356c816150b9565b91505061333e565b506000816001600160401b0381111561358f5761358f6147e5565b6040519080825280602002602001820160405280156135c857816020015b6135b5614571565b8152602001906001900390816135ad5790505b50905060005b828110156107ca578381815181106135e8576135e8615069565b602002602001015182828151811061360257613602615069565b60200260200101819052508080613618906150b9565b9150506135ce565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390613659908990600401615471565b6101c060405180830381865afa158015613677573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061369b919061513d565b600154604051632411122160e11b815293965091945092506000916001600160a01b03909116906348222442906136d6908a90600401615471565b602060405180830381865afa1580156136f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061371791906153e7565b600154835160405163aa7532af60e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263aa7532af9261376c9289926001600160a01b03909216918991908d906000908a90600401615b63565b602060405180830381865af4158015613789573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137ad91906153e7565b979650505050505050565b6000806137c7888a8789612d05565b606081015190915063ffffffff1615613a815760008160e0015160001461380657613801826060015163ffffffff164261267991906156ac565b613810565b670de0b6b3a76400005b608083015190915060009061382e9083670de0b6b3a7640000613a90565b9050808360a00151116138415780613847565b8260a001515b9050604051806101a001604052808a815260200189151581526020018815158152602001846040015163ffffffff168152602001846060015163ffffffff168152602001846080015181526020018460a0015181526020018460c0015181526020018460e00151815260200184610100015181526020018281526020018b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613902573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613926919061507f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613963573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139879190615691565b60ff1681526020018b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156139cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139f1919061507f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a529190615691565b60ff16815250858781518110613a6a57613a6a615069565b6020026020010181905250600193505050506137ad565b50600098975050505050505050565b6000808060001985870985870292508281108382030391505080600003613ac95760008411613abe57600080fd5b508290049050611027565b808411613b015760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b60448201526064016120db565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b6000838015613c6457600184168015613bdf57859250613be3565b8392505b508260011c8460011c94505b8415613c5e578560801c15613c0357600080fd5b85860281810181811015613c1657600080fd5b8590049650506001851615613c53578583028387820414613c3c578615613c3c57600080fd5b81810181811015613c4c57600080fd5b8590049350505b8460011c9450613bef565b50613c7a565b838015613c745760009250613c78565b8392505b505b509392505050565b60008060008360020b12613c99578260020b613ca1565b8260020b6000035b9050620d89e8811115613cc7576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003613cde57600160801b613cf0565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613d24576ffff97272373d413259a46990580e213a0260801c5b6004821615613d43576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613d62576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613d81576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613da0576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613dbf576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613dde576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613dfe576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613e1e576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613e3e576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613e5e576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613e7e576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613e9e576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613ebe576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613ede576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613eff576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613f1f576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613f3e576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613f5b576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613f7c578060001981613f7857613f78615234565b0490505b640100000000810615613f90576001613f93565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b03161115613fc6579293925b846001600160a01b0316866001600160a01b031611613ff157613fea8585856143fa565b9150614038565b836001600160a01b0316866001600160a01b0316101561402a576140168685856143fa565b915061402385878561446d565b9050614038565b61403585858561446d565b90505b94509492505050565b60008061404d836144b7565b90506110278182670de0b6b3a7640000613a90565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f890614097908a908c908a9060040161549c565b600060405180830381865afa1580156140b4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526140dc919081019061558b565b60008054919250906001600160a01b0316635d4936ff6140fd8a8c8a613b6e565b6040518263ffffffff1660e01b815260040161411b91815260200190565b602060405180830381865afa158015614138573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061415c91906153e7565b9050600061416b888b8961102e565b6020840151909150156143e857604051806101c00160405280898152602001881515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff16815260200183815260200184602001518152602001846040015181526020016141fb8a8d8b61102e565b81526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561423e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614262919061507f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561429f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142c39190615691565b60ff1681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015614309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061432d919061507f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561436a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061438e9190615691565b60ff1681526020018284116143a45760006143ae565b6143ae83856156ac565b8152602001846000015160c001518152508587815181106143d1576143d1615069565b6020026020010181905250600193505050506143f0565b600093505050505b9695505050505050565b6000826001600160a01b0316846001600160a01b0316111561441a579192915b6001600160a01b0384166144636fffffffffffffffffffffffffffffffff60601b606085901b1661444b8787615bbf565b6001600160a01b0316866001600160a01b0316613a90565b6128f2919061545d565b6000826001600160a01b0316846001600160a01b0316111561448d579192915b6128f26001600160801b0383166144a48686615bbf565b6001600160a01b0316600160601b613a90565b600060606144d66001600160a01b038416670de0b6b3a7640000615052565b901c92915050565b60408051610200810190915260006101a082018181526101c083018290526101e083019190915281908152602001600015158152602001600015158152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610220810190915260006101c082018181526101e08301829052610200830191909152819081526020016000151581526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff16815260200160008152602001606081525090565b6001600160a01b038116811461462457600080fd5b50565b60006020828403121561463957600080fd5b81356110278161460f565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b61467b828251614644565b60208101518015156060840152506040810151801515608084015250606081015163ffffffff811660a084015250608081015163ffffffff811660c08401525060a081015160e08381019190915260c0820151610100808501919091529082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015161018080850191909152908201516101a084015201516101c090910152565b6020808252825182820181905260009190848201906040850190845b8181101561476857614754838551614670565b928401926101e09290920191600101614741565b50909695505050505050565b60006060828403121561478657600080fd5b50919050565b8060020b811461462457600080fd5b600080600060a084860312156147b057600080fd5b6147ba8585614774565b925060608401356147ca8161478c565b915060808401356147da8161478c565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561481d5761481d6147e5565b60405290565b60405160c081016001600160401b038111828210171561481d5761481d6147e5565b60405160e081016001600160401b038111828210171561481d5761481d6147e5565b604051601f8201601f191681016001600160401b038111828210171561488f5761488f6147e5565b604052919050565b62ffffff8116811461462457600080fd5b6000606082840312156148ba57600080fd5b6148c26147fb565b905081356148cf8161460f565b815260208201356148df8161460f565b602082015260408201356148f281614897565b604082015292915050565b6000806080838503121561491057600080fd5b61491a84846148a8565b9150606083013561492a8161478c565b809150509250929050565b801515811461462457600080fd5b60008060006060848603121561495857600080fd5b83356149638161460f565b925060208401356149738161460f565b915060408401356147da81614935565b600081518084526020808501945080840160005b838110156149f3578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c09096019590820190600101614997565b509495945050505050565b6000610200614a0e848451614644565b602083015180151560608601525060408301516080850152606083015160a08501526080830151614a4760c086018263ffffffff169052565b5060a083015163ffffffff811660e08601525060c08301516101008581019190915260e08401516101208087019190915290840151610140808701919091529084015161016080870191909152908401519061018090614aab8288018460ff169052565b85015191506101a0614ac18782018460ff169052565b908501516101c08701528401516101e086018390529050611d4982860182614983565b602081526000610b6c60208301846149fe565b600080600060a08486031215614b0c57600080fd5b614b1685856148a8565b92506060840135614b268161460f565b915060808401356147da81614935565b600060e0828403121561478657600080fd5b6000806000806000806101008789031215614b6257600080fd5b614b6c8888614774565b9550606087013594506080870135935060a0870135614b8a81614935565b925060c0870135915060e0870135614ba18161460f565b809150509295509295509295565b8281526040602082015260006128f26040830184614983565b600080600080600060e08688031215614be057600080fd5b614bea87876148a8565b94506060860135614bfa8161460f565b93506080860135614c0a81614935565b9497939650939460a0810135945060c0013592915050565b60006001600160401b03821115614c3b57614c3b6147e5565b5060051b60200190565b6001600160801b038116811461462457600080fd5b600082601f830112614c6b57600080fd5b81356020614c80614c7b83614c22565b614867565b82815260c09283028501820192828201919087851115614c9f57600080fd5b8387015b85811015614d165781818a031215614cbb5760008081fd5b614cc3614823565b8135614cce8161478c565b815281860135614cdd81614c45565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101614ca3565b5090979650505050505050565b600060208284031215614d3557600080fd5b81356001600160401b03811115614d4b57600080fd5b6128f284828501614c5a565b60008060808385031215614d6a57600080fd5b614d748484614774565b915060608301356001600160401b03811115614d8f57600080fd5b614d9b85828601614c5a565b9150509250929050565b60008060008060808587031215614dbb57600080fd5b8435614dc68161460f565b93506020850135614dd68161460f565b92506040850135614de681614935565b91506060850135614df681614935565b939692955090935050565b6101e08101610b6f8284614670565b600080600060a08486031215614e2557600080fd5b6147ba85856148a8565b602080825282518282018190526000919060409081850190868401855b82811015614e905781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101614e4c565b5091979650505050505050565b600061016082019050614eb1828451614644565b602083015115156060830152604083015163ffffffff8116608084015250606083015163ffffffff811660a084015250608083015160c083015260a083015160e083015260c0830151610100818185015260e085015161012085015280850151610140850152505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614f7457603f19888603018452614f628583516149fe565b94509285019290850190600101614f46565b5092979650505050505050565b60008060808385031215614f9457600080fd5b614d7484846148a8565b8051614fa98161460f565b919050565b60006020808385031215614fc157600080fd5b82516001600160401b03811115614fd757600080fd5b8301601f81018513614fe857600080fd5b8051614ff6614c7b82614c22565b81815260059190911b8201830190838101908783111561501557600080fd5b928401925b828410156137ad57835161502d8161460f565b8252928401929084019061501a565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610b6f57610b6f61503c565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561509157600080fd5b81516110278161460f565b6000602082840312156150ae57600080fd5b815161102781614897565b6000600182016150cb576150cb61503c565b5060010190565b80356150dd8161460f565b6001600160a01b0390811683526020820135906150f98261460f565b166020830152604081013561510d81614897565b62ffffff81166040840152505050565b60608101610b6f82846150d2565b805161ffff81168114614fa957600080fd5b60008060008385036101c081121561515457600080fd5b845161515f8161460f565b60208601519094506151708161478c565b9250603f19016101808082121561518657600080fd5b61518e614845565b60c083121561519c57600080fd5b6151a4614823565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a0840152828152610100870151602082015261012087015160408201526101408701516060820152615210610160880161512b565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b8061526157615261615234565b627fffff1982146000198214161561527b5761527b61503c565b90059392505050565b60008260020b8260020b028060020b91508082146152a4576152a461503c565b5092915050565b805160ff81168114614fa957600080fd5b8051614fa981614935565b600080600080600080600060e0888a0312156152e257600080fd5b87516152ed8161460f565b60208901519097506152fe8161478c565b955061530c6040890161512b565b945061531a6060890161512b565b93506153286080890161512b565b925061533660a089016152ab565b915060c088015161534681614935565b8091505092959891949750929550565b60006060828403121561536857600080fd5b610b6c83836148a8565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600286900b815261014081016153c56020830187615372565b60e0820194909452600292830b610100820152910b6101209091015292915050565b6000602082840312156153f957600080fd5b5051919050565b80820180821115610b6f57610b6f61503c565b600281810b9083900b01627fffff8113627fffff1982121715610b6f57610b6f61503c565b600282810b9082900b03627fffff198112627fffff82131715610b6f57610b6f61503c565b60008261546c5761546c615234565b500490565b60608101610b6f8284614644565b60006020828403121561549157600080fd5b815161102781614c45565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805163ffffffff81168114614fa957600080fd5b600082601f8301126154e557600080fd5b815160206154f5614c7b83614c22565b82815260c0928302850182019282820191908785111561551457600080fd5b8387015b85811015614d165781818a0312156155305760008081fd5b615538614823565b81516155438161478c565b81528186015161555281614c45565b8187015260408281015190820152606080830151908201526080808301519082015260a080830151908201528452928401928101615518565b60006020828403121561559d57600080fd5b81516001600160401b03808211156155b457600080fd5b90830190606082860312156155c857600080fd5b6155d06147fb565b8251828111156155df57600080fd5b830160e081880312156155f157600080fd5b6155f9614845565b61560282614f9e565b8152615610602083016152bc565b60208201526040820151604082015260608201516060820152615635608083016154c0565b608082015261564660a083016154c0565b60a082015260c08201518481111561565d57600080fd5b615669898285016154d4565b60c0830152508252506020838101519082015260409283015192810192909252509392505050565b6000602082840312156156a357600080fd5b610b6c826152ab565b81810381811115610b6f57610b6f61503c565b6000602082840312156156d157600080fd5b610b6c826154c0565b6000602082840312156156ec57600080fd5b81516001600160401b0381111561570257600080fd5b6128f2848285016154d4565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff84166080820152600061018061575260a0840186615372565b8061016084015261324881840185614983565b6000806040838503121561577857600080fd5b82516001600160401b0381111561578e57600080fd5b61579a858286016154d4565b925050602083015190509250929050565b600080600080600060a086880312156157c357600080fd5b85516157ce81614c45565b60208701519095506157df81614c45565b60408701519094506157f081614c45565b606087015190935061580181614c45565b80925050608086015190509295509295909350565b60006020828403121561582857600080fd5b813561102781614935565b60006020828403121561584557600080fd5b813561102781614897565b6000806000806080858703121561586657600080fd5b8451935060208501516158788161460f565b9250615886604086016154c0565b6060959095015193969295505050565b61010081016158a582896150d2565b6060820196909652608081019490945291151560a084015260c08301526001600160a01b031660e090910152919050565b600080604083850312156158e957600080fd5b8251915060208301516001600160401b0381111561590657600080fd5b614d9b858286016154d4565b6040815260006159256040830185614983565b90508260208301529392505050565b602081526000610b6c6020830184614983565b6000806040838503121561595a57600080fd5b82516159658161478c565b602084015190925061492a8161478c565b60a08152600061598960a0830188614983565b602083019690965250600293840b60408201529190920b60608201526001600160a01b03909116608090910152919050565b600080604083850312156159ce57600080fd5b505080516020909101519092909150565b81810360008312801583831316838312821617156152a4576152a461503c565b6000600160ff1b8201615a1457615a1461503c565b5060000390565b600060208284031215615a2d57600080fd5b81516110278161478c565b6001600160801b038281168282160390808211156152a4576152a461503c565b60008260020b80615a6b57615a6b615234565b808360020b0791505092915050565b6001600160801b038181168382160190808211156152a4576152a461503c565b6000806000806000806000806000898b03610160811215615aba57600080fd5b6060811215615ac857600080fd5b50615ad16147fb565b8a51615adc8161460f565b815260208b0151615aec8161460f565b602082015260408b0151615aff81614897565b60408201529850615b1260608b016152bc565b9750615b2060808b016154c0565b9650615b2e60a08b016154c0565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b6001600160a01b03888116825287166020820152600286900b60408201526000610180615b936060840188615372565b80610120840152615ba681840187614983565b9415156101408401525050610160015295945050505050565b6001600160a01b038281168282160390808211156152a4576152a461503c56fea2646970667358221220048ee1c566cc77edb2a762c7844a9966f219caafa87c5a0d070182bb0866aa4a64736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/Util.sol:Utils"]: string;
}
