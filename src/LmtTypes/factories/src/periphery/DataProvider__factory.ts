/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoterV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "marginInInput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "marginInOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stepSize",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
        ],
        internalType: "struct DataProvider.MaxLeverageParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "computeMaxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX160",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getBinsDataInBulk",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Borrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Borrowed",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.BinData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fillerOutput",
        type: "uint256",
      },
    ],
    name: "getEstimatedPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken",
        type: "bool",
      },
    ],
    name: "getMarginPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getMinMaxTicks",
    outputs: [
      {
        internalType: "int24",
        name: "min",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "max",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrderInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getPostInstantaneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getPreInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getUtilAndAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200602938038062006029833981016040819052620000349162000092565b600080546001600160a01b03199081166001600160a01b039485161790915560018054821694841694909417909355600280549093169116179055620000dc565b80516001600160a01b03811681146200008d57600080fd5b919050565b600080600060608486031215620000a857600080fd5b620000b38462000075565b9250620000c36020850162000075565b9150620000d36040850162000075565b90509250925092565b615f3d80620000ec6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063912a8e00116100ad578063b192ae8011610071578063b192ae80146102ed578063c229a33214610300578063c3042bcd1461033e578063dd65c32814610351578063dec8ae011461037157600080fd5b8063912a8e00146102595780639255bbc11461026c578063a55ac3eb1461028c578063a9b6b32b146102ac578063ad16ab7e146102cc57600080fd5b80633aea807f116100f45780633aea807f146101c25780634fbfe42d146101e357806384b88557146101f65780638e68ad3614610223578063911f1b471461023657600080fd5b8063093376fe146101265780631f2ecd831461014f57806329aa3819146101775780632d6cf1f4146101a2575b600080fd5b6101396101343660046148bd565b610384565b60405161014691906149cb565b60405180910390f35b61016261015d366004614a41565b6107d4565b60408051928352602083019190915201610146565b61018a610185366004614bc5565b610a87565b6040516001600160801b039091168152602001610146565b6101b56101b0366004614c0b565b610b75565b6040516101469190614dc1565b6101d56101d0366004614dd4565b61103a565b604051908152602001610146565b6101d56101f1366004614e13565b61125d565b610209610204366004614f6e565b611851565b60408051600293840b81529190920b602082015201610146565b61018a610231366004614a41565b6118d4565b610249610244366004614fa2565b611b9f565b6040519015158152602001610146565b61018a610267366004614bc5565b611f97565b61027f61027a366004614ff0565b611fd0565b604051610146919061504c565b61029f61029a36600461505b565b612486565b604051610146919061507a565b6102bf6102ba366004614ff0565b612891565b60405161014691906150e8565b6102df6102da36600461516a565b612a18565b6040516101469291906151c8565b6101d56102fb3660046151e1565b612ab4565b61031361030e3660046148bd565b613088565b604080516001600160a01b03948516815293909216602084015262ffffff1690820152606001610146565b6101d561034c366004614dd4565b6131c0565b61036461035f3660046148bd565b613452565b60405161014691906151f4565b6101d561037f366004615256565b61381c565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104039190810190615283565b90506000815160046104159190615327565b6001600160401b0381111561042c5761042c614a8b565b60405190808252806020026020018201604052801561046557816020015b610452614773565b81526020019060019003908161044a5790505b5090506000805b835181101561071e57600060405180606001604052808684815181106104945761049461533e565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190615354565b6001600160a01b0316815260200186848151811061051d5761051d61533e565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105869190615354565b6001600160a01b031681526020018684815181106105a6576105a661533e565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190615371565b62ffffff1681525090506106428786848151811061062f5761062f61533e565b602002602001015183600180888a6139b4565b1561065557826106518161538e565b9350505b61067f8786848151811061066b5761066b61533e565b60200260200101518360016000888a6139b4565b15610692578261068e8161538e565b9350505b6106bc878684815181106106a8576106a861533e565b60200260200101518360006001888a6139b4565b156106cf57826106cb8161538e565b9350505b6106f8878684815181106106e5576106e561533e565b602002602001015183600080888a6139b4565b1561070b57826107078161538e565b9350505b50806107168161538e565b91505061046c565b506000816001600160401b0381111561073957610739614a8b565b60405190808252806020026020018201604052801561077257816020015b61075f614773565b8152602001906001900390816107575790505b50905060005b828110156107ca578381815181106107925761079261533e565b60200260200101518282815181106107ac576107ac61533e565b602002602001018190525080806107c29061538e565b915050610778565b5095945050505050565b600154604051639525092360e01b815260009182918291829182916001600160a01b03169063952509239061080d908b906004016153f2565b6101c060405180830381865afa15801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f9190615412565b9194509250905081610861818961551f565b61086b9190615559565b965081610878818861551f565b6108829190615559565b9550600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156108c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ec919061559c565b509395508f9450505050505b8a60020b8160020b1215610a2d5761091e610918368f90038f018f61562b565b82611f97565b9450610938610932368f90038f018f61562b565b82610a87565b93506001600160801b03851615610a1c576109696001600160801b0385811690670de0b6b3a7640000908816613d19565b8651604051630ca73f1f60e21b8152919450610a03918591670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9163329cfc7c916109bb918e9187908b908b90600401615681565b602060405180830381865af41580156109d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fc91906156bc565b9190613d19565b610a0d908b6156d5565b9950610a19838a6156d5565b98505b610a2687826156e8565b90506108f8565b5050505050818787610a3f919061570d565b610a49919061551f565b610a569060020b86615732565b945081610a63888861570d565b610a6d919061551f565b610a7a9060020b85615732565b9350505050935093915050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda277908290634822244290610ac0908890600401615746565b602060405180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0191906156bc565b846040518363ffffffff1660e01b8152600401610b2b92919091825260020b602082015260400190565b602060405180830381865afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c9190615754565b90505b92915050565b610b7d6147fe565b60006040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec9190615354565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c9190615354565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccc9190615371565b62ffffff1690526000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f890610d0d90899089908990600401615771565b600060405180830381865afa158015610d2a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d529190810190615860565b60008054919250906001600160a01b0316635d4936ff610d73898989613df7565b6040518263ffffffff1660e01b8152600401610d9191815260200190565b602060405180830381865afa158015610dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd291906156bc565b90506000610de184888861103a565b9050604051806101e00160405280858152602001871515815260200184606001511515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff1681526020018381526020018460200151815260200184604001518152602001828152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecf9190615354565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f309190615977565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9a9190615354565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffb9190615977565b60ff16815260200182841161101157600061101b565b61101b8385615992565b8152602001846000015160c001518152509450505050505b9392505050565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390611073908a90600401615746565b6101c060405180830381865afa158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b59190615412565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a9047906110f49087908b908b90600401615771565b602060405180830381865afa158015611111573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113591906159a5565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b9061116f9088908c908c90600401615771565b600060405180830381865afa15801561118c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b491908101906159c0565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac92611209928b926001600160a01b0316918e15918c918b918b906004016159f4565b600060405180830381865af4158015611226573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261124e9190810190615a4b565b9b9a5050505050505050505050565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101829052600154604051639525092360e01b81526001600160a01b03909116906395250923906112f5908a90600401615746565b6101c060405180830381865afa158015611313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113379190615412565b5060020b60208301526001600160a01b039081168083526000805460405163118272bf60e31b815291931691638c1395f89161137a91908b908b90600401615771565b600060405180830381865afa158015611397573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113bf9190810190615860565b9050600085670de0b6b3a76400001461145a57815160c0015160405163069b8a8b60e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__916334dc54589161141091908a90600401615a91565b600060405180830381865af415801561142d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261145591908101906159c0565b611461565b815160c001515b6040516337a6142160e01b815290915073__$d23a8dd93b7205fa6b646ffed38c165d68$__906337a614219061149b908490600401615ab3565b6040805180830381865af41580156114b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114db9190615ac6565b600290810b6101608601520b610140840152825160408051633850c7bd60e01b815290516001600160a01b0390921691633850c7bd9160048082019260e0929091908290030181865afa158015611536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155a919061559c565b50505050600291820b606087018190526001600160a01b03939093166040808801919091526101608701516101408801516020890151925163146d722d60e31b81528d15156004820152602481019690965290840b6044860152830b606485015290910b60848301525073__$d23a8dd93b7205fa6b646ffed38c165d68$__9063a36b91689060a401602060405180830381865af4158015611600573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162491906156bc565b61018084015260208301516060840151604080860151905162aba2a960e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__9363055d15489361167c938793670de0b6b3a764000093929190600401615af5565b6040805180830381865af4158015611698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bc9190615b3a565b60a0850152608084015261018083015160010361171e5760408201516116eb9087670de0b6b3a7640000613d19565b876116fa578360800151611700565b8360a001515b61170a9087615b5e565b6117149190615b5e565b9350505050611848565b60208201516117369087670de0b6b3a7640000613d19565b60c08401819052611752908690670de0b6b3a764000090613d19565b60e0840181905261178290670de0b6b3a764000090896117765785608001516109fc565b8560a001519190613d19565b61010084015286611797578260a0015161179d565b82608001515b8361010001516117ad91906156d5565b8360c0015110156117c657816040015161171490615b7e565b866117d5578260a001516117db565b82608001515b8361010001518460c001516117f09190615992565b6117fa9190615992565b610120840181905260e084015161181a9190670de0b6b3a7640000613d19565b61012084015260408201516118389087670de0b6b3a7640000613d19565b8361012001516117149190615b5e565b95945050505050565b60008073__$d23a8dd93b7205fa6b646ffed38c165d68$__6337a61421846040518263ffffffff1660e01b815260040161188b9190615ab3565b6040805180830381865af41580156118a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cb9190615ac6565b91509150915091565b600154604051632411122160e11b815260009182916001600160a01b03909116906348222442906119099088906004016153f2565b602060405180830381865afa158015611926573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194a91906156bc565b6001546040516315083fbb60e31b8152600481018390529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015611999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bd91906156bc565b600154604051630ca32ed160e31b8152600481018590529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a309190615b9a565b6001600160801b03945090506000808080895b8960020b8160020b1215611b905760015460405163da69b0b360e01b8152600481018a9052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa158015611aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac89190615754565b6001546040516319fda27760e01b8152600481018b9052600284900b60248201529196508895506001600160a01b0316906319fda27790604401602060405180830381865afa158015611b1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b439190615754565b925082611b508587615bb7565b611b5a9190615bb7565b9150886001600160801b0316826001600160801b031610611b7b5788611b7d565b815b9850611b8986826156e8565b9050611a43565b50505050505050509392505050565b600080825111611be35760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b60448201526064015b60405180910390fd5b600154604051632411122160e11b8152600091829182916001600160a01b031690634822244290611c189089906004016153f2565b602060405180830381865afa158015611c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5991906156bc565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611ca8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccc9190615b9a565b6001546040516315083fbb60e31b8152600481018590529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015611d1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3f91906156bc565b905060005b8751811015611f885782888281518110611d6057611d6061533e565b602002602001015160000151611d769190615bd7565b60020b15611db45760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b6044820152606401611bda565b60015488516001600160a01b039091169063da69b0b39086908b9085908110611ddf57611ddf61533e565b6020026020010151600001516040518363ffffffff1660e01b8152600401611e1492919091825260020b602082015260400190565b602060405180830381865afa158015611e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e559190615754565b9550856001600160801b0316600003611e775760009650505050505050610b6f565b60015488516001600160a01b03909116906319fda2779086908b9085908110611ea257611ea261533e565b6020026020010151600001516040518363ffffffff1660e01b8152600401611ed792919091825260020b602082015260400190565b602060405180830381865afa158015611ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f189190615754565b9450878181518110611f2c57611f2c61533e565b60200260200101516020015185611f439190615bf9565b6001600160801b031682876001600160801b0316611f619190615992565b1015611f765760009650505050505050610b6f565b80611f808161538e565b915050611d44565b50600198975050505050505050565b600154604051632411122160e11b81526000916001600160a01b03169063da69b0b3908290634822244290610ac0908890600401615746565b611fd8614773565b60006040518060600160405280876001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612023573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120479190615354565b6001600160a01b03168152602001876001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b79190615354565b6001600160a01b03168152602001876001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015612103573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121279190615371565b62ffffff1690529050600061213e87878787612891565b6000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f890612178908b908b908b90600401615771565b600060405180830381865afa158015612195573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121bd9190810190615860565b606083015190915063ffffffff161561247a5760008260e001516000146122105761220b836060015163ffffffff16426121f79190615992565b60e085015190670de0b6b3a7640000613e4d565b61221a565b670de0b6b3a76400005b60808401519091506000906122389083670de0b6b3a7640000613d19565b9050808460a001511161224b5780612251565b8360a001515b9050604051806101c0016040528086815260200188151581526020018915158152602001856040015163ffffffff168152602001856060015163ffffffff168152602001856080015181526020018560a0015181526020018560c0015181526020018560e00151815260200185610100015181526020018281526020018b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561230c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123309190615354565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561236d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123919190615977565b60ff1681526020018b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123fb9190615354565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245c9190615977565b60ff168152602001846060015115158152509550505050505061247e565b5050505b949350505050565b600154604051632411122160e11b81526060916000916001600160a01b03909116906348222442906124bc908890600401615746565b602060405180830381865afa1580156124d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124fd91906156bc565b600154604051639525092360e01b815291925060009182916001600160a01b031690639525092390612533908a90600401615746565b6101c060405180830381865afa158015612551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125759190615412565b50909250905080612586818861551f565b6125909190615559565b95508061259d818761551f565b6125a79190615559565b94506000816125b6888861570d565b6125c0919061551f565b60020b6001600160401b038111156125da576125da614a8b565b60405190808252806020026020018201604052801561263d57816020015b61262a6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816125f85790505b509050600080846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126a5919061559c565b509495508d9450505050505b8860020b8160020b12156128825761275b826126cc83613f0b565b6126de6126d989866156e8565b613f0b565b60015460405163da69b0b360e01b8152600481018d9052600287900b60248201526001600160a01b039091169063da69b0b3906044015b602060405180830381865afa158015612732573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127569190615754565b61422e565b85858151811061276d5761276d61533e565b602002602001015160200186868151811061278a5761278a61533e565b602090810291909101015160400191909152526127f2826127aa83613f0b565b6127b76126d989866156e8565b6001546040516319fda27760e01b8152600481018d9052600287900b60248201526001600160a01b03909116906319fda27790604401612715565b8585815181106128045761280461533e565b60200260200101516060018686815181106128215761282161533e565b6020908102919091010151608001919091525261284561284082613f0b565b6142ca565b8484815181106128575761285761533e565b6020908102919091010151528261286d8161538e565b935061287b905085826156e8565b90506126b1565b50919998505050505050505050565b60408051610180810182526000610120820181815261014083018290526101608301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915260005460405163bfd4c2a560e01b81526001600160a01b03878116600483015286811660248301528515156044830152841515606483015290911690639c3f1e9090829063bfd4c2a590608401602060405180830381865afa15801561295b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061297f91906156bc565b6040518263ffffffff1660e01b815260040161299d91815260200190565b61016060405180830381865afa1580156129bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129df9190615c19565b6101008a01525060c088015260a0870152608086015263ffffffff90811660608601521660408401521515602083015250949350505050565b60015460405163568b55bf60e11b81526000916060916001600160a01b039091169063ad16ab7e90612a56908a908a908a908a908a90600401615ce2565b600060405180830381865afa925050508015612a9457506040513d6000823e601f3d908101601f19168201604052612a919190810190615d1c565b60015b612aa45750600090506060612aaa565b90925090505b9550959350505050565b600154604051639525092360e01b815260009182916001600160a01b0390911690639525092390612ae99086906004016153f2565b6101c060405180830381865afa158015612b07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b2b9190615412565b505090506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b93919061559c565b5050600154604051632411122160e11b815295965060c08a013595600095506001600160a01b03909116935063c6c2c2ca9250839150634822244290612bdd908b906004016153f2565b602060405180830381865afa158015612bfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c1e91906156bc565b6040518263ffffffff1660e01b8152600401612c3c91815260200190565b60a060405180830381865afa158015612c59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c7d9190615d58565b505050506001600160801b031690505b670de0b6b3a764000082111561307f57600080612cb261012089016101008a01615dc3565b15612e5957612ce0612ccc670de0b6b3a764000086615992565b60808a013590670de0b6b3a7640000613d19565b91506000612cf78385670de0b6b3a7640000613d19565b9050612d038184615992565b6002546040805160a081019091529194506001600160a01b03169063c6a5026a9080612d3560808e0160608f01615dc3565b612d4b57612d4660208e018e6148bd565b612d5b565b612d5b60408e0160208f016148bd565b6001600160a01b03168152602001612d7960808e0160608f01615dc3565b612d9257612d8d60408e0160208f016148bd565b612d9f565b612d9f60208e018e6148bd565b6001600160a01b031681526020018681526020018c6000016040016020810190612dc99190615de0565b62ffffff16815260006020909101526040516001600160e01b031960e084901b168152612df99190600401615dfd565b6080604051808303816000875af1158015612e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e3c9190615e45565b50919350612e5191505060a08a0135836156d5565b91505061300b565b612e6e612ccc670de0b6b3a764000086615992565b91506000612e8d84670de0b6b3a76400006109fc8660808e01356156d5565b90506000612e9f8260808c0135615992565b9050600260009054906101000a90046001600160a01b03166001600160a01b031663c6a5026a6040518060a001604052808d6060016020810190612ee39190615dc3565b612ef957612ef460208f018f6148bd565b612f0f565b8d6000016020016020810190612f0f91906148bd565b6001600160a01b031681526020018d6060016020810190612f309190615dc3565b612f4f578d6000016020016020810190612f4a91906148bd565b612f5c565b612f5c60208f018f6148bd565b6001600160a01b03168152602001612f7488866156d5565b81526020018d6000016040016020810190612f8f9190615de0565b62ffffff16815260006020909101526040516001600160e01b031960e084901b168152612fbf9190600401615dfd565b6080604051808303816000875af1158015612fde573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130029190615e45565b50919450505050505b600061302989846130226080830160608401615dc3565b858a612a18565b509050801561303f575092979650505050505050565b8860e0013585101561305a5750600098975050505050505050565b61307585670bcbce7f1b150000670de0b6b3a7640000613d19565b9450505050612c8d565b50505050919050565b6000806000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156130cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130ef9190615354565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561312d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131519190615354565b856001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561318f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131b39190615371565b9196909550909350915050565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906131f9908a90600401615746565b6101c060405180830381865afa158015613217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061323b9190615412565b600154604051632411122160e11b815293965091945092506000916001600160a01b0390911690634822244290613276908b90600401615746565b602060405180830381865afa158015613293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132b791906156bc565b6000805460405163d93a904760e01b815292935090916001600160a01b039091169063d93a9047906132f19088908c908c90600401615771565b602060405180830381865afa15801561330e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061333291906159a5565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b9061336c9089908d908d90600401615771565b600060405180830381865afa158015613389573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526133b191908101906159c0565b60018054865160405163aa7532af60e01b815293945073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9363aa7532af93613403938c936001600160a01b03909116928c9289918c90600401615e8b565b602060405180830381865af4158015613420573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061344491906156bc565b9a9950505050505050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156134a9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526134d19190810190615283565b90506000815160026134e39190615327565b6001600160401b038111156134fa576134fa614a8b565b60405190808252806020026020018201604052801561353357816020015b6135206147fe565b8152602001906001900390816135185790505b5090506000805b835181101561377057600060405180606001604052808684815181106135625761356261533e565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156135a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135cb9190615354565b6001600160a01b031681526020018684815181106135eb576135eb61533e565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136549190615354565b6001600160a01b031681526020018684815181106136745761367461533e565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156136b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136dd9190615371565b62ffffff16815250905061370f878684815181106136fd576136fd61533e565b602002602001015183600187896142eb565b15613722578261371e8161538e565b9350505b61374a878684815181106137385761373861533e565b602002602001015183600087896142eb565b1561375d57826137598161538e565b9350505b50806137688161538e565b91505061353a565b506000816001600160401b0381111561378b5761378b614a8b565b6040519080825280602002602001820160405280156137c457816020015b6137b16147fe565b8152602001906001900390816137a95790505b50905060005b828110156107ca578381815181106137e4576137e461533e565b60200260200101518282815181106137fe576137fe61533e565b602002602001018190525080806138149061538e565b9150506137ca565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390613855908990600401615746565b6101c060405180830381865afa158015613873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138979190615412565b600154604051632411122160e11b815293965091945092506000916001600160a01b03909116906348222442906138d2908a90600401615746565b602060405180830381865afa1580156138ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061391391906156bc565b600154835160405163aa7532af60e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263aa7532af926139689289926001600160a01b03909216918991908d906000908a90600401615e8b565b602060405180830381865af4158015613985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139a991906156bc565b979650505050505050565b6000806139c3888a8789612891565b6000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f8906139fd908c908e908b90600401615771565b600060405180830381865afa158015613a1a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613a429190810190615860565b606083015190915063ffffffff1615613d095760008260e00151600014613a8157613a7c836060015163ffffffff16426121f79190615992565b613a8b565b670de0b6b3a76400005b6080840151909150600090613aa99083670de0b6b3a7640000613d19565b9050808460a0015111613abc5780613ac2565b8360a001515b9050604051806101c001604052808b81526020018a151581526020018915158152602001856040015163ffffffff168152602001856060015163ffffffff168152602001856080015181526020018560a0015181526020018560c0015181526020018560e00151815260200185610100015181526020018281526020018c6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ba19190615354565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613bde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c029190615977565b60ff1681526020018c6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613c48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c6c9190615354565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613ca9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ccd9190615977565b60ff16815260200184606001511515815250868881518110613cf157613cf161533e565b602002602001018190525060019450505050506139a9565b5060009998505050505050505050565b6000808060001985870985870292508281108382030391505080600003613d525760008411613d4757600080fd5b508290049050611033565b808411613d8a5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401611bda565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b6000838015613eed57600184168015613e6857859250613e6c565b8392505b508260011c8460011c94505b8415613ee7578560801c15613e8c57600080fd5b85860281810181811015613e9f57600080fd5b8590049650506001851615613edc578583028387820414613ec5578615613ec557600080fd5b81810181811015613ed557600080fd5b8590049350505b8460011c9450613e78565b50613f03565b838015613efd5760009250613f01565b8392505b505b509392505050565b60008060008360020b12613f22578260020b613f2a565b8260020b6000035b9050620d89e8811115613f50576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003613f6757600160801b613f79565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613fad576ffff97272373d413259a46990580e213a0260801c5b6004821615613fcc576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613feb576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561400a576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615614029576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615614048576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615614067576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615614087576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156140a7576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156140c7576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156140e7576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615614107576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615614127576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615614147576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615614167576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615614188576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156141a8576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156141c7576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156141e4576b048a170391f7dc42444e8fa20260801c5b60008460020b131561420557806000198161420157614201615509565b0490505b64010000000081061561421957600161421c565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b0316111561424f579293925b846001600160a01b0316866001600160a01b03161161427a5761427385858561468f565b91506142c1565b836001600160a01b0316866001600160a01b031610156142b35761429f86858561468f565b91506142ac858785614702565b90506142c1565b6142be858585614702565b90505b94509492505050565b6000806142d68361474c565b90506110338182670de0b6b3a7640000613d19565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f890614320908a908c908a90600401615771565b600060405180830381865afa15801561433d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526143659190810190615860565b60008054919250906001600160a01b0316635d4936ff6143868a8c8a613df7565b6040518263ffffffff1660e01b81526004016143a491815260200190565b602060405180830381865afa1580156143c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143e591906156bc565b905060006143f4888b8961103a565b60208401519091501561467d57604051806101e00160405280898152602001881515815260200184606001511515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff16815260200183815260200184602001518152602001846040015181526020016144908a8d8b61103a565b81526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156144d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144f79190615354565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015614534573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145589190615977565b60ff1681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561459e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145c29190615354565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156145ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146239190615977565b60ff168152602001828411614639576000614643565b6146438385615992565b8152602001846000015160c001518152508587815181106146665761466661533e565b602002602001018190525060019350505050614685565b600093505050505b9695505050505050565b6000826001600160a01b0316846001600160a01b031611156146af579192915b6001600160a01b0384166146f86fffffffffffffffffffffffffffffffff60601b606085901b166146e08787615ee7565b6001600160a01b0316866001600160a01b0316613d19565b61247e9190615732565b6000826001600160a01b0316846001600160a01b03161115614722579192915b61247e6001600160801b0383166147398686615ee7565b6001600160a01b0316600160601b613d19565b6000606061476b6001600160a01b038416670de0b6b3a7640000615327565b901c92915050565b604080516102208101825260006101c082018181526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b60408051610240810190915260006101e082018181526102008301829052610220830191909152819081526020016000151581526020016000151581526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff16815260200160008152602001606081525090565b6001600160a01b03811681146148ba57600080fd5b50565b6000602082840312156148cf57600080fd5b8135611033816148a5565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b6149118282516148da565b60208101518015156060840152506040810151801515608084015250606081015163ffffffff811660a084015250608081015163ffffffff811660c08401525060a081015160e08381019190915260c0820151610100808501919091529082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015161018080850191909152908201516101a080850191909152908201516101c0840152015115156101e090910152565b6020808252825182820181905260009190848201906040850190845b81811015614a0e576149fa838551614906565b9284019261020092909201916001016149e7565b50909695505050505050565b600060608284031215614a2c57600080fd5b50919050565b8060020b81146148ba57600080fd5b600080600060a08486031215614a5657600080fd5b614a608585614a1a565b92506060840135614a7081614a32565b91506080840135614a8081614a32565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715614ac357614ac3614a8b565b60405290565b60405160c081016001600160401b0381118282101715614ac357614ac3614a8b565b60405160e081016001600160401b0381118282101715614ac357614ac3614a8b565b604051608081016001600160401b0381118282101715614ac357614ac3614a8b565b604051601f8201601f191681016001600160401b0381118282101715614b5757614b57614a8b565b604052919050565b62ffffff811681146148ba57600080fd5b600060608284031215614b8257600080fd5b614b8a614aa1565b90508135614b97816148a5565b81526020820135614ba7816148a5565b60208201526040820135614bba81614b5f565b604082015292915050565b60008060808385031215614bd857600080fd5b614be28484614b70565b91506060830135614bf281614a32565b809150509250929050565b80151581146148ba57600080fd5b600080600060608486031215614c2057600080fd5b8335614c2b816148a5565b92506020840135614c3b816148a5565b91506040840135614a8081614bfd565b600081518084526020808501945080840160005b83811015614cbb578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c09096019590820190600101614c5f565b509495945050505050565b6000610220614cd68484516148da565b60208301518015156060860152506040830151801515608086015250606083015160a0850152608083015160c085015260a0830151614d1d60e086018263ffffffff169052565b5060c0830151610100614d378187018363ffffffff169052565b60e0850151610120878101919091529085015161014080880191909152908501516101608088019190915290850151610180808801919091529085015191506101a0614d878188018460ff169052565b9085015191506101c090614d9f8783018460ff169052565b8501516101e08701528401516102008601839052905061184882860182614c4b565b602081526000610b6c6020830184614cc6565b600080600060a08486031215614de957600080fd5b614df38585614b70565b92506060840135614e03816148a5565b91506080840135614a8081614bfd565b600080600080600060e08688031215614e2b57600080fd5b614e358787614b70565b94506060860135614e45816148a5565b93506080860135614e5581614bfd565b9497939650939460a0810135945060c0013592915050565b60006001600160401b03821115614e8657614e86614a8b565b5060051b60200190565b6001600160801b03811681146148ba57600080fd5b600082601f830112614eb657600080fd5b81356020614ecb614ec683614e6d565b614b2f565b82815260c09283028501820192828201919087851115614eea57600080fd5b8387015b85811015614f615781818a031215614f065760008081fd5b614f0e614ac9565b8135614f1981614a32565b815281860135614f2881614e90565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101614eee565b5090979650505050505050565b600060208284031215614f8057600080fd5b81356001600160401b03811115614f9657600080fd5b61247e84828501614ea5565b60008060808385031215614fb557600080fd5b614fbf8484614a1a565b915060608301356001600160401b03811115614fda57600080fd5b614fe685828601614ea5565b9150509250929050565b6000806000806080858703121561500657600080fd5b8435615011816148a5565b93506020850135615021816148a5565b9250604085013561503181614bfd565b9150606085013561504181614bfd565b939692955090935050565b6102008101610b6f8284614906565b600080600060a0848603121561507057600080fd5b614a608585614b70565b602080825282518282018190526000919060409081850190868401855b828110156150db5781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101615097565b5091979650505050505050565b6000610160820190506150fc8284516148da565b602083015115156060830152604083015163ffffffff8116608084015250606083015163ffffffff811660a084015250608083015160c083015260a083015160e083015260c0830151610100818185015260e085015161012085015280850151610140850152505092915050565b600080600080600060e0868803121561518257600080fd5b61518c8787614a1a565b94506060860135935060808601356151a381614bfd565b925060a0860135915060c08601356151ba816148a5565b809150509295509295909350565b82815260406020820152600061247e6040830184614c4b565b60006101208284031215614a2c57600080fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561524957603f19888603018452615237858351614cc6565b9450928501929085019060010161521b565b5092979650505050505050565b6000806080838503121561526957600080fd5b614fbf8484614b70565b805161527e816148a5565b919050565b6000602080838503121561529657600080fd5b82516001600160401b038111156152ac57600080fd5b8301601f810185136152bd57600080fd5b80516152cb614ec682614e6d565b81815260059190911b820183019083810190878311156152ea57600080fd5b928401925b828410156139a9578351615302816148a5565b825292840192908401906152ef565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610b6f57610b6f615311565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561536657600080fd5b8151611033816148a5565b60006020828403121561538357600080fd5b815161103381614b5f565b6000600182016153a0576153a0615311565b5060010190565b80356153b2816148a5565b6001600160a01b0390811683526020820135906153ce826148a5565b16602083015260408101356153e281614b5f565b62ffffff81166040840152505050565b60608101610b6f82846153a7565b805161ffff8116811461527e57600080fd5b60008060008385036101c081121561542957600080fd5b8451615434816148a5565b602086015190945061544581614a32565b9250603f19016101808082121561545b57600080fd5b615463614aeb565b60c083121561547157600080fd5b615479614ac9565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a08401528281526101008701516020820152610120870151604082015261014087015160608201526154e56101608801615400565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b8061553657615536615509565b627fffff1982146000198214161561555057615550615311565b90059392505050565b60008260020b8260020b028060020b915080821461557957615579615311565b5092915050565b805160ff8116811461527e57600080fd5b805161527e81614bfd565b600080600080600080600060e0888a0312156155b757600080fd5b87516155c2816148a5565b60208901519097506155d381614a32565b95506155e160408901615400565b94506155ef60608901615400565b93506155fd60808901615400565b925061560b60a08901615580565b915060c088015161561b81614bfd565b8091505092959891949750929550565b60006060828403121561563d57600080fd5b610b6c8383614b70565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600286900b8152610140810161569a6020830187615647565b60e0820194909452600292830b610100820152910b6101209091015292915050565b6000602082840312156156ce57600080fd5b5051919050565b80820180821115610b6f57610b6f615311565b600281810b9083900b01627fffff8113627fffff1982121715610b6f57610b6f615311565b600282810b9082900b03627fffff198112627fffff82131715610b6f57610b6f615311565b60008261574157615741615509565b500490565b60608101610b6f82846148da565b60006020828403121561576657600080fd5b815161103381614e90565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805163ffffffff8116811461527e57600080fd5b600082601f8301126157ba57600080fd5b815160206157ca614ec683614e6d565b82815260c092830285018201928282019190878511156157e957600080fd5b8387015b85811015614f615781818a0312156158055760008081fd5b61580d614ac9565b815161581881614a32565b81528186015161582781614e90565b8187015260408281015190820152606080830151908201526080808301519082015260a0808301519082015284529284019281016157ed565b60006020828403121561587257600080fd5b81516001600160401b038082111561588957600080fd5b908301906080828603121561589d57600080fd5b6158a5614b0d565b8251828111156158b457600080fd5b830160e081880312156158c657600080fd5b6158ce614aeb565b6158d782615273565b81526158e560208301615591565b6020820152604082015160408201526060820151606082015261590a60808301615795565b608082015261591b60a08301615795565b60a082015260c08201518481111561593257600080fd5b61593e898285016157a9565b60c0830152508083525050602083015160208201526040830151604082015261596960608401615591565b606082015295945050505050565b60006020828403121561598957600080fd5b610b6c82615580565b81810381811115610b6f57610b6f615311565b6000602082840312156159b757600080fd5b610b6c82615795565b6000602082840312156159d257600080fd5b81516001600160401b038111156159e857600080fd5b61247e848285016157a9565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff841660808201526000610180615a3860a0840186615647565b8061016084015261344481840185614c4b565b60008060408385031215615a5e57600080fd5b82516001600160401b03811115615a7457600080fd5b615a80858286016157a9565b925050602083015190509250929050565b604081526000615aa46040830185614c4b565b90508260208301529392505050565b602081526000610b6c6020830184614c4b565b60008060408385031215615ad957600080fd5b8251615ae481614a32565b6020840151909250614bf281614a32565b60a081526000615b0860a0830188614c4b565b602083019690965250600293840b60408201529190920b60608201526001600160a01b03909116608090910152919050565b60008060408385031215615b4d57600080fd5b505080516020909101519092909150565b818103600083128015838313168383128216171561557957615579615311565b6000600160ff1b8201615b9357615b93615311565b5060000390565b600060208284031215615bac57600080fd5b815161103381614a32565b6001600160801b0382811682821603908082111561557957615579615311565b60008260020b80615bea57615bea615509565b808360020b0791505092915050565b6001600160801b0381811683821601908082111561557957615579615311565b6000806000806000806000806000898b03610160811215615c3957600080fd5b6060811215615c4757600080fd5b50615c50614aa1565b8a51615c5b816148a5565b815260208b0151615c6b816148a5565b602082015260408b0151615c7e81614b5f565b60408201529850615c9160608b01615591565b9750615c9f60808b01615795565b9650615cad60a08b01615795565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b60e08101615cf082886153a7565b6060820195909552921515608084015260a08301919091526001600160a01b031660c090910152919050565b60008060408385031215615d2f57600080fd5b8251915060208301516001600160401b03811115615d4c57600080fd5b614fe6858286016157a9565b600080600080600060a08688031215615d7057600080fd5b8551615d7b81614e90565b6020870151909550615d8c81614e90565b6040870151909450615d9d81614e90565b6060870151909350615dae81614e90565b80925050608086015190509295509295909350565b600060208284031215615dd557600080fd5b813561103381614bfd565b600060208284031215615df257600080fd5b813561103381614b5f565b81516001600160a01b0390811682526020808401518216908301526040808401519083015260608084015162ffffff1690830152608092830151169181019190915260a00190565b60008060008060808587031215615e5b57600080fd5b845193506020850151615e6d816148a5565b9250615e7b60408601615795565b6060959095015193969295505050565b6001600160a01b03888116825287166020820152600286900b60408201526000610180615ebb6060840188615647565b80610120840152615ece81840187614c4b565b9415156101408401525050610160015295945050505050565b6001600160a01b038281168282160390808211156155795761557961531156fea2646970667358221220336e41e95a32bf65dfe656f2d13b5b70ce4337e8d7919e4a38a5b4a302250b6964736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/Util.sol:Utils"]: string;
}
