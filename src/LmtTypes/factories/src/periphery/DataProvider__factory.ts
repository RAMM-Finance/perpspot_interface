/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoterV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "marginInInput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "marginInOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stepSize",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
        ],
        internalType: "struct DataProvider.MaxLeverageParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "computeMaxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX160",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getBinsDataInBulk",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Borrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Borrowed",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.BinData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fillerOutput",
        type: "uint256",
      },
    ],
    name: "getEstimatedPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken",
        type: "bool",
      },
    ],
    name: "getMarginPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getMinMaxTicks",
    outputs: [
      {
        internalType: "int24",
        name: "min",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "max",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrderInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getPostInstantaneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getPreInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getUtilAndAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620060c3380380620060c3833981016040819052620000349162000092565b600080546001600160a01b03199081166001600160a01b039485161790915560018054821694841694909417909355600280549093169116179055620000dc565b80516001600160a01b03811681146200008d57600080fd5b919050565b600080600060608486031215620000a857600080fd5b620000b38462000075565b9250620000c36020850162000075565b9150620000d36040850162000075565b90509250925092565b615fd780620000ec6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063912a8e00116100ad578063b192ae8011610071578063b192ae80146102ed578063c229a33214610300578063c3042bcd1461033e578063dd65c32814610351578063dec8ae011461037157600080fd5b8063912a8e00146102595780639255bbc11461026c578063a55ac3eb1461028c578063a9b6b32b146102ac578063ad16ab7e146102cc57600080fd5b80633aea807f116100f45780633aea807f146101c25780634fbfe42d146101e357806384b88557146101f65780638e68ad3614610223578063911f1b471461023657600080fd5b8063093376fe146101265780631f2ecd831461014f57806329aa3819146101775780632d6cf1f4146101a2575b600080fd5b610139610134366004614957565b610384565b6040516101469190614a65565b60405180910390f35b61016261015d366004614adb565b6107d4565b60408051928352602083019190915201610146565b61018a610185366004614c5f565b610a87565b6040516001600160801b039091168152602001610146565b6101b56101b0366004614ca5565b610b75565b6040516101469190614e5b565b6101d56101d0366004614e6e565b61103a565b604051908152602001610146565b6101d56101f1366004614ead565b61125d565b610209610204366004615008565b611851565b60408051600293840b81529190920b602082015201610146565b61018a610231366004614adb565b6118d4565b61024961024436600461503c565b611b1b565b6040519015158152602001610146565b61018a610267366004614c5f565b611f13565b61027f61027a36600461508a565b611f4c565b60405161014691906150e6565b61029f61029a3660046150f5565b612402565b6040516101469190615114565b6102bf6102ba36600461508a565b61280d565b6040516101469190615182565b6102df6102da366004615204565b612994565b604051610146929190615262565b6101d56102fb36600461527b565b612a30565b61031361030e366004614957565b612ffc565b604080516001600160a01b03948516815293909216602084015262ffffff1690820152606001610146565b6101d561034c366004614e6e565b613134565b61036461035f366004614957565b6133c6565b604051610146919061528e565b6101d561037f3660046152f0565b613790565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610403919081019061531d565b905060008151600461041591906153c1565b6001600160401b0381111561042c5761042c614b25565b60405190808252806020026020018201604052801561046557816020015b61045261480d565b81526020019060019003908161044a5790505b5090506000805b835181101561071e5760006040518060600160405280868481518110610494576104946153d8565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd91906153ee565b6001600160a01b0316815260200186848151811061051d5761051d6153d8565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058691906153ee565b6001600160a01b031681526020018684815181106105a6576105a66153d8565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f919061540b565b62ffffff1681525090506106428786848151811061062f5761062f6153d8565b602002602001015183600180888a613928565b15610655578261065181615428565b9350505b61067f8786848151811061066b5761066b6153d8565b60200260200101518360016000888a613928565b15610692578261068e81615428565b9350505b6106bc878684815181106106a8576106a86153d8565b60200260200101518360006001888a613928565b156106cf57826106cb81615428565b9350505b6106f8878684815181106106e5576106e56153d8565b602002602001015183600080888a613928565b1561070b578261070781615428565b9350505b508061071681615428565b91505061046c565b506000816001600160401b0381111561073957610739614b25565b60405190808252806020026020018201604052801561077257816020015b61075f61480d565b8152602001906001900390816107575790505b50905060005b828110156107ca57838181518110610792576107926153d8565b60200260200101518282815181106107ac576107ac6153d8565b602002602001018190525080806107c290615428565b915050610778565b5095945050505050565b600154604051639525092360e01b815260009182918291829182916001600160a01b03169063952509239061080d908b9060040161548c565b6101c060405180830381865afa15801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f91906154ac565b919450925090508161086181896155b9565b61086b91906155f3565b96508161087881886155b9565b61088291906155f3565b9550600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156108c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ec9190615636565b509395508f9450505050505b8a60020b8160020b1215610a2d5761091e610918368f90038f018f6156c5565b82611f13565b9450610938610932368f90038f018f6156c5565b82610a87565b93506001600160801b03851615610a1c576109696001600160801b0385811690670de0b6b3a7640000908816613c8d565b8651604051630ca73f1f60e21b8152919450610a03918591670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9163329cfc7c916109bb918e9187908b908b9060040161571b565b602060405180830381865af41580156109d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fc9190615756565b9190613c8d565b610a0d908b61576f565b9950610a19838a61576f565b98505b610a268782615782565b90506108f8565b5050505050818787610a3f91906157a7565b610a4991906155b9565b610a569060020b866157cc565b945081610a6388886157a7565b610a6d91906155b9565b610a7a9060020b856157cc565b9350505050935093915050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda277908290634822244290610ac09088906004016157e0565b602060405180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b019190615756565b846040518363ffffffff1660e01b8152600401610b2b92919091825260020b602082015260400190565b602060405180830381865afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c91906157ee565b90505b92915050565b610b7d614898565b60006040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec91906153ee565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c91906153ee565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccc919061540b565b62ffffff1690526000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f890610d0d9089908990899060040161580b565b600060405180830381865afa158015610d2a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d5291908101906158fa565b60008054919250906001600160a01b0316635d4936ff610d73898989613d6b565b6040518263ffffffff1660e01b8152600401610d9191815260200190565b602060405180830381865afa158015610dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd29190615756565b90506000610de184888861103a565b9050604051806101e00160405280858152602001871515815260200184606001511515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff1681526020018381526020018460200151815260200184604001518152602001828152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecf91906153ee565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f309190615a11565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9a91906153ee565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffb9190615a11565b60ff16815260200182841161101157600061101b565b61101b8385615a2c565b8152602001846000015160c001518152509450505050505b9392505050565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390611073908a906004016157e0565b6101c060405180830381865afa158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b591906154ac565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a9047906110f49087908b908b9060040161580b565b602060405180830381865afa158015611111573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111359190615a3f565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b9061116f9088908c908c9060040161580b565b600060405180830381865afa15801561118c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b49190810190615a5a565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac92611209928b926001600160a01b0316918e15918c918b918b90600401615a8e565b600060405180830381865af4158015611226573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261124e9190810190615ae5565b9b9a5050505050505050505050565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101829052600154604051639525092360e01b81526001600160a01b03909116906395250923906112f5908a906004016157e0565b6101c060405180830381865afa158015611313573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133791906154ac565b5060020b60208301526001600160a01b039081168083526000805460405163118272bf60e31b815291931691638c1395f89161137a91908b908b9060040161580b565b600060405180830381865afa158015611397573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113bf91908101906158fa565b9050600085670de0b6b3a76400001461145a57815160c0015160405163069b8a8b60e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__916334dc54589161141091908a90600401615b2b565b600060405180830381865af415801561142d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114559190810190615a5a565b611461565b815160c001515b6040516337a6142160e01b815290915073__$d23a8dd93b7205fa6b646ffed38c165d68$__906337a614219061149b908490600401615b4d565b6040805180830381865af41580156114b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114db9190615b60565b600290810b6101608601520b610140840152825160408051633850c7bd60e01b815290516001600160a01b0390921691633850c7bd9160048082019260e0929091908290030181865afa158015611536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155a9190615636565b50505050600291820b606087018190526001600160a01b03939093166040808801919091526101608701516101408801516020890151925163146d722d60e31b81528d15156004820152602481019690965290840b6044860152830b606485015290910b60848301525073__$d23a8dd93b7205fa6b646ffed38c165d68$__9063a36b91689060a401602060405180830381865af4158015611600573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116249190615756565b61018084015260208301516060840151604080860151905162aba2a960e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__9363055d15489361167c938793670de0b6b3a764000093929190600401615b8f565b6040805180830381865af4158015611698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bc9190615bd4565b60a0850152608084015261018083015160010361171e5760408201516116eb9087670de0b6b3a7640000613c8d565b876116fa578360800151611700565b8360a001515b61170a9087615bf8565b6117149190615bf8565b9350505050611848565b60208201516117369087670de0b6b3a7640000613c8d565b60c08401819052611752908690670de0b6b3a764000090613c8d565b60e0840181905261178290670de0b6b3a764000090896117765785608001516109fc565b8560a001519190613c8d565b61010084015286611797578260a0015161179d565b82608001515b8361010001516117ad919061576f565b8360c0015110156117c657816040015161171490615c18565b866117d5578260a001516117db565b82608001515b8361010001518460c001516117f09190615a2c565b6117fa9190615a2c565b610120840181905260e084015161181a9190670de0b6b3a7640000613c8d565b61012084015260408201516118389087670de0b6b3a7640000613c8d565b8361012001516117149190615bf8565b95945050505050565b60008073__$d23a8dd93b7205fa6b646ffed38c165d68$__6337a61421846040518263ffffffff1660e01b815260040161188b9190615b4d565b6040805180830381865af41580156118a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cb9190615b60565b91509150915091565b600154604051632411122160e11b815260009182916001600160a01b039091169063482224429061190990889060040161548c565b602060405180830381865afa158015611926573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194a9190615756565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bd9190615c34565b6001600160801b039350905060008080875b8760020b8160020b1215611b0e5760015460405163da69b0b360e01b815260048101889052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa158015611a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5491906157ee565b6001546040516319fda27760e01b815260048101899052600284900b60248201529195506001600160a01b0316906319fda27790604401602060405180830381865afa158015611aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acc91906157ee565b9250611ad88385615c51565b9150866001600160801b0316826001600160801b031610611af95786611afb565b815b9650611b078582615782565b90506119cf565b5050505050509392505050565b600080825111611b5f5760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b60448201526064015b60405180910390fd5b600154604051632411122160e11b8152600091829182916001600160a01b031690634822244290611b9490899060040161548c565b602060405180830381865afa158015611bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd59190615756565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611c24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c489190615c34565b6001546040516315083fbb60e31b8152600481018590529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015611c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbb9190615756565b905060005b8751811015611f045782888281518110611cdc57611cdc6153d8565b602002602001015160000151611cf29190615c71565b60020b15611d305760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b6044820152606401611b56565b60015488516001600160a01b039091169063da69b0b39086908b9085908110611d5b57611d5b6153d8565b6020026020010151600001516040518363ffffffff1660e01b8152600401611d9092919091825260020b602082015260400190565b602060405180830381865afa158015611dad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd191906157ee565b9550856001600160801b0316600003611df35760009650505050505050610b6f565b60015488516001600160a01b03909116906319fda2779086908b9085908110611e1e57611e1e6153d8565b6020026020010151600001516040518363ffffffff1660e01b8152600401611e5392919091825260020b602082015260400190565b602060405180830381865afa158015611e70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9491906157ee565b9450878181518110611ea857611ea86153d8565b60200260200101516020015185611ebf9190615c93565b6001600160801b031682876001600160801b0316611edd9190615a2c565b1015611ef25760009650505050505050610b6f565b80611efc81615428565b915050611cc0565b50600198975050505050505050565b600154604051632411122160e11b81526000916001600160a01b03169063da69b0b3908290634822244290610ac09088906004016157e0565b611f5461480d565b60006040518060600160405280876001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc391906153ee565b6001600160a01b03168152602001876001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561200f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061203391906153ee565b6001600160a01b03168152602001876001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561207f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a3919061540b565b62ffffff169052905060006120ba8787878761280d565b6000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f8906120f4908b908b908b9060040161580b565b600060405180830381865afa158015612111573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261213991908101906158fa565b606083015190915063ffffffff16156123f65760008260e0015160001461218c57612187836060015163ffffffff16426121739190615a2c565b60e085015190670de0b6b3a7640000613dc1565b612196565b670de0b6b3a76400005b60808401519091506000906121b49083670de0b6b3a7640000613c8d565b9050808460a00151116121c757806121cd565b8360a001515b9050604051806101c0016040528086815260200188151581526020018915158152602001856040015163ffffffff168152602001856060015163ffffffff168152602001856080015181526020018560a0015181526020018560c0015181526020018560e00151815260200185610100015181526020018281526020018b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ac91906153ee565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061230d9190615a11565b60ff1681526020018b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612353573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061237791906153ee565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d89190615a11565b60ff16815260200184606001511515815250955050505050506123fa565b5050505b949350505050565b600154604051632411122160e11b81526060916000916001600160a01b03909116906348222442906124389088906004016157e0565b602060405180830381865afa158015612455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124799190615756565b600154604051639525092360e01b815291925060009182916001600160a01b0316906395250923906124af908a906004016157e0565b6101c060405180830381865afa1580156124cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f191906154ac565b5090925090508061250281886155b9565b61250c91906155f3565b95508061251981876155b9565b61252391906155f3565b945060008161253288886157a7565b61253c91906155b9565b60020b6001600160401b0381111561255657612556614b25565b6040519080825280602002602001820160405280156125b957816020015b6125a66040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816125745790505b509050600080846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156125fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126219190615636565b509495508d9450505050505b8860020b8160020b12156127fe576126d78261264883613e7f565b61265a6126558986615782565b613e7f565b60015460405163da69b0b360e01b8152600481018d9052600287900b60248201526001600160a01b039091169063da69b0b3906044015b602060405180830381865afa1580156126ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126d291906157ee565b6141a2565b8585815181106126e9576126e96153d8565b6020026020010151602001868681518110612706576127066153d8565b6020908102919091010151604001919091525261276e8261272683613e7f565b6127336126558986615782565b6001546040516319fda27760e01b8152600481018d9052600287900b60248201526001600160a01b03909116906319fda27790604401612691565b858581518110612780576127806153d8565b602002602001015160600186868151811061279d5761279d6153d8565b602090810291909101015160800191909152526127c16127bc82613e7f565b61423e565b8484815181106127d3576127d36153d8565b602090810291909101015152826127e981615428565b93506127f790508582615782565b905061262d565b50919998505050505050505050565b60408051610180810182526000610120820181815261014083018290526101608301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915260005460405163bfd4c2a560e01b81526001600160a01b03878116600483015286811660248301528515156044830152841515606483015290911690639c3f1e9090829063bfd4c2a590608401602060405180830381865afa1580156128d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128fb9190615756565b6040518263ffffffff1660e01b815260040161291991815260200190565b61016060405180830381865afa158015612937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061295b9190615cb3565b6101008a01525060c088015260a0870152608086015263ffffffff90811660608601521660408401521515602083015250949350505050565b60015460405163568b55bf60e11b81526000916060916001600160a01b039091169063ad16ab7e906129d2908a908a908a908a908a90600401615d7c565b600060405180830381865afa925050508015612a1057506040513d6000823e601f3d908101601f19168201604052612a0d9190810190615db6565b60015b612a205750600090506060612a26565b90925090505b9550959350505050565b600154604051639525092360e01b815260009182916001600160a01b0390911690639525092390612a6590869060040161548c565b6101c060405180830381865afa158015612a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aa791906154ac565b505090506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b0f9190615636565b5050600154604051632411122160e11b815295965060c08a013595600095506001600160a01b03909116935063c6c2c2ca9250839150634822244290612b59908b9060040161548c565b602060405180830381865afa158015612b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b9a9190615756565b6040518263ffffffff1660e01b8152600401612bb891815260200190565b60a060405180830381865afa158015612bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf99190615df2565b505050506001600160801b031690505b670de0b6b3a7640000821115612ff357600080612c2e61012089016101008a01615e5d565b15612dd557612c5c612c48670de0b6b3a764000086615a2c565b60808a013590670de0b6b3a7640000613c8d565b91506000612c738385670de0b6b3a7640000613c8d565b9050612c7f8184615a2c565b6002546040805160a081019091529194506001600160a01b03169063c6a5026a9080612cb160808e0160608f01615e5d565b612cc757612cc260208e018e614957565b612cd7565b612cd760408e0160208f01614957565b6001600160a01b03168152602001612cf560808e0160608f01615e5d565b612d0e57612d0960408e0160208f01614957565b612d1b565b612d1b60208e018e614957565b6001600160a01b031681526020018681526020018c6000016040016020810190612d459190615e7a565b62ffffff16815260006020909101526040516001600160e01b031960e084901b168152612d759190600401615e97565b6080604051808303816000875af1158015612d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db89190615edf565b50919350612dcd91505060a08a01358361576f565b915050612f7f565b612dea612c48670de0b6b3a764000086615a2c565b91506000612e018385670de0b6b3a7640000613c8d565b90506000612e138260808c0135615a2c565b9050600260009054906101000a90046001600160a01b03166001600160a01b031663c6a5026a6040518060a001604052808d6060016020810190612e579190615e5d565b612e6d57612e6860208f018f614957565b612e83565b8d6000016020016020810190612e839190614957565b6001600160a01b031681526020018d6060016020810190612ea49190615e5d565b612ec3578d6000016020016020810190612ebe9190614957565b612ed0565b612ed060208f018f614957565b6001600160a01b03168152602001612ee8888661576f565b81526020018d6000016040016020810190612f039190615e7a565b62ffffff16815260006020909101526040516001600160e01b031960e084901b168152612f339190600401615e97565b6080604051808303816000875af1158015612f52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f769190615edf565b50919450505050505b6000612f9d8984612f966080830160608401615e5d565b858a612994565b5090508015612fb3575092979650505050505050565b8860e00135851015612fce5750600098975050505050505050565b612fe985670bcbce7f1b150000670de0b6b3a7640000613c8d565b9450505050612c09565b50505050919050565b6000806000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561303f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306391906153ee565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156130a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130c591906153ee565b856001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015613103573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613127919061540b565b9196909550909350915050565b600154604051639525092360e01b81526000918291829182916001600160a01b039091169063952509239061316d908a906004016157e0565b6101c060405180830381865afa15801561318b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131af91906154ac565b600154604051632411122160e11b815293965091945092506000916001600160a01b03909116906348222442906131ea908b906004016157e0565b602060405180830381865afa158015613207573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061322b9190615756565b6000805460405163d93a904760e01b815292935090916001600160a01b039091169063d93a9047906132659088908c908c9060040161580b565b602060405180830381865afa158015613282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132a69190615a3f565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b906132e09089908d908d9060040161580b565b600060405180830381865afa1580156132fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526133259190810190615a5a565b60018054865160405163aa7532af60e01b815293945073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9363aa7532af93613377938c936001600160a01b03909116928c9289918c90600401615f25565b602060405180830381865af4158015613394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133b89190615756565b9a9950505050505050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561341d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613445919081019061531d565b905060008151600261345791906153c1565b6001600160401b0381111561346e5761346e614b25565b6040519080825280602002602001820160405280156134a757816020015b613494614898565b81526020019060019003908161348c5790505b5090506000805b83518110156136e457600060405180606001604052808684815181106134d6576134d66153d8565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561351b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061353f91906153ee565b6001600160a01b0316815260200186848151811061355f5761355f6153d8565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156135a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135c891906153ee565b6001600160a01b031681526020018684815181106135e8576135e86153d8565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561362d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613651919061540b565b62ffffff16815250905061368387868481518110613671576136716153d8565b6020026020010151836001878961425f565b15613696578261369281615428565b9350505b6136be878684815181106136ac576136ac6153d8565b6020026020010151836000878961425f565b156136d157826136cd81615428565b9350505b50806136dc81615428565b9150506134ae565b506000816001600160401b038111156136ff576136ff614b25565b60405190808252806020026020018201604052801561373857816020015b613725614898565b81526020019060019003908161371d5790505b50905060005b828110156107ca57838181518110613758576137586153d8565b6020026020010151828281518110613772576137726153d8565b6020026020010181905250808061378890615428565b91505061373e565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906137c99089906004016157e0565b6101c060405180830381865afa1580156137e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061380b91906154ac565b600154604051632411122160e11b815293965091945092506000916001600160a01b0390911690634822244290613846908a906004016157e0565b602060405180830381865afa158015613863573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138879190615756565b600154835160405163aa7532af60e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263aa7532af926138dc9289926001600160a01b03909216918991908d906000908a90600401615f25565b602060405180830381865af41580156138f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061391d9190615756565b979650505050505050565b600080613937888a878961280d565b6000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f890613971908c908e908b9060040161580b565b600060405180830381865afa15801561398e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526139b691908101906158fa565b606083015190915063ffffffff1615613c7d5760008260e001516000146139f5576139f0836060015163ffffffff16426121739190615a2c565b6139ff565b670de0b6b3a76400005b6080840151909150600090613a1d9083670de0b6b3a7640000613c8d565b9050808460a0015111613a305780613a36565b8360a001515b9050604051806101c001604052808b81526020018a151581526020018915158152602001856040015163ffffffff168152602001856060015163ffffffff168152602001856080015181526020018560a0015181526020018560c0015181526020018560e00151815260200185610100015181526020018281526020018c6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b1591906153ee565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b769190615a11565b60ff1681526020018c6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613be091906153ee565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c419190615a11565b60ff16815260200184606001511515815250868881518110613c6557613c656153d8565b6020026020010181905250600194505050505061391d565b5060009998505050505050505050565b6000808060001985870985870292508281108382030391505080600003613cc65760008411613cbb57600080fd5b508290049050611033565b808411613cfe5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401611b56565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b6000838015613e6157600184168015613ddc57859250613de0565b8392505b508260011c8460011c94505b8415613e5b578560801c15613e0057600080fd5b85860281810181811015613e1357600080fd5b8590049650506001851615613e50578583028387820414613e39578615613e3957600080fd5b81810181811015613e4957600080fd5b8590049350505b8460011c9450613dec565b50613e77565b838015613e715760009250613e75565b8392505b505b509392505050565b60008060008360020b12613e96578260020b613e9e565b8260020b6000035b9050620d89e8811115613ec4576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003613edb57600160801b613eed565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613f21576ffff97272373d413259a46990580e213a0260801c5b6004821615613f40576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613f5f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613f7e576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613f9d576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613fbc576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613fdb576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613ffb576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561401b576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561403b576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561405b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561407b576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561409b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156140bb576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156140db576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156140fc576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561411c576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561413b576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615614158576b048a170391f7dc42444e8fa20260801c5b60008460020b1315614179578060001981614175576141756155a3565b0490505b64010000000081061561418d576001614190565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b031611156141c3579293925b846001600160a01b0316866001600160a01b0316116141ee576141e7858585614729565b9150614235565b836001600160a01b0316866001600160a01b0316101561422757614213868585614729565b915061422085878561479c565b9050614235565b61423285858561479c565b90505b94509492505050565b60008061424a836147e6565b90506110338182670de0b6b3a7640000613c8d565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f890614294908a908c908a9060040161580b565b600060405180830381865afa1580156142b1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526142d991908101906158fa565b60008054919250906001600160a01b0316635d4936ff6142fa8a8c8a613d6b565b6040518263ffffffff1660e01b815260040161431891815260200190565b602060405180830381865afa158015614335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143599190615756565b90506000614368888b8961103a565b905082606001511561449157600154604051632411122160e11b81526000916001600160a01b03169063c6c2c2ca9082906348222442906143ad908e906004016157e0565b602060405180830381865afa1580156143ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143ee9190615756565b6040518263ffffffff1660e01b815260040161440c91815260200190565b60a060405180830381865afa158015614429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061444d9190615df2565b505050506001600160801b03169050614489670de0b6b3a764000082670de0b6b3a764000061447c9190615a2c565b8651606001519190613c8d565b845160600152505b60208301511561471757604051806101e00160405280898152602001881515815260200184606001511515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff168152602001838152602001846020015181526020018460400151815260200161452a8a8d8b61103a565b81526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561456d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061459191906153ee565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156145ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145f29190615a11565b60ff1681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015614638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061465c91906153ee565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015614699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146bd9190615a11565b60ff1681526020018284116146d35760006146dd565b6146dd8385615a2c565b8152602001846000015160c00151815250858781518110614700576147006153d8565b60200260200101819052506001935050505061471f565b600093505050505b9695505050505050565b6000826001600160a01b0316846001600160a01b03161115614749579192915b6001600160a01b0384166147926fffffffffffffffffffffffffffffffff60601b606085901b1661477a8787615f81565b6001600160a01b0316866001600160a01b0316613c8d565b6123fa91906157cc565b6000826001600160a01b0316846001600160a01b031611156147bc579192915b6123fa6001600160801b0383166147d38686615f81565b6001600160a01b0316600160601b613c8d565b600060606148056001600160a01b038416670de0b6b3a76400006153c1565b901c92915050565b604080516102208101825260006101c082018181526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b60408051610240810190915260006101e082018181526102008301829052610220830191909152819081526020016000151581526020016000151581526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff16815260200160008152602001606081525090565b6001600160a01b038116811461495457600080fd5b50565b60006020828403121561496957600080fd5b81356110338161493f565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b6149ab828251614974565b60208101518015156060840152506040810151801515608084015250606081015163ffffffff811660a084015250608081015163ffffffff811660c08401525060a081015160e08381019190915260c0820151610100808501919091529082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015161018080850191909152908201516101a080850191909152908201516101c0840152015115156101e090910152565b6020808252825182820181905260009190848201906040850190845b81811015614aa857614a948385516149a0565b928401926102009290920191600101614a81565b50909695505050505050565b600060608284031215614ac657600080fd5b50919050565b8060020b811461495457600080fd5b600080600060a08486031215614af057600080fd5b614afa8585614ab4565b92506060840135614b0a81614acc565b91506080840135614b1a81614acc565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715614b5d57614b5d614b25565b60405290565b60405160c081016001600160401b0381118282101715614b5d57614b5d614b25565b60405160e081016001600160401b0381118282101715614b5d57614b5d614b25565b604051608081016001600160401b0381118282101715614b5d57614b5d614b25565b604051601f8201601f191681016001600160401b0381118282101715614bf157614bf1614b25565b604052919050565b62ffffff8116811461495457600080fd5b600060608284031215614c1c57600080fd5b614c24614b3b565b90508135614c318161493f565b81526020820135614c418161493f565b60208201526040820135614c5481614bf9565b604082015292915050565b60008060808385031215614c7257600080fd5b614c7c8484614c0a565b91506060830135614c8c81614acc565b809150509250929050565b801515811461495457600080fd5b600080600060608486031215614cba57600080fd5b8335614cc58161493f565b92506020840135614cd58161493f565b91506040840135614b1a81614c97565b600081518084526020808501945080840160005b83811015614d55578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c09096019590820190600101614cf9565b509495945050505050565b6000610220614d70848451614974565b60208301518015156060860152506040830151801515608086015250606083015160a0850152608083015160c085015260a0830151614db760e086018263ffffffff169052565b5060c0830151610100614dd18187018363ffffffff169052565b60e0850151610120878101919091529085015161014080880191909152908501516101608088019190915290850151610180808801919091529085015191506101a0614e218188018460ff169052565b9085015191506101c090614e398783018460ff169052565b8501516101e08701528401516102008601839052905061184882860182614ce5565b602081526000610b6c6020830184614d60565b600080600060a08486031215614e8357600080fd5b614e8d8585614c0a565b92506060840135614e9d8161493f565b91506080840135614b1a81614c97565b600080600080600060e08688031215614ec557600080fd5b614ecf8787614c0a565b94506060860135614edf8161493f565b93506080860135614eef81614c97565b9497939650939460a0810135945060c0013592915050565b60006001600160401b03821115614f2057614f20614b25565b5060051b60200190565b6001600160801b038116811461495457600080fd5b600082601f830112614f5057600080fd5b81356020614f65614f6083614f07565b614bc9565b82815260c09283028501820192828201919087851115614f8457600080fd5b8387015b85811015614ffb5781818a031215614fa05760008081fd5b614fa8614b63565b8135614fb381614acc565b815281860135614fc281614f2a565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101614f88565b5090979650505050505050565b60006020828403121561501a57600080fd5b81356001600160401b0381111561503057600080fd5b6123fa84828501614f3f565b6000806080838503121561504f57600080fd5b6150598484614ab4565b915060608301356001600160401b0381111561507457600080fd5b61508085828601614f3f565b9150509250929050565b600080600080608085870312156150a057600080fd5b84356150ab8161493f565b935060208501356150bb8161493f565b925060408501356150cb81614c97565b915060608501356150db81614c97565b939692955090935050565b6102008101610b6f82846149a0565b600080600060a0848603121561510a57600080fd5b614afa8585614c0a565b602080825282518282018190526000919060409081850190868401855b828110156151755781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101615131565b5091979650505050505050565b600061016082019050615196828451614974565b602083015115156060830152604083015163ffffffff8116608084015250606083015163ffffffff811660a084015250608083015160c083015260a083015160e083015260c0830151610100818185015260e085015161012085015280850151610140850152505092915050565b600080600080600060e0868803121561521c57600080fd5b6152268787614ab4565b945060608601359350608086013561523d81614c97565b925060a0860135915060c08601356152548161493f565b809150509295509295909350565b8281526040602082015260006123fa6040830184614ce5565b60006101208284031215614ac657600080fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156152e357603f198886030184526152d1858351614d60565b945092850192908501906001016152b5565b5092979650505050505050565b6000806080838503121561530357600080fd5b6150598484614c0a565b80516153188161493f565b919050565b6000602080838503121561533057600080fd5b82516001600160401b0381111561534657600080fd5b8301601f8101851361535757600080fd5b8051615365614f6082614f07565b81815260059190911b8201830190838101908783111561538457600080fd5b928401925b8284101561391d57835161539c8161493f565b82529284019290840190615389565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610b6f57610b6f6153ab565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561540057600080fd5b81516110338161493f565b60006020828403121561541d57600080fd5b815161103381614bf9565b60006001820161543a5761543a6153ab565b5060010190565b803561544c8161493f565b6001600160a01b0390811683526020820135906154688261493f565b166020830152604081013561547c81614bf9565b62ffffff81166040840152505050565b60608101610b6f8284615441565b805161ffff8116811461531857600080fd5b60008060008385036101c08112156154c357600080fd5b84516154ce8161493f565b60208601519094506154df81614acc565b9250603f1901610180808212156154f557600080fd5b6154fd614b85565b60c083121561550b57600080fd5b615513614b63565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a084015282815261010087015160208201526101208701516040820152610140870151606082015261557f610160880161549a565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806155d0576155d06155a3565b627fffff198214600019821416156155ea576155ea6153ab565b90059392505050565b60008260020b8260020b028060020b9150808214615613576156136153ab565b5092915050565b805160ff8116811461531857600080fd5b805161531881614c97565b600080600080600080600060e0888a03121561565157600080fd5b875161565c8161493f565b602089015190975061566d81614acc565b955061567b6040890161549a565b94506156896060890161549a565b93506156976080890161549a565b92506156a560a0890161561a565b915060c08801516156b581614c97565b8091505092959891949750929550565b6000606082840312156156d757600080fd5b610b6c8383614c0a565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600286900b8152610140810161573460208301876156e1565b60e0820194909452600292830b610100820152910b6101209091015292915050565b60006020828403121561576857600080fd5b5051919050565b80820180821115610b6f57610b6f6153ab565b600281810b9083900b01627fffff8113627fffff1982121715610b6f57610b6f6153ab565b600282810b9082900b03627fffff198112627fffff82131715610b6f57610b6f6153ab565b6000826157db576157db6155a3565b500490565b60608101610b6f8284614974565b60006020828403121561580057600080fd5b815161103381614f2a565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805163ffffffff8116811461531857600080fd5b600082601f83011261585457600080fd5b81516020615864614f6083614f07565b82815260c0928302850182019282820191908785111561588357600080fd5b8387015b85811015614ffb5781818a03121561589f5760008081fd5b6158a7614b63565b81516158b281614acc565b8152818601516158c181614f2a565b8187015260408281015190820152606080830151908201526080808301519082015260a080830151908201528452928401928101615887565b60006020828403121561590c57600080fd5b81516001600160401b038082111561592357600080fd5b908301906080828603121561593757600080fd5b61593f614ba7565b82518281111561594e57600080fd5b830160e0818803121561596057600080fd5b615968614b85565b6159718261530d565b815261597f6020830161562b565b602082015260408201516040820152606082015160608201526159a46080830161582f565b60808201526159b560a0830161582f565b60a082015260c0820151848111156159cc57600080fd5b6159d889828501615843565b60c08301525080835250506020830151602082015260408301516040820152615a036060840161562b565b606082015295945050505050565b600060208284031215615a2357600080fd5b610b6c8261561a565b81810381811115610b6f57610b6f6153ab565b600060208284031215615a5157600080fd5b610b6c8261582f565b600060208284031215615a6c57600080fd5b81516001600160401b03811115615a8257600080fd5b6123fa84828501615843565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff841660808201526000610180615ad260a08401866156e1565b806101608401526133b881840185614ce5565b60008060408385031215615af857600080fd5b82516001600160401b03811115615b0e57600080fd5b615b1a85828601615843565b925050602083015190509250929050565b604081526000615b3e6040830185614ce5565b90508260208301529392505050565b602081526000610b6c6020830184614ce5565b60008060408385031215615b7357600080fd5b8251615b7e81614acc565b6020840151909250614c8c81614acc565b60a081526000615ba260a0830188614ce5565b602083019690965250600293840b60408201529190920b60608201526001600160a01b03909116608090910152919050565b60008060408385031215615be757600080fd5b505080516020909101519092909150565b8181036000831280158383131683831282161715615613576156136153ab565b6000600160ff1b8201615c2d57615c2d6153ab565b5060000390565b600060208284031215615c4657600080fd5b815161103381614acc565b6001600160801b03828116828216039080821115615613576156136153ab565b60008260020b80615c8457615c846155a3565b808360020b0791505092915050565b6001600160801b03818116838216019080821115615613576156136153ab565b6000806000806000806000806000898b03610160811215615cd357600080fd5b6060811215615ce157600080fd5b50615cea614b3b565b8a51615cf58161493f565b815260208b0151615d058161493f565b602082015260408b0151615d1881614bf9565b60408201529850615d2b60608b0161562b565b9750615d3960808b0161582f565b9650615d4760a08b0161582f565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b60e08101615d8a8288615441565b6060820195909552921515608084015260a08301919091526001600160a01b031660c090910152919050565b60008060408385031215615dc957600080fd5b8251915060208301516001600160401b03811115615de657600080fd5b61508085828601615843565b600080600080600060a08688031215615e0a57600080fd5b8551615e1581614f2a565b6020870151909550615e2681614f2a565b6040870151909450615e3781614f2a565b6060870151909350615e4881614f2a565b80925050608086015190509295509295909350565b600060208284031215615e6f57600080fd5b813561103381614c97565b600060208284031215615e8c57600080fd5b813561103381614bf9565b81516001600160a01b0390811682526020808401518216908301526040808401519083015260608084015162ffffff1690830152608092830151169181019190915260a00190565b60008060008060808587031215615ef557600080fd5b845193506020850151615f078161493f565b9250615f156040860161582f565b6060959095015193969295505050565b6001600160a01b03888116825287166020820152600286900b60408201526000610180615f5560608401886156e1565b80610120840152615f6881840187614ce5565b9415156101408401525050610160015295945050505050565b6001600160a01b03828116828216039080821115615613576156136153ab56fea26469706673582212208d370c66e1812c14cb4021a852290a641a640c4b4ed9e0c418542a38f1ed9fb964736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/Util.sol:Utils"]: string;
}
