/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoterV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stepSize",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.MaxLeverageParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "computeMaxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startingLeverage",
        type: "uint256",
      },
    ],
    name: "findMaxLeverageWithEstimatedSlippage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX160",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getAddOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getBinsDataInBulk",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Borrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Borrowed",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.BinData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken",
        type: "bool",
      },
    ],
    name: "getMarginPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getMinMaxTicks",
    outputs: [
      {
        internalType: "int24",
        name: "min",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "max",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrderInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getPostInstantaneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getPreInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getReduceOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getUtilAndAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162005c2c38038062005c2c833981016040819052620000349162000092565b600080546001600160a01b03199081166001600160a01b039485161790915560018054821694841694909417909355600280549093169116179055620000dc565b80516001600160a01b03811681146200008d57600080fd5b919050565b600080600060608486031215620000a857600080fd5b620000b38462000075565b9250620000c36020850162000075565b9150620000d36040850162000075565b90509250925092565b615b4080620000ec6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063911f1b47116100ad578063ac636efb11610071578063ac636efb1461030b578063c229a3321461031e578063c3042bcd1461035c578063dd65c3281461036f578063dec8ae011461038f57600080fd5b8063911f1b4714610275578063912a8e00146102985780639255bbc1146102ab578063a55ac3eb146102cb578063a9b6b32b146102eb57600080fd5b80633aea807f116100f45780633aea807f146101e0578063433a1e181461020157806348c6f8661461021457806384b88557146102355780638e68ad361461026257600080fd5b8063060429f514610131578063193a24361461015a5780631f2ecd831461016d57806329aa3819146101955780632d6cf1f4146101c0575b600080fd5b61014461013f366004614650565b6103a2565b604051610151919061474e565b60405180910390f35b610144610168366004614650565b610779565b61018061017b3660046147c4565b610b46565b60408051928352602083019190915201610151565b6101a86101a3366004614926565b610df9565b6040516001600160801b039091168152602001610151565b6101d36101ce36600461496c565b610ee7565b6040516101519190614b0d565b6101f36101ee366004614b20565b6113a0565b604051908152602001610151565b6101f361020f366004614b5f565b6115c3565b610227610222366004614b71565b611a24565b604051610151929190614bd8565b610248610243366004614cf2565b611af6565b60408051600293840b81529190920b602082015201610151565b6101a86102703660046147c4565b611bdd565b610288610283366004614d26565b611ea8565b6040519015158152602001610151565b6101a86102a6366004614926565b6122a0565b6102be6102b9366004614d74565b6122d9565b6040516101519190614dd0565b6102de6102d9366004614ddf565b612702565b6040516101519190614dfe565b6102fe6102f9366004614d74565b612b0a565b6040516101519190614e6c565b6101f3610319366004614eee565b612c91565b61033161032c366004614650565b612eb5565b604080516001600160a01b03948516815293909216602084015262ffffff1690820152606001610151565b6101f361036a366004614b20565b612fed565b61038261037d366004614650565b61327f565b6040516101519190614f3f565b6101f361039d366004614fa1565b613649565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103f9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104219190810190614fce565b90506000815160026104339190615072565b6001600160401b0381111561044a5761044a61480e565b60405190808252806020026020018201604052801561048357816020015b610470614507565b8152602001906001900390816104685790505b5090506000805b83518110156106c357600060405180606001604052808684815181106104b2576104b2615089565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b919061509f565b6001600160a01b0316815260200186848151811061053b5761053b615089565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a4919061509f565b6001600160a01b031681526020018684815181106105c4576105c4615089565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062d91906150bc565b62ffffff1681525090506106618786848151811061064d5761064d615089565b60200260200101518360006001888a6137e1565b156106745782610670816150d9565b9350505b61069d8786848151811061068a5761068a615089565b602002602001015183600080888a6137e1565b156106b057826106ac816150d9565b9350505b50806106bb816150d9565b91505061048a565b506000816001600160401b038111156106de576106de61480e565b60405190808252806020026020018201604052801561071757816020015b610704614507565b8152602001906001900390816106fc5790505b50905060005b8281101561076f5783818151811061073757610737615089565b602002602001015182828151811061075157610751615089565b60200260200101819052508080610767906150d9565b91505061071d565b5095945050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107f89190810190614fce565b905060008151600261080a9190615072565b6001600160401b038111156108215761082161480e565b60405190808252806020026020018201604052801561085a57816020015b610847614507565b81526020019060019003908161083f5790505b5090506000805b8351811015610a9a576000604051806060016040528086848151811061088957610889615089565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f2919061509f565b6001600160a01b0316815260200186848151811061091257610912615089565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b919061509f565b6001600160a01b0316815260200186848151811061099b5761099b615089565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0491906150bc565b62ffffff168152509050610a3787868481518110610a2457610a24615089565b602002602001015183600180888a6137e1565b15610a4a5782610a46816150d9565b9350505b610a7487868481518110610a6057610a60615089565b60200260200101518360016000888a6137e1565b15610a875782610a83816150d9565b9350505b5080610a92816150d9565b915050610861565b506000816001600160401b03811115610ab557610ab561480e565b604051908082528060200260200182016040528015610aee57816020015b610adb614507565b815260200190600190039081610ad35790505b50905060005b8281101561076f57838181518110610b0e57610b0e615089565b6020026020010151828281518110610b2857610b28615089565b60200260200101819052508080610b3e906150d9565b915050610af4565b600154604051639525092360e01b815260009182918291829182916001600160a01b031690639525092390610b7f908b9060040161513d565b6101c060405180830381865afa158015610b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc1919061515d565b9194509250905081610bd3818961526a565b610bdd91906152a4565b965081610bea818861526a565b610bf491906152a4565b9550600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610c3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5e91906152e7565b509395508f9450505050505b8a60020b8160020b1215610d9f57610c90610c8a368f90038f018f615376565b826122a0565b9450610caa610ca4368f90038f018f615376565b82610df9565b93506001600160801b03851615610d8e57610cdb6001600160801b0385811690670de0b6b3a7640000908816613ab9565b8651604051630ca73f1f60e21b8152919450610d75918591670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9163329cfc7c91610d2d918e9187908b908b906004016153cc565b602060405180830381865af4158015610d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6e9190615407565b9190613ab9565b610d7f908b615420565b9950610d8b838a615420565b98505b610d988782615433565b9050610c6a565b5050505050818787610db19190615458565b610dbb919061526a565b610dc89060020b8661547d565b945081610dd58888615458565b610ddf919061526a565b610dec9060020b8561547d565b9350505050935093915050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda277908290634822244290610e32908890600401615491565b602060405180830381865afa158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e739190615407565b846040518363ffffffff1660e01b8152600401610e9d92919091825260020b602082015260400190565b602060405180830381865afa158015610eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ede919061549f565b90505b92915050565b610eef61459a565b60006040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5e919061509f565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610faa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fce919061509f565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561101a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103e91906150bc565b62ffffff1690526000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f89061107f908990899089906004016154bc565b600060405180830381865afa15801561109c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110c491908101906155ab565b60008054919250906001600160a01b0316635d4936ff6110e5898989613b97565b6040518263ffffffff1660e01b815260040161110391815260200190565b602060405180830381865afa158015611120573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111449190615407565b905060006111538488886113a0565b9050604051806101c00160405280858152602001871515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff1681526020018381526020018460200151815260200184604001518152602001828152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611211573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611235919061509f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611272573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129691906156b1565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611300919061509f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561133d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136191906156b1565b60ff168152602001828411611377576000611381565b61138183856156cc565b8152602001846000015160c001518152509450505050505b9392505050565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906113d9908a90600401615491565b6101c060405180830381865afa1580156113f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141b919061515d565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a90479061145a9087908b908b906004016154bc565b602060405180830381865afa158015611477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149b91906156df565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b906114d59088908c908c906004016154bc565b600060405180830381865afa1580156114f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261151a91908101906156fa565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac9261156f928b926001600160a01b0316918e15918c918b918b9060040161572e565b600060405180830381865af415801561158c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115b49190810190615785565b9b9a5050505050505050505050565b600154604051639525092360e01b815260009182916001600160a01b03909116906395250923906115f890869060040161513d565b6101c060405180830381865afa158015611616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163a919061515d565b505090506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561167e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a291906152e7565b5050600154604051632411122160e11b815295965060a08a013595600095506001600160a01b03909116935063c6c2c2ca92508391506348222442906116ec908b9060040161513d565b602060405180830381865afa158015611709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172d9190615407565b6040518263ffffffff1660e01b815260040161174b91815260200190565b60a060405180830381865afa158015611768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178c91906157cb565b505050506001600160801b031690505b670de0b6b3a7640000821115611a1b5760006117d76117c3670de0b6b3a7640000856156cc565b608089013590670de0b6b3a7640000613ab9565b905060006117f683670de0b6b3a7640000610d6e8560808d0135615420565b905060006118088260808b01356156cc565b90506000600260009054906101000a90046001600160a01b03166001600160a01b031663c6a5026a6040518060a001604052808d606001602081019061184e9190615836565b6118645761185f60208f018f614650565b61187a565b8d600001602001602081019061187a9190614650565b6001600160a01b031681526020018d606001602081019061189b9190615836565b6118ba578d60000160200160208101906118b59190614650565b6118c7565b6118c760208f018f614650565b6001600160a01b031681526020016118df8887615420565b81526020018d60000160400160208101906118fa9190615853565b62ffffff908116825260006020928301526040805160e086901b6001600160e01b031916815284516001600160a01b03908116600483015293850151841660248201529084015160448201526060840151909116606482015260809092015116608482015260a4016080604051808303816000875af1158015611981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a59190615870565b50919250600091506119cc90508b84876119c56080840160608501615836565b868d611a24565b50905080156119e45750949998505050505050505050565b8a60c00135871015611a01575060009a9950505050505050505050565b611a0f60c08c0135886156cc565b9650505050505061179c565b50505050919050565b6001546040516324637c3360e11b81526000916060916001600160a01b03909116906348c6f86690611a64908b908b908b908b908b908b906004016158b6565b600060405180830381865afa925050508015611aa257506040513d6000823e601f3d908101601f19168201604052611a9f91908101906158f6565b60015b611ae5573d808015611ad0576040519150601f19603f3d011682016040523d82523d6000602084013e611ad5565b606091505b506000925060609150611aeb9050565b90925090505b965096945050505050565b60008082600081518110611b0c57611b0c615089565b602090810291909101015151915081905060015b8351811015611bd7578260020b848281518110611b3f57611b3f615089565b60200260200101516000015160020b1215611b7957838181518110611b6657611b66615089565b6020026020010151600001519250611bc5565b8160020b848281518110611b8f57611b8f615089565b60200260200101516000015160020b1315611bc557838181518110611bb657611bb6615089565b60200260200101516000015191505b80611bcf816150d9565b915050611b20565b50915091565b600154604051632411122160e11b815260009182916001600160a01b0390911690634822244290611c1290889060040161513d565b602060405180830381865afa158015611c2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c539190615407565b6001546040516315083fbb60e31b8152600481018390529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015611ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc69190615407565b600154604051630ca32ed160e31b8152600481018590529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611d15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d399190615932565b6001600160801b03945090506000808080895b8960020b8160020b1215611e995760015460405163da69b0b360e01b8152600481018a9052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa158015611dad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd1919061549f565b6001546040516319fda27760e01b8152600481018b9052600284900b60248201529196508895506001600160a01b0316906319fda27790604401602060405180830381865afa158015611e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4c919061549f565b925082611e59858761594f565b611e63919061594f565b9150886001600160801b0316826001600160801b031610611e845788611e86565b815b9850611e928682615433565b9050611d4c565b50505050505050509392505050565b600080825111611eec5760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b60448201526064015b60405180910390fd5b600154604051632411122160e11b8152600091829182916001600160a01b031690634822244290611f2190899060040161513d565b602060405180830381865afa158015611f3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f629190615407565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd59190615932565b6001546040516315083fbb60e31b8152600481018590529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015612024573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120489190615407565b905060005b8751811015612291578288828151811061206957612069615089565b60200260200101516000015161207f919061596f565b60020b156120bd5760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b6044820152606401611ee3565b60015488516001600160a01b039091169063da69b0b39086908b90859081106120e8576120e8615089565b6020026020010151600001516040518363ffffffff1660e01b815260040161211d92919091825260020b602082015260400190565b602060405180830381865afa15801561213a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061215e919061549f565b9550856001600160801b03166000036121805760009650505050505050610ee1565b60015488516001600160a01b03909116906319fda2779086908b90859081106121ab576121ab615089565b6020026020010151600001516040518363ffffffff1660e01b81526004016121e092919091825260020b602082015260400190565b602060405180830381865afa1580156121fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612221919061549f565b945087818151811061223557612235615089565b6020026020010151602001518561224c9190615991565b6001600160801b031682876001600160801b031661226a91906156cc565b101561227f5760009650505050505050610ee1565b80612289816150d9565b91505061204d565b50600198975050505050505050565b600154604051632411122160e11b81526000916001600160a01b03169063da69b0b3908290634822244290610e32908890600401615491565b6122e1614507565b60006040518060600160405280876001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561232c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612350919061509f565b6001600160a01b03168152602001876001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561239c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c0919061509f565b6001600160a01b03168152602001876001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561240c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243091906150bc565b62ffffff1690529050600061244787878787612b0a565b606081015190915063ffffffff16156126f75760008160e0015160001461249a57612495826060015163ffffffff164261248191906156cc565b60e084015190670de0b6b3a7640000613bed565b6124a4565b670de0b6b3a76400005b60808301519091506000906124c29083670de0b6b3a7640000613ab9565b9050808360a00151116124d557806124db565b8260a001515b9050604051806101a0016040528085815260200187151581526020018815158152602001846040015163ffffffff168152602001846060015163ffffffff168152602001846080015181526020018460a0015181526020018460c0015181526020018460e00151815260200184610100015181526020018281526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125ba919061509f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261b91906156b1565b60ff1681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612661573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612685919061509f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156126c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126e691906156b1565b60ff168152509450505050506126fa565b50505b949350505050565b600154604051632411122160e11b815260609184916000916001600160a01b031690634822244290612738908990600401615491565b602060405180830381865afa158015612755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127799190615407565b600154604051639525092360e01b815291925060009182916001600160a01b0316906395250923906127af908b90600401615491565b6101c060405180830381865afa1580156127cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f1919061515d565b50909250905080612802818961526a565b61280c91906152a4565b965080612819818861526a565b61282391906152a4565b95506000816128328989615458565b61283c919061526a565b60020b6001600160401b038111156128565761285661480e565b6040519080825280602002602001820160405280156128b957816020015b6128a66040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816128745790505b509050600080846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156128fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061292191906152e7565b50505050505090505b8860020b8760020b1215612afb576129d48161294589613cab565b612957612952888c615433565b613cab565b60015460405163da69b0b360e01b8152600481018c905260028d900b60248201526001600160a01b039091169063da69b0b3906044015b602060405180830381865afa1580156129ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129cf919061549f565b613fce565b8484815181106129e6576129e6615089565b6020026020010151602001858581518110612a0357612a03615089565b60209081029190910101516040019190915252612a6b81612a2389613cab565b612a30612952888c615433565b6001546040516319fda27760e01b8152600481018c905260028d900b60248201526001600160a01b03909116906319fda2779060440161298e565b848481518110612a7d57612a7d615089565b6020026020010151606001858581518110612a9a57612a9a615089565b60209081029190910101516080019190915252612abe612ab988613cab565b61406a565b838381518110612ad057612ad0615089565b60209081029190910101515281612ae6816150d9565b9250612af490508488615433565b965061292a565b50909998505050505050505050565b60408051610180810182526000610120820181815261014083018290526101608301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915260005460405163bfd4c2a560e01b81526001600160a01b03878116600483015286811660248301528515156044830152841515606483015290911690639c3f1e9090829063bfd4c2a590608401602060405180830381865afa158015612bd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf89190615407565b6040518263ffffffff1660e01b8152600401612c1691815260200190565b61016060405180830381865afa158015612c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c5891906159b1565b6101008a01525060c088015260a0870152608086015263ffffffff90811660608601521660408401521515602083015250949350505050565b6000612c9e601483615a7a565b15612cd15760405162461bcd60e51b81526020600482015260036024820152621b5bd960ea1b6044820152606401611ee3565b600154604051639525092360e01b815260009182918291829182916001600160a01b031690639525092390612d0a908e9060040161513d565b6101c060405180830381865afa158015612d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d4c919061515d565b50509050806001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612d8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db291906152e7565b50949750929550612dc9935086925061406a915050565b935050505b6000612ddb60148761547d565b612de59085615072565b612def90876156cc565b905080600003612e04579350612eac92505050565b600088612e2757612e2284670de0b6b3a7640000610d6e858e615072565b612e3e565b612e3e670de0b6b3a764000085610d6e858e615072565b9050612e538189670de0b6b3a7640000613ab9565b9050600080612e7b8d8d612e686001886156cc565b8f612e739190615072565b8e878a611a24565b9150915081600014612e965783975050505050505050612eac565b612ea1600188615420565b965050505050612dce565b95945050505050565b6000806000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ef8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f1c919061509f565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612f5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f7e919061509f565b856001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015612fbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fe091906150bc565b9196909550909350915050565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390613026908a90600401615491565b6101c060405180830381865afa158015613044573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613068919061515d565b600154604051632411122160e11b815293965091945092506000916001600160a01b03909116906348222442906130a3908b90600401615491565b602060405180830381865afa1580156130c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130e49190615407565b6000805460405163d93a904760e01b815292935090916001600160a01b039091169063d93a90479061311e9088908c908c906004016154bc565b602060405180830381865afa15801561313b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061315f91906156df565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b906131999089908d908d906004016154bc565b600060405180830381865afa1580156131b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526131de91908101906156fa565b60018054865160405163aa7532af60e01b815293945073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9363aa7532af93613230938c936001600160a01b03909116928c9289918c90600401615a8e565b602060405180830381865af415801561324d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132719190615407565b9a9950505050505050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156132d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526132fe9190810190614fce565b90506000815160026133109190615072565b6001600160401b038111156133275761332761480e565b60405190808252806020026020018201604052801561336057816020015b61334d61459a565b8152602001906001900390816133455790505b5090506000805b835181101561359d576000604051806060016040528086848151811061338f5761338f615089565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156133d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133f8919061509f565b6001600160a01b0316815260200186848151811061341857613418615089565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561345d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613481919061509f565b6001600160a01b031681526020018684815181106134a1576134a1615089565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156134e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061350a91906150bc565b62ffffff16815250905061353c8786848151811061352a5761352a615089565b6020026020010151836001878961408b565b1561354f578261354b816150d9565b9350505b6135778786848151811061356557613565615089565b6020026020010151836000878961408b565b1561358a5782613586816150d9565b9350505b5080613595816150d9565b915050613367565b506000816001600160401b038111156135b8576135b861480e565b6040519080825280602002602001820160405280156135f157816020015b6135de61459a565b8152602001906001900390816135d65790505b50905060005b8281101561076f5783818151811061361157613611615089565b602002602001015182828151811061362b5761362b615089565b60200260200101819052508080613641906150d9565b9150506135f7565b600154604051639525092360e01b81526000918291829182916001600160a01b0390911690639525092390613682908990600401615491565b6101c060405180830381865afa1580156136a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136c4919061515d565b600154604051632411122160e11b815293965091945092506000916001600160a01b03909116906348222442906136ff908a90600401615491565b602060405180830381865afa15801561371c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137409190615407565b600154835160405163aa7532af60e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263aa7532af926137959289926001600160a01b03909216918991908d906000908a90600401615a8e565b602060405180830381865af41580156137b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137d69190615407565b979650505050505050565b6000806137f0888a8789612b0a565b606081015190915063ffffffff1615613aaa5760008160e0015160001461382f5761382a826060015163ffffffff164261248191906156cc565b613839565b670de0b6b3a76400005b60808301519091506000906138579083670de0b6b3a7640000613ab9565b9050808360a001511161386a5780613870565b8260a001515b9050604051806101a001604052808a815260200189151581526020018815158152602001846040015163ffffffff168152602001846060015163ffffffff168152602001846080015181526020018460a0015181526020018460c0015181526020018460e00151815260200184610100015181526020018281526020018b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561392b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061394f919061509f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561398c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139b091906156b1565b60ff1681526020018b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156139f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a1a919061509f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a7b91906156b1565b60ff16815250858781518110613a9357613a93615089565b6020026020010181905250600193505050506137d6565b50600098975050505050505050565b6000808060001985870985870292508281108382030391505080600003613af25760008411613ae757600080fd5b508290049050611399565b808411613b2a5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401611ee3565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b6000838015613c8d57600184168015613c0857859250613c0c565b8392505b508260011c8460011c94505b8415613c87578560801c15613c2c57600080fd5b85860281810181811015613c3f57600080fd5b8590049650506001851615613c7c578583028387820414613c65578615613c6557600080fd5b81810181811015613c7557600080fd5b8590049350505b8460011c9450613c18565b50613ca3565b838015613c9d5760009250613ca1565b8392505b505b509392505050565b60008060008360020b12613cc2578260020b613cca565b8260020b6000035b9050620d89e8811115613cf0576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003613d0757600160801b613d19565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613d4d576ffff97272373d413259a46990580e213a0260801c5b6004821615613d6c576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613d8b576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613daa576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613dc9576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613de8576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613e07576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613e27576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613e47576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613e67576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613e87576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613ea7576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613ec7576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613ee7576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613f07576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613f28576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613f48576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613f67576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613f84576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613fa5578060001981613fa157613fa1615254565b0490505b640100000000810615613fb9576001613fbc565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b03161115613fef579293925b846001600160a01b0316866001600160a01b03161161401a57614013858585614423565b9150614061565b836001600160a01b0316866001600160a01b031610156140535761403f868585614423565b915061404c858785614496565b9050614061565b61405e858585614496565b90505b94509492505050565b600080614076836144e0565b90506113998182670de0b6b3a7640000613ab9565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f8906140c0908a908c908a906004016154bc565b600060405180830381865afa1580156140dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261410591908101906155ab565b60008054919250906001600160a01b0316635d4936ff6141268a8c8a613b97565b6040518263ffffffff1660e01b815260040161414491815260200190565b602060405180830381865afa158015614161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141859190615407565b90506000614194888b896113a0565b60208401519091501561441157604051806101c00160405280898152602001881515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff16815260200183815260200184602001518152602001846040015181526020016142248a8d8b6113a0565b81526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015614267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061428b919061509f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156142c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142ec91906156b1565b60ff1681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015614332573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614356919061509f565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015614393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143b791906156b1565b60ff1681526020018284116143cd5760006143d7565b6143d783856156cc565b8152602001846000015160c001518152508587815181106143fa576143fa615089565b602002602001018190525060019350505050614419565b600093505050505b9695505050505050565b6000826001600160a01b0316846001600160a01b03161115614443579192915b6001600160a01b03841661448c6fffffffffffffffffffffffffffffffff60601b606085901b166144748787615aea565b6001600160a01b0316866001600160a01b0316613ab9565b6126fa919061547d565b6000826001600160a01b0316846001600160a01b031611156144b6579192915b6126fa6001600160801b0383166144cd8686615aea565b6001600160a01b0316600160601b613ab9565b600060606144ff6001600160a01b038416670de0b6b3a7640000615072565b901c92915050565b60408051610200810190915260006101a082018181526101c083018290526101e083019190915281908152602001600015158152602001600015158152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610220810190915260006101c082018181526101e08301829052610200830191909152819081526020016000151581526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff16815260200160008152602001606081525090565b6001600160a01b038116811461464d57600080fd5b50565b60006020828403121561466257600080fd5b813561139981614638565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b6146a482825161466d565b60208101518015156060840152506040810151801515608084015250606081015163ffffffff811660a084015250608081015163ffffffff811660c08401525060a081015160e08381019190915260c0820151610100808501919091529082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015161018080850191909152908201516101a084015201516101c090910152565b6020808252825182820181905260009190848201906040850190845b818110156147915761477d838551614699565b928401926101e0929092019160010161476a565b50909695505050505050565b6000606082840312156147af57600080fd5b50919050565b8060020b811461464d57600080fd5b600080600060a084860312156147d957600080fd5b6147e3858561479d565b925060608401356147f3816147b5565b91506080840135614803816147b5565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156148465761484661480e565b60405290565b60405160c081016001600160401b03811182821017156148465761484661480e565b60405160e081016001600160401b03811182821017156148465761484661480e565b604051601f8201601f191681016001600160401b03811182821017156148b8576148b861480e565b604052919050565b62ffffff8116811461464d57600080fd5b6000606082840312156148e357600080fd5b6148eb614824565b905081356148f881614638565b8152602082013561490881614638565b6020820152604082013561491b816148c0565b604082015292915050565b6000806080838503121561493957600080fd5b61494384846148d1565b91506060830135614953816147b5565b809150509250929050565b801515811461464d57600080fd5b60008060006060848603121561498157600080fd5b833561498c81614638565b9250602084013561499c81614638565b915060408401356148038161495e565b600081518084526020808501945080840160005b83811015614a1c578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c090960195908201906001016149c0565b509495945050505050565b6000610200614a3784845161466d565b602083015180151560608601525060408301516080850152606083015160a08501526080830151614a7060c086018263ffffffff169052565b5060a083015163ffffffff811660e08601525060c08301516101008581019190915260e08401516101208087019190915290840151610140808701919091529084015161016080870191909152908401519061018090614ad48288018460ff169052565b85015191506101a0614aea8782018460ff169052565b908501516101c08701528401516101e086018390529050612eac828601826149ac565b602081526000610ede6020830184614a27565b600080600060a08486031215614b3557600080fd5b614b3f85856148d1565b92506060840135614b4f81614638565b915060808401356148038161495e565b600060e082840312156147af57600080fd5b6000806000806000806101008789031215614b8b57600080fd5b614b95888861479d565b9550606087013594506080870135935060a0870135614bb38161495e565b925060c0870135915060e0870135614bca81614638565b809150509295509295509295565b8281526040602082015260006126fa60408301846149ac565b60006001600160401b03821115614c0a57614c0a61480e565b5060051b60200190565b6001600160801b038116811461464d57600080fd5b600082601f830112614c3a57600080fd5b81356020614c4f614c4a83614bf1565b614890565b82815260c09283028501820192828201919087851115614c6e57600080fd5b8387015b85811015614ce55781818a031215614c8a5760008081fd5b614c9261484c565b8135614c9d816147b5565b815281860135614cac81614c14565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101614c72565b5090979650505050505050565b600060208284031215614d0457600080fd5b81356001600160401b03811115614d1a57600080fd5b6126fa84828501614c29565b60008060808385031215614d3957600080fd5b614d43848461479d565b915060608301356001600160401b03811115614d5e57600080fd5b614d6a85828601614c29565b9150509250929050565b60008060008060808587031215614d8a57600080fd5b8435614d9581614638565b93506020850135614da581614638565b92506040850135614db58161495e565b91506060850135614dc58161495e565b939692955090935050565b6101e08101610ee18284614699565b600080600060a08486031215614df457600080fd5b6147e385856148d1565b602080825282518282018190526000919060409081850190868401855b82811015614e5f5781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101614e1b565b5091979650505050505050565b600061016082019050614e8082845161466d565b602083015115156060830152604083015163ffffffff8116608084015250606083015163ffffffff811660a084015250608083015160c083015260a083015160e083015260c0830151610100818185015260e085015161012085015280850151610140850152505092915050565b600080600080600060e08688031215614f0657600080fd5b614f10878761479d565b9450606086013593506080860135614f278161495e565b9497939650939460a0810135945060c0013592915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614f9457603f19888603018452614f82858351614a27565b94509285019290850190600101614f66565b5092979650505050505050565b60008060808385031215614fb457600080fd5b614d4384846148d1565b8051614fc981614638565b919050565b60006020808385031215614fe157600080fd5b82516001600160401b03811115614ff757600080fd5b8301601f8101851361500857600080fd5b8051615016614c4a82614bf1565b81815260059190911b8201830190838101908783111561503557600080fd5b928401925b828410156137d657835161504d81614638565b8252928401929084019061503a565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ee157610ee161505c565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156150b157600080fd5b815161139981614638565b6000602082840312156150ce57600080fd5b8151611399816148c0565b6000600182016150eb576150eb61505c565b5060010190565b80356150fd81614638565b6001600160a01b03908116835260208201359061511982614638565b166020830152604081013561512d816148c0565b62ffffff81166040840152505050565b60608101610ee182846150f2565b805161ffff81168114614fc957600080fd5b60008060008385036101c081121561517457600080fd5b845161517f81614638565b6020860151909450615190816147b5565b9250603f1901610180808212156151a657600080fd5b6151ae61486e565b60c08312156151bc57600080fd5b6151c461484c565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a0840152828152610100870151602082015261012087015160408201526101408701516060820152615230610160880161514b565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b8061528157615281615254565b627fffff1982146000198214161561529b5761529b61505c565b90059392505050565b60008260020b8260020b028060020b91508082146152c4576152c461505c565b5092915050565b805160ff81168114614fc957600080fd5b8051614fc98161495e565b600080600080600080600060e0888a03121561530257600080fd5b875161530d81614638565b602089015190975061531e816147b5565b955061532c6040890161514b565b945061533a6060890161514b565b93506153486080890161514b565b925061535660a089016152cb565b915060c08801516153668161495e565b8091505092959891949750929550565b60006060828403121561538857600080fd5b610ede83836148d1565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600286900b815261014081016153e56020830187615392565b60e0820194909452600292830b610100820152910b6101209091015292915050565b60006020828403121561541957600080fd5b5051919050565b80820180821115610ee157610ee161505c565b600281810b9083900b01627fffff8113627fffff1982121715610ee157610ee161505c565b600282810b9082900b03627fffff198112627fffff82131715610ee157610ee161505c565b60008261548c5761548c615254565b500490565b60608101610ee1828461466d565b6000602082840312156154b157600080fd5b815161139981614c14565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805163ffffffff81168114614fc957600080fd5b600082601f83011261550557600080fd5b81516020615515614c4a83614bf1565b82815260c0928302850182019282820191908785111561553457600080fd5b8387015b85811015614ce55781818a0312156155505760008081fd5b61555861484c565b8151615563816147b5565b81528186015161557281614c14565b8187015260408281015190820152606080830151908201526080808301519082015260a080830151908201528452928401928101615538565b6000602082840312156155bd57600080fd5b81516001600160401b03808211156155d457600080fd5b90830190606082860312156155e857600080fd5b6155f0614824565b8251828111156155ff57600080fd5b830160e0818803121561561157600080fd5b61561961486e565b61562282614fbe565b8152615630602083016152dc565b60208201526040820151604082015260608201516060820152615655608083016154e0565b608082015261566660a083016154e0565b60a082015260c08201518481111561567d57600080fd5b615689898285016154f4565b60c0830152508252506020838101519082015260409283015192810192909252509392505050565b6000602082840312156156c357600080fd5b610ede826152cb565b81810381811115610ee157610ee161505c565b6000602082840312156156f157600080fd5b610ede826154e0565b60006020828403121561570c57600080fd5b81516001600160401b0381111561572257600080fd5b6126fa848285016154f4565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff84166080820152600061018061577260a0840186615392565b80610160840152613271818401856149ac565b6000806040838503121561579857600080fd5b82516001600160401b038111156157ae57600080fd5b6157ba858286016154f4565b925050602083015190509250929050565b600080600080600060a086880312156157e357600080fd5b85516157ee81614c14565b60208701519095506157ff81614c14565b604087015190945061581081614c14565b606087015190935061582181614c14565b80925050608086015190509295509295909350565b60006020828403121561584857600080fd5b81356113998161495e565b60006020828403121561586557600080fd5b8135611399816148c0565b6000806000806080858703121561588657600080fd5b84519350602085015161589881614638565b92506158a6604086016154e0565b6060959095015193969295505050565b61010081016158c582896150f2565b6060820196909652608081019490945291151560a084015260c08301526001600160a01b031660e090910152919050565b6000806040838503121561590957600080fd5b8251915060208301516001600160401b0381111561592657600080fd5b614d6a858286016154f4565b60006020828403121561594457600080fd5b8151611399816147b5565b6001600160801b038281168282160390808211156152c4576152c461505c565b60008260020b8061598257615982615254565b808360020b0791505092915050565b6001600160801b038181168382160190808211156152c4576152c461505c565b6000806000806000806000806000898b036101608112156159d157600080fd5b60608112156159df57600080fd5b506159e8614824565b8a516159f381614638565b815260208b0151615a0381614638565b602082015260408b0151615a16816148c0565b60408201529850615a2960608b016152dc565b9750615a3760808b016154e0565b9650615a4560a08b016154e0565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b600082615a8957615a89615254565b500690565b6001600160a01b03888116825287166020820152600286900b60408201526000610180615abe6060840188615392565b80610120840152615ad1818401876149ac565b9415156101408401525050610160015295945050505050565b6001600160a01b038281168282160390808211156152c4576152c461505c56fea26469706673582212202358dea864d34565775b17c83e0b02d65f8a4e362821cbcb4ddd234bc914305c64736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
}
