/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoterV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stepSize",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.MaxLeverageParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "computeMaxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX160",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getAddOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getBinsDataInBulk",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Borrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Borrowed",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.BinData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fillerOutput",
        type: "uint256",
      },
    ],
    name: "getEstimatedPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken",
        type: "bool",
      },
    ],
    name: "getMarginPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastGrowth",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityLoan[]",
            name: "borrowInfo",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getMinMaxTicks",
    outputs: [
      {
        internalType: "int24",
        name: "min",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "max",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrderInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getPostInstantaneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getPreInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getReduceOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Decimals",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getUtilAndAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200609638038062006096833981016040819052620000349162000092565b600080546001600160a01b03199081166001600160a01b039485161790915560018054821694841694909417909355600280549093169116179055620000dc565b80516001600160a01b03811681146200008d57600080fd5b919050565b600080600060608486031215620000a857600080fd5b620000b38462000075565b9250620000c36020850162000075565b9150620000d36040850162000075565b90509250925092565b615faa80620000ec6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638e68ad36116100ad578063a9b6b32b11610071578063a9b6b32b146102fe578063c229a3321461031e578063c3042bcd1461035c578063dd65c3281461036f578063dec8ae011461038f57600080fd5b80638e68ad3614610275578063911f1b4714610288578063912a8e00146102ab5780639255bbc1146102be578063a55ac3eb146102de57600080fd5b80633aea807f116100f45780633aea807f146101e0578063433a1e181461020157806348c6f866146102145780634fbfe42d1461023557806384b885571461024857600080fd5b8063060429f514610131578063193a24361461015a5780631f2ecd831461016d57806329aa3819146101955780632d6cf1f4146101c0575b600080fd5b61014461013f3660046149bc565b6103a2565b6040516101519190614aba565b60405180910390f35b6101446101683660046149bc565b610779565b61018061017b366004614b30565b610b46565b60408051928352602083019190915201610151565b6101a86101a3366004614c92565b610df9565b6040516001600160801b039091168152602001610151565b6101d36101ce366004614cd8565b610ee7565b6040516101519190614e79565b6101f36101ee366004614e8c565b6113a0565b604051908152602001610151565b6101f361020f366004614ecb565b6115c3565b610227610222366004614edd565b611a24565b604051610151929190614f44565b6101f3610243366004614f5d565b611af6565b61025b6102563660046150b8565b6120ea565b60408051600293840b81529190920b602082015201610151565b6101a8610283366004614b30565b61216d565b61029b6102963660046150ec565b612438565b6040519015158152602001610151565b6101a86102b9366004614c92565b612830565b6102d16102cc36600461513a565b612869565b6040516101519190615196565b6102f16102ec3660046151a5565b612c92565b60405161015191906151c4565b61031161030c36600461513a565b61309a565b6040516101519190615232565b61033161032c3660046149bc565b613221565b604080516001600160a01b03948516815293909216602084015262ffffff1690820152606001610151565b6101f361036a366004614e8c565b613359565b61038261037d3660046149bc565b6135eb565b60405161015191906152b4565b6101f361039d366004615316565b6139b5565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103f9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104219190810190615343565b905060008151600261043391906153e7565b6001600160401b0381111561044a5761044a614b7a565b60405190808252806020026020018201604052801561048357816020015b610470614873565b8152602001906001900390816104685790505b5090506000805b83518110156106c357600060405180606001604052808684815181106104b2576104b26153fe565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b9190615414565b6001600160a01b0316815260200186848151811061053b5761053b6153fe565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a49190615414565b6001600160a01b031681526020018684815181106105c4576105c46153fe565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062d9190615431565b62ffffff1681525090506106618786848151811061064d5761064d6153fe565b60200260200101518360006001888a613b4d565b1561067457826106708161544e565b9350505b61069d8786848151811061068a5761068a6153fe565b602002602001015183600080888a613b4d565b156106b057826106ac8161544e565b9350505b50806106bb8161544e565b91505061048a565b506000816001600160401b038111156106de576106de614b7a565b60405190808252806020026020018201604052801561071757816020015b610704614873565b8152602001906001900390816106fc5790505b50905060005b8281101561076f57838181518110610737576107376153fe565b6020026020010151828281518110610751576107516153fe565b602002602001018190525080806107679061544e565b91505061071d565b5095945050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107f89190810190615343565b905060008151600261080a91906153e7565b6001600160401b0381111561082157610821614b7a565b60405190808252806020026020018201604052801561085a57816020015b610847614873565b81526020019060019003908161083f5790505b5090506000805b8351811015610a9a5760006040518060600160405280868481518110610889576108896153fe565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f29190615414565b6001600160a01b03168152602001868481518110610912576109126153fe565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190615414565b6001600160a01b0316815260200186848151811061099b5761099b6153fe565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a049190615431565b62ffffff168152509050610a3787868481518110610a2457610a246153fe565b602002602001015183600180888a613b4d565b15610a4a5782610a468161544e565b9350505b610a7487868481518110610a6057610a606153fe565b60200260200101518360016000888a613b4d565b15610a875782610a838161544e565b9350505b5080610a928161544e565b915050610861565b506000816001600160401b03811115610ab557610ab5614b7a565b604051908082528060200260200182016040528015610aee57816020015b610adb614873565b815260200190600190039081610ad35790505b50905060005b8281101561076f57838181518110610b0e57610b0e6153fe565b6020026020010151828281518110610b2857610b286153fe565b60200260200101819052508080610b3e9061544e565b915050610af4565b600154604051639525092360e01b815260009182918291829182916001600160a01b031690639525092390610b7f908b906004016154b2565b6101c060405180830381865afa158015610b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc191906154d2565b9194509250905081610bd381896155df565b610bdd9190615619565b965081610bea81886155df565b610bf49190615619565b9550600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610c3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5e919061565c565b509395508f9450505050505b8a60020b8160020b1215610d9f57610c90610c8a368f90038f018f6156eb565b82612830565b9450610caa610ca4368f90038f018f6156eb565b82610df9565b93506001600160801b03851615610d8e57610cdb6001600160801b0385811690670de0b6b3a7640000908816613e25565b8651604051630ca73f1f60e21b8152919450610d75918591670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9163329cfc7c91610d2d918e9187908b908b90600401615741565b602060405180830381865af4158015610d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6e919061577c565b9190613e25565b610d7f908b615795565b9950610d8b838a615795565b98505b610d9887826157a8565b9050610c6a565b5050505050818787610db191906157cd565b610dbb91906155df565b610dc89060020b866157f2565b945081610dd588886157cd565b610ddf91906155df565b610dec9060020b856157f2565b9350505050935093915050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda277908290634822244290610e32908890600401615806565b602060405180830381865afa158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e73919061577c565b846040518363ffffffff1660e01b8152600401610e9d92919091825260020b602082015260400190565b602060405180830381865afa158015610eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ede9190615814565b90505b92915050565b610eef614906565b60006040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5e9190615414565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610faa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fce9190615414565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561101a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103e9190615431565b62ffffff1690526000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f89061107f90899089908990600401615831565b600060405180830381865afa15801561109c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110c49190810190615920565b60008054919250906001600160a01b0316635d4936ff6110e5898989613f03565b6040518263ffffffff1660e01b815260040161110391815260200190565b602060405180830381865afa158015611120573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611144919061577c565b905060006111538488886113a0565b9050604051806101c00160405280858152602001871515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff1681526020018381526020018460200151815260200184604001518152602001828152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112359190615414565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611272573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112969190615a26565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113009190615414565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561133d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113619190615a26565b60ff168152602001828411611377576000611381565b6113818385615a41565b8152602001846000015160c001518152509450505050505b9392505050565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906113d9908a90600401615806565b6101c060405180830381865afa1580156113f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141b91906154d2565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a90479061145a9087908b908b90600401615831565b602060405180830381865afa158015611477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149b9190615a54565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b906114d59088908c908c90600401615831565b600060405180830381865afa1580156114f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261151a9190810190615a6f565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac9261156f928b926001600160a01b0316918e15918c918b918b90600401615aa3565b600060405180830381865af415801561158c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115b49190810190615afa565b9b9a5050505050505050505050565b600154604051639525092360e01b815260009182916001600160a01b03909116906395250923906115f89086906004016154b2565b6101c060405180830381865afa158015611616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163a91906154d2565b505090506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561167e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a2919061565c565b5050600154604051632411122160e11b815295965060a08a013595600095506001600160a01b03909116935063c6c2c2ca92508391506348222442906116ec908b906004016154b2565b602060405180830381865afa158015611709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172d919061577c565b6040518263ffffffff1660e01b815260040161174b91815260200190565b60a060405180830381865afa158015611768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178c9190615b40565b505050506001600160801b031690505b670de0b6b3a7640000821115611a1b5760006117d76117c3670de0b6b3a764000085615a41565b608089013590670de0b6b3a7640000613e25565b905060006117f683670de0b6b3a7640000610d6e8560808d0135615795565b905060006118088260808b0135615a41565b90506000600260009054906101000a90046001600160a01b03166001600160a01b031663c6a5026a6040518060a001604052808d606001602081019061184e9190615bab565b6118645761185f60208f018f6149bc565b61187a565b8d600001602001602081019061187a91906149bc565b6001600160a01b031681526020018d606001602081019061189b9190615bab565b6118ba578d60000160200160208101906118b591906149bc565b6118c7565b6118c760208f018f6149bc565b6001600160a01b031681526020016118df8887615795565b81526020018d60000160400160208101906118fa9190615bc8565b62ffffff908116825260006020928301526040805160e086901b6001600160e01b031916815284516001600160a01b03908116600483015293850151841660248201529084015160448201526060840151909116606482015260809092015116608482015260a4016080604051808303816000875af1158015611981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a59190615be5565b50919250600091506119cc90508b84876119c56080840160608501615bab565b868d611a24565b50905080156119e45750949998505050505050505050565b8a60c00135871015611a01575060009a9950505050505050505050565b611a0f60c08c013588615a41565b9650505050505061179c565b50505050919050565b6001546040516324637c3360e11b81526000916060916001600160a01b03909116906348c6f86690611a64908b908b908b908b908b908b90600401615c2b565b600060405180830381865afa925050508015611aa257506040513d6000823e601f3d908101601f19168201604052611a9f9190810190615c6b565b60015b611ae5573d808015611ad0576040519150601f19603f3d011682016040523d82523d6000602084013e611ad5565b606091505b506000925060609150611aeb9050565b90925090505b965096945050505050565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101829052600154604051639525092360e01b81526001600160a01b0390911690639525092390611b8e908a90600401615806565b6101c060405180830381865afa158015611bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd091906154d2565b5060020b60208301526001600160a01b039081168083526000805460405163118272bf60e31b815291931691638c1395f891611c1391908b908b90600401615831565b600060405180830381865afa158015611c30573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c589190810190615920565b9050600085670de0b6b3a764000014611cf357815160c0015160405163069b8a8b60e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__916334dc545891611ca991908a90600401615ca7565b600060405180830381865af4158015611cc6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611cee9190810190615a6f565b611cfa565b815160c001515b6040516337a6142160e01b815290915073__$d23a8dd93b7205fa6b646ffed38c165d68$__906337a6142190611d34908490600401615cc9565b6040805180830381865af4158015611d50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d749190615cdc565b600290810b6101608601520b610140840152825160408051633850c7bd60e01b815290516001600160a01b0390921691633850c7bd9160048082019260e0929091908290030181865afa158015611dcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df3919061565c565b50505050600291820b606087018190526001600160a01b03939093166040808801919091526101608701516101408801516020890151925163146d722d60e31b81528d15156004820152602481019690965290840b6044860152830b606485015290910b60848301525073__$d23a8dd93b7205fa6b646ffed38c165d68$__9063a36b91689060a401602060405180830381865af4158015611e99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ebd919061577c565b61018084015260208301516060840151604080860151905162aba2a960e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__9363055d154893611f15938793670de0b6b3a764000093929190600401615d0b565b6040805180830381865af4158015611f31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f559190615d50565b60a08501526080840152610180830151600103611fb7576040820151611f849087670de0b6b3a7640000613e25565b87611f93578360800151611f99565b8360a001515b611fa39087615d74565b611fad9190615d74565b93505050506120e1565b6020820151611fcf9087670de0b6b3a7640000613e25565b60c08401819052611feb908690670de0b6b3a764000090613e25565b60e0840181905261201b90670de0b6b3a7640000908961200f578560800151610d6e565b8560a001519190613e25565b61010084015286612030578260a00151612036565b82608001515b8361010001516120469190615795565b8360c00151101561205f578160400151611fad90615d94565b8661206e578260a00151612074565b82608001515b8361010001518460c001516120899190615a41565b6120939190615a41565b610120840181905260e08401516120b39190670de0b6b3a7640000613e25565b61012084015260408201516120d19087670de0b6b3a7640000613e25565b836101200151611fad9190615d74565b95945050505050565b60008073__$d23a8dd93b7205fa6b646ffed38c165d68$$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9363aa7532af9361359c938c936001600160a01b03909116928c9289918c90600401615ef8565b602060405180830381865af41580156135b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135dd919061577c565b9a9950505050505050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015613642573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261366a9190810190615343565b905060008151600261367c91906153e7565b6001600160401b0381111561369357613693614b7a565b6040519080825280602002602001820160405280156136cc57816020015b6136b9614906565b8152602001906001900390816136b15790505b5090506000805b835181101561390957600060405180606001604052808684815181106136fb576136fb6153fe565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613740573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137649190615414565b6001600160a01b03168152602001868481518110613784576137846153fe565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156137c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137ed9190615414565b6001600160a01b0316815260200186848151811061380d5761380d6153fe565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015613852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138769190615431565b62ffffff1681525090506138a887868481518110613896576138966153fe565b602002602001015183600187896143f7565b156138bb57826138b78161544e565b9350505b6138e3878684815181106138d1576138d16153fe565b602002602001015183600087896143f7565b156138f657826138f28161544e565b9350505b50806139018161544e565b9150506136d3565b506000816001600160401b0381111561392457613924614b7a565b60405190808252806020026020018201604052801561395d57816020015b61394a614906565b8152602001906001900390816139425790505b50905060005b8281101561076f5783818151811061397d5761397d6153fe565b6020026020010151828281518110613997576139976153fe565b602002602001018190525080806139ad9061544e565b915050613963565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906139ee908990600401615806565b6101c060405180830381865afa158015613a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a3091906154d2565b600154604051632411122160e11b815293965091945092506000916001600160a01b0390911690634822244290613a6b908a90600401615806565b602060405180830381865afa158015613a88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613aac919061577c565b600154835160405163aa7532af60e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263aa7532af92613b019289926001600160a01b03909216918991908d906000908a90600401615ef8565b602060405180830381865af4158015613b1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b42919061577c565b979650505050505050565b600080613b5c888a878961309a565b606081015190915063ffffffff1615613e165760008160e00151600014613b9b57613b96826060015163ffffffff1642612a119190615a41565b613ba5565b670de0b6b3a76400005b6080830151909150600090613bc39083670de0b6b3a7640000613e25565b9050808360a0015111613bd65780613bdc565b8260a001515b9050604051806101a001604052808a815260200189151581526020018815158152602001846040015163ffffffff168152602001846060015163ffffffff168152602001846080015181526020018460a0015181526020018460c0015181526020018460e00151815260200184610100015181526020018281526020018b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cbb9190615414565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613cf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d1c9190615a26565b60ff1681526020018b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d869190615414565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613dc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613de79190615a26565b60ff16815250858781518110613dff57613dff6153fe565b602002602001018190525060019350505050613b42565b50600098975050505050505050565b6000808060001985870985870292508281108382030391505080600003613e5e5760008411613e5357600080fd5b508290049050611399565b808411613e965760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401612473565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b6000838015613ff957600184168015613f7457859250613f78565b8392505b508260011c8460011c94505b8415613ff3578560801c15613f9857600080fd5b85860281810181811015613fab57600080fd5b8590049650506001851615613fe8578583028387820414613fd1578615613fd157600080fd5b81810181811015613fe157600080fd5b8590049350505b8460011c9450613f84565b5061400f565b838015614009576000925061400d565b8392505b505b509392505050565b60008060008360020b1261402e578260020b614036565b8260020b6000035b9050620d89e881111561405c576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361407357600160801b614085565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156140b9576ffff97272373d413259a46990580e213a0260801c5b60048216156140d8576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156140f7576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615614116576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615614135576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615614154576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615614173576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615614193576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156141b3576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156141d3576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156141f3576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615614213576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615614233576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615614253576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615614273576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615614294576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156142b4576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156142d3576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156142f0576b048a170391f7dc42444e8fa20260801c5b60008460020b131561431157806000198161430d5761430d6155c9565b0490505b640100000000810615614325576001614328565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b0316111561435b579293925b846001600160a01b0316866001600160a01b0316116143865761437f85858561478f565b91506143cd565b836001600160a01b0316866001600160a01b031610156143bf576143ab86858561478f565b91506143b8858785614802565b90506143cd565b6143ca858585614802565b90505b94509492505050565b6000806143e28361484c565b90506113998182670de0b6b3a7640000613e25565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f89061442c908a908c908a90600401615831565b600060405180830381865afa158015614449573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526144719190810190615920565b60008054919250906001600160a01b0316635d4936ff6144928a8c8a613f03565b6040518263ffffffff1660e01b81526004016144b091815260200190565b602060405180830381865afa1580156144cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144f1919061577c565b90506000614500888b896113a0565b60208401519091501561477d57604051806101c00160405280898152602001881515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff16815260200183815260200184602001518152602001846040015181526020016145908a8d8b6113a0565b81526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156145d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145f79190615414565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015614634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146589190615a26565b60ff1681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561469e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146c29190615414565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156146ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147239190615a26565b60ff168152602001828411614739576000614743565b6147438385615a41565b8152602001846000015160c00151815250858781518110614766576147666153fe565b602002602001018190525060019350505050614785565b600093505050505b9695505050505050565b6000826001600160a01b0316846001600160a01b031611156147af579192915b6001600160a01b0384166147f86fffffffffffffffffffffffffffffffff60601b606085901b166147e08787615f54565b6001600160a01b0316866001600160a01b0316613e25565b612c8a91906157f2565b6000826001600160a01b0316846001600160a01b03161115614822579192915b612c8a6001600160801b0383166148398686615f54565b6001600160a01b0316600160601b613e25565b6000606061486b6001600160a01b038416670de0b6b3a76400006153e7565b901c92915050565b60408051610200810190915260006101a082018181526101c083018290526101e083019190915281908152602001600015158152602001600015158152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610220810190915260006101c082018181526101e08301829052610200830191909152819081526020016000151581526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff16815260200160008152602001606081525090565b6001600160a01b03811681146149b957600080fd5b50565b6000602082840312156149ce57600080fd5b8135611399816149a4565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b614a108282516149d9565b60208101518015156060840152506040810151801515608084015250606081015163ffffffff811660a084015250608081015163ffffffff811660c08401525060a081015160e08381019190915260c0820151610100808501919091529082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015161018080850191909152908201516101a084015201516101c090910152565b6020808252825182820181905260009190848201906040850190845b81811015614afd57614ae9838551614a05565b928401926101e09290920191600101614ad6565b50909695505050505050565b600060608284031215614b1b57600080fd5b50919050565b8060020b81146149b957600080fd5b600080600060a08486031215614b4557600080fd5b614b4f8585614b09565b92506060840135614b5f81614b21565b91506080840135614b6f81614b21565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715614bb257614bb2614b7a565b60405290565b60405160c081016001600160401b0381118282101715614bb257614bb2614b7a565b60405160e081016001600160401b0381118282101715614bb257614bb2614b7a565b604051601f8201601f191681016001600160401b0381118282101715614c2457614c24614b7a565b604052919050565b62ffffff811681146149b957600080fd5b600060608284031215614c4f57600080fd5b614c57614b90565b90508135614c64816149a4565b81526020820135614c74816149a4565b60208201526040820135614c8781614c2c565b604082015292915050565b60008060808385031215614ca557600080fd5b614caf8484614c3d565b91506060830135614cbf81614b21565b809150509250929050565b80151581146149b957600080fd5b600080600060608486031215614ced57600080fd5b8335614cf8816149a4565b92506020840135614d08816149a4565b91506040840135614b6f81614cca565b600081518084526020808501945080840160005b83811015614d88578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c09096019590820190600101614d2c565b509495945050505050565b6000610200614da38484516149d9565b602083015180151560608601525060408301516080850152606083015160a08501526080830151614ddc60c086018263ffffffff169052565b5060a083015163ffffffff811660e08601525060c08301516101008581019190915260e08401516101208087019190915290840151610140808701919091529084015161016080870191909152908401519061018090614e408288018460ff169052565b85015191506101a0614e568782018460ff169052565b908501516101c08701528401516101e0860183905290506120e182860182614d18565b602081526000610ede6020830184614d93565b600080600060a08486031215614ea157600080fd5b614eab8585614c3d565b92506060840135614ebb816149a4565b91506080840135614b6f81614cca565b600060e08284031215614b1b57600080fd5b6000806000806000806101008789031215614ef757600080fd5b614f018888614b09565b9550606087013594506080870135935060a0870135614f1f81614cca565b925060c0870135915060e0870135614f36816149a4565b809150509295509295509295565b828152604060208201526000612c8a6040830184614d18565b600080600080600060e08688031215614f7557600080fd5b614f7f8787614c3d565b94506060860135614f8f816149a4565b93506080860135614f9f81614cca565b9497939650939460a0810135945060c0013592915050565b60006001600160401b03821115614fd057614fd0614b7a565b5060051b60200190565b6001600160801b03811681146149b957600080fd5b600082601f83011261500057600080fd5b8135602061501561501083614fb7565b614bfc565b82815260c0928302850182019282820191908785111561503457600080fd5b8387015b858110156150ab5781818a0312156150505760008081fd5b615058614bb8565b813561506381614b21565b81528186013561507281614fda565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101615038565b5090979650505050505050565b6000602082840312156150ca57600080fd5b81356001600160401b038111156150e057600080fd5b612c8a84828501614fef565b600080608083850312156150ff57600080fd5b6151098484614b09565b915060608301356001600160401b0381111561512457600080fd5b61513085828601614fef565b9150509250929050565b6000806000806080858703121561515057600080fd5b843561515b816149a4565b9350602085013561516b816149a4565b9250604085013561517b81614cca565b9150606085013561518b81614cca565b939692955090935050565b6101e08101610ee18284614a05565b600080600060a084860312156151ba57600080fd5b614b4f8585614c3d565b602080825282518282018190526000919060409081850190868401855b828110156152255781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a090930192908501906001016151e1565b5091979650505050505050565b6000610160820190506152468284516149d9565b602083015115156060830152604083015163ffffffff8116608084015250606083015163ffffffff811660a084015250608083015160c083015260a083015160e083015260c0830151610100818185015260e085015161012085015280850151610140850152505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561530957603f198886030184526152f7858351614d93565b945092850192908501906001016152db565b5092979650505050505050565b6000806080838503121561532957600080fd5b6151098484614c3d565b805161533e816149a4565b919050565b6000602080838503121561535657600080fd5b82516001600160401b0381111561536c57600080fd5b8301601f8101851361537d57600080fd5b805161538b61501082614fb7565b81815260059190911b820183019083810190878311156153aa57600080fd5b928401925b82841015613b425783516153c2816149a4565b825292840192908401906153af565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ee157610ee16153d1565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561542657600080fd5b8151611399816149a4565b60006020828403121561544357600080fd5b815161139981614c2c565b600060018201615460576154606153d1565b5060010190565b8035615472816149a4565b6001600160a01b03908116835260208201359061548e826149a4565b16602083015260408101356154a281614c2c565b62ffffff81166040840152505050565b60608101610ee18284615467565b805161ffff8116811461533e57600080fd5b60008060008385036101c08112156154e957600080fd5b84516154f4816149a4565b602086015190945061550581614b21565b9250603f19016101808082121561551b57600080fd5b615523614bda565b60c083121561553157600080fd5b615539614bb8565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a08401528281526101008701516020820152610120870151604082015261014087015160608201526155a561016088016154c0565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806155f6576155f66155c9565b627fffff19821460001982141615615610576156106153d1565b90059392505050565b60008260020b8260020b028060020b9150808214615639576156396153d1565b5092915050565b805160ff8116811461533e57600080fd5b805161533e81614cca565b600080600080600080600060e0888a03121561567757600080fd5b8751615682816149a4565b602089015190975061569381614b21565b95506156a1604089016154c0565b94506156af606089016154c0565b93506156bd608089016154c0565b92506156cb60a08901615640565b915060c08801516156db81614cca565b8091505092959891949750929550565b6000606082840312156156fd57600080fd5b610ede8383614c3d565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600286900b8152610140810161575a6020830187615707565b60e0820194909452600292830b610100820152910b6101209091015292915050565b60006020828403121561578e57600080fd5b5051919050565b80820180821115610ee157610ee16153d1565b600281810b9083900b01627fffff8113627fffff1982121715610ee157610ee16153d1565b600282810b9082900b03627fffff198112627fffff82131715610ee157610ee16153d1565b600082615801576158016155c9565b500490565b60608101610ee182846149d9565b60006020828403121561582657600080fd5b815161139981614fda565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805163ffffffff8116811461533e57600080fd5b600082601f83011261587a57600080fd5b8151602061588a61501083614fb7565b82815260c092830285018201928282019190878511156158a957600080fd5b8387015b858110156150ab5781818a0312156158c55760008081fd5b6158cd614bb8565b81516158d881614b21565b8152818601516158e781614fda565b8187015260408281015190820152606080830151908201526080808301519082015260a0808301519082015284529284019281016158ad565b60006020828403121561593257600080fd5b81516001600160401b038082111561594957600080fd5b908301906060828603121561595d57600080fd5b615965614b90565b82518281111561597457600080fd5b830160e0818803121561598657600080fd5b61598e614bda565b61599782615333565b81526159a560208301615651565b602082015260408201516040820152606082015160608201526159ca60808301615855565b60808201526159db60a08301615855565b60a082015260c0820151848111156159f257600080fd5b6159fe89828501615869565b60c0830152508252506020838101519082015260409283015192810192909252509392505050565b600060208284031215615a3857600080fd5b610ede82615640565b81810381811115610ee157610ee16153d1565b600060208284031215615a6657600080fd5b610ede82615855565b600060208284031215615a8157600080fd5b81516001600160401b03811115615a9757600080fd5b612c8a84828501615869565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff841660808201526000610180615ae760a0840186615707565b806101608401526135dd81840185614d18565b60008060408385031215615b0d57600080fd5b82516001600160401b03811115615b2357600080fd5b615b2f85828601615869565b925050602083015190509250929050565b600080600080600060a08688031215615b5857600080fd5b8551615b6381614fda565b6020870151909550615b7481614fda565b6040870151909450615b8581614fda565b6060870151909350615b9681614fda565b80925050608086015190509295509295909350565b600060208284031215615bbd57600080fd5b813561139981614cca565b600060208284031215615bda57600080fd5b813561139981614c2c565b60008060008060808587031215615bfb57600080fd5b845193506020850151615c0d816149a4565b9250615c1b60408601615855565b6060959095015193969295505050565b6101008101615c3a8289615467565b6060820196909652608081019490945291151560a084015260c08301526001600160a01b031660e090910152919050565b60008060408385031215615c7e57600080fd5b8251915060208301516001600160401b03811115615c9b57600080fd5b61513085828601615869565b604081526000615cba6040830185614d18565b90508260208301529392505050565b602081526000610ede6020830184614d18565b60008060408385031215615cef57600080fd5b8251615cfa81614b21565b6020840151909250614cbf81614b21565b60a081526000615d1e60a0830188614d18565b602083019690965250600293840b60408201529190920b60608201526001600160a01b03909116608090910152919050565b60008060408385031215615d6357600080fd5b505080516020909101519092909150565b8181036000831280158383131683831282161715615639576156396153d1565b6000600160ff1b8201615da957615da96153d1565b5060000390565b600060208284031215615dc257600080fd5b815161139981614b21565b6001600160801b03828116828216039080821115615639576156396153d1565b60008260020b80615e0057615e006155c9565b808360020b0791505092915050565b6001600160801b03818116838216019080821115615639576156396153d1565b6000806000806000806000806000898b03610160811215615e4f57600080fd5b6060811215615e5d57600080fd5b50615e66614b90565b8a51615e71816149a4565b815260208b0151615e81816149a4565b602082015260408b0151615e9481614c2c565b60408201529850615ea760608b01615651565b9750615eb560808b01615855565b9650615ec360a08b01615855565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b6001600160a01b03888116825287166020820152600286900b60408201526000610180615f286060840188615707565b80610120840152615f3b81840187614d18565b9415156101408401525050610160015295945050505050565b6001600160a01b03828116828216039080821115615639576156396153d156fea2646970667358221220658769cad8b49c8bb731fc6254ae9d161b85713c30458a28498d83e6a2f3dce664736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _quoterV2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      _quoterV2,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/Util.sol:Utils"]: string;
}
