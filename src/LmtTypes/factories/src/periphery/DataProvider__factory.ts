/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DataProvider,
  DataProviderInterface,
} from "../../../src/periphery/DataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrowFacility",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startingLeverage",
        type: "uint256",
      },
    ],
    name: "findMaxLeverageWithEstimatedSlippage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX160",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getActiveMarginPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getAddOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getBinsDataInBulk",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Borrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Borrowed",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.BinData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getExpectedPremiumOwed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isToken",
        type: "bool",
      },
    ],
    name: "getMarginPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalDebtOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebtInput",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "openTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "repayTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "premiumDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPosition",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOwed",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxWithdrawablePremium",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.MarginPositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getMinMaxTicks",
    outputs: [
      {
        internalType: "int24",
        name: "min",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "max",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdd",
        type: "bool",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolkeys",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getPostInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getPreInstantaeneousRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "getRangeCondition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "int24",
        name: "curTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getRangeConditions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "getReduceOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "auctionDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStartTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "startOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct DataProvider.LimitOrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getUtilAndAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "int24",
        name: "curTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "maxTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "minTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "rangeConditions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200562f3803806200562f833981016040819052620000349162000087565b50600080546001600160a01b039283166001600160a01b03199182161790915560018054939092169216919091179055620000d1565b80516001600160a01b03811681146200008257600080fd5b919050565b6000806000606084860312156200009d57600080fd5b620000a8846200006a565b9250620000b8602085016200006a565b9150620000c8604085016200006a565b90509250925092565b61554e80620000e16000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806384b88557116100b8578063a55ac3eb1161007c578063a55ac3eb146102ea578063a9b6b32b1461030a578063ac636efb1461032a578063c229a3321461033d578063dd65c3281461037b578063dec8ae011461039b57600080fd5b806384b88557146102615780638e68ad361461028e578063911f1b47146102a1578063912a8e00146102c4578063a36b9168146102d757600080fd5b8063288babd2116100ff578063288babd2146101cf57806329aa3819146101e25780632d6cf1f41461020d5780633aea807f1461022d57806348c6f8661461024057600080fd5b80625295f21461013b578063060429f514610161578063091fcd8714610181578063193a2436146101945780631f2ecd83146101a7575b600080fd5b61014e61014936600461404f565b6103ae565b6040519081526020015b60405180910390f35b61017461016f366004614099565b610642565b60405161015891906140e2565b61014e61018f3660046141cc565b610a19565b6101746101a2366004614099565b610cf3565b6101ba6101b5366004614233565b6110c0565b60408051928352602083019190915201610158565b61014e6101dd36600461437b565b611344565b6101f56101f03660046143ef565b61136e565b6040516001600160801b039091168152602001610158565b61022061021b3660046141cc565b61145c565b60405161015891906144ec565b61014e61023b36600461404f565b611964565b61025361024e3660046144fb565b611b87565b6040516101589291906145a8565b61027461026f366004614600565b611c79565b60408051600293840b81529190920b602082015201610158565b6101f561029c366004614233565b611d60565b6102b46102af366004614634565b61202b565b6040519015158152602001610158565b6101f56102d23660046143ef565b612423565b61014e6102e5366004614682565b61245c565b6102fd6102f83660046146f3565b6124d3565b6040516101589190614712565b61031d610318366004614773565b6128db565b60405161015891906147c4565b61014e610338366004614846565b612a62565b61035061034b366004614099565b612c7d565b604080516001600160a01b03948516815293909216602084015262ffffff1690820152606001610158565b61038e610389366004614099565b612db5565b6040516101589190614897565b61014e6103a93660046148e6565b61317f565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906103e7908a90600401614903565b6101c060405180830381865afa158015610405573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104299190614991565b600154604051632411122160e11b815293965091945092506000916001600160a01b0390911690634822244290610464908b90600401614903565b602060405180830381865afa158015610481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a59190614a46565b6000805460405163d93a904760e01b815292935090916001600160a01b039091169063d93a9047906104df9088908c908c90600401614a5f565b602060405180830381865afa1580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105209190614a97565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b9061055a9089908d908d90600401614a5f565b600060405180830381865afa158015610577573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261059f9190810190614b75565b60018054865160405163aa7532af60e01b815293945073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9363aa7532af936105f1938c936001600160a01b03909116928c9289918c90600401614c28565b602060405180830381865af415801561060e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106329190614a46565b96505050505050505b9392505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610699573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106c19190810190614c84565b90506000815160026106d39190614d33565b6001600160401b038111156106ea576106ea613f08565b60405190808252806020026020018201604052801561072357816020015b610710613e1a565b8152602001906001900390816107085790505b5090506000805b8351811015610963576000604051806060016040528086848151811061075257610752614d4a565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190614d60565b6001600160a01b031681526020018684815181106107db576107db614d4a565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610820573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108449190614d60565b6001600160a01b0316815260200186848151811061086457610864614d4a565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190614d7d565b62ffffff168152509050610901878684815181106108ed576108ed614d4a565b60200260200101518360006001888a61330c565b15610914578261091081614d9a565b9350505b61093d8786848151811061092a5761092a614d4a565b602002602001015183600080888a61330c565b15610950578261094c81614d9a565b9350505b508061095b81614d9a565b91505061072a565b506000816001600160401b0381111561097e5761097e613f08565b6040519080825280602002602001820160405280156109b757816020015b6109a4613e1a565b81526020019060019003908161099c5790505b50905060005b82811015610a0f578381815181106109d7576109d7614d4a565b60200260200101518282815181106109f1576109f1614d4a565b60200260200101819052508080610a0790614d9a565b9150506109bd565b5095945050505050565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f890610a4e90889088908890600401614a5f565b600060405180830381865afa158015610a6b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a939190810190614dbe565b90506000856001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610ad5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af99190614ed9565b505050505091505060006040518060600160405280886001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b709190614d60565b6001600160a01b03168152602001886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be09190614d60565b6001600160a01b03168152602001886001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c509190614d7d565b62ffffff169052600154604051639525092360e01b81529192506000916001600160a01b0390911690639525092390610c8d908590600401614903565b6101c060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf9190614991565b50915050610ce7846000015160c00151878584611344565b98975050505050505050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d4a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d729190810190614c84565b9050600081516002610d849190614d33565b6001600160401b03811115610d9b57610d9b613f08565b604051908082528060200260200182016040528015610dd457816020015b610dc1613e1a565b815260200190600190039081610db95790505b5090506000805b83518110156110145760006040518060600160405280868481518110610e0357610e03614d4a565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6c9190614d60565b6001600160a01b03168152602001868481518110610e8c57610e8c614d4a565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ed1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef59190614d60565b6001600160a01b03168152602001868481518110610f1557610f15614d4a565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7e9190614d7d565b62ffffff168152509050610fb187868481518110610f9e57610f9e614d4a565b602002602001015183600180888a61330c565b15610fc45782610fc081614d9a565b9350505b610fee87868481518110610fda57610fda614d4a565b60200260200101518360016000888a61330c565b156110015782610ffd81614d9a565b9350505b508061100c81614d9a565b915050610ddb565b506000816001600160401b0381111561102f5761102f613f08565b60405190808252806020026020018201604052801561106857816020015b611055613e1a565b81526020019060019003908161104d5790505b50905060005b82811015610a0f5783818151811061108857611088614d4a565b60200260200101518282815181106110a2576110a2614d4a565b602002602001018190525080806110b890614d9a565b91505061106e565b600154604051639525092360e01b815260009182918291829182916001600160a01b0316906395250923906110f9908b90600401614fb3565b6101c060405180830381865afa158015611117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113b9190614991565b925092509250600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a99190614ed9565b509395508f9450505050505b8a60020b8160020b12156112ea576111db6111d5368f90038f018f614fc1565b82612423565b94506111f56111ef368f90038f018f614fc1565b8261136e565b93506001600160801b038516156112d9576112266001600160801b0385811690670de0b6b3a76400009088166133d7565b8651604051630ca73f1f60e21b81529194506112c0918591670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9163329cfc7c91611278918e9187908b908b90600401614fdd565b602060405180830381865af4158015611295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b99190614a46565b91906133d7565b6112ca908b615018565b99506112d6838a615018565b98505b6112e3878261502b565b90506111b5565b50505050508187876112fc9190615050565b611306919061508b565b6113139060020b866150c5565b9450816113208888615050565b61132a919061508b565b6113379060020b856150c5565b9350505050935093915050565b600080600061135287611c79565b91509150611363868683858861245c565b979650505050505050565b600154604051632411122160e11b81526000916001600160a01b0316906319fda2779082906348222442906113a7908890600401614903565b602060405180830381865afa1580156113c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e89190614a46565b846040518363ffffffff1660e01b815260040161141292919091825260020b602082015260400190565b602060405180830381865afa15801561142f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145391906150d9565b90505b92915050565b611464613e85565b60006040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d39190614d60565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561151f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115439190614d60565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561158f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b39190614d7d565b62ffffff1690526000805460405163118272bf60e31b815292935090916001600160a01b0390911690638c1395f8906115f490899089908990600401614a5f565b600060405180830381865afa158015611611573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116399190810190614dbe565b60008054919250906001600160a01b0316635d4936ff61165a8989896134b5565b6040518263ffffffff1660e01b815260040161167891815260200190565b602060405180830381865afa158015611695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b99190614a46565b905060006116c8848888611964565b9050604051806101a00160405280858152602001871515815260200184600001516040015181526020018460000151606001518152602001846000015160a0015163ffffffff16815260200184600001516080015163ffffffff1681526020018381526020018460200151815260200184604001518152602001828152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117aa9190614d60565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180b91906150f6565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611851573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118759190614d60565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d691906150f6565b60ff168152600054604051632be197cf60e01b81526020909201916001600160a01b0390911690632be197cf906119159089908d908d90600401615111565b602060405180830381865afa158015611932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119569190614a46565b905298975050505050505050565b600154604051639525092360e01b81526000918291829182916001600160a01b039091169063952509239061199d908a90600401614903565b6101c060405180830381865afa1580156119bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119df9190614991565b6000805460405163d93a904760e01b8152949750929550909350916001600160a01b039091169063d93a904790611a1e9087908b908b90600401614a5f565b602060405180830381865afa158015611a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5f9190614a97565b6000805460405163657b5a4b60e01b815292935090916001600160a01b039091169063657b5a4b90611a999088908c908c90600401614a5f565b600060405180830381865afa158015611ab6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ade9190810190614b75565b6001548451604051632c9d4b2b60e21b815292935060009273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263b2752cac92611b33928b926001600160a01b0316918e15918c918b918b9060040161513e565b600060405180830381865af4158015611b50573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b7891908101906151a3565b9b9a5050505050505050505050565b6001546040516324637c3360e11b81526000916060916001600160a01b03909116906348c6f86690611bc7908b908b908b908b908b908b906004016151e9565b600060405180830381865afa925050508015611c0557506040513d6000823e601f3d908101601f19168201604052611c029190810190615229565b60015b611c6857611c11615265565b806308c379a003611c5c5750611c25615280565b80611c305750611c5e565b611c4e8189611c3f818b615018565b611c4991906150c5565b61350b565b506000915060609050611c6e565b505b3d6000803e3d6000fd5b90925090505b965096945050505050565b60008082600081518110611c8f57611c8f614d4a565b602090810291909101015151915081905060015b8351811015611d5a578260020b848281518110611cc257611cc2614d4a565b60200260200101516000015160020b1215611cfc57838181518110611ce957611ce9614d4a565b6020026020010151600001519250611d48565b8160020b848281518110611d1257611d12614d4a565b60200260200101516000015160020b1315611d4857838181518110611d3957611d39614d4a565b60200260200101516000015191505b80611d5281614d9a565b915050611ca3565b50915091565b600154604051632411122160e11b815260009182916001600160a01b0390911690634822244290611d95908890600401614fb3565b602060405180830381865afa158015611db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd69190614a46565b6001546040516315083fbb60e31b8152600481018390529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015611e25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e499190614a46565b600154604051630ca32ed160e31b8152600481018590529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ebc9190615309565b6001600160801b03945090506000808080895b8960020b8160020b121561201c5760015460405163da69b0b360e01b8152600481018a9052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa158015611f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5491906150d9565b6001546040516319fda27760e01b8152600481018b9052600284900b60248201529196508895506001600160a01b0316906319fda27790604401602060405180830381865afa158015611fab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fcf91906150d9565b925082611fdc8587615326565b611fe69190615326565b9150886001600160801b0316826001600160801b0316106120075788612009565b815b9850612015868261502b565b9050611ecf565b50505050505050509392505050565b60008082511161206f5760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b60448201526064015b60405180910390fd5b600154604051632411122160e11b8152600091829182916001600160a01b0316906348222442906120a4908990600401614fb3565b602060405180830381865afa1580156120c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e59190614a46565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015612134573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121589190615309565b6001546040516315083fbb60e31b8152600481018590529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa1580156121a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121cb9190614a46565b905060005b875181101561241457828882815181106121ec576121ec614d4a565b602002602001015160000151612202919061534d565b60020b156122405760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b6044820152606401612066565b60015488516001600160a01b039091169063da69b0b39086908b908590811061226b5761226b614d4a565b6020026020010151600001516040518363ffffffff1660e01b81526004016122a092919091825260020b602082015260400190565b602060405180830381865afa1580156122bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122e191906150d9565b9550856001600160801b03166000036123035760009650505050505050611456565b60015488516001600160a01b03909116906319fda2779086908b908590811061232e5761232e614d4a565b6020026020010151600001516040518363ffffffff1660e01b815260040161236392919091825260020b602082015260400190565b602060405180830381865afa158015612380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a491906150d9565b94508781815181106123b8576123b8614d4a565b602002602001015160200151856123cf919061536f565b6001600160801b031682876001600160801b03166123ed919061538f565b10156124025760009650505050505050611456565b8061240c81614d9a565b9150506121d0565b50600198975050505050505050565b600154604051632411122160e11b81526000916001600160a01b03169063da69b0b39082906348222442906113a7908890600401614903565b600085612471578260020b8560020b12612485565b61247b828561502b565b60020b8560020b12155b15612492575060016124ca565b856124af576124a1828561502b565b60020b8560020b12156124b9565b8260020b8560020b125b156124c6575060026124ca565b5060035b95945050505050565b600154604051632411122160e11b815260609184916000916001600160a01b031690634822244290612509908990600401614903565b602060405180830381865afa158015612526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061254a9190614a46565b600154604051639525092360e01b815291925060009182916001600160a01b031690639525092390612580908b90600401614903565b6101c060405180830381865afa15801561259e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125c29190614991565b509092509050806125d3818961508b565b6125dd91906153a2565b9650806125ea818861508b565b6125f491906153a2565b95506000816126038989615050565b61260d919061508b565b60020b6001600160401b0381111561262757612627613f08565b60405190808252806020026020018201604052801561268a57816020015b6126776040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816126455790505b509050600080846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156126ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f29190614ed9565b50505050505090505b8860020b8760020b12156128cc576127a58161271689613554565b612728612723888c61502b565b613554565b60015460405163da69b0b360e01b8152600481018c905260028d900b60248201526001600160a01b039091169063da69b0b3906044015b602060405180830381865afa15801561277c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a091906150d9565b613877565b8484815181106127b7576127b7614d4a565b60200260200101516020018585815181106127d4576127d4614d4a565b6020908102919091010151604001919091525261283c816127f489613554565b612801612723888c61502b565b6001546040516319fda27760e01b8152600481018c905260028d900b60248201526001600160a01b03909116906319fda2779060440161275f565b84848151811061284e5761284e614d4a565b602002602001015160600185858151811061286b5761286b614d4a565b6020908102919091010151608001919091525261288f61288a88613554565b613913565b8383815181106128a1576128a1614d4a565b602090810291909101015152816128b781614d9a565b92506128c59050848861502b565b96506126fb565b50909998505050505050505050565b60408051610180810182526000610120820181815261014083018290526101608301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915260005460405163bfd4c2a560e01b81526001600160a01b03878116600483015286811660248301528515156044830152841515606483015290911690639c3f1e9090829063bfd4c2a590608401602060405180830381865afa1580156129a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129c99190614a46565b6040518263ffffffff1660e01b81526004016129e791815260200190565b61016060405180830381865afa158015612a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a2991906153c2565b6101008a01525060c088015260a0870152608086015263ffffffff90811660608601521660408401521515602083015250949350505050565b6000612a6f60148361548f565b15612aa25760405162461bcd60e51b81526020600482015260036024820152621b5bd960ea1b6044820152606401612066565b600154604051639525092360e01b815260009182918291829182916001600160a01b031690639525092390612adb908e90600401614fb3565b6101c060405180830381865afa158015612af9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b1d9190614991565b50509050806001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b839190614ed9565b50949750929550612b9a9350869250613913915050565b935050505b6000612bac6014876150c5565b612bb69085614d33565b612bc0908761538f565b905080600003612bd55793506124ca92505050565b600088612bf857612bf384670de0b6b3a76400006112b9858e614d33565b612c0f565b612c0f670de0b6b3a7640000856112b9858e614d33565b9050612c248189670de0b6b3a76400006133d7565b9050600080612c4c8d8d612c3960018861538f565b8f612c449190614d33565b8e878a611b87565b9150915081600014612c6757839750505050505050506124ca565b612c72600188615018565b965050505050612b9f565b6000806000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612cc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ce49190614d60565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d469190614d60565b856001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612da89190614d7d565b9196909550909350915050565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015612e0c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612e349190810190614c84565b9050600081516002612e469190614d33565b6001600160401b03811115612e5d57612e5d613f08565b604051908082528060200260200182016040528015612e9657816020015b612e83613e85565b815260200190600190039081612e7b5790505b5090506000805b83518110156130d35760006040518060600160405280868481518110612ec557612ec5614d4a565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612f0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f2e9190614d60565b6001600160a01b03168152602001868481518110612f4e57612f4e614d4a565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fb79190614d60565b6001600160a01b03168152602001868481518110612fd757612fd7614d4a565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561301c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130409190614d7d565b62ffffff1681525090506130728786848151811061306057613060614d4a565b60200260200101518360018789613934565b15613085578261308181614d9a565b9350505b6130ad8786848151811061309b5761309b614d4a565b60200260200101518360008789613934565b156130c057826130bc81614d9a565b9350505b50806130cb81614d9a565b915050612e9d565b506000816001600160401b038111156130ee576130ee613f08565b60405190808252806020026020018201604052801561312757816020015b613114613e85565b81526020019060019003908161310c5790505b50905060005b82811015610a0f5783818151811061314757613147614d4a565b602002602001015182828151811061316157613161614d4a565b6020026020010181905250808061317790614d9a565b91505061312d565b600154604051639525092360e01b81526000918291829182916001600160a01b03909116906395250923906131b8908990600401614903565b6101c060405180830381865afa1580156131d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131fa9190614991565b600154604051632411122160e11b815293965091945092506000916001600160a01b0390911690634822244290613235908a90600401614903565b602060405180830381865afa158015613252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132769190614a46565b600154835160405163aa7532af60e01b815292935073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9263aa7532af926132cb9289926001600160a01b03909216918991908d906000908a90600401614c28565b602060405180830381865af41580156132e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113639190614a46565b60008061331b888a87896128db565b606081015190915063ffffffff16156133c85760405180610140016040528088815260200187151581526020018615158152602001826040015163ffffffff168152602001826060015163ffffffff168152602001826080015181526020018260a0015181526020018260c0015181526020018260e0015181526020018261010001518152508385815181106133b3576133b3614d4a565b60200260200101819052506001915050611363565b50600098975050505050505050565b6000808060001985870985870292508281108382030391505080600003613410576000841161340557600080fd5b50829004905061063b565b8084116134485760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401612066565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015281151560f81b60488201526000906049016040516020818303038152906040528051906020012090509392505050565b61355082826040516024016135219291906154a3565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052613d0d565b5050565b60008060008360020b1261356b578260020b613573565b8260020b6000035b9050620d89e8811115613599576040516315e4079d60e11b815260040160405180910390fd5b6000816001166000036135b057600160801b6135c2565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156135f6576ffff97272373d413259a46990580e213a0260801c5b6004821615613615576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613634576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613653576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613672576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613691576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156136b0576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156136d0576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156136f0576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613710576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613730576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613750576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613770576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613790576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156137b0576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156137d1576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156137f1576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613810576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561382d576b048a170391f7dc42444e8fa20260801c5b60008460020b131561384e57806000198161384a5761384a615075565b0490505b640100000000810615613862576001613865565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b03161115613898579293925b846001600160a01b0316866001600160a01b0316116138c3576138bc858585613d2e565b915061390a565b836001600160a01b0316866001600160a01b031610156138fc576138e8868585613d2e565b91506138f5858785613da9565b905061390a565b613907858585613da9565b90505b94509492505050565b60008061391f83613df3565b905061063b8182670de0b6b3a76400006133d7565b6000805460405163118272bf60e31b815282916001600160a01b031690638c1395f890613969908a908c908a90600401614a5f565b600060405180830381865afa158015613986573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526139ae9190810190614dbe565b60008054919250906001600160a01b0316635d4936ff6139cf8a8c8a6134b5565b6040518263ffffffff1660e01b81526004016139ed91815260200190565b602060405180830381865afa158015613a0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a2e9190614a46565b602083015190915015613cfc57604051806101a00160405280888152602001871515815260200183600001516040015181526020018360000151606001518152602001836000015160a0015163ffffffff16815260200183600001516080015163ffffffff1681526020018281526020018360200151815260200183604001518152602001613abe898c8a611964565b8152602001896001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b259190614d60565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b8691906150f6565b60ff168152602001896001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613bcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bf09190614d60565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c5191906150f6565b60ff168152600054604051632be197cf60e01b81526020909201916001600160a01b0390911690632be197cf90613c90908c908f908d90600401615111565b602060405180830381865afa158015613cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cd19190614a46565b815250848681518110613ce657613ce6614d4a565b6020026020010181905250600192505050613d03565b6000925050505b9695505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000826001600160a01b0316846001600160a01b03161115613d4e579192915b6001600160a01b038416613d976fffffffffffffffffffffffffffffffff60601b606085901b16613d7f87876154f8565b6001600160a01b0316866001600160a01b03166133d7565b613da191906150c5565b949350505050565b6000826001600160a01b0316846001600160a01b03161115613dc9579192915b613da16001600160801b038316613de086866154f8565b6001600160a01b0316600160601b6133d7565b60006060613e126001600160a01b038416670de0b6b3a7640000614d33565b901c92915050565b604080516101a0810182526000610140820181815261016083018290526101808301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b604080516102008101825260006101a082018181526101c083018290526101e08301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081019190915290565b634e487b7160e01b600052604160045260246000fd5b606081018181106001600160401b0382111715613f3d57613f3d613f08565b60405250565b60c081018181106001600160401b0382111715613f3d57613f3d613f08565b60e081018181106001600160401b0382111715613f3d57613f3d613f08565b601f8201601f191681016001600160401b0381118282101715613fa657613fa6613f08565b6040525050565b604051613fb981613f62565b90565b6001600160a01b0381168114613fd157600080fd5b50565b62ffffff81168114613fd157600080fd5b600060608284031215613ff757600080fd5b60405161400381613f1e565b809150823561401181613fbc565b8152602083013561402181613fbc565b6020820152604083013561403481613fd4565b6040919091015292915050565b8015158114613fd157600080fd5b600080600060a0848603121561406457600080fd5b61406e8585613fe5565b9250606084013561407e81613fbc565b9150608084013561408e81614041565b809150509250925092565b6000602082840312156140ab57600080fd5b813561063b81613fbc565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b602080825282518282018190526000919060409081850190868401855b828110156141bf5781516141148582516140b6565b8681015160606141278188018315159052565b878301519150608061413c8189018415159052565b90830151915060a0906141568883018463ffffffff169052565b830151915060c061416e8882018463ffffffff169052565b9083015160e0888101919091529083015161010080890191909152908301516101208089019190915290830151610140880152909101516101608601525061018090930192908501906001016140ff565b5091979650505050505050565b6000806000606084860312156141e157600080fd5b83356141ec81613fbc565b925060208401356141fc81613fbc565b9150604084013561408e81614041565b60006060828403121561421e57600080fd5b50919050565b8060020b8114613fd157600080fd5b600080600060a0848603121561424857600080fd5b614252858561420c565b9250606084013561426281614224565b9150608084013561408e81614224565b60006001600160401b0382111561428b5761428b613f08565b5060051b60200190565b6001600160801b0381168114613fd157600080fd5b600082601f8301126142bb57600080fd5b813560206142c882614272565b604080516142d68382613f81565b84815260c094850287018401948482019350888611156142f557600080fd5b8488015b8681101561436d5781818b0312156143115760008081fd5b835161431c81613f43565b813561432781614224565b81528187013561433681614295565b818801528185013585820152606080830135908201526080808301359082015260a0808301359082015285529385019381016142f9565b509098975050505050505050565b6000806000806080858703121561439157600080fd5b84356001600160401b038111156143a757600080fd5b6143b3878288016142aa565b94505060208501356143c481614041565b925060408501356143d481614224565b915060608501356143e481614224565b939692955090935050565b6000806080838503121561440257600080fd5b61440c8484613fe5565b9150606083013561441c81614224565b809150509250929050565b6144328282516140b6565b602081015180151560608401525060408101516080830152606081015160a0830152608081015161446b60c084018263ffffffff169052565b5060a081015163ffffffff811660e08401525060c08101516101008381019190915260e082015161012080850191909152908201516101408085019190915290820151610160808501919091529082015190610180906144cf8286018460ff169052565b83015160ff166101a0850152909101516101c09092019190915250565b6101e081016114568284614427565b600080600080600080610100878903121561451557600080fd5b61451f888861420c565b9550606087013594506080870135935060a087013561453d81614041565b925060c0870135915060e087013561455481613fbc565b809150509295509295509295565b805160020b82526001600160801b03602082015116602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b6000604082018483526020604081850152818551808452606086019150828701935060005b818110156145f3576145e0838651614562565b9383019360c092909201916001016145cd565b5090979650505050505050565b60006020828403121561461257600080fd5b81356001600160401b0381111561462857600080fd5b613da1848285016142aa565b6000806080838503121561464757600080fd5b614651848461420c565b915060608301356001600160401b0381111561466c57600080fd5b614678858286016142aa565b9150509250929050565b600080600080600060a0868803121561469a57600080fd5b85356146a581614041565b945060208601356146b581614224565b935060408601356146c581614224565b925060608601356146d581614224565b915060808601356146e581614224565b809150509295509295909350565b600080600060a0848603121561470857600080fd5b6142528585613fe5565b602080825282518282018190526000919060409081850190868401855b828110156141bf5781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a0909301929085019060010161472f565b6000806000806080858703121561478957600080fd5b843561479481613fbc565b935060208501356147a481613fbc565b925060408501356147b481614041565b915060608501356143e481614041565b6000610160820190506147d88284516140b6565b602083015115156060830152604083015163ffffffff8116608084015250606083015163ffffffff811660a084015250608083015160c083015260a083015160e083015260c0830151610100818185015260e085015161012085015280850151610140850152505092915050565b600080600080600060e0868803121561485e57600080fd5b614868878761420c565b945060608601359350608086013561487f81614041565b9497939650939460a0810135945060c0013592915050565b6020808252825182820181905260009190848201906040850190845b818110156148da576148c6838551614427565b928401926101e092909201916001016148b3565b50909695505050505050565b600080608083850312156148f957600080fd5b6146518484613fe5565b6060810161145682846140b6565b805161491c81613fbc565b919050565b600060c0828403121561493357600080fd5b60405161493f81613f43565b809150825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201525092915050565b805161ffff8116811461491c57600080fd5b60008060008385036101c08112156149a857600080fd5b84516149b381613fbc565b60208601519094506149c481614224565b9250610180603f1982018113156149da57600080fd5b60405191506149e882613f62565b6149f58760408801614921565b8252610100860151602083015261012086015160408301526101408601516060830152614a25610160870161497f565b608083015285015160a08201526101a09094015160c0850152509093909250565b600060208284031215614a5857600080fd5b5051919050565b6001600160a01b039384168152919092166020820152901515604082015260600190565b805163ffffffff8116811461491c57600080fd5b600060208284031215614aa957600080fd5b61145382614a83565b600082601f830112614ac357600080fd5b81516020614ad082614272565b60408051614ade8382613f81565b84815260c09485028701840194848201935088861115614afd57600080fd5b8488015b8681101561436d5781818b031215614b195760008081fd5b8351614b2481613f43565b8151614b2f81614224565b815281870151614b3e81614295565b818801528185015185820152606080830151908201526080808301519082015260a080830151908201528552938501938101614b01565b600060208284031215614b8757600080fd5b81516001600160401b03811115614b9d57600080fd5b613da184828501614ab2565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600081518084526020808501945080840160005b83811015614c1d57614c0a878351614562565b60c0969096019590820190600101614bf7565b509495945050505050565b6001600160a01b03888116825287166020820152600286900b60408201526000610180614c586060840188614ba9565b80610120840152614c6b81840187614be3565b9415156101408401525050610160015295945050505050565b60006020808385031215614c9757600080fd5b82516001600160401b03811115614cad57600080fd5b8301601f81018513614cbe57600080fd5b8051614cc981614272565b604051614cd68282613f81565b82815260059290921b8301840191848101915087831115614cf657600080fd5b928401925b82841015611363578351614d0e81613fbc565b82529284019290840190614cfb565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761145657611456614d1d565b634e487b7160e01b600052603260045260246000fd5b600060208284031215614d7257600080fd5b815161063b81613fbc565b600060208284031215614d8f57600080fd5b815161063b81613fd4565b600060018201614dac57614dac614d1d565b5060010190565b805161491c81614041565b600060208284031215614dd057600080fd5b81516001600160401b0380821115614de757600080fd5b9083019060608286031215614dfb57600080fd5b604051614e0781613f1e565b825182811115614e1657600080fd5b830160e08188031215614e2857600080fd5b614e30613fad565b614e3982614911565b8152614e4760208301614db3565b60208201526040820151604082015260608201516060820152614e6c60808301614a83565b6080820152614e7d60a08301614a83565b60a082015260c082015184811115614e9457600080fd5b614ea089828501614ab2565b60c0830152508252506020838101519082015260409283015192810192909252509392505050565b805160ff8116811461491c57600080fd5b600080600080600080600060e0888a031215614ef457600080fd5b8751614eff81613fbc565b6020890151909750614f1081614224565b9550614f1e6040890161497f565b9450614f2c6060890161497f565b9350614f3a6080890161497f565b9250614f4860a08901614ec8565b915060c0880151614f5881614041565b8091505092959891949750929550565b8035614f7381613fbc565b6001600160a01b039081168352602082013590614f8f82613fbc565b1660208301526040810135614fa381613fd4565b62ffffff81166040840152505050565b606081016114568284614f68565b600060608284031215614fd357600080fd5b6114538383613fe5565b600286900b81526101408101614ff66020830187614ba9565b60e0820194909452600292830b610100820152910b6101209091015292915050565b8082018082111561145657611456614d1d565b600281810b9083900b01627fffff8113627fffff198212171561145657611456614d1d565b600282810b9082900b03627fffff198112627fffff8213171561145657611456614d1d565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806150a2576150a2615075565b627fffff198214600019821416156150bc576150bc614d1d565b90059392505050565b6000826150d4576150d4615075565b500490565b6000602082840312156150eb57600080fd5b815161063b81614295565b60006020828403121561510857600080fd5b61145382614ec8565b60a0810161511f82866140b6565b6001600160a01b03939093166060820152901515608090910152919050565b6001600160a01b038881168252871660208201528515156040820152600285900b606082015263ffffffff84166080820152600061018061518260a0840186614ba9565b8061016084015261519581840185614be3565b9a9950505050505050505050565b600080604083850312156151b657600080fd5b82516001600160401b038111156151cc57600080fd5b6151d885828601614ab2565b925050602083015190509250929050565b61010081016151f88289614f68565b6060820196909652608081019490945291151560a084015260c08301526001600160a01b031660e090910152919050565b6000806040838503121561523c57600080fd5b8251915060208301516001600160401b0381111561525957600080fd5b61467885828601614ab2565b600060033d1115613fb95760046000803e5060005160e01c90565b600060443d101561528e5790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156152bd57505050505090565b82850191508151818111156152d55750505050505090565b843d87010160208285010111156152ef5750505050505090565b6152fe60208286010187613f81565b509095945050505050565b60006020828403121561531b57600080fd5b815161063b81614224565b6001600160801b0382811682821603908082111561534657615346614d1d565b5092915050565b60008260020b8061536057615360615075565b808360020b0791505092915050565b6001600160801b0381811683821601908082111561534657615346614d1d565b8181038181111561145657611456614d1d565b60008260020b8260020b028060020b915080821461534657615346614d1d565b6000806000806000806000806000898b036101608112156153e257600080fd5b60608112156153f057600080fd5b506040516153fd81613f1e565b8a5161540881613fbc565b815260208b015161541881613fbc565b602082015260408b015161542b81613fd4565b6040820152985061543e60608b01614db3565b975061544c60808b01614a83565b965061545a60a08b01614a83565b955060c08a0151945060e08a015193506101008a015192506101208a015191506101408a015190509295985092959850929598565b60008261549e5761549e615075565b500690565b604081526000835180604084015260005b818110156154d157602081870181015160608684010152016154b4565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b6001600160a01b0382811682821603908082111561534657615346614d1d56fea26469706673582212200448ecaa7b6b552a94ce42255260032958e48ad4c263cba33a955a6abb838d8a64736f6c63430008120033";

type DataProviderConstructorParams =
  | [linkLibraryAddresses: DataProviderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DataProvider__factory extends ContractFactory {
  constructor(...args: DataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DataProvider__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DataProviderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    borrowFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataProvider> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      borrowFacility,
      overrides || {}
    ) as Promise<DataProvider>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    borrowFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      borrowFacility,
      overrides || {}
    );
  }
  override attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  override connect(signer: Signer): DataProvider__factory {
    return super.connect(signer) as DataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataProviderInterface {
    return new utils.Interface(_abi) as DataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

export interface DataProviderLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
}
