/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LPManager,
  LPManagerInterface,
} from "../../../../src/periphery/LPManager.sol/LPManager";

const _abi = [
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee0Collected",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee1Collected",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token0Amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token1Amount",
        type: "uint256",
      },
    ],
    name: "ProvidedLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "RepaidLiquidity",
    type: "event",
  },
  {
    inputs: [],
    name: "addLiquidityToPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "token0Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Repaid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Repaid",
            type: "uint256",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
        ],
        internalType: "struct LPManager.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getTokenIdsFromKey",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "keyToTokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lastRebalanceCenterTicks",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "provideLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "token0Amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Amount",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickOuter",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickInner",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "percentageUse",
        type: "uint256",
      },
      {
        internalType: "int24",
        name: "rebalanceThreshold",
        type: "int24",
      },
    ],
    name: "rebalanceAroundCurrentPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "token0Supplied",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Supplied",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Withdrawn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Withdrawn",
            type: "uint256",
          },
        ],
        internalType: "struct LPManager.RebalanceReturn",
        name: "returnVars",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLiquidityFromPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "removeTokenById",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategist",
        type: "address",
      },
    ],
    name: "setStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "token0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Out",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50613655806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063894b3c7c11610097578063eb02c30111610066578063eb02c3011461024f578063eb0b68bc1461016a578063ee510ae01461026f578063f5db29c9146102a557600080fd5b8063894b3c7c146101ba5780638e68ad36146101cd5780639ced28c9146101f8578063c7b9d5301461021857600080fd5b80635d001c32116100d35780635d001c321461016c578063617168b21461016a5780636817031b146101945780637e5465ba146101a757600080fd5b80630e5ecb54146100fa5780634585887714610136578063485cc95514610157575b600080fd5b61010d610108366004612d12565b6102eb565b6040805193845260208401929092526001600160801b0316908201526060015b60405180910390f35b610149610144366004612d79565b61081b565b60405190815260200161012d565b61016a610165366004612d9b565b61084c565b005b61017f61017a366004612de9565b610b54565b6040805192835260208301919091520161012d565b61016a6101a2366004612e0e565b6111eb565b61016a6101b5366004612d9b565b611384565b61016a6101c8366004612d79565b61143b565b6101e06101db366004612e43565b611542565b6040516001600160801b03909116815260200161012d565b61020b610206366004612e8d565b611855565b60405161012d9190612ea9565b61016a610226366004612e0e565b6001600160a01b03166000908152600460205260409020805460ff19811660ff90911615179055565b61026261025d366004612eed565b611914565b60405161012d9190612f06565b61029261027d366004612eed565b60066020526000908152604090205460020b81565b60405160029190910b815260200161012d565b6102b86102b3366004612f9e565b6119d2565b60405161012d91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b336000908152600460205260408120548190819060ff166103415760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b60448201526064015b60405180910390fd5b87516001600160a01b0385811691161480610376576103716103628961252f565b61036b8961252f565b88612852565b610391565b6103916103828961252f565b61038b8961252f565b886128a5565b915060006127106103a48861271161300d565b6103ae919061303a565b60005460405163d6724a2d60e01b81526001600160a01b03898116600483015260248201849052929350620100009091049091169063d6724a2d90604401600060405180830381600087803b15801561040657600080fd5b505af115801561041a573d6000803e3d6000fd5b50506003805492509050600061042f8361304e565b9091555050600354600090815260056020526040812060048101549091600160301b9091046001600160801b031690036104c557600760008c600001518d602001518e6040015160405160200161048893929190613067565b60408051601f1981840301815291815281516020928301208352828201939093529101600090812060035481546001810183559183529290912001555b838160040160068282829054906101000a90046001600160801b03166104eb91906130a3565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550898160040160006101000a81548162ffffff021916908360020b62ffffff160217905550888160040160036101000a81548162ffffff021916908360020b62ffffff1602179055508a8160050160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548162ffffff021916908362ffffff160217905550905050600160009054906101000a90046001600160a01b03166001600160a01b031663b8919fa68c8c8c88306040518663ffffffff1660e01b815260040161067d95949392919085516001600160a01b03908116825260208088015182169083015260409687015162ffffff1696820196909652600294850b60608201529290930b60808301526001600160801b031660a0820152911660c082015260e00190565b60408051808303816000875af115801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf91906130c3565b82549197509550869082906000906106d89084906130e7565b92505081905550848160010160008282546106f391906130e7565b90915550506000546201000090046001600160a01b031663eab4765588856107245761071f88866130fa565b61072e565b61072e89866130fa565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260006044820152606401600060405180830381600087803b15801561077b57600080fd5b505af115801561078f573d6000803e3d6000fd5b505050508a602001516001600160a01b03168b600001516001600160a01b03167f5f8ccb6fe4a5f24d182c1049d4a785cb5599c17834ab8c4d9514bc86070d72f26003548e604001518a8a604051610805949392919093845262ffffff9290921660208401526040830152606082015260800190565b60405180910390a3505050955095509592505050565b6007602052816000526040600020818154811061083757600080fd5b90600052602060002001600091509150505481565b600054610100900460ff161580801561086c5750600054600160ff909116105b806108865750303b158015610886575060005460ff166001145b6108e95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610338565b6000805460ff19166001179055801561090c576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b03868116820292909217808455600180546001600160a01b031990811688861617909155600280543392169190911790556040805163152e3c9560e11b815290519290910490921691632a5c792a91600480830192869291908290030181865afa158015610999573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109c1919081019061310d565b905060005b8151811015610b07578181815181106109e1576109e16131bf565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03868116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6191906131e5565b50818181518110610a7457610a746131bf565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03878116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af491906131e5565b5080610aff8161304e565b9150506109c6565b50508015610b4f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b33600090815260046020526040812054819060ff16610ba35760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b6044820152606401610338565b600084815260056020526040902060048101546001600160801b03600160301b90910481169085161115610bff5760405162461bcd60e51b81526020600482015260036024820152626c697160e81b6044820152606401610338565b6004810154600090610c2f906001600160801b0387811691670de0b6b3a764000091600160301b9091041661293c565b9050848260040160068282829054906101000a90046001600160801b0316610c579190613200565b82546101009290920a6001600160801b03818102199093169183160217909155600154600485810154604051632afe5e3960e21b815260058801546001600160a01b03908116938201939093526006880154808416602483015262ffffff60a09190911c166044820152600282810b6064830152630100000090920490910b608482015292891660a484015216915063abf978e49060c40160408051808303816000875af1158015610d0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3191906130c3565b6001546004858101546040516319fa103360e01b815260058801546001600160a01b03908116938201939093526006880154808416602483015260a01c62ffffff166044820152600282810b6064830152630100000090920490910b60848201529397509195506000928392909116906319fa10339060a40160408051808303816000875af1158015610dc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dec9190613220565b9092509050610e046001600160801b038316876130e7565b9550610e196001600160801b038216866130e7565b945085846002016000828254610e2f91906130e7565b9250508190555084846003016000828254610e4a91906130e7565b9091555050600684015460058501546040805162ffffff600160a01b85041681526001600160801b03868116602083015285168183015290516001600160a01b0393841693909216917f0816a24e8386ec3fc6e374f1f9bc5f0848092a414747df77251edaabd79ce94b9181900360600190a38354600090610ed59085670de0b6b3a764000061293c565b610edf908861324f565b6001860154909150600090610efd9086670de0b6b3a764000061293c565b610f07908861324f565b600054600588015488549293506001600160a01b036201000090920482169263eab47655929190911690610f449089670de0b6b3a764000061293c565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101859052606401600060405180830381600087803b158015610f9157600080fd5b505af1158015610fa5573d6000803e3d6000fd5b5050600054600689015460018a01546001600160a01b03620100009093048316945063eab476559350911690610fe49089670de0b6b3a764000061293c565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101849052606401600060405180830381600087803b15801561103157600080fd5b505af1158015611045573d6000803e3d6000fd5b5050505061107185670de0b6b3a764000061106091906130fa565b875490670de0b6b3a764000061293c565b865561109c61108886670de0b6b3a76400006130fa565b600188015490670de0b6b3a764000061293c565b600187015560048601546064600160301b9091046001600160801b0316116111725760058601546006870154604051611115926110f9926001600160a01b039182169291811691600160a01b90910462ffffff1690602001613067565b604051602081830303815290604052805190602001208b61143b565b60008a81526005602081905260408220828155600181018390556002810183905560038101929092556004820180546001600160b01b0319169055810180546001600160a01b031916905560060180546001600160b81b03191690555b60068601546005870154604080518d815262ffffff600160a01b85041660208201526001600160801b038d168183015290516001600160a01b0393841693909216917f7d3b6c23c9b08de61da48640e0ddb486d73eb67dcf2fb9eecd8ab474ee61c9829181900360600190a35050505050509250929050565b6002546001600160a01b0316331461122e5760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610338565b80600060026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060008060029054906101000a90046001600160a01b03166001600160a01b0316632a5c792a6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156112a9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112d1919081019061310d565b905060005b8151811015610b4f578181815181106112f1576112f16131bf565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03858116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af115801561134d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137191906131e5565b508061137c8161304e565b9150506112d6565b6002546001600160a01b031633146113c75760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610338565b60405163095ea7b360e01b81526001600160a01b038281166004830152600019602483015283169063095ea7b3906044016020604051808303816000875af1158015611417573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4f91906131e5565b600082815260076020526040812054905b8181101561153c576000848152600760205260409020805484919083908110611477576114776131bf565b90600052602060002001540361152a5760008481526007602052604090206114a06001846130fa565b815481106114b0576114b06131bf565b90600052602060002001546007600086815260200190815260200160002082815481106114df576114df6131bf565b90600052602060002001819055506007600085815260200190815260200160002080548061150f5761150f61326f565b6001900381819060005260206000200160009055905561153c565b806115348161304e565b91505061144c565b50505050565b600154604051632411122160e11b815260009182916001600160a01b0390911690634822244290611577908890600401613285565b602060405180830381865afa158015611594573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b891906132d2565b6001546040516315083fbb60e31b8152600481018390529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015611607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162b91906132d2565b600154604051630ca32ed160e31b8152600481018590529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa15801561167a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169e91906132eb565b6001600160801b03945090506000808080895b8960020b8160020b12156118465760015460405163da69b0b360e01b8152600481018a9052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa158015611712573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117369190613308565b6001546040516319fda27760e01b8152600481018b9052600284900b60248201529196508895506001600160a01b0316906319fda27790604401602060405180830381865afa15801561178d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b19190613308565b92506117fb604051806040016040528060098152602001683bba333bba333bba3360b91b815250866001600160801b0316866001600160801b0316866001600160801b0316612a1a565b826118068587613200565b6118109190613200565b9150886001600160801b0316826001600160801b0316106118315788611833565b815b985061183f8682613325565b90506116b1565b50505050505050509392505050565b6060600760006118686020850185612e0e565b6118786040860160208701612e0e565b611888606087016040880161334a565b60405160200161189a93929190613067565b60405160208183030381529060405280519060200120815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561190857602002820191906000526020600020905b8154815260200190600101908083116118f4575b50505050509050919050565b61191c612b7d565b5060009081526005602081815260409283902083516101008101855281548152600182015481840152600280830154828701526003830154606080840191909152600484015480830b60808501526301000000810490920b60a0840152600160301b9091046001600160801b031660c083015285519081018652938201546001600160a01b03908116855260069092015491821692840192909252600160a01b900462ffffff169282019290925260e082015290565b6119fd6040518060800160405280600081526020016000815260200160008152602001600081525090565b604080516101a081018252600080825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201819052610140820181905261016082018190526101808201526001549151639525092360e01b815290916001600160a01b031690639525092390611a92908a90600401613285565b6101c060405180830381865afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad49190613377565b5060020b6101208301526001600160a01b0316610140820181905260408051633850c7bd60e01b81529051633850c7bd9160048082019260e0929091908290030181865afa158015611b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b4e919061346e565b5050505060029190910b606084015250600690506000611b7160208a018a612e0e565b611b8160408b0160208c01612e0e565b611b9160608c0160408d0161334a565b604051602001611ba393929190613067565b60408051601f19818403018152918152815160209283012083529082019290925281016000205460020b9082018190526060820151611bed91611be591612a63565b60020b612a94565b8260020b611c0382604001518360600151612a63565b60020b1215611c125750612526565b6101208101516060820151611c28908290613501565b611c32919061353b565b60020b60608201526000600781611c4c60208b018b612e0e565b611c5c60408c0160208d01612e0e565b611c6c60608d0160408e0161334a565b604051602001611c7e93929190613067565b604051602081830303815290604052805190602001208152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611cec57602002820191906000526020600020905b815481526020019060010190808311611cd8575b50505050509050611cfb612b7d565b60005b8251811015611f115760038054600090815260056020818152604092839020835161010081018552815481526001820154818401526002808301548287015295820154606080830191909152600483015480880b60808401526301000000810490970b60a08301526001600160801b03600160301b909704871660c0830190815286519182018752948301546001600160a01b0390811682526006909301549283169381019390935262ffffff600160a01b909204919091169382019390935260e083015251909350606491161115611eff57611de48a83608001518460a00151611542565b6001600160801b031661010085015282516000908190611ecc90869085908110611e1057611e106131bf565b60200260200101518761010001516001600160801b031660056000898881518110611e3d57611e3d6131bf565b6020026020010151815260200190815260200160002060040160069054906101000a90046001600160801b03166001600160801b03161015611ec15760056000888781518110611e8f57611e8f6131bf565b6020026020010151815260200190815260200160002060040160069054906101000a90046001600160801b0316610b54565b876101000151610b54565b915091508187604001818151611ee291906130e7565b905250606087018051829190611ef99083906130e7565b90525050505b80611f098161304e565b915050611cfe565b5086836101200151611f23919061353b565b8360600151611f329190613325565b60020b60a0840152610120830151611f4b90899061353b565b8360600151611f5a9190613325565b600290810b60c085015260a0840151900b60e08401526000546201000090046001600160a01b031663eedc966a611f9460208c018c612e0e565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611fd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ffc91906132d2565b6101608401526000546201000090046001600160a01b031663c15973eb61202660208c018c612e0e565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561206a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061208e91906132d2565b61018084018190526101608401516120af9088670de0b6b3a764000061293c565b10156120bc5760006120e5565b6101808301516101608401516120db9088670de0b6b3a764000061293c565b6120e591906130fa565b835261012083015160a084015160c0850151612101919061355b565b61210b9190613501565b835161211a9160020b9061303a565b60208401528251156121d4575b8260c0015160020b8360e0015160020b12156121d45760008061217f612152368d90038d018d613580565b60e08701516101208801516121679082613325565b88602001518f60000160208101906101089190612e0e565b5091509150818660000181815161219691906130e7565b9052506020860180518291906121ad9083906130e7565b905250505061012083015160e0840180516121c9908390613325565b60020b905250612127565b878361012001516121e5919061353b565b83606001516121f4919061355b565b60020b60a084015261012083015161220d90889061353b565b836060015161221c919061355b565b600290810b60c085015260a0840151900b60e08401526000546201000090046001600160a01b031663eedc966a61225960408c0160208d01612e0e565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561229d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122c191906132d2565b6101608401526000546201000090046001600160a01b031663c15973eb6122ee60408c0160208d01612e0e565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015612332573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061235691906132d2565b61018084018190526101608401516123779088670de0b6b3a764000061293c565b10156123845760006123ad565b6101808301516101608401516123a39088670de0b6b3a764000061293c565b6123ad91906130fa565b835261012083015160a084015160c08501516123c9919061355b565b6123d39190613501565b83516123e29160020b9061303a565b602084015282511561249c575b8260c0015160020b8360e0015160020b121561249c5760008061244761241a368d90038d018d613580565b60e087015161012088015161242f9082613325565b88602001518f60200160208101906101089190612e0e565b5091509150818660000181815161245e91906130e7565b9052506020860180518291906124759083906130e7565b905250505061012083015160e084018051612491908390613325565b60020b9052506123ef565b6060830151600660006124b260208d018d612e0e565b6124c260408e0160208f01612e0e565b8d60400160208101906124d5919061334a565b6040516020016124e793929190613067565b60408051808303601f19018152918152815160209283012083529082019290925201600020805462ffffff191662ffffff929092169190911790555050505b95945050505050565b60008060008360020b12612546578260020b61254e565b8260020b6000035b9050620d89e8811115612574576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361258b57600160801b61259d565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156125d1576ffff97272373d413259a46990580e213a0260801c5b60048216156125f0576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561260f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561262e576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561264d576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561266c576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561268b576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156126ab576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156126cb576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156126eb576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561270b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561272b576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561274b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561276b576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561278b576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156127ac576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156127cc576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156127eb576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612808576b048a170391f7dc42444e8fa20260801c5b60008460020b131561282957806000198161282557612825613024565b0490505b64010000000081061561283d576001612840565b60005b60ff16602082901c0192505050919050565b6000826001600160a01b0316846001600160a01b03161115612872579192915b61289b61289683600160601b612888888861359c565b6001600160a01b0316612adc565b612b16565b90505b9392505050565b6000826001600160a01b0316846001600160a01b031611156128c5579192915b60006128e8856001600160a01b0316856001600160a01b0316600160601b612adc565b9050801561290a576129026128968483612888898961359c565b91505061289e565b612902612896612928856001600160a01b0389166128888a8a61359c565b866001600160a01b0316600160601b612adc565b6000808060001985870985870292508281108382030391505080600003612975576000841161296a57600080fd5b50829004905061289e565b8084116129ad5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401610338565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b61153c84848484604051602401612a3494939291906135bc565b60408051601f198184030181529190526020810180516001600160e01b03166304772b3360e11b179052612b5c565b60008160020b8360020b13612a8157612a7c838361355b565b612a8b565b612a8b828461355b565b90505b92915050565b612ad981604051602401612aaa91815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316634e0c1d1d60e01b179052612b5c565b50565b6000808060001985870985870292508281108382030391505080600003612b0a576000841161296a57600080fd5b8084116129ad57600080fd5b806001600160801b0381168114612b575760405162461bcd60e51b81526020600482015260056024820152640858d85cdd60da1b6044820152606401610338565b919050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60408051610100810182526000808252602080830182905282840182905260608084018390526080840183905260a0840183905260c0840183905284519081018552828152908101829052928301529060e082015290565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715612c0e57612c0e612bd5565b60405290565b60405160c0810167ffffffffffffffff81118282101715612c0e57612c0e612bd5565b604051601f8201601f1916810167ffffffffffffffff81118282101715612c6057612c60612bd5565b604052919050565b6001600160a01b0381168114612ad957600080fd5b803562ffffff81168114612b5757600080fd5b600060608284031215612ca257600080fd5b6040516060810181811067ffffffffffffffff82111715612cc557612cc5612bd5565b6040529050808235612cd681612c68565b81526020830135612ce681612c68565b6020820152612cf760408401612c7d565b60408201525092915050565b8060020b8114612ad957600080fd5b600080600080600060e08688031215612d2a57600080fd5b612d348787612c90565b94506060860135612d4481612d03565b93506080860135612d5481612d03565b925060a0860135915060c0860135612d6b81612c68565b809150509295509295909350565b60008060408385031215612d8c57600080fd5b50508035926020909101359150565b60008060408385031215612dae57600080fd5b8235612db981612c68565b91506020830135612dc981612c68565b809150509250929050565b6001600160801b0381168114612ad957600080fd5b60008060408385031215612dfc57600080fd5b823591506020830135612dc981612dd4565b600060208284031215612e2057600080fd5b813561289e81612c68565b600060608284031215612e3d57600080fd5b50919050565b600080600060a08486031215612e5857600080fd5b612e628585612e2b565b92506060840135612e7281612d03565b91506080840135612e8281612d03565b809150509250925092565b600060608284031215612e9f57600080fd5b612a8b8383612e2b565b6020808252825182820181905260009190848201906040850190845b81811015612ee157835183529284019291840191600101612ec5565b50909695505050505050565b600060208284031215612eff57600080fd5b5035919050565b60006101408201905082518252602083015160208301526040830151604083015260608301516060830152608083015160020b608083015260a083015160020b60a08301526001600160801b0360c08401511660c083015260e0830151612f9760e084018280516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b5092915050565b600080600080600060e08688031215612fb657600080fd5b612fc08787612e2b565b94506060860135612fd081612d03565b93506080860135612fe081612d03565b925060a0860135915060c0860135612d6b81612d03565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417612a8e57612a8e612ff7565b634e487b7160e01b600052601260045260246000fd5b60008261304957613049613024565b500490565b60006001820161306057613060612ff7565b5060010190565b606093841b6bffffffffffffffffffffffff1990811682529290931b909116601483015260e81b6001600160e81b0319166028820152602b0190565b6001600160801b03818116838216019080821115612f9757612f97612ff7565b600080604083850312156130d657600080fd5b505080516020909101519092909150565b80820180821115612a8e57612a8e612ff7565b81810381811115612a8e57612a8e612ff7565b6000602080838503121561312057600080fd5b825167ffffffffffffffff8082111561313857600080fd5b818501915085601f83011261314c57600080fd5b81518181111561315e5761315e612bd5565b8060051b915061316f848301612c37565b818152918301840191848101908884111561318957600080fd5b938501935b838510156131b357845192506131a383612c68565b828252938501939085019061318e565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b80518015158114612b5757600080fd5b6000602082840312156131f757600080fd5b612a8b826131d5565b6001600160801b03828116828216039080821115612f9757612f97612ff7565b6000806040838503121561323357600080fd5b825161323e81612dd4565b6020840151909250612dc981612dd4565b8181036000831280158383131683831282161715612f9757612f97612ff7565b634e487b7160e01b600052603160045260246000fd5b60608101823561329481612c68565b6001600160a01b0390811683526020840135906132b082612c68565b16602083015262ffffff6132c660408501612c7d565b16604083015292915050565b6000602082840312156132e457600080fd5b5051919050565b6000602082840312156132fd57600080fd5b815161289e81612d03565b60006020828403121561331a57600080fd5b815161289e81612dd4565b600281810b9083900b01627fffff8113627fffff1982121715612a8e57612a8e612ff7565b60006020828403121561335c57600080fd5b612a8b82612c7d565b805161ffff81168114612b5757600080fd5b60008060008385036101c081121561338e57600080fd5b845161339981612c68565b60208601519094506133aa81612d03565b9250603f1901610180808212156133c057600080fd5b6133c8612beb565b60c08312156133d657600080fd5b6133de612c14565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a084015282815261010087015160208201526101208701516040820152610140870151606082015261344a6101608801613365565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b600080600080600080600060e0888a03121561348957600080fd5b875161349481612c68565b60208901519097506134a581612d03565b95506134b360408901613365565b94506134c160608901613365565b93506134cf60808901613365565b925060a088015160ff811681146134e557600080fd5b91506134f360c089016131d5565b905092959891949750929550565b60008160020b8360020b8061351857613518613024565b627fffff1982146000198214161561353257613532612ff7565b90059392505050565b60008260020b8260020b028060020b9150808214612f9757612f97612ff7565b600282810b9082900b03627fffff198112627fffff82131715612a8e57612a8e612ff7565b60006060828403121561359257600080fd5b612a8b8383612c90565b6001600160a01b03828116828216039080821115612f9757612f97612ff7565b608081526000855180608084015260005b818110156135ea57602081890181015160a08684010152016135cd565b50600060a0828501015260a0601f19601f8301168401019150508460208301528360408301528260608301529594505050505056fea2646970667358221220943e47696cb1499a1ea5edca9bbe075286b67615e84ee497c7395cf546e09a3564736f6c63430008120033";

type LPManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPManager__factory extends ContractFactory {
  constructor(...args: LPManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LPManager> {
    return super.deploy(overrides || {}) as Promise<LPManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LPManager {
    return super.attach(address) as LPManager;
  }
  override connect(signer: Signer): LPManager__factory {
    return super.connect(signer) as LPManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPManagerInterface {
    return new utils.Interface(_abi) as LPManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPManager {
    return new Contract(address, _abi, signerOrProvider) as LPManager;
  }
}
