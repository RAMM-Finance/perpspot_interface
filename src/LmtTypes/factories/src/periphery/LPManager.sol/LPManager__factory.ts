/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LPManager,
  LPManagerInterface,
} from "../../../../src/periphery/LPManager.sol/LPManager";

const _abi = [
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee0Collected",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee1Collected",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token0Amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token1Amount",
        type: "uint256",
      },
    ],
    name: "ProvidedLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "RepaidLiquidity",
    type: "event",
  },
  {
    inputs: [],
    name: "addLiquidityToPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "token0Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Repaid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Repaid",
            type: "uint256",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
        ],
        internalType: "struct LPManager.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getTokenIdsFromKey",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "keyToTokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lastRebalanceCenterTicks",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "provideLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "token0Amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Amount",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickOuter",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickInner",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "percentageUse",
        type: "uint256",
      },
      {
        internalType: "int24",
        name: "rebalanceThreshold",
        type: "int24",
      },
    ],
    name: "rebalanceAroundCurrentPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "token0Supplied",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Supplied",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Withdrawn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Withdrawn",
            type: "uint256",
          },
        ],
        internalType: "struct LPManager.RebalanceReturn",
        name: "returnVars",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLiquidityFromPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "removeTokenById",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategist",
        type: "address",
      },
    ],
    name: "setStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "token0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Out",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506135c0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063894b3c7c11610097578063eb02c30111610066578063eb02c3011461024f578063eb0b68bc1461016a578063ee510ae01461026f578063f5db29c9146102a557600080fd5b8063894b3c7c146101ba5780638e68ad36146101cd5780639ced28c9146101f8578063c7b9d5301461021857600080fd5b80635d001c32116100d35780635d001c321461016c578063617168b21461016a5780636817031b146101945780637e5465ba146101a757600080fd5b80630e5ecb54146100fa5780634585887714610136578063485cc95514610157575b600080fd5b61010d610108366004612c84565b6102eb565b6040805193845260208401929092526001600160801b0316908201526060015b60405180910390f35b610149610144366004612ceb565b61081b565b60405190815260200161012d565b61016a610165366004612d0d565b61084c565b005b61017f61017a366004612d5b565b610b54565b6040805192835260208301919091520161012d565b61016a6101a2366004612d80565b6111eb565b61016a6101b5366004612d0d565b611384565b61016a6101c8366004612ceb565b61143b565b6101e06101db366004612db5565b611542565b6040516001600160801b03909116815260200161012d565b61020b610206366004612dff565b6117c9565b60405161012d9190612e1b565b61016a610226366004612d80565b6001600160a01b03166000908152600460205260409020805460ff19811660ff90911615179055565b61026261025d366004612e5f565b611888565b60405161012d9190612e78565b61029261027d366004612e5f565b60066020526000908152604090205460020b81565b60405160029190910b815260200161012d565b6102b86102b3366004612f10565b611946565b60405161012d91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b336000908152600460205260408120548190819060ff166103415760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b60448201526064015b60405180910390fd5b87516001600160a01b038581169116148061037657610371610362896124a3565b61036b896124a3565b886127c6565b610391565b610391610382896124a3565b61038b896124a3565b88612819565b915060006127106103a488612711612f7f565b6103ae9190612fac565b60005460405163d6724a2d60e01b81526001600160a01b03898116600483015260248201849052929350620100009091049091169063d6724a2d90604401600060405180830381600087803b15801561040657600080fd5b505af115801561041a573d6000803e3d6000fd5b50506003805492509050600061042f83612fc0565b9091555050600354600090815260056020526040812060048101549091600160301b9091046001600160801b031690036104c557600760008c600001518d602001518e6040015160405160200161048893929190612fd9565b60408051601f1981840301815291815281516020928301208352828201939093529101600090812060035481546001810183559183529290912001555b838160040160068282829054906101000a90046001600160801b03166104eb9190613015565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550898160040160006101000a81548162ffffff021916908360020b62ffffff160217905550888160040160036101000a81548162ffffff021916908360020b62ffffff1602179055508a8160050160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548162ffffff021916908362ffffff160217905550905050600160009054906101000a90046001600160a01b03166001600160a01b031663b8919fa68c8c8c88306040518663ffffffff1660e01b815260040161067d95949392919085516001600160a01b03908116825260208088015182169083015260409687015162ffffff1696820196909652600294850b60608201529290930b60808301526001600160801b031660a0820152911660c082015260e00190565b60408051808303816000875af115801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf9190613035565b82549197509550869082906000906106d8908490613059565b92505081905550848160010160008282546106f39190613059565b90915550506000546201000090046001600160a01b031663eab4765588856107245761071f888661306c565b61072e565b61072e898661306c565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260006044820152606401600060405180830381600087803b15801561077b57600080fd5b505af115801561078f573d6000803e3d6000fd5b505050508a602001516001600160a01b03168b600001516001600160a01b03167f5f8ccb6fe4a5f24d182c1049d4a785cb5599c17834ab8c4d9514bc86070d72f26003548e604001518a8a604051610805949392919093845262ffffff9290921660208401526040830152606082015260800190565b60405180910390a3505050955095509592505050565b6007602052816000526040600020818154811061083757600080fd5b90600052602060002001600091509150505481565b600054610100900460ff161580801561086c5750600054600160ff909116105b806108865750303b158015610886575060005460ff166001145b6108e95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610338565b6000805460ff19166001179055801561090c576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b03868116820292909217808455600180546001600160a01b031990811688861617909155600280543392169190911790556040805163152e3c9560e11b815290519290910490921691632a5c792a91600480830192869291908290030181865afa158015610999573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109c1919081019061307f565b905060005b8151811015610b07578181815181106109e1576109e1613131565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03868116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190613157565b50818181518110610a7457610a74613131565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03878116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af49190613157565b5080610aff81612fc0565b9150506109c6565b50508015610b4f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b33600090815260046020526040812054819060ff16610ba35760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b6044820152606401610338565b600084815260056020526040902060048101546001600160801b03600160301b90910481169085161115610bff5760405162461bcd60e51b81526020600482015260036024820152626c697160e81b6044820152606401610338565b6004810154600090610c2f906001600160801b0387811691670de0b6b3a764000091600160301b909104166128b0565b9050848260040160068282829054906101000a90046001600160801b0316610c579190613172565b82546101009290920a6001600160801b03818102199093169183160217909155600154600485810154604051632afe5e3960e21b815260058801546001600160a01b03908116938201939093526006880154808416602483015262ffffff60a09190911c166044820152600282810b6064830152630100000090920490910b608482015292891660a484015216915063abf978e49060c40160408051808303816000875af1158015610d0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d319190613035565b6001546004858101546040516319fa103360e01b815260058801546001600160a01b03908116938201939093526006880154808416602483015260a01c62ffffff166044820152600282810b6064830152630100000090920490910b60848201529397509195506000928392909116906319fa10339060a40160408051808303816000875af1158015610dc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dec9190613192565b9092509050610e046001600160801b03831687613059565b9550610e196001600160801b03821686613059565b945085846002016000828254610e2f9190613059565b9250508190555084846003016000828254610e4a9190613059565b9091555050600684015460058501546040805162ffffff600160a01b85041681526001600160801b03868116602083015285168183015290516001600160a01b0393841693909216917f0816a24e8386ec3fc6e374f1f9bc5f0848092a414747df77251edaabd79ce94b9181900360600190a38354600090610ed59085670de0b6b3a76400006128b0565b610edf90886131c1565b6001860154909150600090610efd9086670de0b6b3a76400006128b0565b610f0790886131c1565b600054600588015488549293506001600160a01b036201000090920482169263eab47655929190911690610f449089670de0b6b3a76400006128b0565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101859052606401600060405180830381600087803b158015610f9157600080fd5b505af1158015610fa5573d6000803e3d6000fd5b5050600054600689015460018a01546001600160a01b03620100009093048316945063eab476559350911690610fe49089670de0b6b3a76400006128b0565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101849052606401600060405180830381600087803b15801561103157600080fd5b505af1158015611045573d6000803e3d6000fd5b5050505061107185670de0b6b3a7640000611060919061306c565b875490670de0b6b3a76400006128b0565b865561109c61108886670de0b6b3a764000061306c565b600188015490670de0b6b3a76400006128b0565b600187015560048601546064600160301b9091046001600160801b0316116111725760058601546006870154604051611115926110f9926001600160a01b039182169291811691600160a01b90910462ffffff1690602001612fd9565b604051602081830303815290604052805190602001208b61143b565b60008a81526005602081905260408220828155600181018390556002810183905560038101929092556004820180546001600160b01b0319169055810180546001600160a01b031916905560060180546001600160b81b03191690555b60068601546005870154604080518d815262ffffff600160a01b85041660208201526001600160801b038d168183015290516001600160a01b0393841693909216917f7d3b6c23c9b08de61da48640e0ddb486d73eb67dcf2fb9eecd8ab474ee61c9829181900360600190a35050505050509250929050565b6002546001600160a01b0316331461122e5760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610338565b80600060026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060008060029054906101000a90046001600160a01b03166001600160a01b0316632a5c792a6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156112a9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112d1919081019061307f565b905060005b8151811015610b4f578181815181106112f1576112f1613131565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03858116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af115801561134d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113719190613157565b508061137c81612fc0565b9150506112d6565b6002546001600160a01b031633146113c75760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610338565b60405163095ea7b360e01b81526001600160a01b038281166004830152600019602483015283169063095ea7b3906044016020604051808303816000875af1158015611417573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4f9190613157565b600082815260076020526040812054905b8181101561153c57600084815260076020526040902080548491908390811061147757611477613131565b90600052602060002001540361152a5760008481526007602052604090206114a060018461306c565b815481106114b0576114b0613131565b90600052602060002001546007600086815260200190815260200160002082815481106114df576114df613131565b90600052602060002001819055506007600085815260200190815260200160002080548061150f5761150f6131e1565b6001900381819060005260206000200160009055905561153c565b8061153481612fc0565b91505061144c565b50505050565b600154604051632411122160e11b815260009182916001600160a01b03909116906348222442906115779088906004016131f7565b602060405180830381865afa158015611594573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b89190613244565b600154604051630ca32ed160e31b8152600481018390529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa158015611607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162b919061325d565b6001600160801b03935090506000808080885b8860020b8160020b12156117bb5760015460405163da69b0b360e01b815260048101899052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa15801561169f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c3919061327a565b6001546040516319fda27760e01b8152600481018a9052600284900b60248201529196506001600160a01b0316906319fda27790604401602060405180830381865afa158015611717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173b919061327a565b925061177b604051806040016040528060098152602001683bba333bba333bba3360b91b815250866001600160801b0316856001600160801b031661298e565b6117858386613172565b9150876001600160801b0316826001600160801b0316106117a657876117a8565b815b97506117b48682613297565b905061163e565b505050505050509392505050565b6060600760006117dc6020850185612d80565b6117ec6040860160208701612d80565b6117fc60608701604088016132bc565b60405160200161180e93929190612fd9565b60405160208183030381529060405280519060200120815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561187c57602002820191906000526020600020905b815481526020019060010190808311611868575b50505050509050919050565b611890612aef565b5060009081526005602081815260409283902083516101008101855281548152600182015481840152600280830154828701526003830154606080840191909152600484015480830b60808501526301000000810490920b60a0840152600160301b9091046001600160801b031660c083015285519081018652938201546001600160a01b03908116855260069092015491821692840192909252600160a01b900462ffffff169282019290925260e082015290565b6119716040518060800160405280600081526020016000815260200160008152602001600081525090565b604080516101a081018252600080825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201819052610140820181905261016082018190526101808201526001549151639525092360e01b815290916001600160a01b031690639525092390611a06908a906004016131f7565b6101c060405180830381865afa158015611a24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4891906132e9565b5060020b6101208301526001600160a01b0316610140820181905260408051633850c7bd60e01b81529051633850c7bd9160048082019260e0929091908290030181865afa158015611a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac291906133e0565b5050505060029190910b606084015250600690506000611ae560208a018a612d80565b611af560408b0160208c01612d80565b611b0560608c0160408d016132bc565b604051602001611b1793929190612fd9565b60408051601f19818403018152918152815160209283012083529082019290925281016000205460020b9082018190526060820151611b6191611b59916129d5565b60020b612a06565b8260020b611b77826040015183606001516129d5565b60020b1215611b86575061249a565b6101208101516060820151611b9c908290613473565b611ba691906134ad565b60020b60608201526000600781611bc060208b018b612d80565b611bd060408c0160208d01612d80565b611be060608d0160408e016132bc565b604051602001611bf293929190612fd9565b604051602081830303815290604052805190602001208152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611c6057602002820191906000526020600020905b815481526020019060010190808311611c4c575b50505050509050611c6f612aef565b60005b8251811015611e855760038054600090815260056020818152604092839020835161010081018552815481526001820154818401526002808301548287015295820154606080830191909152600483015480880b60808401526301000000810490970b60a08301526001600160801b03600160301b909704871660c0830190815286519182018752948301546001600160a01b0390811682526006909301549283169381019390935262ffffff600160a01b909204919091169382019390935260e083015251909350606491161115611e7357611d588a83608001518460a00151611542565b6001600160801b031661010085015282516000908190611e4090869085908110611d8457611d84613131565b60200260200101518761010001516001600160801b031660056000898881518110611db157611db1613131565b6020026020010151815260200190815260200160002060040160069054906101000a90046001600160801b03166001600160801b03161015611e355760056000888781518110611e0357611e03613131565b6020026020010151815260200190815260200160002060040160069054906101000a90046001600160801b0316610b54565b876101000151610b54565b915091508187604001818151611e569190613059565b905250606087018051829190611e6d908390613059565b90525050505b80611e7d81612fc0565b915050611c72565b5086836101200151611e9791906134ad565b8360600151611ea69190613297565b60020b60a0840152610120830151611ebf9089906134ad565b8360600151611ece9190613297565b600290810b60c085015260a0840151900b60e08401526000546201000090046001600160a01b031663eedc966a611f0860208c018c612d80565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f709190613244565b6101608401526000546201000090046001600160a01b031663c15973eb611f9a60208c018c612d80565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611fde573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120029190613244565b61018084018190526101608401516120239088670de0b6b3a76400006128b0565b1015612030576000612059565b61018083015161016084015161204f9088670de0b6b3a76400006128b0565b612059919061306c565b835261012083015160a084015160c085015161207591906134cd565b61207f9190613473565b835161208e9160020b90612fac565b6020840152825115612148575b8260c0015160020b8360e0015160020b1215612148576000806120f36120c6368d90038d018d6134f2565b60e08701516101208801516120db9082613297565b88602001518f60000160208101906101089190612d80565b5091509150818660000181815161210a9190613059565b905250602086018051829190612121908390613059565b905250505061012083015160e08401805161213d908390613297565b60020b90525061209b565b8783610120015161215991906134ad565b836060015161216891906134cd565b60020b60a08401526101208301516121819088906134ad565b836060015161219091906134cd565b600290810b60c085015260a0840151900b60e08401526000546201000090046001600160a01b031663eedc966a6121cd60408c0160208d01612d80565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015612211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122359190613244565b6101608401526000546201000090046001600160a01b031663c15973eb61226260408c0160208d01612d80565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156122a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ca9190613244565b61018084018190526101608401516122eb9088670de0b6b3a76400006128b0565b10156122f8576000612321565b6101808301516101608401516123179088670de0b6b3a76400006128b0565b612321919061306c565b835261012083015160a084015160c085015161233d91906134cd565b6123479190613473565b83516123569160020b90612fac565b6020840152825115612410575b8260c0015160020b8360e0015160020b1215612410576000806123bb61238e368d90038d018d6134f2565b60e08701516101208801516123a39082613297565b88602001518f60200160208101906101089190612d80565b509150915081866000018181516123d29190613059565b9052506020860180518291906123e9908390613059565b905250505061012083015160e084018051612405908390613297565b60020b905250612363565b60608301516006600061242660208d018d612d80565b61243660408e0160208f01612d80565b8d604001602081019061244991906132bc565b60405160200161245b93929190612fd9565b60408051808303601f19018152918152815160209283012083529082019290925201600020805462ffffff191662ffffff929092169190911790555050505b95945050505050565b60008060008360020b126124ba578260020b6124c2565b8260020b6000035b9050620d89e88111156124e8576040516315e4079d60e11b815260040160405180910390fd5b6000816001166000036124ff57600160801b612511565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612545576ffff97272373d413259a46990580e213a0260801c5b6004821615612564576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612583576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156125a2576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156125c1576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156125e0576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156125ff576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561261f576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561263f576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561265f576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561267f576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561269f576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156126bf576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156126df576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156126ff576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615612720576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615612740576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561275f576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561277c576b048a170391f7dc42444e8fa20260801c5b60008460020b131561279d57806000198161279957612799612f96565b0490505b6401000000008106156127b15760016127b4565b60005b60ff16602082901c0192505050919050565b6000826001600160a01b0316846001600160a01b031611156127e6579192915b61280f61280a83600160601b6127fc888861350e565b6001600160a01b0316612a4e565b612a88565b90505b9392505050565b6000826001600160a01b0316846001600160a01b03161115612839579192915b600061285c856001600160a01b0316856001600160a01b0316600160601b612a4e565b9050801561287e5761287661280a84836127fc898961350e565b915050612812565b61287661280a61289c856001600160a01b0389166127fc8a8a61350e565b866001600160a01b0316600160601b612a4e565b60008080600019858709858702925082811083820303915050806000036128e957600084116128de57600080fd5b508290049050612812565b8084116129215760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401610338565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b610b4f8383836040516024016129a69392919061352e565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052612ace565b60008160020b8360020b136129f3576129ee83836134cd565b6129fd565b6129fd82846134cd565b90505b92915050565b612a4b81604051602401612a1c91815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316634e0c1d1d60e01b179052612ace565b50565b6000808060001985870985870292508281108382030391505080600003612a7c57600084116128de57600080fd5b80841161292157600080fd5b806001600160801b0381168114612ac95760405162461bcd60e51b81526020600482015260056024820152640858d85cdd60da1b6044820152606401610338565b919050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60408051610100810182526000808252602080830182905282840182905260608084018390526080840183905260a0840183905260c0840183905284519081018552828152908101829052928301529060e082015290565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715612b8057612b80612b47565b60405290565b60405160c0810167ffffffffffffffff81118282101715612b8057612b80612b47565b604051601f8201601f1916810167ffffffffffffffff81118282101715612bd257612bd2612b47565b604052919050565b6001600160a01b0381168114612a4b57600080fd5b803562ffffff81168114612ac957600080fd5b600060608284031215612c1457600080fd5b6040516060810181811067ffffffffffffffff82111715612c3757612c37612b47565b6040529050808235612c4881612bda565b81526020830135612c5881612bda565b6020820152612c6960408401612bef565b60408201525092915050565b8060020b8114612a4b57600080fd5b600080600080600060e08688031215612c9c57600080fd5b612ca68787612c02565b94506060860135612cb681612c75565b93506080860135612cc681612c75565b925060a0860135915060c0860135612cdd81612bda565b809150509295509295909350565b60008060408385031215612cfe57600080fd5b50508035926020909101359150565b60008060408385031215612d2057600080fd5b8235612d2b81612bda565b91506020830135612d3b81612bda565b809150509250929050565b6001600160801b0381168114612a4b57600080fd5b60008060408385031215612d6e57600080fd5b823591506020830135612d3b81612d46565b600060208284031215612d9257600080fd5b813561281281612bda565b600060608284031215612daf57600080fd5b50919050565b600080600060a08486031215612dca57600080fd5b612dd48585612d9d565b92506060840135612de481612c75565b91506080840135612df481612c75565b809150509250925092565b600060608284031215612e1157600080fd5b6129fd8383612d9d565b6020808252825182820181905260009190848201906040850190845b81811015612e5357835183529284019291840191600101612e37565b50909695505050505050565b600060208284031215612e7157600080fd5b5035919050565b60006101408201905082518252602083015160208301526040830151604083015260608301516060830152608083015160020b608083015260a083015160020b60a08301526001600160801b0360c08401511660c083015260e0830151612f0960e084018280516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b5092915050565b600080600080600060e08688031215612f2857600080fd5b612f328787612d9d565b94506060860135612f4281612c75565b93506080860135612f5281612c75565b925060a0860135915060c0860135612cdd81612c75565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417612a0057612a00612f69565b634e487b7160e01b600052601260045260246000fd5b600082612fbb57612fbb612f96565b500490565b600060018201612fd257612fd2612f69565b5060010190565b606093841b6bffffffffffffffffffffffff1990811682529290931b909116601483015260e81b6001600160e81b0319166028820152602b0190565b6001600160801b03818116838216019080821115612f0957612f09612f69565b6000806040838503121561304857600080fd5b505080516020909101519092909150565b80820180821115612a0057612a00612f69565b81810381811115612a0057612a00612f69565b6000602080838503121561309257600080fd5b825167ffffffffffffffff808211156130aa57600080fd5b818501915085601f8301126130be57600080fd5b8151818111156130d0576130d0612b47565b8060051b91506130e1848301612ba9565b81815291830184019184810190888411156130fb57600080fd5b938501935b83851015613125578451925061311583612bda565b8282529385019390850190613100565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b80518015158114612ac957600080fd5b60006020828403121561316957600080fd5b6129fd82613147565b6001600160801b03828116828216039080821115612f0957612f09612f69565b600080604083850312156131a557600080fd5b82516131b081612d46565b6020840151909250612d3b81612d46565b8181036000831280158383131683831282161715612f0957612f09612f69565b634e487b7160e01b600052603160045260246000fd5b60608101823561320681612bda565b6001600160a01b03908116835260208401359061322282612bda565b16602083015262ffffff61323860408501612bef565b16604083015292915050565b60006020828403121561325657600080fd5b5051919050565b60006020828403121561326f57600080fd5b815161281281612c75565b60006020828403121561328c57600080fd5b815161281281612d46565b600281810b9083900b01627fffff8113627fffff1982121715612a0057612a00612f69565b6000602082840312156132ce57600080fd5b6129fd82612bef565b805161ffff81168114612ac957600080fd5b60008060008385036101c081121561330057600080fd5b845161330b81612bda565b602086015190945061331c81612c75565b9250603f19016101808082121561333257600080fd5b61333a612b5d565b60c083121561334857600080fd5b613350612b86565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a08401528281526101008701516020820152610120870151604082015261014087015160608201526133bc61016088016132d7565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b600080600080600080600060e0888a0312156133fb57600080fd5b875161340681612bda565b602089015190975061341781612c75565b9550613425604089016132d7565b9450613433606089016132d7565b9350613441608089016132d7565b925060a088015160ff8116811461345757600080fd5b915061346560c08901613147565b905092959891949750929550565b60008160020b8360020b8061348a5761348a612f96565b627fffff198214600019821416156134a4576134a4612f69565b90059392505050565b60008260020b8260020b028060020b9150808214612f0957612f09612f69565b600282810b9082900b03627fffff198112627fffff82131715612a0057612a00612f69565b60006060828403121561350457600080fd5b6129fd8383612c02565b6001600160a01b03828116828216039080821115612f0957612f09612f69565b606081526000845180606084015260005b8181101561355c576020818801810151608086840101520161353f565b506000608082850101526080601f19601f83011684010191505083602083015282604083015294935050505056fea26469706673582212207fba0634bd574c26e591d81fc5ab68017baa9bfb5a24da3e190543e7ebdaed5264736f6c63430008120033";

type LPManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPManager__factory extends ContractFactory {
  constructor(...args: LPManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LPManager> {
    return super.deploy(overrides || {}) as Promise<LPManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LPManager {
    return super.attach(address) as LPManager;
  }
  override connect(signer: Signer): LPManager__factory {
    return super.connect(signer) as LPManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPManagerInterface {
    return new utils.Interface(_abi) as LPManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPManager {
    return new Contract(address, _abi, signerOrProvider) as LPManager;
  }
}
