/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LPManager,
  LPManagerInterface,
} from "../../../../src/periphery/LPManager.sol/LPManager";

const _abi = [
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee0Collected",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee1Collected",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token0Amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token1Amount",
        type: "uint256",
      },
    ],
    name: "ProvidedLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "RepaidLiquidity",
    type: "event",
  },
  {
    inputs: [],
    name: "addLiquidityToPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "token0Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Repaid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Repaid",
            type: "uint256",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
        ],
        internalType: "struct LPManager.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getTokenIdsFromKey",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "keyToTokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lastRebalanceCenterTicks",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "provideLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "token0Amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Amount",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickOuter",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickInner",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "percentageUse",
        type: "uint256",
      },
      {
        internalType: "int24",
        name: "rebalanceThreshold",
        type: "int24",
      },
    ],
    name: "rebalanceAroundCurrentPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "token0Supplied",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Supplied",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Withdrawn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Withdrawn",
            type: "uint256",
          },
        ],
        internalType: "struct LPManager.RebalanceReturn",
        name: "returnVars",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLiquidityFromPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "removeTokenById",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategist",
        type: "address",
      },
    ],
    name: "setStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "token0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Out",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50613674806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638e68ad361161008c578063eb02c30111610066578063eb02c30114610231578063eb0b68bc1461015f578063ee510ae014610251578063f5db29c91461028757600080fd5b80638e68ad36146101af5780639ced28c9146101da578063c7b9d530146101fa57600080fd5b80635d001c32116100c85780635d001c3214610161578063617168b21461015f5780636817031b14610189578063894b3c7c1461019c57600080fd5b80630e5ecb54146100ef578063458588771461012b578063485cc9551461014c575b600080fd5b6101026100fd366004612cfa565b6102cd565b6040805193845260208401929092526001600160801b0316908201526060015b60405180910390f35b61013e610139366004612d61565b610873565b604051908152602001610122565b61015f61015a366004612d83565b6108a4565b005b61017461016f366004612dd1565b610bac565b60408051928352602083019190915201610122565b61015f610197366004612df6565b611243565b61015f6101aa366004612d61565b6113dc565b6101c26101bd366004612e2b565b6114e3565b6040516001600160801b039091168152602001610122565b6101ed6101e8366004612e75565b6117f6565b6040516101229190612e91565b61015f610208366004612df6565b6001600160a01b03166000908152600460205260409020805460ff19811660ff90911615179055565b61024461023f366004612ed5565b6118b5565b6040516101229190612eee565b61027461025f366004612ed5565b60066020526000908152604090205460020b81565b60405160029190910b8152602001610122565b61029a610295366004612f86565b611973565b60405161012291908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b336000908152600460205260408120548190819060ff166103235760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b60448201526064015b60405180910390fd5b87516001600160a01b038581169116148061035857610353610344896124d0565b61034d896124d0565b886127f3565b610373565b610373610364896124d0565b61036d896124d0565b88612846565b9150600061271061038688612711612ff5565b6103909190613022565b60005460405163d6724a2d60e01b81526001600160a01b03898116600483015260248201849052929350620100009091049091169063d6724a2d90604401600060405180830381600087803b1580156103e857600080fd5b505af11580156103fc573d6000803e3d6000fd5b50506003805492509050600061041183613036565b9091555050600354600090815260056020526040812060048101549091600160301b9091046001600160801b031690036104a757600760008c600001518d602001518e6040015160405160200161046a9392919061304f565b60408051601f1981840301815291815281516020928301208352828201939093529101600090812060035481546001810183559183529290912001555b838160040160068282829054906101000a90046001600160801b03166104cd919061308b565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550898160040160006101000a81548162ffffff021916908360020b62ffffff160217905550888160040160036101000a81548162ffffff021916908360020b62ffffff1602179055508a8160050160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548162ffffff021916908362ffffff1602179055509050506106656040518060400160405280600781526020016662616c616e636560c81b81525089896001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161061f91906001600160a01b0391909116815260200190565b602060405180830381865afa15801561063c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066091906130ab565b6128dd565b60015460408051635c48cfd360e11b81528d516001600160a01b03908116600483015260208f015181166024830152918e015162ffffff16604482015260028d810b60648301528c900b60848201526001600160801b03871660a48201523060c482015291169063b8919fa69060e40160408051808303816000875af11580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071791906130c4565b82549197509550869082906000906107309084906130e8565b925050819055508481600101600082825461074b91906130e8565b90915550506000546201000090046001600160a01b031663eab47655888561077c5761077788866130fb565b610786565b61078689866130fb565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260006044820152606401600060405180830381600087803b1580156107d357600080fd5b505af11580156107e7573d6000803e3d6000fd5b505050508a602001516001600160a01b03168b600001516001600160a01b03167f5f8ccb6fe4a5f24d182c1049d4a785cb5599c17834ab8c4d9514bc86070d72f26003548e604001518a8a60405161085d949392919093845262ffffff9290921660208401526040830152606082015260800190565b60405180910390a3505050955095509592505050565b6007602052816000526040600020818154811061088f57600080fd5b90600052602060002001600091509150505481565b600054610100900460ff16158080156108c45750600054600160ff909116105b806108de5750303b1580156108de575060005460ff166001145b6109415760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161031a565b6000805460ff191660011790558015610964576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b03868116820292909217808455600180546001600160a01b031990811688861617909155600280543392169190911790556040805163152e3c9560e11b815290519290910490921691632a5c792a91600480830192869291908290030181865afa1580156109f1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a19919081019061310e565b905060005b8151811015610b5f57818181518110610a3957610a396131c0565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03868116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab991906131e6565b50818181518110610acc57610acc6131c0565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03878116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c91906131e6565b5080610b5781613036565b915050610a1e565b50508015610ba7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b33600090815260046020526040812054819060ff16610bfb5760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015260640161031a565b600084815260056020526040902060048101546001600160801b03600160301b90910481169085161115610c575760405162461bcd60e51b81526020600482015260036024820152626c697160e81b604482015260640161031a565b6004810154600090610c87906001600160801b0387811691670de0b6b3a764000091600160301b90910416612924565b9050848260040160068282829054906101000a90046001600160801b0316610caf9190613201565b82546101009290920a6001600160801b03818102199093169183160217909155600154600485810154604051632afe5e3960e21b815260058801546001600160a01b03908116938201939093526006880154808416602483015262ffffff60a09190911c166044820152600282810b6064830152630100000090920490910b608482015292891660a484015216915063abf978e49060c40160408051808303816000875af1158015610d65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8991906130c4565b6001546004858101546040516319fa103360e01b815260058801546001600160a01b03908116938201939093526006880154808416602483015260a01c62ffffff166044820152600282810b6064830152630100000090920490910b60848201529397509195506000928392909116906319fa10339060a40160408051808303816000875af1158015610e20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e449190613221565b9092509050610e5c6001600160801b038316876130e8565b9550610e716001600160801b038216866130e8565b945085846002016000828254610e8791906130e8565b9250508190555084846003016000828254610ea291906130e8565b9091555050600684015460058501546040805162ffffff600160a01b85041681526001600160801b03868116602083015285168183015290516001600160a01b0393841693909216917f0816a24e8386ec3fc6e374f1f9bc5f0848092a414747df77251edaabd79ce94b9181900360600190a38354600090610f2d9085670de0b6b3a7640000612924565b610f379088613250565b6001860154909150600090610f559086670de0b6b3a7640000612924565b610f5f9088613250565b600054600588015488549293506001600160a01b036201000090920482169263eab47655929190911690610f9c9089670de0b6b3a7640000612924565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101859052606401600060405180830381600087803b158015610fe957600080fd5b505af1158015610ffd573d6000803e3d6000fd5b5050600054600689015460018a01546001600160a01b03620100009093048316945063eab47655935091169061103c9089670de0b6b3a7640000612924565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101849052606401600060405180830381600087803b15801561108957600080fd5b505af115801561109d573d6000803e3d6000fd5b505050506110c985670de0b6b3a76400006110b891906130fb565b875490670de0b6b3a7640000612924565b86556110f46110e086670de0b6b3a76400006130fb565b600188015490670de0b6b3a7640000612924565b600187015560048601546064600160301b9091046001600160801b0316116111ca576005860154600687015460405161116d92611151926001600160a01b039182169291811691600160a01b90910462ffffff169060200161304f565b604051602081830303815290604052805190602001208b6113dc565b60008a81526005602081905260408220828155600181018390556002810183905560038101929092556004820180546001600160b01b0319169055810180546001600160a01b031916905560060180546001600160b81b03191690555b60068601546005870154604080518d815262ffffff600160a01b85041660208201526001600160801b038d168183015290516001600160a01b0393841693909216917f7d3b6c23c9b08de61da48640e0ddb486d73eb67dcf2fb9eecd8ab474ee61c9829181900360600190a35050505050509250929050565b6002546001600160a01b031633146112865760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b604482015260640161031a565b80600060026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060008060029054906101000a90046001600160a01b03166001600160a01b0316632a5c792a6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611301573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611329919081019061310e565b905060005b8151811015610ba757818181518110611349576113496131c0565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03858116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156113a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c991906131e6565b50806113d481613036565b91505061132e565b600082815260076020526040812054905b818110156114dd576000848152600760205260409020805484919083908110611418576114186131c0565b9060005260206000200154036114cb5760008481526007602052604090206114416001846130fb565b81548110611451576114516131c0565b9060005260206000200154600760008681526020019081526020016000208281548110611480576114806131c0565b9060005260206000200181905550600760008581526020019081526020016000208054806114b0576114b0613270565b600190038181906000526020600020016000905590556114dd565b806114d581613036565b9150506113ed565b50505050565b600154604051632411122160e11b815260009182916001600160a01b0390911690634822244290611518908890600401613286565b602060405180830381865afa158015611535573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155991906130ab565b6001546040516315083fbb60e31b8152600481018390529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa1580156115a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cc91906130ab565b600154604051630ca32ed160e31b8152600481018590529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa15801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f91906132d3565b6001600160801b03945090506000808080895b8960020b8160020b12156117e75760015460405163da69b0b360e01b8152600481018a9052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa1580156116b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d791906132f0565b6001546040516319fda27760e01b8152600481018b9052600284900b60248201529196508895506001600160a01b0316906319fda27790604401602060405180830381865afa15801561172e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175291906132f0565b925061179c604051806040016040528060098152602001683bba333bba333bba3360b91b815250866001600160801b0316866001600160801b0316866001600160801b0316612a02565b826117a78587613201565b6117b19190613201565b9150886001600160801b0316826001600160801b0316106117d257886117d4565b815b98506117e0868261330d565b9050611652565b50505050505050509392505050565b6060600760006118096020850185612df6565b6118196040860160208701612df6565b6118296060870160408801613332565b60405160200161183b9392919061304f565b6040516020818303038152906040528051906020012081526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156118a957602002820191906000526020600020905b815481526020019060010190808311611895575b50505050509050919050565b6118bd612b65565b5060009081526005602081815260409283902083516101008101855281548152600182015481840152600280830154828701526003830154606080840191909152600484015480830b60808501526301000000810490920b60a0840152600160301b9091046001600160801b031660c083015285519081018652938201546001600160a01b03908116855260069092015491821692840192909252600160a01b900462ffffff169282019290925260e082015290565b61199e6040518060800160405280600081526020016000815260200160008152602001600081525090565b604080516101a081018252600080825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201819052610140820181905261016082018190526101808201526001549151639525092360e01b815290916001600160a01b031690639525092390611a33908a90600401613286565b6101c060405180830381865afa158015611a51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a75919061335f565b5060020b6101208301526001600160a01b0316610140820181905260408051633850c7bd60e01b81529051633850c7bd9160048082019260e0929091908290030181865afa158015611acb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aef9190613456565b5050505060029190910b606084015250600690506000611b1260208a018a612df6565b611b2260408b0160208c01612df6565b611b3260608c0160408d01613332565b604051602001611b449392919061304f565b60408051601f19818403018152918152815160209283012083529082019290925281016000205460020b9082018190526060820151611b8e91611b8691612a4b565b60020b612a7c565b8260020b611ba482604001518360600151612a4b565b60020b1215611bb357506124c7565b6101208101516060820151611bc99082906134e9565b611bd39190613523565b60020b60608201526000600781611bed60208b018b612df6565b611bfd60408c0160208d01612df6565b611c0d60608d0160408e01613332565b604051602001611c1f9392919061304f565b604051602081830303815290604052805190602001208152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611c8d57602002820191906000526020600020905b815481526020019060010190808311611c79575b50505050509050611c9c612b65565b60005b8251811015611eb25760038054600090815260056020818152604092839020835161010081018552815481526001820154818401526002808301548287015295820154606080830191909152600483015480880b60808401526301000000810490970b60a08301526001600160801b03600160301b909704871660c0830190815286519182018752948301546001600160a01b0390811682526006909301549283169381019390935262ffffff600160a01b909204919091169382019390935260e083015251909350606491161115611ea057611d858a83608001518460a001516114e3565b6001600160801b031661010085015282516000908190611e6d90869085908110611db157611db16131c0565b60200260200101518761010001516001600160801b031660056000898881518110611dde57611dde6131c0565b6020026020010151815260200190815260200160002060040160069054906101000a90046001600160801b03166001600160801b03161015611e625760056000888781518110611e3057611e306131c0565b6020026020010151815260200190815260200160002060040160069054906101000a90046001600160801b0316610bac565b876101000151610bac565b915091508187604001818151611e8391906130e8565b905250606087018051829190611e9a9083906130e8565b90525050505b80611eaa81613036565b915050611c9f565b5086836101200151611ec49190613523565b8360600151611ed3919061330d565b60020b60a0840152610120830151611eec908990613523565b8360600151611efb919061330d565b600290810b60c085015260a0840151900b60e08401526000546201000090046001600160a01b031663eedc966a611f3560208c018c612df6565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611f79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9d91906130ab565b6101608401526000546201000090046001600160a01b031663c15973eb611fc760208c018c612df6565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561200b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202f91906130ab565b61018084018190526101608401516120509088670de0b6b3a7640000612924565b101561205d576000612086565b61018083015161016084015161207c9088670de0b6b3a7640000612924565b61208691906130fb565b835261012083015160a084015160c08501516120a29190613543565b6120ac91906134e9565b83516120bb9160020b90613022565b6020840152825115612175575b8260c0015160020b8360e0015160020b1215612175576000806121206120f3368d90038d018d613568565b60e0870151610120880151612108908261330d565b88602001518f60000160208101906100fd9190612df6565b5091509150818660000181815161213791906130e8565b90525060208601805182919061214e9083906130e8565b905250505061012083015160e08401805161216a90839061330d565b60020b9052506120c8565b878361012001516121869190613523565b83606001516121959190613543565b60020b60a08401526101208301516121ae908890613523565b83606001516121bd9190613543565b600290810b60c085015260a0840151900b60e08401526000546201000090046001600160a01b031663eedc966a6121fa60408c0160208d01612df6565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561223e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061226291906130ab565b6101608401526000546201000090046001600160a01b031663c15973eb61228f60408c0160208d01612df6565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156122d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f791906130ab565b61018084018190526101608401516123189088670de0b6b3a7640000612924565b101561232557600061234e565b6101808301516101608401516123449088670de0b6b3a7640000612924565b61234e91906130fb565b835261012083015160a084015160c085015161236a9190613543565b61237491906134e9565b83516123839160020b90613022565b602084015282511561243d575b8260c0015160020b8360e0015160020b121561243d576000806123e86123bb368d90038d018d613568565b60e08701516101208801516123d0908261330d565b88602001518f60200160208101906100fd9190612df6565b509150915081866000018181516123ff91906130e8565b9052506020860180518291906124169083906130e8565b905250505061012083015160e08401805161243290839061330d565b60020b905250612390565b60608301516006600061245360208d018d612df6565b61246360408e0160208f01612df6565b8d60400160208101906124769190613332565b6040516020016124889392919061304f565b60408051808303601f19018152918152815160209283012083529082019290925201600020805462ffffff191662ffffff929092169190911790555050505b95945050505050565b60008060008360020b126124e7578260020b6124ef565b8260020b6000035b9050620d89e8811115612515576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361252c57600160801b61253e565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612572576ffff97272373d413259a46990580e213a0260801c5b6004821615612591576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156125b0576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156125cf576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156125ee576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561260d576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561262c576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561264c576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561266c576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561268c576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156126ac576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156126cc576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156126ec576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561270c576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561272c576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561274d576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561276d576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561278c576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156127a9576b048a170391f7dc42444e8fa20260801c5b60008460020b13156127ca5780600019816127c6576127c661300c565b0490505b6401000000008106156127de5760016127e1565b60005b60ff16602082901c0192505050919050565b6000826001600160a01b0316846001600160a01b03161115612813579192915b61283c61283783600160601b6128298888613584565b6001600160a01b0316612ac4565b612afe565b90505b9392505050565b6000826001600160a01b0316846001600160a01b03161115612866579192915b6000612889856001600160a01b0316856001600160a01b0316600160601b612ac4565b905080156128ab576128a361283784836128298989613584565b91505061283f565b6128a36128376128c9856001600160a01b0389166128298a8a613584565b866001600160a01b0316600160601b612ac4565b610ba78383836040516024016128f5939291906135ea565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052612b44565b600080806000198587098587029250828110838203039150508060000361295d576000841161295257600080fd5b50829004905061283f565b8084116129955760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b604482015260640161031a565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6114dd84848484604051602401612a1c949392919061360f565b60408051601f198184030181529190526020810180516001600160e01b03166304772b3360e11b179052612b44565b60008160020b8360020b13612a6957612a648383613543565b612a73565b612a738284613543565b90505b92915050565b612ac181604051602401612a9291815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316634e0c1d1d60e01b179052612b44565b50565b6000808060001985870985870292508281108382030391505080600003612af2576000841161295257600080fd5b80841161299557600080fd5b806001600160801b0381168114612b3f5760405162461bcd60e51b81526020600482015260056024820152640858d85cdd60da1b604482015260640161031a565b919050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60408051610100810182526000808252602080830182905282840182905260608084018390526080840183905260a0840183905260c0840183905284519081018552828152908101829052928301529060e082015290565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715612bf657612bf6612bbd565b60405290565b60405160c0810167ffffffffffffffff81118282101715612bf657612bf6612bbd565b604051601f8201601f1916810167ffffffffffffffff81118282101715612c4857612c48612bbd565b604052919050565b6001600160a01b0381168114612ac157600080fd5b803562ffffff81168114612b3f57600080fd5b600060608284031215612c8a57600080fd5b6040516060810181811067ffffffffffffffff82111715612cad57612cad612bbd565b6040529050808235612cbe81612c50565b81526020830135612cce81612c50565b6020820152612cdf60408401612c65565b60408201525092915050565b8060020b8114612ac157600080fd5b600080600080600060e08688031215612d1257600080fd5b612d1c8787612c78565b94506060860135612d2c81612ceb565b93506080860135612d3c81612ceb565b925060a0860135915060c0860135612d5381612c50565b809150509295509295909350565b60008060408385031215612d7457600080fd5b50508035926020909101359150565b60008060408385031215612d9657600080fd5b8235612da181612c50565b91506020830135612db181612c50565b809150509250929050565b6001600160801b0381168114612ac157600080fd5b60008060408385031215612de457600080fd5b823591506020830135612db181612dbc565b600060208284031215612e0857600080fd5b813561283f81612c50565b600060608284031215612e2557600080fd5b50919050565b600080600060a08486031215612e4057600080fd5b612e4a8585612e13565b92506060840135612e5a81612ceb565b91506080840135612e6a81612ceb565b809150509250925092565b600060608284031215612e8757600080fd5b612a738383612e13565b6020808252825182820181905260009190848201906040850190845b81811015612ec957835183529284019291840191600101612ead565b50909695505050505050565b600060208284031215612ee757600080fd5b5035919050565b60006101408201905082518252602083015160208301526040830151604083015260608301516060830152608083015160020b608083015260a083015160020b60a08301526001600160801b0360c08401511660c083015260e0830151612f7f60e084018280516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b5092915050565b600080600080600060e08688031215612f9e57600080fd5b612fa88787612e13565b94506060860135612fb881612ceb565b93506080860135612fc881612ceb565b925060a0860135915060c0860135612d5381612ceb565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417612a7657612a76612fdf565b634e487b7160e01b600052601260045260246000fd5b6000826130315761303161300c565b500490565b60006001820161304857613048612fdf565b5060010190565b606093841b6bffffffffffffffffffffffff1990811682529290931b909116601483015260e81b6001600160e81b0319166028820152602b0190565b6001600160801b03818116838216019080821115612f7f57612f7f612fdf565b6000602082840312156130bd57600080fd5b5051919050565b600080604083850312156130d757600080fd5b505080516020909101519092909150565b80820180821115612a7657612a76612fdf565b81810381811115612a7657612a76612fdf565b6000602080838503121561312157600080fd5b825167ffffffffffffffff8082111561313957600080fd5b818501915085601f83011261314d57600080fd5b81518181111561315f5761315f612bbd565b8060051b9150613170848301612c1f565b818152918301840191848101908884111561318a57600080fd5b938501935b838510156131b457845192506131a483612c50565b828252938501939085019061318f565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b80518015158114612b3f57600080fd5b6000602082840312156131f857600080fd5b612a73826131d6565b6001600160801b03828116828216039080821115612f7f57612f7f612fdf565b6000806040838503121561323457600080fd5b825161323f81612dbc565b6020840151909250612db181612dbc565b8181036000831280158383131683831282161715612f7f57612f7f612fdf565b634e487b7160e01b600052603160045260246000fd5b60608101823561329581612c50565b6001600160a01b0390811683526020840135906132b182612c50565b16602083015262ffffff6132c760408501612c65565b16604083015292915050565b6000602082840312156132e557600080fd5b815161283f81612ceb565b60006020828403121561330257600080fd5b815161283f81612dbc565b600281810b9083900b01627fffff8113627fffff1982121715612a7657612a76612fdf565b60006020828403121561334457600080fd5b612a7382612c65565b805161ffff81168114612b3f57600080fd5b60008060008385036101c081121561337657600080fd5b845161338181612c50565b602086015190945061339281612ceb565b9250603f1901610180808212156133a857600080fd5b6133b0612bd3565b60c08312156133be57600080fd5b6133c6612bfc565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a0840152828152610100870151602082015261012087015160408201526101408701516060820152613432610160880161334d565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b600080600080600080600060e0888a03121561347157600080fd5b875161347c81612c50565b602089015190975061348d81612ceb565b955061349b6040890161334d565b94506134a96060890161334d565b93506134b76080890161334d565b925060a088015160ff811681146134cd57600080fd5b91506134db60c089016131d6565b905092959891949750929550565b60008160020b8360020b806135005761350061300c565b627fffff1982146000198214161561351a5761351a612fdf565b90059392505050565b60008260020b8260020b028060020b9150808214612f7f57612f7f612fdf565b600282810b9082900b03627fffff198112627fffff82131715612a7657612a76612fdf565b60006060828403121561357a57600080fd5b612a738383612c78565b6001600160a01b03828116828216039080821115612f7f57612f7f612fdf565b6000815180845260005b818110156135ca576020818501810151868301820152016135ae565b506000602082860101526020601f19601f83011685010191505092915050565b6060815260006135fd60608301866135a4565b60208301949094525060400152919050565b60808152600061362260808301876135a4565b602083019590955250604081019290925260609091015291905056fea264697066735822122098d7d954a9c81c853f321aad92344dcec20a9e02add75080021bbed036f893d564736f6c63430008120033";

type LPManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPManager__factory extends ContractFactory {
  constructor(...args: LPManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LPManager> {
    return super.deploy(overrides || {}) as Promise<LPManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LPManager {
    return super.attach(address) as LPManager;
  }
  override connect(signer: Signer): LPManager__factory {
    return super.connect(signer) as LPManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPManagerInterface {
    return new utils.Interface(_abi) as LPManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPManager {
    return new Contract(address, _abi, signerOrProvider) as LPManager;
  }
}
