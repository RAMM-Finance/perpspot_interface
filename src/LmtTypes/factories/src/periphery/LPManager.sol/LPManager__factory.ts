/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LPManager,
  LPManagerInterface,
} from "../../../../src/periphery/LPManager.sol/LPManager";

const _abi = [
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee0Collected",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee1Collected",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token0Amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token1Amount",
        type: "uint256",
      },
    ],
    name: "ProvidedLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "RepaidLiquidity",
    type: "event",
  },
  {
    inputs: [],
    name: "addLiquidityToPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "uint128",
        name: "maxWithdrawable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "token0Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Repaid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Repaid",
            type: "uint256",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
        ],
        internalType: "struct LPManager.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getTokenIdsFromKey",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "keyToTokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lastRebalanceCenterTicks",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "provideLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "token0Amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Amount",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickOuter",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickInner",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "percentageUse",
        type: "uint256",
      },
      {
        internalType: "int24",
        name: "rebalanceThreshold",
        type: "int24",
      },
    ],
    name: "rebalanceAroundCurrentPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "token0Supplied",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Supplied",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Withdrawn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Withdrawn",
            type: "uint256",
          },
        ],
        internalType: "struct LPManager.RebalanceReturn",
        name: "returnVars",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLiquidityFromPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "removeTokenById",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategist",
        type: "address",
      },
    ],
    name: "setStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "token0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Out",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50613580806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638e68ad361161008c578063eb02c30111610066578063eb02c30114610231578063eb0b68bc1461015f578063ee510ae014610251578063f5db29c91461028757600080fd5b80638e68ad36146101af5780639ced28c9146101da578063c7b9d530146101fa57600080fd5b80635d001c32116100c85780635d001c3214610161578063617168b21461015f5780636817031b14610189578063894b3c7c1461019c57600080fd5b80630e5ecb54146100ef578063458588771461012b578063485cc9551461014c575b600080fd5b6101026100fd366004612c3d565b6102cd565b6040805193845260208401929092526001600160801b0316908201526060015b60405180910390f35b61013e610139366004612ca4565b6107fd565b604051908152602001610122565b61015f61015a366004612cc6565b61082e565b005b61017461016f366004612d14565b610b36565b60408051928352602083019190915201610122565b61015f610197366004612d39565b6111cd565b61015f6101aa366004612ca4565b611366565b6101c26101bd366004612d6e565b61146d565b6040516001600160801b039091168152602001610122565b6101ed6101e8366004612db8565b611780565b6040516101229190612dd4565b61015f610208366004612d39565b6001600160a01b03166000908152600460205260409020805460ff19811660ff90911615179055565b61024461023f366004612e18565b61183f565b6040516101229190612e31565b61027461025f366004612e18565b60066020526000908152604090205460020b81565b60405160029190910b8152602001610122565b61029a610295366004612ec9565b6118fd565b60405161012291908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b336000908152600460205260408120548190819060ff166103235760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b60448201526064015b60405180910390fd5b87516001600160a01b0385811691161480610358576103536103448961245a565b61034d8961245a565b8861277d565b610373565b6103736103648961245a565b61036d8961245a565b886127d0565b9150600061271061038688612711612f38565b6103909190612f65565b60005460405163d6724a2d60e01b81526001600160a01b03898116600483015260248201849052929350620100009091049091169063d6724a2d90604401600060405180830381600087803b1580156103e857600080fd5b505af11580156103fc573d6000803e3d6000fd5b50506003805492509050600061041183612f79565b9091555050600354600090815260056020526040812060048101549091600160301b9091046001600160801b031690036104a757600760008c600001518d602001518e6040015160405160200161046a93929190612f92565b60408051601f1981840301815291815281516020928301208352828201939093529101600090812060035481546001810183559183529290912001555b838160040160068282829054906101000a90046001600160801b03166104cd9190612fce565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550898160040160006101000a81548162ffffff021916908360020b62ffffff160217905550888160040160036101000a81548162ffffff021916908360020b62ffffff1602179055508a8160050160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548162ffffff021916908362ffffff160217905550905050600160009054906101000a90046001600160a01b03166001600160a01b031663b8919fa68c8c8c88306040518663ffffffff1660e01b815260040161065f95949392919085516001600160a01b03908116825260208088015182169083015260409687015162ffffff1696820196909652600294850b60608201529290930b60808301526001600160801b031660a0820152911660c082015260e00190565b60408051808303816000875af115801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a19190612fee565b82549197509550869082906000906106ba908490613012565b92505081905550848160010160008282546106d59190613012565b90915550506000546201000090046001600160a01b031663eab476558885610706576107018886613025565b610710565b6107108986613025565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260006044820152606401600060405180830381600087803b15801561075d57600080fd5b505af1158015610771573d6000803e3d6000fd5b505050508a602001516001600160a01b03168b600001516001600160a01b03167f5f8ccb6fe4a5f24d182c1049d4a785cb5599c17834ab8c4d9514bc86070d72f26003548e604001518a8a6040516107e7949392919093845262ffffff9290921660208401526040830152606082015260800190565b60405180910390a3505050955095509592505050565b6007602052816000526040600020818154811061081957600080fd5b90600052602060002001600091509150505481565b600054610100900460ff161580801561084e5750600054600160ff909116105b806108685750303b158015610868575060005460ff166001145b6108cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161031a565b6000805460ff1916600117905580156108ee576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b03868116820292909217808455600180546001600160a01b031990811688861617909155600280543392169190911790556040805163152e3c9560e11b815290519290910490921691632a5c792a91600480830192869291908290030181865afa15801561097b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109a39190810190613038565b905060005b8151811015610ae9578181815181106109c3576109c36130ea565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03868116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a439190613110565b50818181518110610a5657610a566130ea565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03878116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad69190613110565b5080610ae181612f79565b9150506109a8565b50508015610b31576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b33600090815260046020526040812054819060ff16610b855760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015260640161031a565b600084815260056020526040902060048101546001600160801b03600160301b90910481169085161115610be15760405162461bcd60e51b81526020600482015260036024820152626c697160e81b604482015260640161031a565b6004810154600090610c11906001600160801b0387811691670de0b6b3a764000091600160301b90910416612867565b9050848260040160068282829054906101000a90046001600160801b0316610c39919061312b565b82546101009290920a6001600160801b03818102199093169183160217909155600154600485810154604051632afe5e3960e21b815260058801546001600160a01b03908116938201939093526006880154808416602483015262ffffff60a09190911c166044820152600282810b6064830152630100000090920490910b608482015292891660a484015216915063abf978e49060c40160408051808303816000875af1158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d139190612fee565b6001546004858101546040516319fa103360e01b815260058801546001600160a01b03908116938201939093526006880154808416602483015260a01c62ffffff166044820152600282810b6064830152630100000090920490910b60848201529397509195506000928392909116906319fa10339060a40160408051808303816000875af1158015610daa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dce919061314b565b9092509050610de66001600160801b03831687613012565b9550610dfb6001600160801b03821686613012565b945085846002016000828254610e119190613012565b9250508190555084846003016000828254610e2c9190613012565b9091555050600684015460058501546040805162ffffff600160a01b85041681526001600160801b03868116602083015285168183015290516001600160a01b0393841693909216917f0816a24e8386ec3fc6e374f1f9bc5f0848092a414747df77251edaabd79ce94b9181900360600190a38354600090610eb79085670de0b6b3a7640000612867565b610ec1908861317a565b6001860154909150600090610edf9086670de0b6b3a7640000612867565b610ee9908861317a565b600054600588015488549293506001600160a01b036201000090920482169263eab47655929190911690610f269089670de0b6b3a7640000612867565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101859052606401600060405180830381600087803b158015610f7357600080fd5b505af1158015610f87573d6000803e3d6000fd5b5050600054600689015460018a01546001600160a01b03620100009093048316945063eab476559350911690610fc69089670de0b6b3a7640000612867565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101849052606401600060405180830381600087803b15801561101357600080fd5b505af1158015611027573d6000803e3d6000fd5b5050505061105385670de0b6b3a76400006110429190613025565b875490670de0b6b3a7640000612867565b865561107e61106a86670de0b6b3a7640000613025565b600188015490670de0b6b3a7640000612867565b600187015560048601546064600160301b9091046001600160801b03161161115457600586015460068701546040516110f7926110db926001600160a01b039182169291811691600160a01b90910462ffffff1690602001612f92565b604051602081830303815290604052805190602001208b611366565b60008a81526005602081905260408220828155600181018390556002810183905560038101929092556004820180546001600160b01b0319169055810180546001600160a01b031916905560060180546001600160b81b03191690555b60068601546005870154604080518d815262ffffff600160a01b85041660208201526001600160801b038d168183015290516001600160a01b0393841693909216917f7d3b6c23c9b08de61da48640e0ddb486d73eb67dcf2fb9eecd8ab474ee61c9829181900360600190a35050505050509250929050565b6002546001600160a01b031633146112105760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b604482015260640161031a565b80600060026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060008060029054906101000a90046001600160a01b03166001600160a01b0316632a5c792a6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561128b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112b39190810190613038565b905060005b8151811015610b31578181815181106112d3576112d36130ea565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03858116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af115801561132f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113539190613110565b508061135e81612f79565b9150506112b8565b600082815260076020526040812054905b818110156114675760008481526007602052604090208054849190839081106113a2576113a26130ea565b9060005260206000200154036114555760008481526007602052604090206113cb600184613025565b815481106113db576113db6130ea565b906000526020600020015460076000868152602001908152602001600020828154811061140a5761140a6130ea565b90600052602060002001819055506007600085815260200190815260200160002080548061143a5761143a61319a565b60019003818190600052602060002001600090559055611467565b8061145f81612f79565b915050611377565b50505050565b600154604051632411122160e11b815260009182916001600160a01b03909116906348222442906114a29088906004016131b0565b602060405180830381865afa1580156114bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e391906131fd565b6001546040516315083fbb60e31b8152600481018390529192506000916001600160a01b039091169063a841fdd890602401602060405180830381865afa158015611532573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155691906131fd565b600154604051630ca32ed160e31b8152600481018590529192506000916001600160a01b0390911690636519768890602401602060405180830381865afa1580156115a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c99190613216565b6001600160801b03945090506000808080895b8960020b8160020b12156117715760015460405163da69b0b360e01b8152600481018a9052600283900b60248201526001600160a01b039091169063da69b0b390604401602060405180830381865afa15801561163d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116619190613233565b6001546040516319fda27760e01b8152600481018b9052600284900b60248201529196508895506001600160a01b0316906319fda27790604401602060405180830381865afa1580156116b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116dc9190613233565b9250611726604051806040016040528060098152602001683bba333bba333bba3360b91b815250866001600160801b0316866001600160801b0316866001600160801b0316612945565b82611731858761312b565b61173b919061312b565b9150886001600160801b0316826001600160801b03161061175c578861175e565b815b985061176a8682613250565b90506115dc565b50505050505050509392505050565b6060600760006117936020850185612d39565b6117a36040860160208701612d39565b6117b36060870160408801613275565b6040516020016117c593929190612f92565b60405160208183030381529060405280519060200120815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561183357602002820191906000526020600020905b81548152602001906001019080831161181f575b50505050509050919050565b611847612aa8565b5060009081526005602081815260409283902083516101008101855281548152600182015481840152600280830154828701526003830154606080840191909152600484015480830b60808501526301000000810490920b60a0840152600160301b9091046001600160801b031660c083015285519081018652938201546001600160a01b03908116855260069092015491821692840192909252600160a01b900462ffffff169282019290925260e082015290565b6119286040518060800160405280600081526020016000815260200160008152602001600081525090565b604080516101a081018252600080825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201819052610140820181905261016082018190526101808201526001549151639525092360e01b815290916001600160a01b0316906395250923906119bd908a906004016131b0565b6101c060405180830381865afa1580156119db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ff91906132a2565b5060020b6101208301526001600160a01b0316610140820181905260408051633850c7bd60e01b81529051633850c7bd9160048082019260e0929091908290030181865afa158015611a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a799190613399565b5050505060029190910b606084015250600690506000611a9c60208a018a612d39565b611aac60408b0160208c01612d39565b611abc60608c0160408d01613275565b604051602001611ace93929190612f92565b60408051601f19818403018152918152815160209283012083529082019290925281016000205460020b9082018190526060820151611b1891611b109161298e565b60020b6129bf565b8260020b611b2e8260400151836060015161298e565b60020b1215611b3d5750612451565b6101208101516060820151611b5390829061342c565b611b5d9190613466565b60020b60608201526000600781611b7760208b018b612d39565b611b8760408c0160208d01612d39565b611b9760608d0160408e01613275565b604051602001611ba993929190612f92565b604051602081830303815290604052805190602001208152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611c1757602002820191906000526020600020905b815481526020019060010190808311611c03575b50505050509050611c26612aa8565b60005b8251811015611e3c5760038054600090815260056020818152604092839020835161010081018552815481526001820154818401526002808301548287015295820154606080830191909152600483015480880b60808401526301000000810490970b60a08301526001600160801b03600160301b909704871660c0830190815286519182018752948301546001600160a01b0390811682526006909301549283169381019390935262ffffff600160a01b909204919091169382019390935260e083015251909350606491161115611e2a57611d0f8a83608001518460a0015161146d565b6001600160801b031661010085015282516000908190611df790869085908110611d3b57611d3b6130ea565b60200260200101518761010001516001600160801b031660056000898881518110611d6857611d686130ea565b6020026020010151815260200190815260200160002060040160069054906101000a90046001600160801b03166001600160801b03161015611dec5760056000888781518110611dba57611dba6130ea565b6020026020010151815260200190815260200160002060040160069054906101000a90046001600160801b0316610b36565b876101000151610b36565b915091508187604001818151611e0d9190613012565b905250606087018051829190611e24908390613012565b90525050505b80611e3481612f79565b915050611c29565b5086836101200151611e4e9190613466565b8360600151611e5d9190613250565b60020b60a0840152610120830151611e76908990613466565b8360600151611e859190613250565b600290810b60c085015260a0840151900b60e08401526000546201000090046001600160a01b031663eedc966a611ebf60208c018c612d39565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f2791906131fd565b6101608401526000546201000090046001600160a01b031663c15973eb611f5160208c018c612d39565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611f95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb991906131fd565b6101808401819052610160840151611fda9088670de0b6b3a7640000612867565b1015611fe7576000612010565b6101808301516101608401516120069088670de0b6b3a7640000612867565b6120109190613025565b835261012083015160a084015160c085015161202c9190613486565b612036919061342c565b83516120459160020b90612f65565b60208401528251156120ff575b8260c0015160020b8360e0015160020b12156120ff576000806120aa61207d368d90038d018d6134ab565b60e08701516101208801516120929082613250565b88602001518f60000160208101906100fd9190612d39565b509150915081866000018181516120c19190613012565b9052506020860180518291906120d8908390613012565b905250505061012083015160e0840180516120f4908390613250565b60020b905250612052565b878361012001516121109190613466565b836060015161211f9190613486565b60020b60a0840152610120830151612138908890613466565b83606001516121479190613486565b600290810b60c085015260a0840151900b60e08401526000546201000090046001600160a01b031663eedc966a61218460408c0160208d01612d39565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156121c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ec91906131fd565b6101608401526000546201000090046001600160a01b031663c15973eb61221960408c0160208d01612d39565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561225d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228191906131fd565b61018084018190526101608401516122a29088670de0b6b3a7640000612867565b10156122af5760006122d8565b6101808301516101608401516122ce9088670de0b6b3a7640000612867565b6122d89190613025565b835261012083015160a084015160c08501516122f49190613486565b6122fe919061342c565b835161230d9160020b90612f65565b60208401528251156123c7575b8260c0015160020b8360e0015160020b12156123c757600080612372612345368d90038d018d6134ab565b60e087015161012088015161235a9082613250565b88602001518f60200160208101906100fd9190612d39565b509150915081866000018181516123899190613012565b9052506020860180518291906123a0908390613012565b905250505061012083015160e0840180516123bc908390613250565b60020b90525061231a565b6060830151600660006123dd60208d018d612d39565b6123ed60408e0160208f01612d39565b8d60400160208101906124009190613275565b60405160200161241293929190612f92565b60408051808303601f19018152918152815160209283012083529082019290925201600020805462ffffff191662ffffff929092169190911790555050505b95945050505050565b60008060008360020b12612471578260020b612479565b8260020b6000035b9050620d89e881111561249f576040516315e4079d60e11b815260040160405180910390fd5b6000816001166000036124b657600160801b6124c8565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156124fc576ffff97272373d413259a46990580e213a0260801c5b600482161561251b576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561253a576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612559576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612578576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612597576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156125b6576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156125d6576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156125f6576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615612616576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615612636576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612656576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612676576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612696576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156126b6576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156126d7576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156126f7576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615612716576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612733576b048a170391f7dc42444e8fa20260801c5b60008460020b131561275457806000198161275057612750612f4f565b0490505b64010000000081061561276857600161276b565b60005b60ff16602082901c0192505050919050565b6000826001600160a01b0316846001600160a01b0316111561279d579192915b6127c66127c183600160601b6127b388886134c7565b6001600160a01b0316612a07565b612a41565b90505b9392505050565b6000826001600160a01b0316846001600160a01b031611156127f0579192915b6000612813856001600160a01b0316856001600160a01b0316600160601b612a07565b905080156128355761282d6127c184836127b389896134c7565b9150506127c9565b61282d6127c1612853856001600160a01b0389166127b38a8a6134c7565b866001600160a01b0316600160601b612a07565b60008080600019858709858702925082811083820303915050806000036128a0576000841161289557600080fd5b5082900490506127c9565b8084116128d85760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b604482015260640161031a565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6114678484848460405160240161295f94939291906134e7565b60408051601f198184030181529190526020810180516001600160e01b03166304772b3360e11b179052612a87565b60008160020b8360020b136129ac576129a78383613486565b6129b6565b6129b68284613486565b90505b92915050565b612a04816040516024016129d591815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316634e0c1d1d60e01b179052612a87565b50565b6000808060001985870985870292508281108382030391505080600003612a35576000841161289557600080fd5b8084116128d857600080fd5b806001600160801b0381168114612a825760405162461bcd60e51b81526020600482015260056024820152640858d85cdd60da1b604482015260640161031a565b919050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60408051610100810182526000808252602080830182905282840182905260608084018390526080840183905260a0840183905260c0840183905284519081018552828152908101829052928301529060e082015290565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715612b3957612b39612b00565b60405290565b60405160c0810167ffffffffffffffff81118282101715612b3957612b39612b00565b604051601f8201601f1916810167ffffffffffffffff81118282101715612b8b57612b8b612b00565b604052919050565b6001600160a01b0381168114612a0457600080fd5b803562ffffff81168114612a8257600080fd5b600060608284031215612bcd57600080fd5b6040516060810181811067ffffffffffffffff82111715612bf057612bf0612b00565b6040529050808235612c0181612b93565b81526020830135612c1181612b93565b6020820152612c2260408401612ba8565b60408201525092915050565b8060020b8114612a0457600080fd5b600080600080600060e08688031215612c5557600080fd5b612c5f8787612bbb565b94506060860135612c6f81612c2e565b93506080860135612c7f81612c2e565b925060a0860135915060c0860135612c9681612b93565b809150509295509295909350565b60008060408385031215612cb757600080fd5b50508035926020909101359150565b60008060408385031215612cd957600080fd5b8235612ce481612b93565b91506020830135612cf481612b93565b809150509250929050565b6001600160801b0381168114612a0457600080fd5b60008060408385031215612d2757600080fd5b823591506020830135612cf481612cff565b600060208284031215612d4b57600080fd5b81356127c981612b93565b600060608284031215612d6857600080fd5b50919050565b600080600060a08486031215612d8357600080fd5b612d8d8585612d56565b92506060840135612d9d81612c2e565b91506080840135612dad81612c2e565b809150509250925092565b600060608284031215612dca57600080fd5b6129b68383612d56565b6020808252825182820181905260009190848201906040850190845b81811015612e0c57835183529284019291840191600101612df0565b50909695505050505050565b600060208284031215612e2a57600080fd5b5035919050565b60006101408201905082518252602083015160208301526040830151604083015260608301516060830152608083015160020b608083015260a083015160020b60a08301526001600160801b0360c08401511660c083015260e0830151612ec260e084018280516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b5092915050565b600080600080600060e08688031215612ee157600080fd5b612eeb8787612d56565b94506060860135612efb81612c2e565b93506080860135612f0b81612c2e565b925060a0860135915060c0860135612c9681612c2e565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176129b9576129b9612f22565b634e487b7160e01b600052601260045260246000fd5b600082612f7457612f74612f4f565b500490565b600060018201612f8b57612f8b612f22565b5060010190565b606093841b6bffffffffffffffffffffffff1990811682529290931b909116601483015260e81b6001600160e81b0319166028820152602b0190565b6001600160801b03818116838216019080821115612ec257612ec2612f22565b6000806040838503121561300157600080fd5b505080516020909101519092909150565b808201808211156129b9576129b9612f22565b818103818111156129b9576129b9612f22565b6000602080838503121561304b57600080fd5b825167ffffffffffffffff8082111561306357600080fd5b818501915085601f83011261307757600080fd5b81518181111561308957613089612b00565b8060051b915061309a848301612b62565b81815291830184019184810190888411156130b457600080fd5b938501935b838510156130de57845192506130ce83612b93565b82825293850193908501906130b9565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b80518015158114612a8257600080fd5b60006020828403121561312257600080fd5b6129b682613100565b6001600160801b03828116828216039080821115612ec257612ec2612f22565b6000806040838503121561315e57600080fd5b825161316981612cff565b6020840151909250612cf481612cff565b8181036000831280158383131683831282161715612ec257612ec2612f22565b634e487b7160e01b600052603160045260246000fd5b6060810182356131bf81612b93565b6001600160a01b0390811683526020840135906131db82612b93565b16602083015262ffffff6131f160408501612ba8565b16604083015292915050565b60006020828403121561320f57600080fd5b5051919050565b60006020828403121561322857600080fd5b81516127c981612c2e565b60006020828403121561324557600080fd5b81516127c981612cff565b600281810b9083900b01627fffff8113627fffff19821217156129b9576129b9612f22565b60006020828403121561328757600080fd5b6129b682612ba8565b805161ffff81168114612a8257600080fd5b60008060008385036101c08112156132b957600080fd5b84516132c481612b93565b60208601519094506132d581612c2e565b9250603f1901610180808212156132eb57600080fd5b6132f3612b16565b60c083121561330157600080fd5b613309612b3f565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a08401528281526101008701516020820152610120870151604082015261014087015160608201526133756101608801613290565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b600080600080600080600060e0888a0312156133b457600080fd5b87516133bf81612b93565b60208901519097506133d081612c2e565b95506133de60408901613290565b94506133ec60608901613290565b93506133fa60808901613290565b925060a088015160ff8116811461341057600080fd5b915061341e60c08901613100565b905092959891949750929550565b60008160020b8360020b8061344357613443612f4f565b627fffff1982146000198214161561345d5761345d612f22565b90059392505050565b60008260020b8260020b028060020b9150808214612ec257612ec2612f22565b600282810b9082900b03627fffff198112627fffff821317156129b9576129b9612f22565b6000606082840312156134bd57600080fd5b6129b68383612bbb565b6001600160a01b03828116828216039080821115612ec257612ec2612f22565b608081526000855180608084015260005b8181101561351557602081890181015160a08684010152016134f8565b50600060a0828501015260a0601f19601f8301168401019150508460208301528360408301528260608301529594505050505056fea2646970667358221220d8e0f8ee5ad050e409604b70797f40120bfc8d82fa3fe3767cb5b76f2e02acf164736f6c63430008120033";

type LPManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPManager__factory extends ContractFactory {
  constructor(...args: LPManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LPManager> {
    return super.deploy(overrides || {}) as Promise<LPManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LPManager {
    return super.attach(address) as LPManager;
  }
  override connect(signer: Signer): LPManager__factory {
    return super.connect(signer) as LPManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPManagerInterface {
    return new utils.Interface(_abi) as LPManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPManager {
    return new Contract(address, _abi, signerOrProvider) as LPManager;
  }
}
