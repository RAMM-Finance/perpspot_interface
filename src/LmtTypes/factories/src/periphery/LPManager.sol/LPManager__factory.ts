/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LPManager,
  LPManagerInterface,
} from "../../../../src/periphery/LPManager.sol/LPManager";

const _abi = [
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee0Collected",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee1Collected",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token0Amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token1Amount",
        type: "uint256",
      },
    ],
    name: "ProvidedLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "RepaidLiquidity",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "token0Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0Repaid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Repaid",
            type: "uint256",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
        ],
        internalType: "struct LPManager.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "provideLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "token0Amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Amount",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategist",
        type: "address",
      },
    ],
    name: "setStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "token0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Out",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c9f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630e5ecb5414610067578063485cc955146100a35780635d001c32146100b85780636817031b146100e0578063c7b9d530146100f3578063eb02c3011461012a575b600080fd5b61007a610075366004611786565b61014a565b6040805193845260208401929092526001600160801b0316908201526060015b60405180910390f35b6100b66100b136600461184c565b610671565b005b6100cb6100c636600461189a565b610979565b6040805192835260208301919091520161009a565b6100b66100ee3660046118bf565b610ec7565b6100b66101013660046118bf565b6001600160a01b03166000908152600460205260409020805460ff19811660ff90911615179055565b61013d6101383660046118dc565b611060565b60405161009a91906118f5565b336000908152600460205260408120548190819060ff166101a05760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b60448201526064015b60405180910390fd5b87516001600160a01b03858116911614806101d5576101d06101c189611171565b6101ca89611171565b88611494565b6101f0565b6101f06101e189611171565b6101ea89611171565b886114e7565b91506000612710610203886127116119a3565b61020d91906119d6565b60005460405163d6724a2d60e01b81526001600160a01b03898116600483015260248201849052929350620100009091049091169063d6724a2d90604401600060405180830381600087803b15801561026557600080fd5b505af1158015610279573d6000803e3d6000fd5b50506003805492509050600061028e836119f8565b909155505060035460009081526005602052604090206004810180548591906006906102cb908490600160301b90046001600160801b0316611a11565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550898160040160006101000a81548162ffffff021916908360020b62ffffff160217905550888160040160036101000a81548162ffffff021916908360020b62ffffff1602179055508a8160050160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548162ffffff021916908362ffffff1602179055509050506104636040518060400160405280600781526020016662616c616e636560c81b81525089896001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161041d91906001600160a01b0391909116815260200190565b602060405180830381865afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190611a31565b61157e565b60015460408051635c48cfd360e11b81528d516001600160a01b03908116600483015260208f015181166024830152918e015162ffffff16604482015260028d810b60648301528c900b60848201526001600160801b03871660a48201523060c482015291169063b8919fa69060e40160408051808303816000875af11580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105159190611a4a565b825491975095508690829060009061052e908490611a6e565b92505081905550848160010160008282546105499190611a6e565b90915550506000546201000090046001600160a01b031663eab47655888561057a576105758886611a81565b610584565b6105848986611a81565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260006044820152606401600060405180830381600087803b1580156105d157600080fd5b505af11580156105e5573d6000803e3d6000fd5b505050508a602001516001600160a01b03168b600001516001600160a01b03167f5f8ccb6fe4a5f24d182c1049d4a785cb5599c17834ab8c4d9514bc86070d72f26003548e604001518a8a60405161065b949392919093845262ffffff9290921660208401526040830152606082015260800190565b60405180910390a3505050955095509592505050565b600054610100900460ff16158080156106915750600054600160ff909116105b806106ab5750303b1580156106ab575060005460ff166001145b61070e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610197565b6000805460ff191660011790558015610731576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b03868116820292909217808455600180546001600160a01b031990811688861617909155600280543392169190911790556040805163152e3c9560e11b815290519290910490921691632a5c792a91600480830192869291908290030181865afa1580156107be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107e69190810190611a94565b905060005b815181101561092c5781818151811061080657610806611b46565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03868116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610862573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108869190611b5c565b5081818151811061089957610899611b46565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03878116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190611b5c565b5080610924816119f8565b9150506107eb565b50508015610974576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b33600090815260046020526040812054819060ff166109c85760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b6044820152606401610197565b600084815260056020526040902060048101546001600160801b03600160301b90910481169085161115610a245760405162461bcd60e51b81526020600482015260036024820152626c697160e81b6044820152606401610197565b838160040160068282829054906101000a90046001600160801b0316610a4a9190611b7e565b82546101009290920a6001600160801b03818102199093169183160217909155600154600484810154604051632afe5e3960e21b815260058701546001600160a01b03908116938201939093526006870154808416602483015262ffffff60a09190911c166044820152600282810b6064830152630100000090920490910b608482015292881660a484015216915063abf978e49060c40160408051808303816000875af1158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b249190611a4a565b6001546004848101546040516319fa103360e01b815260058701546001600160a01b03908116938201939093526006870154808416602483015260a01c62ffffff166044820152600282810b6064830152630100000090920490910b60848201529396509194506000928392909116906319fa10339060a40160408051808303816000875af1158015610bbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdf9190611b9e565b9092509050610bf76001600160801b03831686611a6e565b9450610c0c6001600160801b03821685611a6e565b935084836002016000828254610c229190611a6e565b9250508190555083836003016000828254610c3d9190611a6e565b9091555050600683015460058401546040805162ffffff600160a01b85041681526001600160801b03868116602083015285168183015290516001600160a01b0393841693909216917f0816a24e8386ec3fc6e374f1f9bc5f0848092a414747df77251edaabd79ce94b9181900360600190a360048301546064600160301b9091046001600160801b031611610e515782546002840154600091610ce091611bcd565b9050600084600101548560030154610cf89190611bcd565b6000546005870154875460405163eab4765560e01b81526001600160a01b03928316600482015260248101919091526044810186905292935062010000909104169063eab4765590606401600060405180830381600087803b158015610d5d57600080fd5b505af1158015610d71573d6000803e3d6000fd5b50506000546006880154600189015460405163eab4765560e01b81526001600160a01b0392831660048201526024810191909152604481018690526201000090920416925063eab476559150606401600060405180830381600087803b158015610dda57600080fd5b505af1158015610dee573d6000803e3d6000fd5b50505060008a81526005602081905260408220828155600181018390556002810183905560038101929092556004820180546001600160b01b0319169055810180546001600160a01b031916905560060180546001600160b81b03191690555050505b60068301546005840154604080518a815262ffffff600160a01b85041660208201526001600160801b038a168183015290516001600160a01b0393841693909216917f7d3b6c23c9b08de61da48640e0ddb486d73eb67dcf2fb9eecd8ab474ee61c9829181900360600190a35050509250929050565b6002546001600160a01b03163314610f0a5760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610197565b80600060026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060008060029054906101000a90046001600160a01b03166001600160a01b0316632a5c792a6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610f85573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fad9190810190611a94565b905060005b815181101561097457818181518110610fcd57610fcd611b46565b602090810291909101015160405163095ea7b360e01b81526001600160a01b03858116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015611029573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104d9190611b5c565b5080611058816119f8565b915050610fb2565b6110bb60408051610100810182526000808252602080830182905282840182905260608084018390526080840183905260a0840183905260c0840183905284519081018552828152908101829052928301529060e082015290565b5060009081526005602081815260409283902083516101008101855281548152600182015481840152600280830154828701526003830154606080840191909152600484015480830b60808501526301000000810490920b60a0840152600160301b9091046001600160801b031660c083015285519081018652938201546001600160a01b03908116855260069092015491821692840192909252600160a01b900462ffffff169282019290925260e082015290565b60008060008360020b12611188578260020b611190565b8260020b6000035b9050620d89e88111156111b6576040516315e4079d60e11b815260040160405180910390fd5b6000816001166000036111cd57600160801b6111df565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611213576ffff97272373d413259a46990580e213a0260801c5b6004821615611232576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611251576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615611270576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561128f576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156112ae576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156112cd576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156112ed576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561130d576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561132d576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561134d576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561136d576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561138d576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156113ad576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156113cd576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156113ee576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561140e576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561142d576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561144a576b048a170391f7dc42444e8fa20260801c5b60008460020b131561146b578060001981611467576114676119c0565b0490505b64010000000081061561147f576001611482565b60005b60ff16602082901c0192505050919050565b6000826001600160a01b0316846001600160a01b031611156114b4579192915b6114dd6114d883600160601b6114ca8888611bed565b6001600160a01b03166115c5565b6116a3565b90505b9392505050565b6000826001600160a01b0316846001600160a01b03161115611507579192915b600061152a856001600160a01b0316856001600160a01b0316600160601b6115c5565b9050801561154c576115446114d884836114ca8989611bed565b9150506114e0565b6115446114d861156a856001600160a01b0389166114ca8a8a611bed565b866001600160a01b0316600160601b6115c5565b61097483838360405160240161159693929190611c0d565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b1790526116e9565b60008080600019858709858702925082811083820303915050806000036115fe57600084116115f357600080fd5b5082900490506114e0565b8084116116365760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401610197565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b806001600160801b03811681146116e45760405162461bcd60e51b81526020600482015260056024820152640858d85cdd60da1b6044820152606401610197565b919050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156117495761174961170a565b604052919050565b6001600160a01b038116811461176657600080fd5b50565b80356116e481611751565b8035600281900b81146116e457600080fd5b600080600080600085870360e081121561179f57600080fd5b60608112156117ad57600080fd5b506040516060810181811067ffffffffffffffff821117156117d1576117d161170a565b60405286356117df81611751565b815260208701356117ef81611751565b6020820152604087013562ffffff8116811461180a57600080fd5b6040820152945061181d60608701611774565b935061182b60808701611774565b925060a0860135915061184060c08701611769565b90509295509295909350565b6000806040838503121561185f57600080fd5b823561186a81611751565b9150602083013561187a81611751565b809150509250929050565b6001600160801b038116811461176657600080fd5b600080604083850312156118ad57600080fd5b82359150602083013561187a81611885565b6000602082840312156118d157600080fd5b81356114e081611751565b6000602082840312156118ee57600080fd5b5035919050565b60006101408201905082518252602083015160208301526040830151604083015260608301516060830152608083015160020b608083015260a083015160020b60a08301526001600160801b0360c08401511660c083015260e083015161198660e084018280516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b5092915050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176119ba576119ba61198d565b92915050565b634e487b7160e01b600052601260045260246000fd5b6000826119f357634e487b7160e01b600052601260045260246000fd5b500490565b600060018201611a0a57611a0a61198d565b5060010190565b6001600160801b038181168382160190808211156119865761198661198d565b600060208284031215611a4357600080fd5b5051919050565b60008060408385031215611a5d57600080fd5b505080516020909101519092909150565b808201808211156119ba576119ba61198d565b818103818111156119ba576119ba61198d565b60006020808385031215611aa757600080fd5b825167ffffffffffffffff80821115611abf57600080fd5b818501915085601f830112611ad357600080fd5b815181811115611ae557611ae561170a565b8060051b9150611af6848301611720565b8181529183018401918481019088841115611b1057600080fd5b938501935b83851015611b3a5784519250611b2a83611751565b8282529385019390850190611b15565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611b6e57600080fd5b815180151581146114e057600080fd5b6001600160801b038281168282160390808211156119865761198661198d565b60008060408385031215611bb157600080fd5b8251611bbc81611885565b602084015190925061187a81611885565b81810360008312801583831316838312821617156119865761198661198d565b6001600160a01b038281168282160390808211156119865761198661198d565b606081526000845180606084015260005b81811015611c3b5760208188018101516080868401015201611c1e565b506000608082850101526080601f19601f83011684010191505083602083015282604083015294935050505056fea2646970667358221220828cecb4001c0c8d0283d2b0806edc2425c898c9be12cb316f92fa4c3e9737d564736f6c63430008120033";

type LPManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPManager__factory extends ContractFactory {
  constructor(...args: LPManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LPManager> {
    return super.deploy(overrides || {}) as Promise<LPManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LPManager {
    return super.attach(address) as LPManager;
  }
  override connect(signer: Signer): LPManager__factory {
    return super.connect(signer) as LPManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPManagerInterface {
    return new utils.Interface(_abi) as LPManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPManager {
    return new Contract(address, _abi, signerOrProvider) as LPManager;
  }
}
