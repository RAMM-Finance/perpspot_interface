/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Arbitrageur,
  ArbitrageurInterface,
} from "../../../src/periphery/Arbitrageur";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "canForceCloseTradePosition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "simulatedOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
        ],
        internalType: "struct AddParams",
        name: "addParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fillerOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flashOption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
        ],
        internalType: "struct Arbitrageur.FillerAddParams",
        name: "param",
        type: "tuple",
      },
    ],
    name: "fillAddOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrderSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrder",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.FillAddOrderReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "reducePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "reduceAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ReduceParam",
        name: "reduceParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fillerOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flashOption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
        ],
        internalType: "struct Arbitrageur.FillerReduceParams",
        name: "param",
        type: "tuple",
      },
    ],
    name: "fillReduceOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrderSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrder",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.FillReduceOrderReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "fillerPayAmount",
            type: "uint256",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
        ],
        internalType: "struct ForceCloseParams",
        name: "param",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "executionOption",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "executionData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "flashOption",
        type: "uint256",
      },
    ],
    name: "forceClose",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fillerPayAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromPositionSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromPosition",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.ForceCloseReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "down",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "curTick",
        type: "int24",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "makeSwapAmount",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
    ],
    name: "setNewContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200418b3803806200418b83398101604081905262000034916200011f565b600080546001600160a01b038086166001600160a01b03199283161790925560038054848416908316811790915560048054938616939092169290921781556040805163dc6ab02f60e01b8152905163dc6ab02f928281019260209291908290030181865afa158015620000ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d2919062000173565b600180546001600160a01b03929092166001600160a01b03199283161790556002805490911633179055506200019a915050565b6001600160a01b03811681146200011c57600080fd5b50565b6000806000606084860312156200013557600080fd5b8351620001428162000106565b6020850151909350620001558162000106565b6040850151909250620001688162000106565b809150509250925092565b6000602082840312156200018657600080fd5b8151620001938162000106565b9392505050565b613fe180620001aa6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ad5b34d41161005b578063ad5b34d414610116578063c093ae611461015c578063f43198881461016f578063fa461e331461018257600080fd5b806304e177a01461008d57806312da0932146100b657806313af4035146100de5780636eaaee6e146100f3575b600080fd5b6100a061009b366004612e7c565b610195565b6040516100ad9190612f8f565b60405180910390f35b6100c96100c4366004612fb2565b610b2f565b604080519283526020830191909152016100ad565b6100f16100ec36600461303f565b610c17565b005b61010661010136600461305c565b610c7c565b60405190151581526020016100ad565b6101296101243660046130ee565b610dfe565b6040516100ad91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b6100f161016a3660046131cc565b611adb565b6100a061017d366004613304565b611bde565b6100f1610190366004613455565b61246b565b6101b960405180606001604052806000815260200160008152602001600081525090565b6101fe6040518060c001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600060020b8152602001600081525090565b835161021657610211602086018661303f565b610226565b610226604086016020870161303f565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561026c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029091906134a7565b815260048054604051639525092360e01b81526001600160a01b03909116916395250923916102c191899101613510565b6101c060405180830381865afa1580156102df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610303919061353b565b50506001600160a01b03166020808301919091528301516000036109ac5760808401516001146105095783608001516002036103835760008460a00151511161037e5760405162461bcd60e51b8152602060048201526008602482015267657865636461746160c01b60448201526064015b60405180910390fd5b610509565b83608001516003036105095782516103c15760405162461bcd60e51b81526020600482015260016024820152600360fc1b6044820152606401610375565b83516103d9576103d4602086018661303f565b6103e9565b6103e9604086016020870161303f565b83516040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b0391909116906323b872dd906064016020604051808303816000875af1158015610441573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610465919061363d565b50835161047e57610479602086018661303f565b61048e565b61048e604086016020870161303f565b600154845160405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af11580156104e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610507919061363d565b505b83516105245761051f604086016020870161303f565b610531565b610531602086018661303f565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b91906134a7565b60408083019190915260035490516327bd6f8360e01b81526001600160a01b03909116906327bd6f83906105d590889088906004016136a0565b610100604051808303816000875af11580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610619919061375f565b506040810151845161063a57610635604087016020880161303f565b610647565b610647602087018761303f565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b191906134a7565b6106bb9190613804565b606082015283516000906106db576106d6602087018761303f565b6106eb565b6106eb604087016020880161303f565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610731573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075591906134a7565b905080156107fa57845161077557610770602087018761303f565b610785565b610785604087016020880161303f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af11580156107d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f8919061363d565b505b83604001516001148015610812575060008260600151115b156109905781602001516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087d9190613817565b5050505060029190910b608085015250506040805180820190915260048152636865726560e01b602082015260608301516108b8919061257d565b6000806108f98460200151338960000151876060015188608001518d60000160208101906108e6919061303f565b8e60200160208101906100c4919061303f565b91509150600082136109135761090e8261389f565b61091c565b61091c8161389f565b60a085015260408051808201909152600d81526c3b30b939903130b6103234b33360991b60208201526060850151610954919061257d565b6109896040518060400160405280600a8152602001691cddd85c1bdd5d1c1d5d60b21b8152508560a0015186606001516125c6565b50506109aa565b836040015160021480156109a8575060008260600151115b505b505b805184516109c6576109c1602087018761303f565b6109d6565b6109d6604087016020880161303f565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4091906134a7565b1015610a5e5760405162461bcd60e51b8152600401610375906138bb565b604051806060016040528082600001518660000151610a8957610a84602089018961303f565b610a99565b610a996040890160208a0161303f565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0391906134a7565b610b0d9190613804565b81526020018260a00151815260200182606001518152509150505b9392505050565b600080886001600160a01b031663128acb088989898b610b6157610b5c610b578b600a6138d9565b612612565b610b6f565b610b6f610b57600a8c6138fe565b604080513060208201526001600160a01b03808d1692820192909252908a1660608201526080016040516020818303038152906040526040518663ffffffff1660e01b8152600401610bc5959493929190613923565b60408051808303816000875af1158015610be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c079190613969565b9150915097509795505050505050565b6002546001600160a01b03163314610c5a5760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610375565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60048054604051639525092360e01b815260009283926001600160a01b031691639525092391610cae91899101613510565b6101c060405180830381865afa158015610ccc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf0919061353b565b505060035460405163118272bf60e31b81526001600160a01b0380841660048301528781166024830152861515604483015292935060009290911690638c1395f890606401600060405180830381865afa158015610d52573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d7a9190810190613b4a565b600354604051635c2a0a9360e11b81529192506001600160a01b03169063b854152690610db3908990859087908b908b90600401613c11565b602060405180830381865afa158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df4919061363d565b9695505050505050565b610e296040518060800160405280600081526020016000815260200160008152602001600081525090565b610e31612ac7565b60048054604051639525092360e01b81526001600160a01b0390911691639525092391610e60918c9101613510565b6101c060405180830381865afa158015610e7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea2919061353b565b5060020b6020838101919091526001600160a01b039182168084526003548a51928b015160405163118272bf60e31b8152600481019390935292841660248301529115156044820152911690638c1395f890606401600060405180830381865afa158015610f14573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f3c9190810190613b4a565b816060018190525080600001516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610f86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610faa9190613817565b5050505060029190910b60a084018190526001600160a01b0390921660808401525060608201515160c001516020898101519084015160405163374b7d3d60e11b815273__$d23a8dd93b7205fa6b646ffed38c165d68$";

type ArbitrageurConstructorParams =
  | [linkLibraryAddresses: ArbitrageurLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrageurConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Arbitrageur__factory extends ContractFactory {
  constructor(...args: ArbitrageurConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Arbitrageur__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ArbitrageurLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Arbitrageur> {
    return super.deploy(
      _factory,
      _poolManager,
      _marginFacility,
      overrides || {}
    ) as Promise<Arbitrageur>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _poolManager,
      _marginFacility,
      overrides || {}
    );
  }
  override attach(address: string): Arbitrageur {
    return super.attach(address) as Arbitrageur;
  }
  override connect(signer: Signer): Arbitrageur__factory {
    return super.connect(signer) as Arbitrageur__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrageurInterface {
    return new utils.Interface(_abi) as ArbitrageurInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Arbitrageur {
    return new Contract(address, _abi, signerOrProvider) as Arbitrageur;
  }
}

export interface ArbitrageurLibraryAddresses {
  ["src/Util.sol:Utils"]: string;
}
