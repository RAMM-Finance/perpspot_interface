/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Arbitrageur,
  ArbitrageurInterface,
} from "../../../src/periphery/Arbitrageur";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "canForceClose",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "canForceCloseTradePosition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "simulatedOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
        ],
        internalType: "struct AddParams",
        name: "addParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fillerOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flashOption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
        ],
        internalType: "struct Arbitrageur.FillerAddParams",
        name: "param",
        type: "tuple",
      },
    ],
    name: "fillAddOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrderSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrder",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.FillAddOrderReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "simulatedOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
        ],
        internalType: "struct AddParams",
        name: "addParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fillerOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flashOption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
        ],
        internalType: "struct Arbitrageur.FillerAddParams",
        name: "param",
        type: "tuple",
      },
    ],
    name: "fillAddOrder_",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrderSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrder",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.FillAddOrderReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "reducePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "reduceAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ReduceParam",
        name: "reduceParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fillerOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flashOption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
        ],
        internalType: "struct Arbitrageur.FillerReduceParams",
        name: "param",
        type: "tuple",
      },
    ],
    name: "fillReduceOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrderSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrder",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.FillReduceOrderReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "reducePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "reduceAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ReduceParam",
        name: "reduceParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fillerOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flashOption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
        ],
        internalType: "struct Arbitrageur.FillerReduceParams",
        name: "param",
        type: "tuple",
      },
    ],
    name: "fillReduceOrder_",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrderSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrder",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.FillReduceOrderReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "findSimulatedOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "fillerPayAmount",
            type: "uint256",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
        ],
        internalType: "struct ForceCloseParams",
        name: "param",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "executionOption",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "executionData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "flashOption",
        type: "uint256",
      },
    ],
    name: "forceClose",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fillerPayAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromPositionSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromPosition",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.ForceCloseReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reduceAmount",
        type: "uint256",
      },
    ],
    name: "getRepayInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0Required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Required",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "down",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "curTick",
        type: "int24",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "makeSwapAmount",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
    ],
    name: "setNewContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620053223803806200532283398101604081905262000034916200010d565b600380546001600160a01b038084166001600160a01b0319928316811790935560048054918616919092161781556040805163dc6ab02f60e01b8152905163dc6ab02f928281019260209291908290030181865afa1580156200009b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c191906200014c565b600180546001600160a01b03929092166001600160a01b0319928316179055600280549091163317905550620001739050565b6001600160a01b03811681146200010a57600080fd5b50565b600080604083850312156200012157600080fd5b82516200012e81620000f4565b60208401519092506200014181620000f4565b809150509250929050565b6000602082840312156200015f57600080fd5b81516200016c81620000f4565b9392505050565b61519f80620001836000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636a735b7b1161008c578063ad5b34d411610066578063ad5b34d414610230578063c093ae6114610276578063f431988814610289578063fa461e331461029c57600080fd5b80636a735b7b146101f75780636eaaee6e1461020a57806398f8e9471461021d57600080fd5b80632ca74475116100c85780632ca7447514610155578063450efe211461017857806360e96ec8146101ab57806362bfcf93146101e457600080fd5b806304e177a0146100ef57806312da09321461011857806313af403514610140575b600080fd5b6101026100fd366004613cd4565b6102af565b60405161010f9190613d48565b60405180910390f35b61012b610126366004613d6b565b610bd3565b6040805192835260208301919091520161010f565b61015361014e366004613df8565b610cc4565b005b610168610163366004613e15565b610d29565b604051901515815260200161010f565b61018b610186366004613df8565b610f83565b604080516001600160a01b0393841681529290911660208301520161010f565b6101be6101b9366004613e60565b611053565b604080519384526001600160a01b03909216602084015260020b9082015260600161010f565b6101026101f2366004614053565b61122f565b6101026102053660046140ed565b6113d7565b610168610218366004614163565b611587565b61012b61022b3660046141a2565b6116b5565b61024361023e36600461423a565b611984565b60405161010f91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b610153610284366004614318565b612658565b610102610297366004614358565b61275b565b6101536102aa3660046143d8565b612f90565b6102d360405180606001604052806000815260200160008152602001600081525090565b6103186040518060c001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600060020b8152602001600081525090565b835161032557845161032b565b84602001515b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610371573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610395919061442a565b815260048054604051639525092360e01b81526001600160a01b03909116916395250923916103c69189910161446f565b6101c060405180830381865afa1580156103e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610408919061449a565b50506001600160a01b0316602080830191909152830151600003610a7a5760808401516001146105e45783608001516002036104885760008460a0015151116104835760405162461bcd60e51b8152602060048201526008602482015267657865636461746160c01b60448201526064015b60405180910390fd5b6105e4565b83608001516003036105e45782516104c65760405162461bcd60e51b81526020600482015260016024820152600360fc1b604482015260640161047a565b83516104d35784516104d9565b84602001515b83516040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b0391909116906323b872dd906064016020604051808303816000875af1158015610531573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610555919061459c565b508351610563578451610569565b84602001515b600154845160405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af11580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e2919061459c565b505b83516105f45784602001516105f7565b84515b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561063d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610661919061442a565b60408083019190915260035490516327bd6f8360e01b81526001600160a01b03909116906327bd6f839061069b9088908890600401614609565b610100604051808303816000875af11580156106bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106df91906146c8565b50604081015184516106f55785602001516106f8565b85515b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561073e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610762919061442a565b61076c919061476d565b60608201528351600090610781578551610787565b85602001515b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f1919061442a565b9050801561088157845161080657855161080c565b85602001515b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af115801561085b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f919061459c565b505b83604001516001148015610899575060008260600151115b15610a5e5781602001516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156108e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109049190614780565b5050505060029190910b608085015250506040805180820190915260048152636865726560e01b6020820152606083015161093f919061318a565b6000806109698460200151338960000151876060015188608001518d600001518e60200151610bd3565b91509150600082136109835761097e82614808565b61098c565b61098c81614808565b60a085015260408051808201909152600d81526c3b30b939903130b6103234b33360991b602082015260608501516109c4919061318a565b6109f96040518060400160405280600a8152602001691cddd85c1bdd5d1c1d5d60b21b8152508560a0015186606001516131d3565b60008660600151806020019051810190610a13919061442a565b9050808560a001511015610a565760405162461bcd60e51b815260206004820152600a60248201526930b6b7bab73a1e36b4b760b11b604482015260640161047a565b505050610a78565b83604001516002148015610a76575060008260600151115b505b505b80518451610a89578551610a8f565b85602001515b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610ad5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af9919061442a565b1015610b175760405162461bcd60e51b815260040161047a90614824565b604051806060016040528082600001518660000151610b37578751610b3d565b87602001515b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610b83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba7919061442a565b610bb1919061476d565b81526020018260a00151815260200182606001518152509150505b9392505050565b600080886001600160a01b031663128acb088989898b610c0657610c01610bfc8b6101f4614842565b61321f565b610c15565b610c15610bfc6101f48c614867565b604080513060208201526001600160a01b03808d1692820192909252908a1660608201526000608082015260a0016040516020818303038152906040526040518663ffffffff1660e01b8152600401610c7295949392919061488c565b60408051808303816000875af1158015610c90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb491906148d2565b9150915097509795505050505050565b6002546001600160a01b03163314610d075760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b604482015260640161047a565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000806040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9991906148f6565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0991906148f6565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e799190614913565b62ffffff16905260035460405163118272bf60e31b81529192506000916001600160a01b0390911690638c1395f890610eba90899089908990600401614930565b600060405180830381865afa158015610ed7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610eff9190810190614b04565b600354604051635c2a0a9360e11b81529192506001600160a01b03169063b854152690610f3890859085908b908b908b90600401614c55565b602060405180830381865afa158015610f55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f79919061459c565b9695505050505050565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe891906148f6565b836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611026573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104a91906148f6565b91509150915091565b600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611097573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bb9190614780565b50505050505090506000856110d15760016110d4565b60005b90506110fe60405180604001604052806006815260200165185b5bdd5b9d60d21b8152508861318a565b876001600160a01b031663128acb083088158a85611137576111326001611128620d89e719614c9e565b610bfc9190614867565b611149565b611149610bfc620d89e7196001614842565b60408051336020820181905291810182905260608101919091526001608082015260a0016040516020818303038152906040526040518663ffffffff1660e01b815260040161119c95949392919061488c565b60408051808303816000875af19250505080156111d6575060408051601f3d908101601f191682019092526111d3918101906148d2565b60015b611221573d808015611204576040519150601f19603f3d011682016040523d82523d6000602084013e611209565b606091505b5061121381613542565b955095509550505050611226565b505050505b93509350939050565b61125360405180606001604052806000815260200160008152602001600081525090565b6040805160608101825260008082526020820181905291810191909152856001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d291906148f6565b6001600160a01b03908116825260408051630dfe168160e01b8152905191881691630dfe1681916004808201926020929091908290030181865afa15801561131e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134291906148f6565b81602001906001600160a01b031690816001600160a01b031681525050856001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c19190614913565b62ffffff166040820152610f798186868661275b565b6113fb60405180606001604052806000815260200160008152602001600081525090565b6040805160608101825260008082526020820181905291810191909152846001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611456573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147a91906148f6565b6001600160a01b0390811682526040805163d21220a760e01b815290519187169163d21220a7916004808201926020929091908290030181865afa1580156114c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ea91906148f6565b81602001906001600160a01b031690816001600160a01b031681525050846001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015611545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115699190614913565b62ffffff16604082015261157e8185856102af565b95945050505050565b60048054604051639525092360e01b815260009283926001600160a01b0316916395250923916115b991899101614d0b565b6101c060405180830381865afa1580156115d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fb919061449a565b505060035460405163118272bf60e31b81529192506000916001600160a01b0390911690638c1395f89061163790859089908990600401614930565b600060405180830381865afa158015611654573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261167c9190810190614b04565b600354604051635c2a0a9360e11b81529192506001600160a01b03169063b854152690610f38908990859087908b908b90600401614d19565b60048054604051639525092360e01b81526000928392839283926001600160a01b03909216916395250923916116ed918c910161446f565b6101c060405180830381865afa15801561170b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172f919061449a565b5060035460405163118272bf60e31b81529294509092506000916001600160a01b0390911690638c1395f89061176d9086908c908c90600401614930565b600060405180830381865afa15801561178a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117b29190810190614b04565b905060006117d7670de0b6b3a76400008360200151896135e99092919063ffffffff16565b9050600081670de0b6b3a76400001461187257825160c0015160405163069b8a8b60e31b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__916334dc54589161182891908690600401614d23565b600060405180830381865af4158015611845573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261186d9190810190614d45565b611879565b825160c001515b9050600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156118bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e09190614780565b50505050509150915073__$d23a8dd93b7205fa6b646ffed38c165d68$__63055d154884670de0b6b3a76400008985876040518663ffffffff1660e01b8152600401611930959493929190614d79565b6040805180830381865af415801561194c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197091906148d2565b909e909d509b505050505050505050505050565b6119af6040518060800160405280600081526020016000815260200160008152602001600081525090565b6119b7613810565b60048054604051639525092360e01b81526001600160a01b03909116916395250923916119e6918c9101614d0b565b6101c060405180830381865afa158015611a04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a28919061449a565b5060020b6020808401919091526001600160a01b039182168084526003548a51928b015160405163118272bf60e31b81529190941693638c1395f893611a749392909190600401614930565b600060405180830381865afa158015611a91573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ab99190810190614b04565b816060018190525080600001516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b279190614780565b5050505060029190910b60a084018190526001600160a01b0390921660808401525060608201515160c001516020898101519084015160405163374b7d3d60e11b815273__$d23a8dd93b7205fa6b646ffed38c165d68$";

type ArbitrageurConstructorParams =
  | [linkLibraryAddresses: ArbitrageurLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrageurConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Arbitrageur__factory extends ContractFactory {
  constructor(...args: ArbitrageurConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Arbitrageur__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ArbitrageurLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Arbitrageur> {
    return super.deploy(
      _poolManager,
      _marginFacility,
      overrides || {}
    ) as Promise<Arbitrageur>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _marginFacility,
      overrides || {}
    );
  }
  override attach(address: string): Arbitrageur {
    return super.attach(address) as Arbitrageur;
  }
  override connect(signer: Signer): Arbitrageur__factory {
    return super.connect(signer) as Arbitrageur__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrageurInterface {
    return new utils.Interface(_abi) as ArbitrageurInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Arbitrageur {
    return new Contract(address, _abi, signerOrProvider) as Arbitrageur;
  }
}

export interface ArbitrageurLibraryAddresses {
  ["src/Util.sol:Utils"]: string;
}
