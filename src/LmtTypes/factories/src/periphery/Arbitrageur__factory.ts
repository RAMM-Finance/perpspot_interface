/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Arbitrageur,
  ArbitrageurInterface,
} from "../../../src/periphery/Arbitrageur";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "canForceClose",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "canForceCloseTradePosition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "simulatedOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
        ],
        internalType: "struct AddParams",
        name: "addParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fillerOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flashOption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
        ],
        internalType: "struct Arbitrageur.FillerAddParams",
        name: "param",
        type: "tuple",
      },
    ],
    name: "fillAddOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrderSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrder",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.FillAddOrderReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "simulatedOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
        ],
        internalType: "struct AddParams",
        name: "addParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fillerOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flashOption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
        ],
        internalType: "struct Arbitrageur.FillerAddParams",
        name: "param",
        type: "tuple",
      },
    ],
    name: "fillAddOrder_",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrderSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrder",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.FillAddOrderReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "reducePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "reduceAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ReduceParam",
        name: "reduceParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fillerOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flashOption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
        ],
        internalType: "struct Arbitrageur.FillerReduceParams",
        name: "param",
        type: "tuple",
      },
    ],
    name: "fillReduceOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrderSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrder",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.FillReduceOrderReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "reducePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutput",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "reduceAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ReduceParam",
        name: "reduceParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fillerOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flashOption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionOption",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
        ],
        internalType: "struct Arbitrageur.FillerReduceParams",
        name: "param",
        type: "tuple",
      },
    ],
    name: "fillReduceOrder_",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrderSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromOrder",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.FillReduceOrderReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
    ],
    name: "findSimulatedOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bool",
            name: "positionIsToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "fillerPayAmount",
            type: "uint256",
          },
          {
            internalType: "int24",
            name: "slippedTickMin",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "slippedTickMax",
            type: "int24",
          },
        ],
        internalType: "struct ForceCloseParams",
        name: "param",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "executionOption",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "executionData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "flashOption",
        type: "uint256",
      },
    ],
    name: "forceClose",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fillerPayAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromPositionSold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtFromPosition",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrageur.ForceCloseReturn",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "down",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "curTick",
        type: "int24",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "makeSwapAmount",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
    ],
    name: "setNewContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162004f4538038062004f4583398101604081905262000034916200011f565b600080546001600160a01b038086166001600160a01b03199283161790925560038054848416908316811790915560048054938616939092169290921781556040805163dc6ab02f60e01b8152905163dc6ab02f928281019260209291908290030181865afa158015620000ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d2919062000173565b600180546001600160a01b03929092166001600160a01b03199283161790556002805490911633179055506200019a915050565b6001600160a01b03811681146200011c57600080fd5b50565b6000806000606084860312156200013557600080fd5b8351620001428162000106565b6020850151909350620001558162000106565b6040850151909250620001688162000106565b809150509250925092565b6000602082840312156200018657600080fd5b8151620001938162000106565b9392505050565b614d9b80620001aa6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806362bfcf931161008c578063ad5b34d411610066578063ad5b34d414610202578063c093ae6114610248578063f43198881461025b578063fa461e331461026e57600080fd5b806362bfcf93146101c95780636a735b7b146101dc5780636eaaee6e146101ef57600080fd5b806304e177a0146100d457806312da0932146100fd57806313af4035146101255780632ca744751461013a578063450efe211461015d57806360e96ec814610190575b600080fd5b6100e76100e236600461398e565b610281565b6040516100f49190613a02565b60405180910390f35b61011061010b366004613a25565b610b47565b604080519283526020830191909152016100f4565b610138610133366004613ab2565b610c36565b005b61014d610148366004613acf565b610c9b565b60405190151581526020016100f4565b61017061016b366004613ab2565b610efe565b604080516001600160a01b039384168152929091166020830152016100f4565b6101a361019e366004613b1a565b610fce565b604080519384526001600160a01b03909216602084015260020b908201526060016100f4565b6100e76101d7366004613d0d565b6111aa565b6100e76101ea366004613da7565b611352565b61014d6101fd366004613e1d565b611502565b610215610210366004613ea4565b611639565b6040516100f491908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b610138610256366004613f82565b612316565b6100e7610269366004613fc2565b612419565b61013861027c366004614042565b612c4e565b6102a560405180606001604052806000815260200160008152602001600081525090565b6102ea6040518060c001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600060020b8152602001600081525090565b83516102f75784516102fd565b84602001515b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103679190614094565b815260048054604051639525092360e01b81526001600160a01b0390911691639525092391610398918991016140d9565b6101c060405180830381865afa1580156103b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103da9190614104565b50506001600160a01b03166020808301919091528301516000036109ee5760808401516001146105b657836080015160020361045a5760008460a0015151116104555760405162461bcd60e51b8152602060048201526008602482015267657865636461746160c01b60448201526064015b60405180910390fd5b6105b6565b83608001516003036105b65782516104985760405162461bcd60e51b81526020600482015260016024820152600360fc1b604482015260640161044c565b83516104a55784516104ab565b84602001515b83516040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b0391909116906323b872dd906064016020604051808303816000875af1158015610503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105279190614206565b50835161053557845161053b565b84602001515b600154845160405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af1158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b49190614206565b505b83516105c65784602001516105c9565b84515b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561060f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106339190614094565b60408083019190915260035490516327bd6f8360e01b81526001600160a01b03909116906327bd6f839061066d9088908890600401614273565b610100604051808303816000875af115801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b19190614332565b50604081015184516106c75785602001516106ca565b85515b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107349190614094565b61073e91906143d7565b60608201528351600090610753578551610759565b85602001515b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561079f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c39190614094565b905080156108535784516107d85785516107de565b85602001515b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af115801561082d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108519190614206565b505b8360400151600114801561086b575060008260600151115b156109d25781602001516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d691906143ea565b5050505060029190910b608085015250506040805180820190915260048152636865726560e01b602082015260608301516109119190612e48565b60008061093b8460200151338960000151876060015188608001518d600001518e60200151610b47565b91509150600082136109555761095082614472565b61095e565b61095e81614472565b60a085015260408051808201909152600d81526c3b30b939903130b6103234b33360991b602082015260608501516109969190612e48565b6109cb6040518060400160405280600a8152602001691cddd85c1bdd5d1c1d5d60b21b8152508560a001518660600151612e91565b50506109ec565b836040015160021480156109ea575060008260600151115b505b505b805184516109fd578551610a03565b85602001515b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610a49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6d9190614094565b1015610a8b5760405162461bcd60e51b815260040161044c9061448e565b604051806060016040528082600001518660000151610aab578751610ab1565b87602001515b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b9190614094565b610b2591906143d7565b81526020018260a00151815260200182606001518152509150505b9392505050565b600080886001600160a01b031663128acb088989898b610b7957610b74610b6f8b600a6144ac565b612edd565b610b87565b610b87610b6f600a8c6144d1565b604080513060208201526001600160a01b03808d1692820192909252908a1660608201526000608082015260a0016040516020818303038152906040526040518663ffffffff1660e01b8152600401610be49594939291906144f6565b60408051808303816000875af1158015610c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c26919061453c565b9150915097509795505050505050565b6002546001600160a01b03163314610c795760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b604482015260640161044c565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000806040518060600160405280866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0b9190614560565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7b9190614560565b6001600160a01b03168152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610deb919061457d565b62ffffff16905260035460405163118272bf60e31b81526001600160a01b0388811660048301528781166024830152861515604483015292935060009290911690638c1395f890606401600060405180830381865afa158015610e52573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e7a919081019061474a565b600354604051635c2a0a9360e11b81529192506001600160a01b03169063b854152690610eb390859085908b908b908b906004016148ab565b602060405180830381865afa158015610ed0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef49190614206565b9695505050505050565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f639190614560565b836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc59190614560565b91509150915091565b600080600080866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611012573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103691906143ea565b505050505050905060008561104c57600161104f565b60005b905061107960405180604001604052806006815260200165185b5bdd5b9d60d21b81525088612e48565b876001600160a01b031663128acb083088158a856110b2576110ad60016110a3620d89e7196148f4565b610b6f91906144d1565b6110c4565b6110c4610b6f620d89e71960016144ac565b60408051336020820181905291810182905260608101919091526001608082015260a0016040516020818303038152906040526040518663ffffffff1660e01b81526004016111179594939291906144f6565b60408051808303816000875af1925050508015611151575060408051601f3d908101601f1916820190925261114e9181019061453c565b60015b61119c573d80801561117f576040519150601f19603f3d011682016040523d82523d6000602084013e611184565b606091505b5061118e81613200565b9550955095505050506111a1565b505050505b93509350939050565b6111ce60405180606001604052806000815260200160008152602001600081525090565b6040805160608101825260008082526020820181905291810191909152856001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124d9190614560565b6001600160a01b03908116825260408051630dfe168160e01b8152905191881691630dfe1681916004808201926020929091908290030181865afa158015611299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bd9190614560565b81602001906001600160a01b031690816001600160a01b031681525050856001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015611318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133c919061457d565b62ffffff166040820152610ef481868686612419565b61137660405180606001604052806000815260200160008152602001600081525090565b6040805160608101825260008082526020820181905291810191909152846001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f59190614560565b6001600160a01b0390811682526040805163d21220a760e01b815290519187169163d21220a7916004808201926020929091908290030181865afa158015611441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114659190614560565b81602001906001600160a01b031690816001600160a01b031681525050846001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e4919061457d565b62ffffff1660408201526114f9818585610281565b95945050505050565b60048054604051639525092360e01b815260009283926001600160a01b03169163952509239161153491899101614961565b6101c060405180830381865afa158015611552573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115769190614104565b505060035460405163118272bf60e31b81526001600160a01b0380841660048301528781166024830152861515604483015292935060009290911690638c1395f890606401600060405180830381865afa1580156115d8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611600919081019061474a565b600354604051635c2a0a9360e11b81529192506001600160a01b03169063b854152690610eb3908990859087908b908b9060040161496f565b6116646040518060800160405280600081526020016000815260200160008152602001600081525090565b61166c6134ca565b60048054604051639525092360e01b81526001600160a01b039091169163952509239161169b918c9101614961565b6101c060405180830381865afa1580156116b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116dd9190614104565b5060020b6020838101919091526001600160a01b039182168084526003548a51928b015160405163118272bf60e31b8152600481019390935292841660248301529115156044820152911690638c1395f890606401600060405180830381865afa15801561174f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611777919081019061474a565b816060018190525080600001516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156117c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e591906143ea565b5050505060029190910b60a084018190526001600160a01b0390921660808401525060608201515160c001516020898101519084015160405163374b7d3d60e11b815273__$d23a8dd93b7205fa6b646ffed38c165d68$__94636e96fa7a946118549490939092600401614979565b602060405180830381865af4158015611871573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118959190614094565b60c082015260808101516118a8906132a7565b60e082015260c08101516001036118e4576060808201515101516064906118d09060656149de565b6118da9190614a0b565b6040880152611945565b8060c0015160030361194557866020015161191f5760e081015160608201516020015161191a91670de0b6b3a7640000906132c4565b61193f565b60e081015160608201516020015161193f91670de0b6b3a76400006132c4565b60408801525b86602001516119605761195b6020890189613ab2565b611970565b6119706040890160208a01613ab2565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156119b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119da9190614094565b610140820152600083900361217d578060c0015160011480611a0057508060c001516003145b15611b6457604087015115611abb578660200151611a2a57611a256020890189613ab2565b611a3a565b611a3a6040890160208a01613ab2565b60408089015190516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b0391909116906323b872dd906064016020604051808303816000875af1158015611a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab99190614206565b505b8660200151611ad657611ad16020890189613ab2565b611ae6565b611ae66040890160208a01613ab2565b600154604089810151905163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af1158015611b3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b629190614206565b505b8660200151611bec57611b7d6040890160208a01613ab2565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015611bc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be79190614094565b611c63565b611bf96020890189613ab2565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015611c3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c639190614094565b61010082015260035460405163149de8c960e21b81526001600160a01b0390911690635277a32490611c9b908b908b90600401614a2d565b6020604051808303816000875af1158015611cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cde9190614094565b508061010001518760200151611d6d57611cfe60408a0160208b01613ab2565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015611d44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d689190614094565b611de4565b611d7a60208a018a613ab2565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015611dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de49190614094565b611dee91906143d7565b61012082015260c081015160011480611e0b57508060c001516003145b15611ea35785600103611e9e576000611e2760208a018a613ab2565b90506000611e3b60408b0160208c01613ab2565b60a0840151610120850151855160208d01519394509192909190600080611e67843385888a8d8d610b47565b9150915060008213611e8157611e7c82614472565b611e8a565b611e8a81614472565b6101608a015250611ff09650505050505050565b611ff0565b8060c00151600203611ff05760008760200151611ecf57611eca60408a0160208b01613ab2565b611edc565b611edc60208a018a613ab2565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015611f22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f469190614094565b90508015611fee578760200151611f6c57611f6760408a0160208b01613ab2565b611f79565b611f7960208a018a613ab2565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af1158015611fc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fec9190614206565b505b505b6000876020015161200d5761200860208a018a613ab2565b61201d565b61201d60408a0160208b01613ab2565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015612063573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120879190614094565b9050801561212f5787602001516120aa576120a560208a018a613ab2565b6120ba565b6120ba60408a0160208b01613ab2565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af1158015612109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212d9190614206565b505b61217b6040518060400160405280600f81526020016e1c185c985b481c185e585b5bdd5b9d608a1b815250828a6040015161216a91906143d7565b8461012001518561016001516133a2565b505b806101400151876020015161219e5761219960208a018a613ab2565b6121ae565b6121ae60408a0160208b01613ab2565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156121f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122189190614094565b10156122365760405162461bcd60e51b815260040161044c9061448e565b604051806080016040528082610140015189602001516122625761225d60208c018c613ab2565b612272565b61227260408c0160208d01613ab2565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156122b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122dc9190614094565b6122e691906143d7565b81526020018860400151815260200182610160015181526020018261012001518152509150509695505050505050565b6002546001600160a01b031633146123595760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b604482015260640161044c565b600080546001600160a01b038086166001600160a01b03199283161790925560038054848416908316811790915560048054938616939092169290921781556040805163dc6ab02f60e01b8152905163dc6ab02f928281019260209291908290030181865afa1580156123d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123f49190614560565b600180546001600160a01b0319166001600160a01b0392909216919091179055505050565b61243d60405180606001604052806000815260200160008152602001600081525090565b6124826040518060c00160405280600081526020016000815260200160008152602001600060020b81526020016000815260200160006001600160a01b031681525090565b8360800151612495578560200151612498565b85515b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156124de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125029190614094565b815260048054604051639525092360e01b81526001600160a01b0390911691639525092391612533918a91016140d9565b6101c060405180830381865afa158015612551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125759190614104565b50506001600160a01b031660a082015260408051808201909152600681526503535353535160d51b6020820152608085015161262f91906125ba5787602001516125bd565b87515b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015612603573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126279190614094565b8351336133f1565b8260200151600003612af25760a08401516001146127fa578360a001516002036126985760008460e0015151116126935760405162461bcd60e51b8152602060048201526008602482015267657865636461746160c01b604482015260640161044c565b6127fa565b8360a001516003036127fa5782516126d65760405162461bcd60e51b81526020600482015260016024820152600360fc1b604482015260640161044c565b83608001516126e95785602001516126ec565b85515b83516040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b0391909116906323b872dd906064016020604051808303816000875af1158015612744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127689190614206565b50836080015161277c57856020015161277f565b85515b600154845160405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af11580156127d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f89190614206565b505b836080015161280a578551612810565b85602001515b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015612856573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061287a9190614094565b8160200181815250506128af604051806040016040528060068152602001656265666f726560d01b8152508260200151612e48565b6003546040516345f477d160e11b81526001600160a01b0390911690638be8efa2906128e390899088908a90600401614a82565b6000604051808303816000875af1158015612902573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261292a9190810190614b54565b50505080602001518460800151612942578651612948565b86602001515b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561298e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129b29190614094565b6129bc91906143d7565b6040808301918252805180820190915260038152621bdd5d60ea1b602082015290516129e89190612e48565b8260400151600103612af2578060a001516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a5a91906143ea565b5050505060029190910b6060840181905260a0840151608088015160408601518b5160208d015160009750879650612a989533941593929091610b47565b9150915060008213612ab257612aad82614472565b612abb565b612abb81614472565b60808401908152604080518082018252600281526134b760f11b60208201528751918601519251612aef93919291906133a2565b50505b80516080850151612b07578660200151612b0a565b86515b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015612b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b749190614094565b1015612b925760405162461bcd60e51b815260040161044c9061448e565b604051806060016040528082600001518660800151612bb5578860200151612bb8565b88515b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015612bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c229190614094565b612c2c91906143d7565b8152602001826080015181526020018260400151815250915050949350505050565b6000808080612c5f85870187614ba3565b93509350935093508015612d4b5760008060008a13612c875788612c828b614472565b612c91565b89612c918a614472565b91509150600080336001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612cd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cfa91906143ea565b505050505091509150612d28604051806040016040528060038152602001623bba3360e91b81525084612e48565b612d348160020b61343a565b604051838152826020820152816040820152606081fd5b6000881315612dcb5760405163a9059cbb60e01b8152336004820152602481018990526001600160a01b0384169063a9059cbb906044016020604051808303816000875af1158015612da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dc59190614206565b50612e3e565b60405163a9059cbb60e01b8152336004820152602481018890526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015612e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e3c9190614206565b505b5050505050505050565b612e8d8282604051602401612e5e929190614bff565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052613482565b5050565b612ed8838383604051602401612ea993929190614c21565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052613482565b505050565b60008060008360020b12612ef4578260020b612efc565b8260020b6000035b9050620d89e8811115612f22576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003612f3957600160801b612f4b565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612f7f576ffff97272373d413259a46990580e213a0260801c5b6004821615612f9e576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612fbd576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612fdc576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612ffb576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561301a576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613039576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613059576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613079576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613099576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156130b9576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156130d9576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156130f9576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613119576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613139576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561315a576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561317a576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613199576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156131b6576b048a170391f7dc42444e8fa20260801c5b60008460020b13156131d75780600019816131d3576131d36149f5565b0490505b6401000000008106156131eb5760016131ee565b60005b60ff16602082901c0192505050919050565b60008060008351606014613286576044845110156132535760405162461bcd60e51b815260206004820152601060248201526f2ab732bc3832b1ba32b21032b93937b960811b604482015260640161044c565b6004840193508380602001905181019061326d9190614c46565b60405162461bcd60e51b815260040161044c9190614cb3565b8380602001905181019061329a9190614cc6565b9250925092509193909250565b6000806132b3836134a3565b9050610b408182670de0b6b3a76400005b60008080600019858709858702925082811083820303915050806000036132fd57600084116132f257600080fd5b508290049050610b40565b8084116133355760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b604482015260640161044c565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6133eb848484846040516024016133bc9493929190614cfe565b60408051601f198184030181529190526020810180516001600160e01b03166304772b3360e11b179052613482565b50505050565b6133eb8484848460405160240161340b9493929190614d2d565b60408051601f198184030181529190526020810180516001600160e01b031663bed728bf60e01b179052613482565b61347f8160405160240161345091815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316634e0c1d1d60e01b179052613482565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600060606134c26001600160a01b038416670de0b6b3a76400006149de565b901c92915050565b6040805161018081018252600080825260208201529081016134ea613589565b81526040805161014081018252600060608083018281526080840183905260a0840183905260c0840183905260e0840183905261010084018390526101208401919091528252602082810182905292820152910190815260200160006001600160a01b03168152602001600060020b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060e001604052806135cd6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff16815260200160008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561363957613639613601565b60405290565b60405161012081016001600160401b038111828210171561363957613639613601565b60405160c081016001600160401b038111828210171561363957613639613601565b60405161014081016001600160401b038111828210171561363957613639613601565b60405160a081016001600160401b038111828210171561363957613639613601565b60405160e081016001600160401b038111828210171561363957613639613601565b604051601f8201601f191681016001600160401b038111828210171561371357613713613601565b604052919050565b6001600160a01b038116811461347f57600080fd5b803561373b8161371b565b919050565b62ffffff8116811461347f57600080fd5b60006060828403121561376357600080fd5b61376b613617565b905081356137788161371b565b815260208201356137888161371b565b6020820152604082013561379b81613740565b604082015292915050565b801515811461347f57600080fd5b803561373b816137a6565b60006001600160401b038211156137d8576137d8613601565b50601f01601f191660200190565b600082601f8301126137f757600080fd5b813561380a613805826137bf565b6136eb565b81815284602083860101111561381f57600080fd5b816020850160208301376000918101602001919091529392505050565b8060020b811461347f57600080fd5b803561373b8161383c565b6000610120828403121561386957600080fd5b61387161363f565b905061387c826137b4565b8152602082013560208201526040820135604082015261389e60608301613730565b60608201526080820135608082015260a08201356001600160401b038111156138c657600080fd5b6138d2848285016137e6565b60a0830152506138e460c0830161384b565b60c08201526138f560e0830161384b565b60e082015261010080830135818301525092915050565b60006080828403121561391e57600080fd5b604051608081016001600160401b03828210818311171561394157613941613601565b81604052829350843583526020850135602084015260408501356040840152606085013591508082111561397457600080fd5b50613981858286016137e6565b6060830152505092915050565b600080600060a084860312156139a357600080fd5b6139ad8585613751565b925060608401356001600160401b03808211156139c957600080fd5b6139d587838801613856565b935060808601359150808211156139eb57600080fd5b506139f88682870161390c565b9150509250925092565b815181526020808301519082015260408083015190820152606081015b92915050565b600080600080600080600060e0888a031215613a4057600080fd5b8735613a4b8161371b565b96506020880135613a5b8161371b565b95506040880135613a6b816137a6565b9450606088013593506080880135613a828161383c565b925060a0880135613a928161371b565b915060c0880135613aa28161371b565b8091505092959891949750929550565b600060208284031215613ac457600080fd5b8135610b408161371b565b600080600060608486031215613ae457600080fd5b8335613aef8161371b565b92506020840135613aff8161371b565b91506040840135613b0f816137a6565b809150509250925092565b600080600060608486031215613b2f57600080fd5b8335613b3a8161371b565b9250602084013591506040840135613b0f816137a6565b60006001600160401b03821115613b6a57613b6a613601565b5060051b60200190565b6001600160801b038116811461347f57600080fd5b600082601f830112613b9a57600080fd5b81356020613baa61380583613b51565b82815260c09283028501820192828201919087851115613bc957600080fd5b8387015b85811015613c405781818a031215613be55760008081fd5b613bed613662565b8135613bf88161383c565b815281860135613c0781613b74565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101613bcd565b5090979650505050505050565b60006101408284031215613c6057600080fd5b613c68613684565b905081358152602082013560208201526040820135604082015260608201356060820152613c98608083016137b4565b608082015260a082013560a0820152613cb360c08301613730565b60c082015260e08201356001600160401b03811115613cd157600080fd5b613cdd848285016137e6565b60e083015250610100613cf181840161384b565b90820152610120613d0383820161384b565b9082015292915050565b60008060008060808587031215613d2357600080fd5b8435613d2e8161371b565b935060208501356001600160401b0380821115613d4a57600080fd5b613d5688838901613b89565b94506040870135915080821115613d6c57600080fd5b613d7888838901613c4d565b93506060870135915080821115613d8e57600080fd5b50613d9b8782880161390c565b91505092959194509250565b600080600060608486031215613dbc57600080fd5b8335613dc78161371b565b925060208401356001600160401b0380821115613de357600080fd5b613def87838801613856565b935060408601359150808211156139eb57600080fd5b600060608284031215613e1757600080fd5b50919050565b600080600060a08486031215613e3257600080fd5b613e3c8585613e05565b92506060840135613e4c8161371b565b91506080840135613b0f816137a6565b60008083601f840112613e6e57600080fd5b5081356001600160401b03811115613e8557600080fd5b602083019150836020828501011115613e9d57600080fd5b9250929050565b600080600080600080868803610160811215613ebf57600080fd5b613ec98989613e05565b965060a0605f1982011215613edd57600080fd5b50613ee66136a7565b6060880135613ef48161371b565b81526080880135613f04816137a6565b602082015260a0880135604082015260c0880135613f218161383c565b606082015260e0880135613f348161383c565b6080820152945061010087013593506101208701356001600160401b03811115613f5d57600080fd5b613f6989828a01613e5c565b979a969950949794969561014090950135949350505050565b600080600060608486031215613f9757600080fd5b8335613fa28161371b565b92506020840135613fb28161371b565b91506040840135613b0f8161371b565b60008060008060c08587031215613fd857600080fd5b613fe28686613751565b935060608501356001600160401b0380821115613ffe57600080fd5b61400a88838901613b89565b9450608087013591508082111561402057600080fd5b61402c88838901613c4d565b935060a0870135915080821115613d8e57600080fd5b6000806000806060858703121561405857600080fd5b843593506020850135925060408501356001600160401b0381111561407c57600080fd5b61408887828801613e5c565b95989497509550505050565b6000602082840312156140a657600080fd5b5051919050565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b60608101613a1f82846140ad565b805161373b8161371b565b805161ffff8116811461373b57600080fd5b60008060008385036101c081121561411b57600080fd5b84516141268161371b565b60208601519094506141378161383c565b9250603f19016101808082121561414d57600080fd5b6141556136c9565b60c083121561416357600080fd5b61416b613662565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a08401528281526101008701516020820152610120870151604082015261014087015160608201526141d761016088016140f2565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b805161373b816137a6565b60006020828403121561421857600080fd5b8151610b40816137a6565b60005b8381101561423e578181015183820152602001614226565b50506000910152565b6000815180845261425f816020860160208601614223565b601f01601f19169290920160200192915050565b61427d81846140ad565b6080606082015261429360808201835115159052565b602082015160a0820152604082015160c0820152600060608301516142c360e08401826001600160a01b03169052565b5060808301516101008381019190915260a084015161012080850152906142ee6101a0850183614247565b915060c085015161430561014086018260020b9052565b5060e085015161431b61016086018260020b9052565b508085015161018085015250809150509392505050565b600061010080838503121561434657600080fd5b604051908101906001600160401b038211818310171561436857614368613601565b81604052835181526020840151602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152809250505092915050565b634e487b7160e01b600052601160045260246000fd5b81810381811115613a1f57613a1f6143c1565b600080600080600080600060e0888a03121561440557600080fd5b87516144108161371b565b60208901519097506144218161383c565b955061442f604089016140f2565b945061443d606089016140f2565b935061444b608089016140f2565b925060a088015160ff8116811461446157600080fd5b60c0890151909250613aa2816137a6565b6000600160ff1b8201614487576144876143c1565b5060000390565b6020808252600490820152636c6f737360e01b604082015260600190565b600281810b9083900b01627fffff8113627fffff1982121715613a1f57613a1f6143c1565b600282810b9082900b03627fffff198112627fffff82131715613a1f57613a1f6143c1565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a06080820181905260009061453190830184614247565b979650505050505050565b6000806040838503121561454f57600080fd5b505080516020909101519092909150565b60006020828403121561457257600080fd5b8151610b408161371b565b60006020828403121561458f57600080fd5b8151610b4081613740565b805163ffffffff8116811461373b57600080fd5b600082601f8301126145bf57600080fd5b815160206145cf61380583613b51565b82815260c092830285018201928282019190878511156145ee57600080fd5b8387015b85811015613c405781818a03121561460a5760008081fd5b614612613662565b815161461d8161383c565b81528186015161462c81613b74565b8187015260408281015190820152606080830151908201526080808301519082015260a0808301519082015284529284019281016145f2565b60006060828403121561467757600080fd5b61467f613617565b905081516001600160401b038082111561469857600080fd5b9083019060e082860312156146ac57600080fd5b6146b46136c9565b6146bd836140e7565b81526146cb602084016141fb565b602082015260408301516040820152606083015160608201526146f06080840161459a565b608082015261470160a0840161459a565b60a082015260c08301518281111561471857600080fd5b614724878286016145ae565b60c083015250808452505050602082015160208201526040820151604082015292915050565b60006020828403121561475c57600080fd5b81516001600160401b0381111561477257600080fd5b61477e84828501614665565b949350505050565b805160020b82526001600160801b03602082015116602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600081518084526020808501945080840160005b83811015614806576147f3878351614786565b60c09690960195908201906001016147e0565b509495945050505050565b600081516060845260018060a01b038151166060850152602081015115156080850152604081015160a0850152606081015160c085015263ffffffff60808201511660e085015260a081015161487061010086018263ffffffff169052565b5060c0015160e061012085015261488b6101408501826147cc565b905060208301516020850152604083015160408501528091505092915050565b6148b581876140ad565b60e0606082015260006148cb60e0830187614811565b6001600160a01b0395861660808401529390941660a082015290151560c0909101529392505050565b60008160020b627fffff19810361490d5761490d6143c1565b60000392915050565b80356149218161371b565b6001600160a01b03908116835260208201359061493d8261371b565b166020830152604081013561495181613740565b62ffffff81166040840152505050565b60608101613a1f8284614916565b6148b58187614916565b6080808252855190820181905260009060209060a0840190828901845b828110156149bc576149a9848351614786565b60c0939093019290840190600101614996565b5050509515159083015250600292830b6040820152910b606090910152919050565b8082028115828204841417613a1f57613a1f6143c1565b634e487b7160e01b600052601260045260246000fd5b600082614a2857634e487b7160e01b600052601260045260246000fd5b500490565b6101008101614a3c8285614916565b60018060a01b038351166060830152602083015115156080830152604083015160a0830152606083015160020b60c0830152608083015160020b60e08301529392505050565b614a8c81856140ad565b60a06060820152825160a0820152602083015160c0820152604083015160e082015260006060840151610100818185015260808601519150610120614ad48186018415159052565b60a08701516101408681019190915260c08801516001600160a01b031661016087015260e08801516101808701919091529250614b156101e0860184614247565b91870151919250614b2c6101a086018360020b9052565b8601519050614b416101c085018260020b9052565b508281036080840152610ef481856147cc565b600080600060608486031215614b6957600080fd5b83516001600160401b03811115614b7f57600080fd5b614b8b86828701614665565b93505060208401519150604084015190509250925092565b60008060008060808587031215614bb957600080fd5b8435614bc48161371b565b93506020850135614bd48161371b565b92506040850135614be48161371b565b91506060850135614bf4816137a6565b939692955090935050565b604081526000614c126040830185614247565b90508260208301529392505050565b606081526000614c346060830186614247565b60208301949094525060400152919050565b600060208284031215614c5857600080fd5b81516001600160401b03811115614c6e57600080fd5b8201601f81018413614c7f57600080fd5b8051614c8d613805826137bf565b818152856020838501011115614ca257600080fd5b6114f9826020830160208601614223565b602081526000610b406020830184614247565b600080600060608486031215614cdb57600080fd5b835192506020840151614ced8161371b565b6040850151909250613b0f8161383c565b608081526000614d116080830187614247565b6020830195909552506040810192909252606090910152919050565b608081526000614d406080830187614247565b60208301959095525060408101929092526001600160a01b031660609091015291905056fea2646970667358221220b7c0495c6e8af233ca0ed067704d932501fc942571bdb27fe433aeb4f418fb1e64736f6c63430008120033";

type ArbitrageurConstructorParams =
  | [linkLibraryAddresses: ArbitrageurLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrageurConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Arbitrageur__factory extends ContractFactory {
  constructor(...args: ArbitrageurConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Arbitrageur__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ArbitrageurLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Arbitrageur> {
    return super.deploy(
      _factory,
      _poolManager,
      _marginFacility,
      overrides || {}
    ) as Promise<Arbitrageur>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _poolManager: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _poolManager,
      _marginFacility,
      overrides || {}
    );
  }
  override attach(address: string): Arbitrageur {
    return super.attach(address) as Arbitrageur;
  }
  override connect(signer: Signer): Arbitrageur__factory {
    return super.connect(signer) as Arbitrageur__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrageurInterface {
    return new utils.Interface(_abi) as ArbitrageurInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Arbitrageur {
    return new Contract(address, _abi, signerOrProvider) as Arbitrageur;
  }
}

export interface ArbitrageurLibraryAddresses {
  ["src/Util.sol:Utils"]: string;
}
