/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ReferralSystem,
  ReferralSystemInterface,
} from "../../../../src/periphery/Registry.sol/ReferralSystem";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "code",
        type: "bytes32",
      },
    ],
    name: "RegisterCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "code",
        type: "bytes32",
      },
    ],
    name: "SetReferralCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "SetReferrerTier",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "codeOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "codeUsedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "codeUsers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "codesByOwners",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "codeOwner",
        type: "address",
      },
    ],
    name: "getReferees",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAuth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCodes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "referralMultipliers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "referrerTiers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_code",
        type: "bytes32",
      },
    ],
    name: "registerCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_code",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "registerCodeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_codes",
        type: "bytes32[]",
      },
    ],
    name: "registerCodes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_auth",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isActive",
        type: "bool",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "setMaxCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_code",
        type: "bytes32",
      },
    ],
    name: "setReferralCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_code",
        type: "bytes32",
      },
    ],
    name: "setReferralCodeByUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_referralMultiplier",
        type: "uint256",
      },
    ],
    name: "setReferralMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tierId",
        type: "uint256",
      },
    ],
    name: "setTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userReferralCodes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d11806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063964c0594116100ad578063aabae2a811610071578063aabae2a8146102c4578063c8b3c460146102d7578063c95d551314610300578063d499bc8514610320578063f1a20fdc1461034057600080fd5b8063964c0594146102585780639b2c76d41461026b5780639cb7de4b1461028b578063a8483b7b1461029e578063a914adce146102b157600080fd5b80634dbd4f42116100f45780634dbd4f42146101df5780636dba22321461020a5780638129fc1c1461022a5780638af1aa95146102325780638eed79f61461024557600080fd5b806309ce8a6d146101315780631582a01814610164578063170018fe146101845780632520e7ff1461019957806336def2c8146101cc575b600080fd5b61015161013f366004610aca565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b610151610172366004610aca565b60026020526000908152604090205481565b610197610192366004610aec565b610353565b005b6101bc6101a7366004610aca565b60046020526000908152604090205460ff1681565b604051901515815260200161015b565b6101976101da366004610aec565b610360565b6101f26101ed366004610b05565b610493565b6040516001600160a01b03909116815260200161015b565b610151610218366004610aec565b60096020526000908152604090205481565b6101976104cb565b610197610240366004610b27565b6105ed565b610197610253366004610b51565b610638565b610197610266366004610b7d565b6107a8565b610151610279366004610aca565b60016020526000908152604090205481565b610197610299366004610bf2565b6107eb565b6101516102ac366004610b27565b610845565b6101976102bf366004610b27565b610876565b6101976102d2366004610aec565b6108f6565b6101f26102e5366004610aec565b6006602052600090815260409020546001600160a01b031681565b61015161030e366004610aca565b60086020526000908152604090205481565b61033361032e366004610aca565b61092a565b60405161015b9190610c2e565b61019761034e366004610b27565b6109cd565b61035d3382610a0a565b50565b806103a15760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420636f646560a01b60448201526064015b60405180910390fd5b6000818152600660205260409020546001600160a01b0316156103fc5760405162461bcd60e51b8152602060048201526013602482015272636f646520616c72656164792065786973747360681b6044820152606401610398565b600081815260066020908152604080832080546001600160a01b031916339081179091558084526005835281842080546001810182559085528385200185905583526008909152812080549161045183610c7b565b909155505060408051338152602081018390527f04f82286a2a3b2ee5c8555de8304dfe2ea70991613213184b73a9e408d2d802991015b60405180910390a150565b600760205281600052604060002081815481106104af57600080fd5b6000918252602090912001546001600160a01b03169150829050565b600054610100900460ff16158080156104eb5750600054600160ff909116105b806105055750303b158015610505575060005460ff166001145b6105685760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610398565b6000805460ff19166001179055801561058b576000805461ff0019166101001790555b336000908152600460205260409020805460ff19166001908117909155600a55801561035d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610488565b3360009081526004602052604090205460ff1661061c5760405162461bcd60e51b815260040161039890610ca2565b6001600160a01b03909116600090815260036020526040902055565b3360009081526004602052604090205460ff166106675760405162461bcd60e51b815260040161039890610ca2565b816106a35760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420636f646560a01b6044820152606401610398565b6000828152600660205260409020546001600160a01b0316156106fe5760405162461bcd60e51b8152602060048201526013602482015272636f646520616c72656164792065786973747360681b6044820152606401610398565b600082815260066020908152604080832080546001600160a01b0319166001600160a01b0386169081179091558084526005835281842080546001810182559085528385200186905583526008909152812080549161075c83610c7b565b9091555050604080516001600160a01b0383168152602081018490527f04f82286a2a3b2ee5c8555de8304dfe2ea70991613213184b73a9e408d2d802991015b60405180910390a15050565b60005b818110156107e6576107d48383838181106107c8576107c8610cc5565b90506020020135610360565b806107de81610c7b565b9150506107ab565b505050565b3360009081526004602052604090205460ff1661081a5760405162461bcd60e51b815260040161039890610ca2565b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b6005602052816000526040600020818154811061086157600080fd5b90600052602060002001600091509150505481565b3360009081526004602052604090205460ff166108a55760405162461bcd60e51b815260040161039890610ca2565b6001600160a01b038216600081815260026020908152604091829020849055815192835282018390527f7696855cdbb94bb5a44cb0a95caff6f29173aa1cbfba193834b12b90827ce2bc910161079c565b3360009081526004602052604090205460ff166109255760405162461bcd60e51b815260040161039890610ca2565b600a55565b6001600160a01b038116600090815260056020526040812080546060929190829061095757610957610cc5565b6000918252602080832090910154808352600782526040928390208054845181850281018501909552808552919450918301828280156109c057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109a2575b5050505050915050919050565b3360009081526004602052604090205460ff166109fc5760405162461bcd60e51b815260040161039890610ca2565b610a068282610a0a565b5050565b6001600160a01b03821660008181526001602081815260408084208690558584526007825280842080549384018155845281842090920180546001600160a01b0319169094179093558382526009909252908120805491610a6a83610c7b565b9091555050604080516001600160a01b0384168152602081018390527f60750994fdf9995c19bee1ac3f38a6fbf271ecd405e8bd0d55c99f7f14f86e0f910161079c565b80356001600160a01b0381168114610ac557600080fd5b919050565b600060208284031215610adc57600080fd5b610ae582610aae565b9392505050565b600060208284031215610afe57600080fd5b5035919050565b60008060408385031215610b1857600080fd5b50508035926020909101359150565b60008060408385031215610b3a57600080fd5b610b4383610aae565b946020939093013593505050565b60008060408385031215610b6457600080fd5b82359150610b7460208401610aae565b90509250929050565b60008060208385031215610b9057600080fd5b823567ffffffffffffffff80821115610ba857600080fd5b818501915085601f830112610bbc57600080fd5b813581811115610bcb57600080fd5b8660208260051b8501011115610be057600080fd5b60209290920196919550909350505050565b60008060408385031215610c0557600080fd5b610c0e83610aae565b915060208301358015158114610c2357600080fd5b809150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610c6f5783516001600160a01b031683529284019291840191600101610c4a565b50909695505050505050565b600060018201610c9b57634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252600990820152683337b93134b23232b760b91b604082015260600190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122009ef22f3f701704227c88dd3d5c9e5d8f3f84f84bdc610d9614a0e309b134d3964736f6c63430008120033";

type ReferralSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReferralSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReferralSystem__factory extends ContractFactory {
  constructor(...args: ReferralSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReferralSystem> {
    return super.deploy(overrides || {}) as Promise<ReferralSystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReferralSystem {
    return super.attach(address) as ReferralSystem;
  }
  override connect(signer: Signer): ReferralSystem__factory {
    return super.connect(signer) as ReferralSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralSystemInterface {
    return new utils.Interface(_abi) as ReferralSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReferralSystem {
    return new Contract(address, _abi, signerOrProvider) as ReferralSystem;
  }
}
