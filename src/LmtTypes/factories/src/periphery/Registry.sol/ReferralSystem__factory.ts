/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ReferralSystem,
  ReferralSystemInterface,
} from "../../../../src/periphery/Registry.sol/ReferralSystem";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "code",
        type: "bytes32",
      },
    ],
    name: "RegisterCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "code",
        type: "bytes32",
      },
    ],
    name: "SetReferralCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "SetReferrerTier",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "codeOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "codeUsers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "codesByOwners",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAuth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "referrerTiers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_code",
        type: "bytes32",
      },
    ],
    name: "registerCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_code",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "registerCodeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_codes",
        type: "bytes32[]",
      },
    ],
    name: "registerCodes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_auth",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isActive",
        type: "bool",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_code",
        type: "bytes32",
      },
    ],
    name: "setReferralCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_code",
        type: "bytes32",
      },
    ],
    name: "setReferralCodeByUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tierId",
        type: "uint256",
      },
    ],
    name: "setReferrerTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userReferralCodes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a4d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638eed79f61161008c5780639cb7de4b116100665780639cb7de4b14610209578063a8483b7b1461021c578063c8b3c4601461022f578063f1a20fdc1461025857600080fd5b80638eed79f6146101c3578063964c0594146101d65780639b2c76d4146101e957600080fd5b806336def2c8116100c857806336def2c81461016a5780633fb8b3231461017d5780634dbd4f42146101905780638129fc1c146101bb57600080fd5b80631582a018146100ef578063170018fe146101225780632520e7ff14610137575b600080fd5b61010f6100fd366004610853565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b610135610130366004610875565b61026b565b005b61015a610145366004610853565b60036020526000908152604090205460ff1681565b6040519015158152602001610119565b610135610178366004610875565b610278565b61013561018b36600461088e565b610391565b6101a361019e3660046108b8565b610419565b6040516001600160a01b039091168152602001610119565b610135610451565b6101356101d13660046108da565b61056d565b6101356101e4366004610906565b6106b2565b61010f6101f7366004610853565b60016020526000908152604090205481565b61013561021736600461097b565b6106f5565b61010f61022a36600461088e565b61074f565b6101a361023d366004610875565b6005602052600090815260409020546001600160a01b031681565b61013561026636600461088e565b610780565b61027533826107bd565b50565b806102b95760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420636f646560a01b60448201526064015b60405180910390fd5b6000818152600560205260409020546001600160a01b0316156103145760405162461bcd60e51b8152602060048201526013602482015272636f646520616c72656164792065786973747360681b60448201526064016102b0565b600081815260056020908152604080832080546001600160a01b031916339081179091558084526004835281842080546001810182559085529383902090930184905580519283529082018390527f04f82286a2a3b2ee5c8555de8304dfe2ea70991613213184b73a9e408d2d802991015b60405180910390a150565b3360009081526003602052604090205460ff166103c05760405162461bcd60e51b81526004016102b0906109b7565b6001600160a01b038216600081815260026020908152604091829020849055815192835282018390527f7696855cdbb94bb5a44cb0a95caff6f29173aa1cbfba193834b12b90827ce2bc91015b60405180910390a15050565b6006602052816000526040600020818154811061043557600080fd5b6000918252602090912001546001600160a01b03169150829050565b600054610100900460ff16158080156104715750600054600160ff909116105b8061048b5750303b15801561048b575060005460ff166001145b6104ee5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102b0565b6000805460ff191660011790558015610511576000805461ff0019166101001790555b336000908152600360205260409020805460ff191660011790558015610275576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610386565b3360009081526003602052604090205460ff1661059c5760405162461bcd60e51b81526004016102b0906109b7565b816105d85760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420636f646560a01b60448201526064016102b0565b6000828152600560205260409020546001600160a01b0316156106335760405162461bcd60e51b8152602060048201526013602482015272636f646520616c72656164792065786973747360681b60448201526064016102b0565b600082815260056020908152604080832080546001600160a01b0319166001600160a01b0386169081179091558084526004835281842080546001810182559085529383902090930185905580519283529082018490527f04f82286a2a3b2ee5c8555de8304dfe2ea70991613213184b73a9e408d2d8029910161040d565b60005b818110156106f0576106de8383838181106106d2576106d26109da565b90506020020135610278565b806106e8816109f0565b9150506106b5565b505050565b3360009081526003602052604090205460ff166107245760405162461bcd60e51b81526004016102b0906109b7565b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b6004602052816000526040600020818154811061076b57600080fd5b90600052602060002001600091509150505481565b3360009081526003602052604090205460ff166107af5760405162461bcd60e51b81526004016102b0906109b7565b6107b982826107bd565b5050565b6001600160a01b0382166000818152600160208181526040808420869055858452600682528084208054938401815584529281902090910180546001600160a01b03191684179055815192835282018390527f60750994fdf9995c19bee1ac3f38a6fbf271ecd405e8bd0d55c99f7f14f86e0f910161040d565b80356001600160a01b038116811461084e57600080fd5b919050565b60006020828403121561086557600080fd5b61086e82610837565b9392505050565b60006020828403121561088757600080fd5b5035919050565b600080604083850312156108a157600080fd5b6108aa83610837565b946020939093013593505050565b600080604083850312156108cb57600080fd5b50508035926020909101359150565b600080604083850312156108ed57600080fd5b823591506108fd60208401610837565b90509250929050565b6000806020838503121561091957600080fd5b823567ffffffffffffffff8082111561093157600080fd5b818501915085601f83011261094557600080fd5b81358181111561095457600080fd5b8660208260051b850101111561096957600080fd5b60209290920196919550909350505050565b6000806040838503121561098e57600080fd5b61099783610837565b9150602083013580151581146109ac57600080fd5b809150509250929050565b6020808252600990820152683337b93134b23232b760b91b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201610a1057634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212203161437750476403fb6ee30cf1eb393219287a246b667671892cfc14a79c0c0564736f6c63430008120033";

type ReferralSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReferralSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReferralSystem__factory extends ContractFactory {
  constructor(...args: ReferralSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReferralSystem> {
    return super.deploy(overrides || {}) as Promise<ReferralSystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReferralSystem {
    return super.attach(address) as ReferralSystem;
  }
  override connect(signer: Signer): ReferralSystem__factory {
    return super.connect(signer) as ReferralSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralSystemInterface {
    return new utils.Interface(_abi) as ReferralSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReferralSystem {
    return new Contract(address, _abi, signerOrProvider) as ReferralSystem;
  }
}
