/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ReferralSystem,
  ReferralSystemInterface,
} from "../../../../src/periphery/Registry.sol/ReferralSystem";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "code",
        type: "bytes32",
      },
    ],
    name: "RegisterCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "code",
        type: "bytes32",
      },
    ],
    name: "SetReferralCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "SetReferrerTier",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "codeOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "codeUsedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "codeUsers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "codesByOwners",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "codeOwner",
        type: "address",
      },
    ],
    name: "getReferees",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAuth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCodes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "referralMultipliers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "referrerTiers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_code",
        type: "bytes32",
      },
    ],
    name: "registerCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_code",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "registerCodeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_codes",
        type: "bytes32[]",
      },
    ],
    name: "registerCodes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_auth",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isActive",
        type: "bool",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "setMaxCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxCode",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxUsage",
        type: "uint256",
      },
    ],
    name: "setMaxValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_code",
        type: "bytes32",
      },
    ],
    name: "setReferralCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_code",
        type: "bytes32",
      },
    ],
    name: "setReferralCodeByUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_referralMultiplier",
        type: "uint256",
      },
    ],
    name: "setReferralMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tierId",
        type: "uint256",
      },
    ],
    name: "setTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userReferralCodes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f03806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063964c0594116100b8578063aabae2a81161007c578063aabae2a8146102f5578063c8b3c46014610308578063c95d551314610331578063d499bc8514610351578063dfbed20a14610371578063f1a20fdc1461038457600080fd5b8063964c0594146102895780639b2c76d41461029c5780639cb7de4b146102bc578063a8483b7b146102cf578063a914adce146102e257600080fd5b80634dbd4f421161010a5780634dbd4f42146101f557806350026287146102205780636dba22321461023b5780638129fc1c1461025b5780638af1aa95146102635780638eed79f61461027657600080fd5b806309ce8a6d146101475780631582a0181461017a578063170018fe1461019a5780632520e7ff146101af57806336def2c8146101e2575b600080fd5b610167610155366004610cbc565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b610167610188366004610cbc565b60026020526000908152604090205481565b6101ad6101a8366004610cde565b610397565b005b6101d26101bd366004610cbc565b60046020526000908152604090205460ff1681565b6040519015158152602001610171565b6101ad6101f0366004610cde565b6103a4565b610208610203366004610cf7565b610538565b6040516001600160a01b039091168152602001610171565b600a54600b5460408051928352602083019190915201610171565b610167610249366004610cde565b60096020526000908152604090205481565b6101ad610570565b6101ad610271366004610d19565b610697565b6101ad610284366004610d43565b6106e2565b6101ad610297366004610d6f565b610852565b6101676102aa366004610cbc565b60016020526000908152604090205481565b6101ad6102ca366004610de4565b610895565b6101676102dd366004610d19565b6108ef565b6101ad6102f0366004610d19565b610920565b6101ad610303366004610cde565b6109a0565b610208610316366004610cde565b6006602052600090815260409020546001600160a01b031681565b61016761033f366004610cbc565b60086020526000908152604090205481565b61036461035f366004610cbc565b6109d4565b6040516101719190610e20565b6101ad61037f366004610cf7565b610a77565b6101ad610392366004610d19565b610ab1565b6103a13382610aee565b50565b806103e55760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420636f646560a01b60448201526064015b60405180910390fd5b6000818152600660205260409020546001600160a01b0316156104405760405162461bcd60e51b8152602060048201526013602482015272636f646520616c72656164792065786973747360681b60448201526064016103dc565b600a543360009081526008602052604090205411156104a15760405162461bcd60e51b815260206004820152601c60248201527f65786365656473206d617820636f64652070657220616464726573730000000060448201526064016103dc565b600081815260066020908152604080832080546001600160a01b03191633908117909155808452600583528184208054600181018255908552838520018590558352600890915281208054916104f683610e6d565b909155505060408051338152602081018390527f04f82286a2a3b2ee5c8555de8304dfe2ea70991613213184b73a9e408d2d802991015b60405180910390a150565b6007602052816000526040600020818154811061055457600080fd5b6000918252602090912001546001600160a01b03169150829050565b600054610100900460ff16158080156105905750600054600160ff909116105b806105aa5750303b1580156105aa575060005460ff166001145b61060d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103dc565b6000805460ff191660011790558015610630576000805461ff0019166101001790555b336000908152600460205260409020805460ff191660019081179091556005600a55600b5580156103a1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200161052d565b3360009081526004602052604090205460ff166106c65760405162461bcd60e51b81526004016103dc90610e94565b6001600160a01b03909116600090815260036020526040902055565b3360009081526004602052604090205460ff166107115760405162461bcd60e51b81526004016103dc90610e94565b8161074d5760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420636f646560a01b60448201526064016103dc565b6000828152600660205260409020546001600160a01b0316156107a85760405162461bcd60e51b8152602060048201526013602482015272636f646520616c72656164792065786973747360681b60448201526064016103dc565b600082815260066020908152604080832080546001600160a01b0319166001600160a01b0386169081179091558084526005835281842080546001810182559085528385200186905583526008909152812080549161080683610e6d565b9091555050604080516001600160a01b0383168152602081018490527f04f82286a2a3b2ee5c8555de8304dfe2ea70991613213184b73a9e408d2d802991015b60405180910390a15050565b60005b818110156108905761087e83838381811061087257610872610eb7565b905060200201356103a4565b8061088881610e6d565b915050610855565b505050565b3360009081526004602052604090205460ff166108c45760405162461bcd60e51b81526004016103dc90610e94565b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b6005602052816000526040600020818154811061090b57600080fd5b90600052602060002001600091509150505481565b3360009081526004602052604090205460ff1661094f5760405162461bcd60e51b81526004016103dc90610e94565b6001600160a01b038216600081815260026020908152604091829020849055815192835282018390527f7696855cdbb94bb5a44cb0a95caff6f29173aa1cbfba193834b12b90827ce2bc9101610846565b3360009081526004602052604090205460ff166109cf5760405162461bcd60e51b81526004016103dc90610e94565b600a55565b6001600160a01b0381166000908152600560205260408120805460609291908290610a0157610a01610eb7565b600091825260208083209091015480835260078252604092839020805484518185028101850190955280855291945091830182828015610a6a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a4c575b5050505050915050919050565b3360009081526004602052604090205460ff16610aa65760405162461bcd60e51b81526004016103dc90610e94565b600a91909155600b55565b3360009081526004602052604090205460ff16610ae05760405162461bcd60e51b81526004016103dc90610e94565b610aea8282610aee565b5050565b600b5460008281526009602052604090205410610b465760405162461bcd60e51b815260206004820152601660248201527565786365656473206d617820636f646520757361676560501b60448201526064016103dc565b600081815260066020526040902054336001600160a01b0390911603610ba35760405162461bcd60e51b815260206004820152601260248201527163616e277420757365206f776e20636f646560701b60448201526064016103dc565b6001600160a01b03821660009081526001602052604090205415610bfc5760405162461bcd60e51b815260206004820152601060248201526f63616e277420726573657420636f646560801b60448201526064016103dc565b6001600160a01b03821660008181526001602081815260408084208690558584526007825280842080549384018155845281842090920180546001600160a01b0319169094179093558382526009909252908120805491610c5c83610e6d565b9091555050604080516001600160a01b0384168152602081018390527f60750994fdf9995c19bee1ac3f38a6fbf271ecd405e8bd0d55c99f7f14f86e0f9101610846565b80356001600160a01b0381168114610cb757600080fd5b919050565b600060208284031215610cce57600080fd5b610cd782610ca0565b9392505050565b600060208284031215610cf057600080fd5b5035919050565b60008060408385031215610d0a57600080fd5b50508035926020909101359150565b60008060408385031215610d2c57600080fd5b610d3583610ca0565b946020939093013593505050565b60008060408385031215610d5657600080fd5b82359150610d6660208401610ca0565b90509250929050565b60008060208385031215610d8257600080fd5b823567ffffffffffffffff80821115610d9a57600080fd5b818501915085601f830112610dae57600080fd5b813581811115610dbd57600080fd5b8660208260051b8501011115610dd257600080fd5b60209290920196919550909350505050565b60008060408385031215610df757600080fd5b610e0083610ca0565b915060208301358015158114610e1557600080fd5b809150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610e615783516001600160a01b031683529284019291840191600101610e3c565b50909695505050505050565b600060018201610e8d57634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252600990820152683337b93134b23232b760b91b604082015260600190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122047944989f700860a17f8d98b98007f70e7700bb8135552d502aa86d3e6876f5164736f6c63430008120033";

type ReferralSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReferralSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReferralSystem__factory extends ContractFactory {
  constructor(...args: ReferralSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReferralSystem> {
    return super.deploy(overrides || {}) as Promise<ReferralSystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReferralSystem {
    return super.attach(address) as ReferralSystem;
  }
  override connect(signer: Signer): ReferralSystem__factory {
    return super.connect(signer) as ReferralSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralSystemInterface {
    return new utils.Interface(_abi) as ReferralSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReferralSystem {
    return new Contract(address, _abi, signerOrProvider) as ReferralSystem;
  }
}
