/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LPVault,
  LPVaultInterface,
} from "../../../../src/periphery/LPVault.sol/LPVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_taxRate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "PnL",
        type: "int256",
      },
    ],
    name: "Repay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Use",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "convertToAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "convertToShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "depositAnyToken",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getData",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "maxRedeemableInToken",
    outputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxShares",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "previewDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "previewRedeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "redeemToAnyToken",
    outputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "PnL",
        type: "int256",
      },
    ],
    name: "repayBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
    ],
    name: "setPricefeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategist",
        type: "address",
      },
    ],
    name: "setStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxRate",
        type: "uint256",
      },
    ],
    name: "setTaxRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAsset",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "useBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "utilizedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620027ea380380620027ea833981016040819052620000349162000207565b8181601260006200004684826200032a565b5060016200005583826200032a565b5060ff81166080524660a0526200006b620000a6565b60c0525050600b80546001600160a01b039096166001600160a01b03199687161790555050600980549093163317909255600a555062000474565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000da9190620003f6565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016a57600080fd5b81516001600160401b038082111562000187576200018762000142565b604051601f8301601f19908116603f01168101908282118183101715620001b257620001b262000142565b81604052838152602092508683858801011115620001cf57600080fd5b600091505b83821015620001f35785820183015181830184015290820190620001d4565b600093810190920192909252949350505050565b600080600080608085870312156200021e57600080fd5b84516001600160a01b03811681146200023657600080fd5b6020860151604087015191955093506001600160401b03808211156200025b57600080fd5b620002698883890162000158565b935060608701519150808211156200028057600080fd5b506200028f8782880162000158565b91505092959194509250565b600181811c90821680620002b057607f821691505b602082108103620002d157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200032557600081815260208120601f850160051c81016020861015620003005750805b601f850160051c820191505b8181101562000321578281556001016200030c565b5050505b505050565b81516001600160401b0381111562000346576200034662000142565b6200035e816200035784546200029b565b84620002d7565b602080601f8311600181146200039657600084156200037d5750858301515b600019600386901b1c1916600185901b17855562000321565b600085815260208120601f198616915b82811015620003c757888601518255948401946001909101908401620003a6565b5085821015620003e65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600080835462000406816200029b565b60018281168015620004215760018114620004375762000468565b60ff198416875282151583028701945062000468565b8760005260208060002060005b858110156200045f5781548a82015290840190820162000444565b50505082870194505b50929695505050505050565b60805160a05160c051612346620004a46000396000610a6f01526000610a3a015260006102b801526123466000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637ecebe0011610104578063c7b9d530116100a2578063dd62ed3e11610071578063dd62ed3e14610434578063eab476551461045f578063eedc966a14610472578063ef8b30f71461049257600080fd5b8063c7b9d530146103e8578063d505accf146103fb578063d6724a2d1461040e578063d95c409b1461042157600080fd5b8063b0071c81116100de578063b0071c811461038f578063c15973eb146103a2578063c6d69a30146103c2578063c6e6f592146103d557600080fd5b80637ecebe001461035457806395d89b4114610374578063a9059cbb1461037c57600080fd5b806323b872dd1161017c5780633bc5de301161014b5780633bc5de30146102f457806349327ed01461030e5780634cdad5061461032157806370a082311461033457600080fd5b806323b872dd1461028b5780632a5c792a1461029e578063313ce567146102b35780633644e515146102ec57600080fd5b8063095ea7b3116101b8578063095ea7b3146102225780630d95f6bc14610245578063144fa6d71461026d57806318160ddd1461028257600080fd5b806301e1d114146101df57806306fdde03146101fa57806307a2d13a1461020f575b600080fd5b6101e76104a5565b6040519081526020015b60405180910390f35b6102026105c0565b6040516101f19190611ca3565b6101e761021d366004611cf1565b61064e565b610235610230366004611d26565b61067b565b60405190151581526020016101f1565b610258610253366004611d50565b6106e8565b604080519283526020830191909152016101f1565b61028061027b366004611d50565b610806565b005b6101e760025481565b610235610299366004611d6b565b61088b565b6102a66109d4565b6040516101f19190611da7565b6102da7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016101f1565b6101e7610a36565b6102fc610a91565b6040516101f196959493929190611e2f565b6101e761031c366004611e87565b610e19565b6101e761032f366004611cf1565b610fc0565b6101e7610342366004611d50565b60036020526000908152604090205481565b6101e7610362366004611d50565b60056020526000908152604090205481565b610202610fcb565b61023561038a366004611d26565b610fd8565b61028061039d366004611d50565b61106f565b6101e76103b0366004611d50565b60076020526000908152604090205481565b6102806103d0366004611cf1565b6110bb565b6101e76103e3366004611cf1565b6110ea565b6102806103f6366004611d50565b61110a565b610280610409366004611ed5565b61115d565b61028061041c366004611d26565b6113a1565b6101e761042f366004611f42565b6114e1565b6101e7610442366004611f8f565b600460209081526000928352604080842090915290825290205481565b61028061046d366004611fc2565b611784565b6101e7610480366004611d50565b60066020526000908152604090205481565b6101e76104a0366004611cf1565b6118f5565b6000806000805b6008548110156105ba57600881815481106104c9576104c9611ff5565b6000918252602090912001546001600160a01b031692506104e983611900565b9150826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d919061200b565b61055890601261203e565b61056390600a61213b565b61056d908361214a565b6001600160a01b03841660009081526006602052604090205490925061059c9083670de0b6b3a764000061196f565b6105a69085612161565b9350806105b281612174565b9150506104ac565b50505090565b600080546105cd9061218d565b80601f01602080910402602001604051908101604052809291908181526020018280546105f99061218d565b80156106465780601f1061061b57610100808354040283529160200191610646565b820191906000526020600020905b81548152906001019060200180831161062957829003601f168201915b505050505081565b60025460009080156106725761066d6106656104a5565b84908361196f565b610674565b825b9392505050565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106d69086815260200190565b60405180910390a35060015b92915050565b60008060006106f684611900565b90506000846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c919061200b565b6001600160a01b03861660009081526007602090815260408083205460069092529091205460ff92909216925011156107965760006107c5565b6001600160a01b0385166000908152600760209081526040808320546006909252909120546107c591906121c7565b93506107d28160126121c7565b6107dd90600a6121da565b6107f36104a08685670de0b6b3a764000061196f565b6107fd919061214a565b92505050915091565b6009546001600160a01b031633146108395760405162461bcd60e51b8152600401610830906121e6565b60405180910390fd5b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166000908152600360205260408120548211156108de5760405162461bcd60e51b81526020600482015260086024820152672162616c616e636560c01b6044820152606401610830565b6001600160a01b03841660009081526004602090815260408083203384529091529020548281101561093f5760405162461bcd60e51b815260206004820152600a60248201526921616c6c6f77616e636560b01b6044820152606401610830565b6000198114610971576001600160a01b0385166000908152600460209081526040808320338452909152902083820390555b6001600160a01b03808616600081815260036020526040808220805488900390559287168082529083902080548701905591516000805160206122f1833981519152906109c19087815260200190565b60405180910390a3506001949350505050565b60606008805480602002602001604051908101604052809291908181526020018280548015610a2c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a0e575b5050505050905090565b60007f00000000000000000000000000000000000000000000000000000000000000004614610a6c57610a67611a4d565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b60008060006060806060600060088054905067ffffffffffffffff811115610abb57610abb612206565b604051908082528060200260200182016040528015610ae4578160200160208202803683370190505b5060085490915060009067ffffffffffffffff811115610b0657610b06612206565b604051908082528060200260200182016040528015610b2f578160200160208202803683370190505b5060085490915060009067ffffffffffffffff811115610b5157610b51612206565b604051908082528060200260200182016040528015610b7a578160200160208202803683370190505b509050600080610b886104a5565b905060005b600854811015610dda5760008060088381548110610bad57610bad611ff5565b6000918252602090912001546001600160a01b03169150610bcd82611900565b9050816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c31919061200b565b610c3c90601261203e565b610c4790600a61213b565b610c51908261214a565b6001600160a01b038316600090815260076020526040902054909150610c809082670de0b6b3a764000061196f565b610c8a9086612161565b6001600160a01b038316600090815260066020526040902054895191965090899085908110610cbb57610cbb611ff5565b602002602001018181525050600060066000846001600160a01b03166001600160a01b031681526020019081526020016000205411610cfb576000610d33565b6001600160a01b038216600090815260066020908152604080832054600790925290912054610d3391670de0b6b3a76400009061196f565b868481518110610d4557610d45611ff5565b602002602001018181525050610da7670de0b6b3a764000085610da084670de0b6b3a764000060066000896001600160a01b03166001600160a01b031681526020019081526020016000205461196f9092919063ffffffff16565b919061196f565b878481518110610db957610db9611ff5565b60200260200101818152505050508080610dd290612174565b915050610b8d565b506002548160008311610dee576000610e01565b610e0184670de0b6b3a76400008561196f565b919d909c50909a509498509296509094509192505050565b600080846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7e919061200b565b610e8990601261203e565b610e9490600a61213b565b610eb0610ea087611900565b8690670de0b6b3a764000061196f565b610eba919061214a565b90506000610ed8600a54620f42408461196f9092919063ffffffff16565b610ee290836121c7565b9050610eed816118f5565b925082600003610f2d5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b6044820152606401610830565b6001600160a01b03861660009081526006602052604081208054879290610f55908490612161565b90915550610f67905086333088611ae7565b610f718484611b71565b60408051828152602081018590526001600160a01b0386169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a350509392505050565b60006106e28261064e565b600180546105cd9061218d565b336000908152600360205260408120548211156110225760405162461bcd60e51b81526020600482015260086024820152672162616c616e636560c01b6044820152606401610830565b336000818152600360209081526040808320805487900390556001600160a01b03871680845292819020805487019055518581529192916000805160206122f183398151915291016106d6565b6009546001600160a01b031633146110995760405162461bcd60e51b8152600401610830906121e6565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6009546001600160a01b031633146110e55760405162461bcd60e51b8152600401610830906121e6565b600a55565b60025460009080156106725761066d816111026104a5565b85919061196f565b6009546001600160a01b031633146111345760405162461bcd60e51b8152600401610830906121e6565b6001600160a01b03166000908152600c60205260409020805460ff19811660ff90911615179055565b428410156111ad5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610830565b600060016111b9610a36565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156112c5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906112fb5750876001600160a01b0316816001600160a01b0316145b6113385760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610830565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b336000908152600c602052604090205460ff166113ee5760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b6044820152606401610830565b6001600160a01b038216600090815260076020526040902054611412908290612161565b6001600160a01b03831660009081526006602052604090205410156114635760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610830565b6001600160a01b0382166000908152600760205260408120805483929061148b908490612161565b9091555061149c9050823383611bc3565b6040518181526001600160a01b0383169033907ff7323cc8651e605a3101ab9f324d55d253525b18b53d28377cfe9a481764ebf9906020015b60405180910390a35050565b6000336001600160a01b03831614611551576001600160a01b0382166000908152600460209081526040808320338452909152902054600019811461154f5761152a85826121c7565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b600061155c85610fc0565b90508060000361159c5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b6044820152606401610830565b61163b670de0b6b3a7640000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160a919061200b565b61161590601261203e565b61162090600a61213b565b61162989611900565b611633919061214a565b83919061196f565b600a54909250611650908390620f424061196f565b61165a90836121c7565b6001600160a01b038716600090815260076020526040902054909250611681908390612161565b6001600160a01b03871660009081526006602052604090205410156116e85760405162461bcd60e51b815260206004820152601b60248201527f4558434545445320415641494c41424c45204c495155494449545900000000006044820152606401610830565b6001600160a01b038616600090815260066020526040812080548492906117109084906121c7565b9091555061171b9050565b6117258386611c41565b60408051838152602081018790526001600160a01b03808616929087169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a461177b868584611bc3565b50949350505050565b336000908152600c602052604090205460ff166117d15760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b6044820152606401610830565b6001600160a01b038316600090815260076020526040812080548492906117f99084906121c7565b90915550506000811215611838576118108161221c565b6001600160a01b03841660009081526006602052604090205461183391906121c7565b61185c565b6001600160a01b03831660009081526006602052604090205461185c908290612161565b6001600160a01b0384166000908152600660205260408120919091556118aa9084903390309085136118a0576118918561221c565b61189b90876121c7565b611ae7565b61189b8587612161565b60408051838152602081018390526001600160a01b0385169133917fa9c3d23a0f7956e89c9bf07856e64dce527c8f8cb4fb51711ffe133b2e59eca4910160405180910390a3505050565b60006106e2826110ea565b600b546040516341976e0960e01b81526001600160a01b03838116600483015260009216906341976e0990602401602060405180830381865afa15801561194b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e29190612238565b60008080600019858709858702925082811083820303915050806000036119a8576000841161199d57600080fd5b508290049050610674565b8084116119e05760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401610830565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611a7f9190612251565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611b6a5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610830565b5050505050565b8060026000828254611b839190612161565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206122f183398151915291016114d5565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611c3b5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610830565b50505050565b6001600160a01b03821660009081526003602052604081208054839290611c699084906121c7565b90915550506002805482900390556040518181526000906001600160a01b038416906000805160206122f1833981519152906020016114d5565b600060208083528351808285015260005b81811015611cd057858101830151858201604001528201611cb4565b506000604082860101526040601f19601f8301168501019250505092915050565b600060208284031215611d0357600080fd5b5035919050565b80356001600160a01b0381168114611d2157600080fd5b919050565b60008060408385031215611d3957600080fd5b611d4283611d0a565b946020939093013593505050565b600060208284031215611d6257600080fd5b61067482611d0a565b600080600060608486031215611d8057600080fd5b611d8984611d0a565b9250611d9760208501611d0a565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b81811015611de85783516001600160a01b031683529284019291840191600101611dc3565b50909695505050505050565b600081518084526020808501945080840160005b83811015611e2457815187529582019590820190600101611e08565b509495945050505050565b86815285602082015284604082015260c060608201526000611e5460c0830186611df4565b8281036080840152611e668186611df4565b905082810360a0840152611e7a8185611df4565b9998505050505050505050565b600080600060608486031215611e9c57600080fd5b611ea584611d0a565b925060208401359150611eba60408501611d0a565b90509250925092565b60ff81168114611ed257600080fd5b50565b600080600080600080600060e0888a031215611ef057600080fd5b611ef988611d0a565b9650611f0760208901611d0a565b955060408801359450606088013593506080880135611f2581611ec3565b9699959850939692959460a0840135945060c09093013592915050565b60008060008060808587031215611f5857600080fd5b611f6185611d0a565b935060208501359250611f7660408601611d0a565b9150611f8460608601611d0a565b905092959194509250565b60008060408385031215611fa257600080fd5b611fab83611d0a565b9150611fb960208401611d0a565b90509250929050565b600080600060608486031215611fd757600080fd5b611fe084611d0a565b95602085013595506040909401359392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561201d57600080fd5b815161067481611ec3565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156106e2576106e2612028565b600181815b8085111561209257816000190482111561207857612078612028565b8085161561208557918102915b93841c939080029061205c565b509250929050565b6000826120a9575060016106e2565b816120b6575060006106e2565b81600181146120cc57600281146120d6576120f2565b60019150506106e2565b60ff8411156120e7576120e7612028565b50506001821b6106e2565b5060208310610133831016604e8410600b8410161715612115575081810a6106e2565b61211f8383612057565b806000190482111561213357612133612028565b029392505050565b600061067460ff84168361209a565b80820281158282048414176106e2576106e2612028565b808201808211156106e2576106e2612028565b60006001820161218657612186612028565b5060010190565b600181811c908216806121a157607f821691505b6020821081036121c157634e487b7160e01b600052602260045260246000fd5b50919050565b818103818111156106e2576106e2612028565b6000610674838361209a565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6000600160ff1b820161223157612231612028565b5060000390565b60006020828403121561224a57600080fd5b5051919050565b600080835481600182811c91508083168061226d57607f831692505b6020808410820361228c57634e487b7160e01b86526022600452602486fd5b8180156122a057600181146122b5576122e2565b60ff19861689528415158502890196506122e2565b60008a81526020902060005b868110156122da5781548b8201529085019083016122c1565b505084890196505b50949897505050505050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204a4df7bf3930c0153cd219623a1899d0b900b263ca4815655ee7332b1310d67964736f6c63430008120033";

type LPVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPVault__factory extends ContractFactory {
  constructor(...args: LPVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    priceFeed: PromiseOrValue<string>,
    _taxRate: PromiseOrValue<BigNumberish>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LPVault> {
    return super.deploy(
      priceFeed,
      _taxRate,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<LPVault>;
  }
  override getDeployTransaction(
    priceFeed: PromiseOrValue<string>,
    _taxRate: PromiseOrValue<BigNumberish>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      priceFeed,
      _taxRate,
      _name,
      _symbol,
      overrides || {}
    );
  }
  override attach(address: string): LPVault {
    return super.attach(address) as LPVault;
  }
  override connect(signer: Signer): LPVault__factory {
    return super.connect(signer) as LPVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPVaultInterface {
    return new utils.Interface(_abi) as LPVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPVault {
    return new Contract(address, _abi, signerOrProvider) as LPVault;
  }
}
