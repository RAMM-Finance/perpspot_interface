/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Quoter,
  QuoterInterface,
} from "../../../../src/periphery/Quoter.sol/Quoter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_quoterV2",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dataProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sharedLiquidity",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nfpm",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "addIsSlot6",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickDiff",
        type: "int24",
      },
    ],
    name: "getAllAprUtil",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "apr",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilTotal",
            type: "uint256",
          },
        ],
        internalType: "struct Quoter.AprUtilInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getLpPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
            ],
            internalType: "struct NonfungiblePositionManagerV2.Bins[]",
            name: "bins",
            type: "tuple[]",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct Quoter.LPInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolKeys",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "string",
            name: "symbol0",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol1",
            type: "string",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "string",
            name: "name0",
            type: "string",
          },
          {
            internalType: "string",
            name: "name1",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals0",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "decimals1",
            type: "uint8",
          },
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
        ],
        internalType: "struct Quoter.PoolInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSharedLiquidityInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxPerPair",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exposureToPair",
            type: "uint256",
          },
        ],
        internalType: "struct Quoter.PairSharedLiquidityInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isSlot6",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "marginInInput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "marginInOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowAmount",
            type: "uint256",
          },
          {
            internalType: "contract IQuoterV2",
            name: "quoter",
            type: "address",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
        ],
        internalType: "struct Quoter.QuoteExactInputParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "quoteExactInput",
    outputs: [
      {
        internalType: "uint256",
        name: "swapInput",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionOutput",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "found",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620032aa380380620032aa8339810160408190526200003491620000cf565b600080546001600160a01b03199081166001600160a01b0398891617909155600180548216968816969096179095556002805486169487169490941790935560038054851692861692909217909155600580548416918516919091179055600480543390841617905560068054909216921691909117905562000150565b80516001600160a01b0381168114620000ca57600080fd5b919050565b60008060008060008060c08789031215620000e957600080fd5b620000f487620000b2565b95506200010460208801620000b2565b94506200011460408801620000b2565b93506200012460608801620000b2565b92506200013460808801620000b2565b91506200014460a08801620000b2565b90509295509295509295565b61314a80620001606000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610110578063ae6e04091461013b578063d183feee1461016e578063e35ef2ce1461018357600080fd5b80630327b40c1461008d578063359b805b146100b657806352f0cf63146100cb57806389233e44146100eb575b600080fd5b6100a061009b366004611ed1565b610198565b6040516100ad9190611f3b565b60405180910390f35b6100be610688565b6040516100ad9190611f89565b6100de6100d9366004611fe0565b610961565b6040516100ad9190612057565b6100fe6100f9366004612168565b610da4565b6040516100ad969594939291906121c7565b600454610123906001600160a01b031681565b6040516001600160a01b0390911681526020016100ad565b61015e610149366004611fe0565b60076020526000908152604090205460ff1681565b60405190151581526020016100ad565b610176611596565b6040516100ad9190612289565b610196610191366004611fe0565b611851565b005b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261021791908101906124b1565b9050600081516001600160401b03811115610234576102346123aa565b60405190808252806020026020018201604052801561029357816020015b6040805160c0810182526000606082018181526080830182905260a08301829052825260208083018290529282015282526000199092019101816102525790505b50905060005b82518110156106805760008382815181106102b6576102b661254f565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031f9190612565565b905060008483815181106103355761033561254f565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561037a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039e9190612565565b90506000600760008786815181106103b8576103b861254f565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff161561046d578584815181106103f6576103f661254f565b60200260200101516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160c060405180830381865afa15801561043b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045f91906125ad565b509294506104f29350505050565b85848151811061047f5761047f61254f565b60200260200101516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156104c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e8919061263b565b5093955050505050505b60006040518060600160405280856001600160a01b03168152602001846001600160a01b0316815260200188878151811061052f5761052f61254f565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610574573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059891906126db565b62ffffff16905260025490915060009081906001600160a01b0316631f2ecd83846105c38e8861270e565b6105cd8f89612733565b6040518463ffffffff1660e01b81526004016105eb93929190612758565b6040805180830381865afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190612780565b9150915060405180606001604052808481526020018381526020018281525088888151811061065c5761065c61254f565b60200260200101819052505050505050508080610678906127a4565b915050610299565b509392505050565b60606000610694611596565b9050600081516001600160401b038111156106b1576106b16123aa565b60405190808252806020026020018201604052801561071057816020015b6040805160c0810182526000606082018181526080830182905260a08301829052825260208083018290529282015282526000199092019101816106cf5790505b50905060005b825181101561095a576000604051806060016040528085848151811061073e5761073e61254f565b6020026020010151600001516001600160a01b0316815260200185848151811061076a5761076a61254f565b6020026020010151602001516001600160a01b031681526020018584815181106107965761079661254f565b60209081029190910101516080015162ffffff169052600154604051632411122160e11b81529192506000916001600160a01b03909116906348222442906107e29085906004016127bd565b602060405180830381865afa1580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082391906127cb565b60035460405163fad56a4160e01b8152600481018390529192506000916001600160a01b039091169063fad56a4190602401602060405180830381865afa158015610872573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089691906127cb565b6003546040516376efa68360e01b8152600481018590529192506000916001600160a01b03909116906376efa68390602401602060405180830381865afa1580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090991906127cb565b90506040518060600160405280858152602001828152602001838152508686815181106109385761093861254f565b6020026020010181905250505050508080610952906127a4565b915050610716565b5092915050565b6005546040516370a0823160e01b81526001600160a01b0383811660048301526060926000929116906370a0823190602401602060405180830381865afa1580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d491906127cb565b90506000816001600160401b038111156109f0576109f06123aa565b604051908082528060200260200182016040528015610a6e57816020015b60408051610140810182526000808252602080830182905292820181905260608083018290526080830182905260a0830182905260c0830182905260e083015261010082018190526101208201528252600019909201910181610a0e5790505b5090506000826001600160401b03811115610a8b57610a8b6123aa565b604051908082528060200260200182016040528015610ab4578160200160208202803683370190505b50905060005b83811015610b6657600554604051632f745c5960e01b81526001600160a01b0388811660048301526024820184905290911690632f745c5990604401602060405180830381865afa158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3791906127cb565b828281518110610b4957610b4961254f565b602090810291909101015280610b5e816127a4565b915050610aba565b5060005b83811015610d9a5760055482516000916001600160a01b031690636f229e6a90859085908110610b9c57610b9c61254f565b60200260200101516040518263ffffffff1660e01b8152600401610bc291815260200190565b600060405180830381865afa158015610bdf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c079190810190612896565b90506000806000600560009054906101000a90046001600160a01b03166001600160a01b03166399fbab88878781518110610c4457610c4461254f565b60200260200101516040518263ffffffff1660e01b8152600401610c6a91815260200190565b600060405180830381865afa158015610c87573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610caf919081019061295d565b505050505093509350935050604051806101400160405280878781518110610cd957610cd961254f565b602002602001015181526020018b6001600160a01b03168152602001846001600160a01b03168152602001836001600160a01b031681526020018262ffffff168152602001856020015160020b8152602001856040015160020b81526020018560600151815260200185608001516001600160801b031681526020018560a001516001600160801b0316815250878681518110610d7857610d7861254f565b6020026020010181905250505050508080610d92906127a4565b915050610b6a565b5090949350505050565b60008080808060608180610dbf6101008a0160e08b01611fe0565b6001600160a01b031614610de357610dde610100890160e08a01611fe0565b610df0565b6000546001600160a01b03165b9050610dfa611d98565b600154604051632411122160e11b81526001600160a01b0390911690634822244290610e2a908c90600401612a7c565b602060405180830381865afa158015610e47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6b91906127cb565b6080820152600154604051639525092360e01b81526001600160a01b0390911690639525092390610ea0908c90600401612a7c565b6101c060405180830381865afa158015610ebe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee29190612a8a565b60a084015260020b60208301526001600160a01b0390811682526001546080830151604051636361616560e11b8152600481019190915291169063c6c2c2ca9060240160a060405180830381865afa158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f669190612b81565b505050506001600160801b031660408281019190915281518151633850c7bd60e01b815291516001600160a01b0390911691633850c7bd9160048083019260e09291908290030181865afa158015610fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe6919061263b565b5050506001600160a01b0390931660608501525061100f9150506101208a016101008b01612bdf565b156111935760408101516110319060c08b013590670de0b6b3a76400006118bd565b94506110418560c08b0135612bfc565b9750816001600160a01b031663c6a5026a6040518060a001604052808c60600160208101906110709190612bdf565b6110865761108160208e018e611fe0565b611096565b61109660408e0160208f01611fe0565b6001600160a01b031681526020016110b460808e0160608f01612bdf565b6110cd576110c860408e0160208f01611fe0565b6110da565b6110da60208e018e611fe0565b6001600160a01b031681526020018b81526020018c60000160400160208101906111049190612c0f565b62ffffff16815260006020909101526040516001600160e01b031960e084901b1681526111349190600401612c2c565b6080604051808303816000875af1158015611153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111779190612c88565b5091985061118c91505060a08a013588612cce565b965061130c565b60408101516111b09060c08b013590670de0b6b3a76400006118bd565b945060c08901356111c58660808c0135612bfc565b6111cf9190612cce565b9750816001600160a01b031663c6a5026a6040518060a001604052808c60600160208101906111fe9190612bdf565b6112145761120f60208e018e611fe0565b611224565b61122460408e0160208f01611fe0565b6001600160a01b0316815260200161124260808e0160608f01612bdf565b61125b5761125660408e0160208f01611fe0565b611268565b61126860208e018e611fe0565b6001600160a01b031681526020018b81526020018c60000160400160208101906112929190612c0f565b62ffffff16815260006020909101526040516001600160e01b031960e084901b1681526112c29190600401612c2c565b6080604051808303816000875af11580156112e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113059190612c88565b5091985050505b60065481516000916001600160a01b031690638c1395f8906113366101408e016101208f01611fe0565b8d60600160208101906113499190612bdf565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015215156044820152606401600060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113c59190810190612d96565b6001549091506001600160a01b031663ad16ab7e8b60c08101356113ef6080830160608401612bdf565b8c87606001516040518663ffffffff1660e01b8152600401611415959493929190612ead565b600060405180830381865afa158015611432573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261145a9190810190612ee7565b825160c00151604051630b7cb7c160e01b815292975090955073__$d23a8dd93b7205fa6b646ffed38c165d68$__91630b7cb7c19161149e91889190600401612f67565b600060405180830381865af41580156114bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114e39190810190612f95565b8251600154602085015160a086015151608087015160405163aa7532af60e01b815295995073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9563aa7532af956115479590946001600160a01b0390911693909290918c91600091600401612fd1565b602060405180830381865af4158015611564573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158891906127cb565b965050505091939550919395565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156115ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261161591908101906124b1565b9050600081516001600160401b03811115611632576116326123aa565b60405190808252806020026020018201604052801561166b57816020015b611658611dd4565b8152602001906001900390816116505790505b50905060005b825181101561095a57600760008483815181106116905761169061254f565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16156117865760008382815181106116d0576116d061254f565b60200260200101516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160c060405180830381865afa158015611715573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173991906125ad565b505050509150506117638483815181106117555761175561254f565b60200260200101518261199c565b8383815181106117755761177561254f565b60200260200101819052505061183f565b600083828151811061179a5761179a61254f565b60200260200101516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156117df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611803919061263b565b50505050509150506118208483815181106117555761175561254f565b8383815181106118325761183261254f565b6020026020010181905250505b80611849816127a4565b915050611671565b6004546001600160a01b031633146118995760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b60008080600019858709858702925082811083820303915050806000036118f657600084116118eb57600080fd5b508290049050611995565b80841161192e5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401611890565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6119a4611dd4565b6000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a089190612565565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6e9190612565565b9050604051806101400160405280836001600160a01b03168152602001826001600160a01b03168152602001836001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611ad8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b009190810190613066565b8152602001826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611b43573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b6b9190810190613066565b8152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd291906126db565b62ffffff168152602001836001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015611c1a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c429190810190613066565b8152602001826001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015611c85573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611cad9190810190613066565b8152602001836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1491906130f9565b60ff168152602001826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7e91906130f9565b60ff1681526020018560020b815250925050505b92915050565b6040805160c08101825260008082526020820181905291810182905260608101829052608081019190915260a08101611dcf611e47565b905290565b60405180610140016040528060006001600160a01b0316815260200160006001600160a01b031681526020016060815260200160608152602001600062ffffff1681526020016060815260200160608152602001600060ff168152602001600060ff168152602001600060020b81525090565b6040518060e00160405280611e8b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff16815260200160008152602001600081525090565b8060020b8114611ece57600080fd5b50565b600060208284031215611ee357600080fd5b813561199581611ebf565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b611f25828251611eee565b6020810151606083015260400151608090910152565b6020808252825182820181905260009190848201906040850190845b81811015611f7d57611f6a838551611f1a565b9284019260a09290920191600101611f57565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611f7d57611fb8838551611f1a565b9284019260a09290920191600101611fa5565b6001600160a01b0381168114611ece57600080fd5b600060208284031215611ff257600080fd5b813561199581611fcb565b600081518084526020808501945080840160005b8381101561204c57815180516001600160801b0316885283810151848901526040908101519088015260609096019590820190600101612011565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561215a57603f19898403018552815180518452878101516001600160a01b0390811689860152878201518116888601526060808301519091169085015260808082015162ffffff169085015260a080820151600281900b828701526101409190505060c0808301516120f88288018260020b9052565b505060e080830151828288015261211183880182611ffd565b9250505061010080830151612130828801826001600160801b03169052565b5050610120918201516001600160801b03169490910193909352938601939086019060010161207e565b509098975050505050505050565b6000610140828403121561217b57600080fd5b50919050565b805160020b82526001600160801b03602082015116602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600060c0808301898452602089818601528860408601528760608601528660808601528260a086015281865180845260e087019150828801935060005b8181101561222757612217838651612181565b9383019391850191600101612204565b50909c9b505050505050505050505050565b60005b8381101561225457818101518382015260200161223c565b50506000910152565b60008151808452612275816020860160208601612239565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561215a57888303603f19018552815180516001600160a01b03168452610140818901516001600160a01b038116868b0152508782015181898701526122fb8287018261225d565b91505060608083015186830382880152612315838261225d565b9250505060808083015161232f8288018262ffffff169052565b505060a08083015186830382880152612348838261225d565b9250505060c08083015186830382880152612363838261225d565b9250505060e08083015161237b8288018260ff169052565b50506101008281015160ff16908601526101209182015160020b919094015293860193908601906001016122b0565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156123e2576123e26123aa565b60405290565b60405160c081016001600160401b03811182821017156123e2576123e26123aa565b60405160e081016001600160401b03811182821017156123e2576123e26123aa565b604051608081016001600160401b03811182821017156123e2576123e26123aa565b604051601f8201601f191681016001600160401b0381118282101715612476576124766123aa565b604052919050565b60006001600160401b03821115612497576124976123aa565b5060051b60200190565b80516124ac81611fcb565b919050565b600060208083850312156124c457600080fd5b82516001600160401b038111156124da57600080fd5b8301601f810185136124eb57600080fd5b80516124fe6124f98261247e565b61244e565b81815260059190911b8201830190838101908783111561251d57600080fd5b928401925b8284101561254457835161253581611fcb565b82529284019290840190612522565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561257757600080fd5b815161199581611fcb565b805161ffff811681146124ac57600080fd5b8015158114611ece57600080fd5b80516124ac81612594565b60008060008060008060c087890312156125c657600080fd5b86516125d181611fcb565b60208801519096506125e281611ebf565b94506125f060408801612582565b93506125fe60608801612582565b925061260c60808801612582565b915060a087015161261c81612594565b809150509295509295509295565b805160ff811681146124ac57600080fd5b600080600080600080600060e0888a03121561265657600080fd5b875161266181611fcb565b602089015190975061267281611ebf565b955061268060408901612582565b945061268e60608901612582565b935061269c60808901612582565b92506126aa60a0890161262a565b915060c08801516126ba81612594565b8091505092959891949750929550565b62ffffff81168114611ece57600080fd5b6000602082840312156126ed57600080fd5b8151611995816126ca565b634e487b7160e01b600052601160045260246000fd5b600282810b9082900b03627fffff198112627fffff82131715611d9257611d926126f8565b600281810b9083900b01627fffff8113627fffff1982121715611d9257611d926126f8565b60a081016127668286611eee565b8360020b60608301528260020b6080830152949350505050565b6000806040838503121561279357600080fd5b505080516020909101519092909150565b6000600182016127b6576127b66126f8565b5060010190565b60608101611d928284611eee565b6000602082840312156127dd57600080fd5b5051919050565b80516001600160801b03811681146124ac57600080fd5b600082601f83011261280c57600080fd5b8151602061281c6124f98361247e565b8281526060928302850182019282820191908785111561283b57600080fd5b8387015b858110156128895781818a0312156128575760008081fd5b61285f6123c0565b612868826127e4565b8152818601518682015260408083015190820152845292840192810161283f565b5090979650505050505050565b6000602082840312156128a857600080fd5b81516001600160401b03808211156128bf57600080fd5b9083019060c082860312156128d357600080fd5b6128db6123e8565b82516128e681611fcb565b815260208301516128f681611ebf565b6020820152604083015161290981611ebf565b604082015260608301518281111561292057600080fd5b61292c878286016127fb565b60608301525061293e608084016127e4565b608082015261294f60a084016127e4565b60a082015295945050505050565b60008060008060008060008060006101208a8c03121561297c57600080fd5b895161298781611fcb565b60208b015190995061299881611fcb565b60408b01519098506129a981611fcb565b60608b01519097506129ba816126ca565b60808b01519096506129cb81611ebf565b60a08b01519095506129dc81611ebf565b60c08b01519094506001600160401b038111156129f857600080fd5b612a048c828d016127fb565b935050612a1360e08b016127e4565b9150612a226101008b016127e4565b90509295985092959850929598565b8035612a3c81611fcb565b6001600160a01b039081168352602082013590612a5882611fcb565b1660208301526040810135612a6c816126ca565b62ffffff81166040840152505050565b60608101611d928284612a31565b60008060008385036101c0811215612aa157600080fd5b8451612aac81611fcb565b6020860151909450612abd81611ebf565b9250603f190161018080821215612ad357600080fd5b612adb61240a565b60c0831215612ae957600080fd5b612af16123e8565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a0840152828152610100870151602082015261012087015160408201526101408701516060820152612b5d6101608801612582565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b600080600080600060a08688031215612b9957600080fd5b612ba2866127e4565b9450612bb0602087016127e4565b9350612bbe604087016127e4565b9250612bcc606087016127e4565b9150608086015190509295509295909350565b600060208284031215612bf157600080fd5b813561199581612594565b81810381811115611d9257611d926126f8565b600060208284031215612c2157600080fd5b8135611995816126ca565b81516001600160a01b0390811682526020808401518216908301526040808401519083015260608084015162ffffff1690830152608092830151169181019190915260a00190565b805163ffffffff811681146124ac57600080fd5b60008060008060808587031215612c9e57600080fd5b845193506020850151612cb081611fcb565b9250612cbe60408601612c74565b6060959095015193969295505050565b80820180821115611d9257611d926126f8565b600082601f830112612cf257600080fd5b81516020612d026124f98361247e565b82815260c09283028501820192828201919087851115612d2157600080fd5b8387015b858110156128895781818a031215612d3d5760008081fd5b612d456123e8565b8151612d5081611ebf565b8152612d5d8287016127e4565b8187015260408281015190820152606080830151908201526080808301519082015260a080830151908201528452928401928101612d25565b600060208284031215612da857600080fd5b81516001600160401b0380821115612dbf57600080fd5b9083019060808286031215612dd357600080fd5b612ddb61242c565b825182811115612dea57600080fd5b830160e08188031215612dfc57600080fd5b612e0461240a565b612e0d826124a1565b8152612e1b602083016125a2565b60208201526040820151604082015260608201516060820152612e4060808301612c74565b6080820152612e5160a08301612c74565b60a082015260c082015184811115612e6857600080fd5b612e7489828501612ce1565b60c08301525080835250506020830151602082015260408301516040820152612e9f606084016125a2565b606082015295945050505050565b60e08101612ebb8288612a31565b6060820195909552921515608084015260a08301919091526001600160a01b031660c090910152919050565b60008060408385031215612efa57600080fd5b8251915060208301516001600160401b03811115612f1757600080fd5b612f2385828601612ce1565b9150509250929050565b600081518084526020808501945080840160005b8381101561204c57612f54878351612181565b60c0969096019590820190600101612f41565b604081526000612f7a6040830185612f2d565b8281036020840152612f8c8185612f2d565b95945050505050565b600060208284031215612fa757600080fd5b81516001600160401b03811115612fbd57600080fd5b612fc984828501612ce1565b949350505050565b600061018060018060a01b03808b168452808a166020850152508760020b60408401528651606084015260208701516080840152604087015160a0840152606087015160c0840152608087015160e084015260a08701516101008401528061012084015261304181840187612f2d565b91505061305361014083018515159052565b8261016083015298975050505050505050565b60006020828403121561307857600080fd5b81516001600160401b038082111561308f57600080fd5b818401915084601f8301126130a357600080fd5b8151818111156130b5576130b56123aa565b6130c8601f8201601f191660200161244e565b91508082528560208285010111156130df57600080fd5b6130f0816020840160208601612239565b50949350505050565b60006020828403121561310b57600080fd5b6119958261262a56fea2646970667358221220e9569ec94d537e3f7f0fcbf61ea703c24ad3ca3df2fd1625f182958828e9fa1464736f6c63430008120033";

type QuoterConstructorParams =
  | [linkLibraryAddresses: QuoterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QuoterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Quoter__factory extends ContractFactory {
  constructor(...args: QuoterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Quoter__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: QuoterLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _quoterV2: PromiseOrValue<string>,
    _poolManager: PromiseOrValue<string>,
    _dataProvider: PromiseOrValue<string>,
    _sharedLiquidity: PromiseOrValue<string>,
    _nfpm: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Quoter> {
    return super.deploy(
      _quoterV2,
      _poolManager,
      _dataProvider,
      _sharedLiquidity,
      _nfpm,
      _marginFacility,
      overrides || {}
    ) as Promise<Quoter>;
  }
  override getDeployTransaction(
    _quoterV2: PromiseOrValue<string>,
    _poolManager: PromiseOrValue<string>,
    _dataProvider: PromiseOrValue<string>,
    _sharedLiquidity: PromiseOrValue<string>,
    _nfpm: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _quoterV2,
      _poolManager,
      _dataProvider,
      _sharedLiquidity,
      _nfpm,
      _marginFacility,
      overrides || {}
    );
  }
  override attach(address: string): Quoter {
    return super.attach(address) as Quoter;
  }
  override connect(signer: Signer): Quoter__factory {
    return super.connect(signer) as Quoter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuoterInterface {
    return new utils.Interface(_abi) as QuoterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Quoter {
    return new Contract(address, _abi, signerOrProvider) as Quoter;
  }
}

export interface QuoterLibraryAddresses {
  ["src/Util.sol:Utils"]: string;
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
}
