/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Quoter,
  QuoterInterface,
} from "../../../../src/periphery/Quoter.sol/Quoter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_quoterV2",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dataProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sharedLiquidity",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nfpm",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginFacility",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nfpmV1",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "addIsSlot6",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickDiff",
        type: "int24",
      },
    ],
    name: "getAllAprUtil",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "apr",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilTotal",
            type: "uint256",
          },
        ],
        internalType: "struct Quoter.AprUtilInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getLpPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
            ],
            internalType: "struct NonfungiblePositionManagerV2.Bins[]",
            name: "bins",
            type: "tuple[]",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct Quoter.LPInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolKeys",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "string",
            name: "symbol0",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol1",
            type: "string",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "string",
            name: "name0",
            type: "string",
          },
          {
            internalType: "string",
            name: "name1",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals0",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "decimals1",
            type: "uint8",
          },
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
        ],
        internalType: "struct Quoter.PoolInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSharedLiquidityInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxPerPair",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exposureToPair",
            type: "uint256",
          },
        ],
        internalType: "struct Quoter.PairSharedLiquidityInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getV1LpPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct Quoter.LPInfoV1[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isSlot6",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
            ],
            internalType: "struct PoolKey",
            name: "poolKey",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isToken0",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "marginInInput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "marginInOutput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowAmount",
            type: "uint256",
          },
          {
            internalType: "contract IQuoterV2",
            name: "quoter",
            type: "address",
          },
          {
            internalType: "bool",
            name: "marginInPosToken",
            type: "bool",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
        ],
        internalType: "struct Quoter.QuoteExactInputParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "quoteExactInput",
    outputs: [
      {
        internalType: "uint256",
        name: "swapInput",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionOutput",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "found",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003b3b38038062003b3b8339810160408190526200003491620000de565b600080546001600160a01b03199081166001600160a01b03998a1617909155600180548216978916979097179096556002805487169588169590951790945560038054861693871693909317909255600580548516918616919091179055600480543390851617905560078054841691851691909117905560068054909216921691909117905562000173565b80516001600160a01b0381168114620000d957600080fd5b919050565b600080600080600080600060e0888a031215620000fa57600080fd5b6200010588620000c1565b96506200011560208901620000c1565b95506200012560408901620000c1565b94506200013560608901620000c1565b93506200014560808901620000c1565b92506200015560a08901620000c1565b91506200016560c08901620000c1565b905092959891949750929550565b6139b880620001836000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806389233e441161006657806389233e44146101165780638da5cb5b1461013b578063ae6e040914610166578063d183feee14610199578063e35ef2ce146101ae57600080fd5b80630327b40c1461009857806327c9c6ef146100c1578063359b805b146100e157806352f0cf63146100f6575b600080fd5b6100ab6100a63660046124fc565b6101c3565b6040516100b89190612566565b60405180910390f35b6100d46100cf3660046125c9565b6106b3565b6040516100b891906125e6565b6100e9610c13565b6040516100b891906126d8565b6101096101043660046125c9565b610eec565b6040516100b89190612774565b610129610124366004612885565b611325565b6040516100b8969594939291906128e4565b60045461014e906001600160a01b031681565b6040516001600160a01b0390911681526020016100b8565b6101896101743660046125c9565b60086020526000908152604090205460ff1681565b60405190151581526020016100b8565b6101a1611bc1565b6040516100b891906129a6565b6101c16101bc3660046125c9565b611e7c565b005b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561021a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102429190810190612bce565b9050600081516001600160401b0381111561025f5761025f612ac7565b6040519080825280602002602001820160405280156102be57816020015b6040805160c0810182526000606082018181526080830182905260a083018290528252602080830182905292820152825260001990920191018161027d5790505b50905060005b82518110156106ab5760008382815181106102e1576102e1612c6c565b60200260200101516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a9190612c82565b9050600084838151811061036057610360612c6c565b60200260200101516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c99190612c82565b90506000600860008786815181106103e3576103e3612c6c565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16156104985785848151811061042157610421612c6c565b60200260200101516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160c060405180830381865afa158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a9190612cca565b5092945061051d9350505050565b8584815181106104aa576104aa612c6c565b60200260200101516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105139190612d58565b5093955050505050505b60006040518060600160405280856001600160a01b03168152602001846001600160a01b0316815260200188878151811061055a5761055a612c6c565b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561059f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c39190612df8565b62ffffff16905260025490915060009081906001600160a01b0316631f2ecd83846105ee8e88612e2b565b6105f88f89612e50565b6040518463ffffffff1660e01b815260040161061693929190612e75565b6040805180830381865afa158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190612e9d565b9150915060405180606001604052808481526020018381526020018281525088888151811061068757610687612c6c565b602002602001018190525050505050505080806106a390612ec1565b9150506102c4565b509392505050565b6006546040516370a0823160e01b81526001600160a01b0383811660048301526060926000929116906370a0823190602401602060405180830381865afa158015610702573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107269190612eda565b90506000816001600160401b0381111561074257610742612ac7565b6040519080825280602002602001820160405280156107d157816020015b604080516101808101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201819052610140820181905261016082015282526000199092019101816107605790505b5090506000826001600160401b038111156107ee576107ee612ac7565b604051908082528060200260200182016040528015610817578160200160208202803683370190505b50905060005b838110156108c957600554604051632f745c5960e01b81526001600160a01b0388811660048301526024820184905290911690632f745c5990604401602060405180830381865afa158015610876573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089a9190612eda565b8282815181106108ac576108ac612c6c565b6020908102919091010152806108c181612ec1565b91505061081d565b5060005b83811015610c0957600080600080600080600080600080600660009054906101000a90046001600160a01b03166001600160a01b03166399fbab888d8d8151811061091a5761091a612c6c565b60200260200101516040518263ffffffff1660e01b815260040161094091815260200190565b61016060405180830381865afa15801561095e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109829190612f0a565b9a509a509a509a509a509a509a509a509a509a50508f8d8c815181106109aa576109aa612c6c565b6020026020010151602001906001600160a01b031690816001600160a01b031681525050898d8c815181106109e1576109e1612c6c565b6020026020010151604001906001600160a01b031690816001600160a01b031681525050888d8c81518110610a1857610a18612c6c565b6020026020010151606001906001600160a01b031690816001600160a01b031681525050878d8c81518110610a4f57610a4f612c6c565b60200260200101516080019062ffffff16908162ffffff1681525050868d8c81518110610a7e57610a7e612c6c565b602002602001015160a0019060020b908160020b81525050858d8c81518110610aa957610aa9612c6c565b602002602001015160c0019060020b908160020b81525050848d8c81518110610ad457610ad4612c6c565b602002602001015160e001906001600160801b031690816001600160801b031681525050818d8c81518110610b0b57610b0b612c6c565b602002602001015161014001906001600160801b031690816001600160801b031681525050808d8c81518110610b4357610b43612c6c565b602002602001015161016001906001600160801b031690816001600160801b031681525050838d8c81518110610b7b57610b7b612c6c565b6020026020010151610100018181525050828d8c81518110610b9f57610b9f612c6c565b60200260200101516101200181815250508b8b81518110610bc257610bc2612c6c565b60200260200101518d8c81518110610bdc57610bdc612c6c565b60200260200101516000018181525050505050505050505050508080610c0190612ec1565b9150506108cd565b5090949350505050565b60606000610c1f611bc1565b9050600081516001600160401b03811115610c3c57610c3c612ac7565b604051908082528060200260200182016040528015610c9b57816020015b6040805160c0810182526000606082018181526080830182905260a0830182905282526020808301829052928201528252600019909201910181610c5a5790505b50905060005b8251811015610ee55760006040518060600160405280858481518110610cc957610cc9612c6c565b6020026020010151600001516001600160a01b03168152602001858481518110610cf557610cf5612c6c565b6020026020010151602001516001600160a01b03168152602001858481518110610d2157610d21612c6c565b60209081029190910101516080015162ffffff169052600154604051632411122160e11b81529192506000916001600160a01b0390911690634822244290610d6d908590600401612fd9565b602060405180830381865afa158015610d8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dae9190612eda565b60035460405163fad56a4160e01b8152600481018390529192506000916001600160a01b039091169063fad56a4190602401602060405180830381865afa158015610dfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e219190612eda565b6003546040516376efa68360e01b8152600481018590529192506000916001600160a01b03909116906376efa68390602401602060405180830381865afa158015610e70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e949190612eda565b9050604051806060016040528085815260200182815260200183815250868681518110610ec357610ec3612c6c565b6020026020010181905250505050508080610edd90612ec1565b915050610ca1565b5092915050565b6005546040516370a0823160e01b81526001600160a01b0383811660048301526060926000929116906370a0823190602401602060405180830381865afa158015610f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5f9190612eda565b90506000816001600160401b03811115610f7b57610f7b612ac7565b604051908082528060200260200182016040528015610ff957816020015b60408051610140810182526000808252602080830182905292820181905260608083018290526080830182905260a0830182905260c0830182905260e083015261010082018190526101208201528252600019909201910181610f995790505b5090506000826001600160401b0381111561101657611016612ac7565b60405190808252806020026020018201604052801561103f578160200160208202803683370190505b50905060005b838110156110f157600554604051632f745c5960e01b81526001600160a01b0388811660048301526024820184905290911690632f745c5990604401602060405180830381865afa15801561109e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c29190612eda565b8282815181106110d4576110d4612c6c565b6020908102919091010152806110e981612ec1565b915050611045565b5060005b83811015610c095760055482516000916001600160a01b031690636f229e6a9085908590811061112757611127612c6c565b60200260200101516040518263ffffffff1660e01b815260040161114d91815260200190565b600060405180830381865afa15801561116a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111929190810190613082565b90506000806000600560009054906101000a90046001600160a01b03166001600160a01b03166399fbab888787815181106111cf576111cf612c6c565b60200260200101516040518263ffffffff1660e01b81526004016111f591815260200190565b600060405180830381865afa158015611212573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261123a9190810190613149565b50505050509350935093505060405180610140016040528087878151811061126457611264612c6c565b602002602001015181526020018b6001600160a01b03168152602001846001600160a01b03168152602001836001600160a01b031681526020018262ffffff168152602001856020015160020b8152602001856040015160020b81526020018560600151815260200185608001516001600160801b031681526020018560a001516001600160801b031681525087868151811061130357611303612c6c565b602002602001018190525050505050808061131d90612ec1565b9150506110f5565b600080808080606081806113406101008a0160e08b016125c9565b6001600160a01b0316146113645761135f610100890160e08a016125c9565b611371565b6000546001600160a01b03165b905061137b6123c3565b600154604051632411122160e11b81526001600160a01b03909116906348222442906113ab908c90600401613268565b602060405180830381865afa1580156113c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ec9190612eda565b6080820152600154604051639525092360e01b81526001600160a01b0390911690639525092390611421908c90600401613268565b6101c060405180830381865afa15801561143f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114639190613276565b60a084015260020b60208301526001600160a01b0390811682526001546080830151604051636361616560e11b8152600481019190915291169063c6c2c2ca9060240160a060405180830381865afa1580156114c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e7919061336d565b505050506001600160801b031660408281019190915281518151633850c7bd60e01b815291516001600160a01b0390911691633850c7bd9160048083019260e09291908290030181865afa158015611543573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115679190612d58565b5050506001600160a01b039093166060850152506115909150506101208a016101008b016133cb565b156117145760408101516115b29060c08b013590670de0b6b3a7640000611ee8565b94506115c28560c08b01356133e8565b9750816001600160a01b031663c6a5026a6040518060a001604052808c60600160208101906115f191906133cb565b6116075761160260208e018e6125c9565b611617565b61161760408e0160208f016125c9565b6001600160a01b0316815260200161163560808e0160608f016133cb565b61164e5761164960408e0160208f016125c9565b61165b565b61165b60208e018e6125c9565b6001600160a01b031681526020018b81526020018c600001604001602081019061168591906133fb565b62ffffff16815260006020909101526040516001600160e01b031960e084901b1681526116b59190600401613418565b6080604051808303816000875af11580156116d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f89190613474565b5091985061170d91505060a08a0135886134ba565b965061188d565b60408101516117319060c08b013590670de0b6b3a7640000611ee8565b945060c08901356117468660808c01356133e8565b61175091906134ba565b9750816001600160a01b031663c6a5026a6040518060a001604052808c606001602081019061177f91906133cb565b6117955761179060208e018e6125c9565b6117a5565b6117a560408e0160208f016125c9565b6001600160a01b031681526020016117c360808e0160608f016133cb565b6117dc576117d760408e0160208f016125c9565b6117e9565b6117e960208e018e6125c9565b6001600160a01b031681526020018b81526020018c600001604001602081019061181391906133fb565b62ffffff16815260006020909101526040516001600160e01b031960e084901b1681526118439190600401613418565b6080604051808303816000875af1158015611862573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118869190613474565b5091985050505b60075481516000916001600160a01b031690638c1395f8906118b76101408e016101208f016125c9565b8d60600160208101906118ca91906133cb565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015215156044820152606401600060405180830381865afa15801561191e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119469190810190613582565b6001549091506001600160a01b031663ad16ab7e8b60c081013561197060808301606084016133cb565b8c87606001516040518663ffffffff1660e01b8152600401611996959493929190613699565b600060405180830381865afa1580156119b3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119db91908101906136d3565b825160c0015151919650945015611b10578151600154602084015160a08501515160405163cf2778e960e01b815273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9463cf2778e994611a429491936001600160a01b03909116928b9190600401613753565b600060405180830381865af4158015611a5f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a8791908101906137d9565b815160c00151604051630b7cb7c160e01b815291955073__$d23a8dd93b7205fa6b646ffed38c165d68$__91630b7cb7c191611ac891889190600401613815565b600060405180830381865af4158015611ae5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b0d91908101906137d9565b93505b8151600154602084015160a085015151608086015160405163aa7532af60e01b815273__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__9563aa7532af95611b729591946001600160a01b0390911693919290918c9160009190600401613843565b602060405180830381865af4158015611b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb39190612eda565b965050505091939550919395565b60606000600160009054906101000a90046001600160a01b03166001600160a01b031663d41dcbea6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611c18573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c409190810190612bce565b9050600081516001600160401b03811115611c5d57611c5d612ac7565b604051908082528060200260200182016040528015611c9657816020015b611c836123ff565b815260200190600190039081611c7b5790505b50905060005b8251811015610ee55760086000848381518110611cbb57611cbb612c6c565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615611db1576000838281518110611cfb57611cfb612c6c565b60200260200101516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160c060405180830381865afa158015611d40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d649190612cca565b50505050915050611d8e848381518110611d8057611d80612c6c565b602002602001015182611fc7565b838381518110611da057611da0612c6c565b602002602001018190525050611e6a565b6000838281518110611dc557611dc5612c6c565b60200260200101516001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611e0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2e9190612d58565b5050505050915050611e4b848381518110611d8057611d80612c6c565b838381518110611e5d57611e5d612c6c565b6020026020010181905250505b80611e7481612ec1565b915050611c9c565b6004546001600160a01b03163314611ec45760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6000808060001985870985870292508281108382030391505080600003611f215760008411611f1657600080fd5b508290049050611fc0565b808411611f595760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401611ebb565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b611fcf6123ff565b6000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561200f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120339190612c82565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612075573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120999190612c82565b9050604051806101400160405280836001600160a01b03168152602001826001600160a01b03168152602001836001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015612103573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261212b91908101906138d4565b8152602001826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801561216e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261219691908101906138d4565b8152602001866001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121fd9190612df8565b62ffffff168152602001836001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612245573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261226d91908101906138d4565b8152602001826001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156122b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122d891908101906138d4565b8152602001836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561231b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061233f9190613967565b60ff168152602001826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612385573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a99190613967565b60ff1681526020018560020b815250925050505b92915050565b6040805160c08101825260008082526020820181905291810182905260608101829052608081019190915260a081016123fa612472565b905290565b60405180610140016040528060006001600160a01b0316815260200160006001600160a01b031681526020016060815260200160608152602001600062ffffff1681526020016060815260200160608152602001600060ff168152602001600060ff168152602001600060020b81525090565b6040518060e001604052806124b66040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff16815260200160008152602001600081525090565b8060020b81146124f957600080fd5b50565b60006020828403121561250e57600080fd5b8135611fc0816124ea565b80516001600160a01b0390811683526020808301519091169083015260409081015162ffffff16910152565b612550828251612519565b6020810151606083015260400151608090910152565b6020808252825182820181905260009190848201906040850190845b818110156125a857612595838551612545565b9284019260a09290920191600101612582565b50909695505050505050565b6001600160a01b03811681146124f957600080fd5b6000602082840312156125db57600080fd5b8135611fc0816125b4565b602080825282518282018190526000919060409081850190868401855b828110156126cb57815180518552868101516001600160a01b0390811688870152868201518116878701526060808301519091169086015260808082015162ffffff169086015260a080820151600281900b82880152505060c08082015161266f8288018260020b9052565b505060e0818101516001600160801b039081169187019190915261010080830151908701526101208083015190870152610140808301518216908701526101609182015116908501526101809093019290850190600101612603565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156125a857612707838551612545565b9284019260a092909201916001016126f4565b600081518084526020808501945080840160005b8381101561276957815180516001600160801b031688528381015184890152604090810151908801526060909601959082019060010161272e565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561287757603f19898403018552815180518452878101516001600160a01b0390811689860152878201518116888601526060808301519091169085015260808082015162ffffff169085015260a080820151600281900b828701526101409190505060c0808301516128158288018260020b9052565b505060e080830151828288015261282e8388018261271a565b925050506101008083015161284d828801826001600160801b03169052565b5050610120918201516001600160801b03169490910193909352938601939086019060010161279b565b509098975050505050505050565b6000610140828403121561289857600080fd5b50919050565b805160020b82526001600160801b03602082015116602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600060c0808301898452602089818601528860408601528760608601528660808601528260a086015281865180845260e087019150828801935060005b818110156129445761293483865161289e565b9383019391850191600101612921565b50909c9b505050505050505050505050565b60005b83811015612971578181015183820152602001612959565b50506000910152565b60008151808452612992816020860160208601612956565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561287757888303603f19018552815180516001600160a01b03168452610140818901516001600160a01b038116868b015250878201518189870152612a188287018261297a565b91505060608083015186830382880152612a32838261297a565b92505050608080830151612a4c8288018262ffffff169052565b505060a08083015186830382880152612a65838261297a565b9250505060c08083015186830382880152612a80838261297a565b9250505060e080830151612a988288018260ff169052565b50506101008281015160ff16908601526101209182015160020b919094015293860193908601906001016129cd565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715612aff57612aff612ac7565b60405290565b60405160c081016001600160401b0381118282101715612aff57612aff612ac7565b60405160e081016001600160401b0381118282101715612aff57612aff612ac7565b604051608081016001600160401b0381118282101715612aff57612aff612ac7565b604051601f8201601f191681016001600160401b0381118282101715612b9357612b93612ac7565b604052919050565b60006001600160401b03821115612bb457612bb4612ac7565b5060051b60200190565b8051612bc9816125b4565b919050565b60006020808385031215612be157600080fd5b82516001600160401b03811115612bf757600080fd5b8301601f81018513612c0857600080fd5b8051612c1b612c1682612b9b565b612b6b565b81815260059190911b82018301908381019087831115612c3a57600080fd5b928401925b82841015612c61578351612c52816125b4565b82529284019290840190612c3f565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612c9457600080fd5b8151611fc0816125b4565b805161ffff81168114612bc957600080fd5b80151581146124f957600080fd5b8051612bc981612cb1565b60008060008060008060c08789031215612ce357600080fd5b8651612cee816125b4565b6020880151909650612cff816124ea565b9450612d0d60408801612c9f565b9350612d1b60608801612c9f565b9250612d2960808801612c9f565b915060a0870151612d3981612cb1565b809150509295509295509295565b805160ff81168114612bc957600080fd5b600080600080600080600060e0888a031215612d7357600080fd5b8751612d7e816125b4565b6020890151909750612d8f816124ea565b9550612d9d60408901612c9f565b9450612dab60608901612c9f565b9350612db960808901612c9f565b9250612dc760a08901612d47565b915060c0880151612dd781612cb1565b8091505092959891949750929550565b62ffffff811681146124f957600080fd5b600060208284031215612e0a57600080fd5b8151611fc081612de7565b634e487b7160e01b600052601160045260246000fd5b600282810b9082900b03627fffff198112627fffff821317156123bd576123bd612e15565b600281810b9083900b01627fffff8113627fffff19821217156123bd576123bd612e15565b60a08101612e838286612519565b8360020b60608301528260020b6080830152949350505050565b60008060408385031215612eb057600080fd5b505080516020909101519092909150565b600060018201612ed357612ed3612e15565b5060010190565b600060208284031215612eec57600080fd5b5051919050565b80516001600160801b0381168114612bc957600080fd5b60008060008060008060008060008060006101608c8e031215612f2c57600080fd5b8b51612f37816125b4565b60208d0151909b50612f48816125b4565b60408d0151909a50612f59816125b4565b60608d0151909950612f6a81612de7565b60808d0151909850612f7b816124ea565b60a08d0151909750612f8c816124ea565b9550612f9a60c08d01612ef3565b945060e08c015193506101008c01519250612fb86101208d01612ef3565b9150612fc76101408d01612ef3565b90509295989b509295989b9093969950565b606081016123bd8284612519565b600082601f830112612ff857600080fd5b81516020613008612c1683612b9b565b8281526060928302850182019282820191908785111561302757600080fd5b8387015b858110156130755781818a0312156130435760008081fd5b61304b612add565b61305482612ef3565b8152818601518682015260408083015190820152845292840192810161302b565b5090979650505050505050565b60006020828403121561309457600080fd5b81516001600160401b03808211156130ab57600080fd5b9083019060c082860312156130bf57600080fd5b6130c7612b05565b82516130d2816125b4565b815260208301516130e2816124ea565b602082015260408301516130f5816124ea565b604082015260608301518281111561310c57600080fd5b61311887828601612fe7565b60608301525061312a60808401612ef3565b608082015261313b60a08401612ef3565b60a082015295945050505050565b60008060008060008060008060006101208a8c03121561316857600080fd5b8951613173816125b4565b60208b0151909950613184816125b4565b60408b0151909850613195816125b4565b60608b01519097506131a681612de7565b60808b01519096506131b7816124ea565b60a08b01519095506131c8816124ea565b60c08b01519094506001600160401b038111156131e457600080fd5b6131f08c828d01612fe7565b9350506131ff60e08b01612ef3565b915061320e6101008b01612ef3565b90509295985092959850929598565b8035613228816125b4565b6001600160a01b039081168352602082013590613244826125b4565b166020830152604081013561325881612de7565b62ffffff81166040840152505050565b606081016123bd828461321d565b60008060008385036101c081121561328d57600080fd5b8451613298816125b4565b60208601519094506132a9816124ea565b9250603f1901610180808212156132bf57600080fd5b6132c7612b27565b60c08312156132d557600080fd5b6132dd612b05565b925060408701518352606087015160208401526080870151604084015260a0870151606084015260c0870151608084015260e087015160a08401528281526101008701516020820152610120870151604082015261014087015160608201526133496101608801612c9f565b60808201529086015160a08201526101a09095015160c08601525091949093509050565b600080600080600060a0868803121561338557600080fd5b61338e86612ef3565b945061339c60208701612ef3565b93506133aa60408701612ef3565b92506133b860608701612ef3565b9150608086015190509295509295909350565b6000602082840312156133dd57600080fd5b8135611fc081612cb1565b818103818111156123bd576123bd612e15565b60006020828403121561340d57600080fd5b8135611fc081612de7565b81516001600160a01b0390811682526020808401518216908301526040808401519083015260608084015162ffffff1690830152608092830151169181019190915260a00190565b805163ffffffff81168114612bc957600080fd5b6000806000806080858703121561348a57600080fd5b84519350602085015161349c816125b4565b92506134aa60408601613460565b6060959095015193969295505050565b808201808211156123bd576123bd612e15565b600082601f8301126134de57600080fd5b815160206134ee612c1683612b9b565b82815260c0928302850182019282820191908785111561350d57600080fd5b8387015b858110156130755781818a0312156135295760008081fd5b613531612b05565b815161353c816124ea565b8152613549828701612ef3565b8187015260408281015190820152606080830151908201526080808301519082015260a080830151908201528452928401928101613511565b60006020828403121561359457600080fd5b81516001600160401b03808211156135ab57600080fd5b90830190608082860312156135bf57600080fd5b6135c7612b49565b8251828111156135d657600080fd5b830160e081880312156135e857600080fd5b6135f0612b27565b6135f982612bbe565b815261360760208301612cbf565b6020820152604082015160408201526060820151606082015261362c60808301613460565b608082015261363d60a08301613460565b60a082015260c08201518481111561365457600080fd5b613660898285016134cd565b60c0830152508083525050602083015160208201526040830151604082015261368b60608401612cbf565b606082015295945050505050565b60e081016136a7828861321d565b6060820195909552921515608084015260a08301919091526001600160a01b031660c090910152919050565b600080604083850312156136e657600080fd5b8251915060208301516001600160401b0381111561370357600080fd5b61370f858286016134cd565b9150509250929050565b600081518084526020808501945080840160005b838110156127695761374087835161289e565b60c096909601959082019060010161372d565b6001600160a01b03868116825285166020820152600284900b60408201526101406060820181905260009061378a83820186613719565b9150506137cf6080830184805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b9695505050505050565b6000602082840312156137eb57600080fd5b81516001600160401b0381111561380157600080fd5b61380d848285016134cd565b949350505050565b6040815260006138286040830185613719565b828103602084015261383a8185613719565b95945050505050565b6001600160a01b03888116825287166020820152600286900b604082015260006101806138a86060840188805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b806101208401526138bb81840187613719565b9415156101408401525050610160015295945050505050565b6000602082840312156138e657600080fd5b81516001600160401b03808211156138fd57600080fd5b818401915084601f83011261391157600080fd5b81518181111561392357613923612ac7565b613936601f8201601f1916602001612b6b565b915080825285602082850101111561394d57600080fd5b61395e816020840160208601612956565b50949350505050565b60006020828403121561397957600080fd5b611fc082612d4756fea264697066735822122097e4e3713ac2a6b1d3551d02946441688517dc12e6a29645686f55f9ee26472864736f6c63430008120033";

type QuoterConstructorParams =
  | [linkLibraryAddresses: QuoterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QuoterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Quoter__factory extends ContractFactory {
  constructor(...args: QuoterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Quoter__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: QuoterLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _quoterV2: PromiseOrValue<string>,
    _poolManager: PromiseOrValue<string>,
    _dataProvider: PromiseOrValue<string>,
    _sharedLiquidity: PromiseOrValue<string>,
    _nfpm: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _nfpmV1: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Quoter> {
    return super.deploy(
      _quoterV2,
      _poolManager,
      _dataProvider,
      _sharedLiquidity,
      _nfpm,
      _marginFacility,
      _nfpmV1,
      overrides || {}
    ) as Promise<Quoter>;
  }
  override getDeployTransaction(
    _quoterV2: PromiseOrValue<string>,
    _poolManager: PromiseOrValue<string>,
    _dataProvider: PromiseOrValue<string>,
    _sharedLiquidity: PromiseOrValue<string>,
    _nfpm: PromiseOrValue<string>,
    _marginFacility: PromiseOrValue<string>,
    _nfpmV1: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _quoterV2,
      _poolManager,
      _dataProvider,
      _sharedLiquidity,
      _nfpm,
      _marginFacility,
      _nfpmV1,
      overrides || {}
    );
  }
  override attach(address: string): Quoter {
    return super.attach(address) as Quoter;
  }
  override connect(signer: Signer): Quoter__factory {
    return super.connect(signer) as Quoter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuoterInterface {
    return new utils.Interface(_abi) as QuoterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Quoter {
    return new Contract(address, _abi, signerOrProvider) as Quoter;
  }
}

export interface QuoterLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/Util.sol:Utils"]: string;
}
