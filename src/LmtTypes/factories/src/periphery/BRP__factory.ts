/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { BRP, BRPInterface } from "../../../src/periphery/BRP";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AddedUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimableBoxes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    name: "BoxUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pointDifference",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tier",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    name: "ClaimedRebates",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UpdatedPoints",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradePoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lpPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "referralPoint",
        type: "uint256",
      },
    ],
    name: "addAllPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "referrers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tradePoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "lpPoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "referralPoints",
        type: "uint256[]",
      },
    ],
    name: "addAllPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addBox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "passcode_",
        type: "uint256",
      },
    ],
    name: "claimBoxes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "claimableBoxes",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableBoxes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPoints",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "freeBoxUsed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ref",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isListed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimedPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRecordedLpPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRecordedPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRecordedTradePoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numBoxes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pointPerAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pointPerUnlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pointsUsedForNewBoxes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pointsUsedForUnlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rangelow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rangeHigh",
        type: "uint256",
      },
    ],
    name: "randomWithinRange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rangeHigh",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rangeLow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boxes",
        type: "uint256",
      },
    ],
    name: "setNumBoxes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "who",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "boxes",
        type: "uint256",
      },
    ],
    name: "setNumBoxesBulk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "passcode_",
        type: "uint256",
      },
    ],
    name: "setPasscode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pointPerAdd_",
        type: "uint256",
      },
    ],
    name: "setPointPerAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pointPerUnlocks_",
        type: "uint256",
      },
    ],
    name: "setPointPerUnlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rangeLow_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rangeHigh_",
        type: "uint256",
      },
    ],
    name: "setRandomRange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardToken_",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setlastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tierToRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockBox",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradePoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lpPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "referralPoint",
        type: "uint256",
      },
    ],
    name: "updateAllPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "referrers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tradePoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "lpPoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "referralPoints",
        type: "uint256[]",
      },
    ],
    name: "updateAllPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "point",
        type: "uint256",
      },
    ],
    name: "updatePoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "referrers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "points",
        type: "uint256[]",
      },
    ],
    name: "updatePoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ff5806100206000396000f3fe608060405234801561001057600080fd5b50600436106102685760003560e01c8063880489e011610151578063b901164b116100c3578063da7dd8ca11610087578063da7dd8ca14610593578063dc8417e0146105c6578063ea2277ad146105e6578063f1f91518146105ef578063f794062e14610602578063f7c618c11461062557600080fd5b8063b901164b14610510578063bc8c67a21461053a578063c1c4eec31461054d578063d0c5de6a1461056d578063d375c81d1461058057600080fd5b8063a60b7b7011610115578063a60b7b70146104b3578063ab5b5e84146104bc578063af592d27146104cf578063b1f1f653146104d7578063b60f1840146104ea578063b753a98c146104fd57600080fd5b8063880489e01461043d5780638aee8127146104505780638da5cb5b1461046357806393196a6d146104765780639aa1f9b21461049357600080fd5b8063485cc955116101ea5780635ffab0e3116101ae5780635ffab0e31461039f5780636143e733146103c1578063673d66ad146103e1578063705f40c71461040157806380f2fb6f1461042157806387dcbbc11461042a57600080fd5b8063485cc9551461033e5780634c89867f146103515780634f26af421461035957806351d08cd51461037957806357175f8c1461038c57600080fd5b80632e97766d116102315780632e97766d146102e957806330291a3e146102ef578063365b98b214610302578063372500ab1461032d5780633798443b1461033557600080fd5b8062ce8e3e1461026d5780630ec227471461028b5780631c786ce0146102b9578063289035c7146102ce5780632a3606d5146102e1575b600080fd5b610275610638565b6040516102829190611a30565b60405180910390f35b6102ab610299366004611a99565b60076020526000908152604090205481565b604051908152602001610282565b6102cc6102c7366004611abb565b61069a565b005b6102cc6102dc366004611b31565b6106e9565b6102cc6108b5565b436102ab565b6102cc6102fd366004611bf5565b6109cf565b610315610310366004611bf5565b6109fe565b6040516001600160a01b039091168152602001610282565b6102ab610a28565b6102ab600f5481565b6102cc61034c366004611c0e565b610be4565b6009546102ab565b6102ab610367366004611a99565b60106020526000908152604090205481565b6102cc610387366004611c41565b610db8565b6102ab61039a366004611c7a565b610e16565b6103b26103ad366004611c9c565b610ef1565b60405161028293929190611d19565b6102ab6103cf366004611bf5565b60036020526000908152604090205481565b6102ab6103ef366004611a99565b60026020526000908152604090205481565b6102ab61040f366004611a99565b600c6020526000908152604090205481565b6102ab60115481565b6102cc610438366004611c7a565b611133565b6102cc61044b366004611bf5565b611168565b6102cc61045e366004611a99565b6111d2565b600554610315906001600160a01b031681565b61047e61121e565b60408051928352602083019190915201610282565b6102ab6104a1366004611a99565b600d6020526000908152604090205481565b6102ab600e5481565b6102cc6104ca366004611b31565b6114d6565b6102cc61156d565b6102cc6104e5366004611bf5565b601455565b6102cc6104f8366004611c41565b61159d565b6102cc61050b366004611abb565b6116d7565b6102cc61051e366004611abb565b6001600160a01b03909116600090815260026020526040902055565b61047e610548366004611a99565b611778565b6102ab61055b366004611a99565b60016020526000908152604090205481565b6102cc61057b366004611d5c565b611893565b6102cc61058e366004611bf5565b6118e0565b6105b66105a1366004611a99565b60136020526000908152604090205460ff1681565b6040519015158152602001610282565b6102ab6105d4366004611a99565b60086020526000908152604090205481565b6102ab60125481565b6102cc6105fd366004611da8565b61190f565b6105b6610610366004611a99565b600a6020526000908152604090205460ff1681565b600654610315906001600160a01b031681565b6060600b80548060200260200160405190810160405280929190818152602001828054801561069057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610672575b5050505050905090565b6005546001600160a01b031633146106cd5760405162461bcd60e51b81526004016106c490611e14565b60405180910390fd5b6001600160a01b039091166000908152600c6020526040902055565b60005b8781101561087d5761076e89898381811061070957610709611e34565b905060200201602081019061071e9190611a99565b88888481811061073057610730611e34565b9050602002013587878581811061074957610749611e34565b9050602002013586868681811061076257610762611e34565b9050602002013561159d565b600a60008a8a8481811061078457610784611e34565b90506020020160208101906107999190611a99565b6001600160a01b0316815260208101919091526040016000205460ff1661086b576001600a60008b8b858181106107d2576107d2611e34565b90506020020160208101906107e79190611a99565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600b89898381811061082357610823611e34565b90506020020160208101906108389190611a99565b81546001810183556000928352602090922090910180546001600160a01b0319166001600160a01b039092169190911790555b8061087581611e60565b9150506106ec565b506040517f2d25400765776242d664638c9c6b84875af2835cfa621d55979981e9bd8d67a590600090a1505042600955505050505050565b336000908152600c6020526040902054156108fb5760405162461bcd60e51b81526020600482015260066024820152650d0c2e684def60d31b60448201526064016106c4565b336000908152600d6020908152604080832054601083528184205460028452828520546008855283862054600790955292852054919490939092916109409190611e79565b61094a9190611e79565b905060006109588385611e79565b821115610977578361096a8484611e8c565b6109749190611e8c565b90505b600f548111156109c957600f5433600090815260106020526040812080549091906109a3908490611e79565b9091555050336000908152600c602052604081208054916109c383611e60565b91905055505b50505050565b6005546001600160a01b031633146109f95760405162461bcd60e51b81526004016106c490611e14565b600f55565b600b8181548110610a0e57600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526001602090815260408083205460029092528220548291610a4e91611e8c565b600480546040516302b0540360e31b815233928101929092529192506000916001600160a01b031690631582a01890602401602060405180830381865afa158015610a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac19190611e9f565b600081815260036020526040812054919250610ae082620f4240611eb8565b610aed85620f4240611eb8565b610af79190611ee5565b60065460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610b49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6d9190611ef9565b5060065460408051868152602081018690529081018390526001600160a01b039091169033907ff8b680a8b775e82d2dcf9aad6301ed13b0563379af7820e6495737a4abf3bfbe9060600160405180910390a333600090815260026020908152604080832054600190925290912055949350505050565b600054610100900460ff1615808015610c045750600054600160ff909116105b80610c1e5750303b158015610c1e575060005460ff166001145b610c815760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106c4565b6000805460ff191660011790558015610ca4576000805461ff0019166101001790555b600480546001600160a01b038086166001600160a01b03199283161790925560068054928516928216929092179091556005805490911633179055600360205261029e7f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff5561014f7fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c55600260005260e17fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d55612710600e819055600f81905560115561c3506012558015610db3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6005546001600160a01b03163314610de25760405162461bcd60e51b81526004016106c490611e14565b6001600160a01b03909316600090815260076020908152604080832094909455600881528382209290925560029091522055565b6000828211610e575760405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b60448201526064016106c4565b6000610e638484611e8c565b610e6e906001611e79565b90506000610e7d600143611e8c565b604080519140602083018190526bffffffffffffffffffffffff193360601b1691830191909152426054830152915060009060740160408051601f19818403018152919052805160209091012090506000610ed88483611f1b565b9050610ee48188611e79565b9450505050505b92915050565b6060808060008467ffffffffffffffff811115610f1057610f10611f2f565b604051908082528060200260200182016040528015610f39578160200160208202803683370190505b50905060008567ffffffffffffffff811115610f5757610f57611f2f565b604051908082528060200260200182016040528015610f80578160200160208202803683370190505b50905060008667ffffffffffffffff811115610f9e57610f9e611f2f565b604051908082528060200260200182016040528015610fc7578160200160208202803683370190505b50905060005b8781101561112457600760008a8a84818110610feb57610feb611e34565b90506020020160208101906110009190611a99565b6001600160a01b03166001600160a01b031681526020019081526020016000205484828151811061103357611033611e34565b602002602001018181525050600860008a8a8481811061105557611055611e34565b905060200201602081019061106a9190611a99565b6001600160a01b03166001600160a01b031681526020019081526020016000205483828151811061109d5761109d611e34565b602002602001018181525050600260008a8a848181106110bf576110bf611e34565b90506020020160208101906110d49190611a99565b6001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061110757611107611e34565b60209081029190910101528061111c81611e60565b915050610fcd565b50919450925090509250925092565b6005546001600160a01b0316331461115d5760405162461bcd60e51b81526004016106c490611e14565b601191909155601255565b60145481146111aa5760405162461bcd60e51b815260206004820152600e60248201526d77726f6e672070617373636f646560901b60448201526064016106c4565b336000908152600c602052604081208054601492906111ca908490611e79565b909155505050565b6005546001600160a01b031633146111fc5760405162461bcd60e51b81526004016106c490611e14565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600c602052604081205481906112655760405162461bcd60e51b81526004016106c490602080825260049082015263060c4def60e31b604082015260600190565b3360009081526013602052604090205460ff1661139a57336000908152600c6020526040812080549161129783611f45565b9091555050336000908152601360205260408120805460ff191660011790556011546012546112c69190610e16565b905060006112dc82670de0b6b3a7640000611eb8565b60065460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561132e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113529190611ef9565b50604080516000808252602082015233917f556f2cd053c19fa678c33006534a7ba4416fc1737d8dfebdf44da21c443222a2910160405180910390a250600093849350915050565b6000806113a633611778565b600e54336000908152600d60205260408120805494965092945090926113cd908490611e79565b9091555050336000908152600c602052604081208054916113ed83611f45565b91905055506000611402601154601254610e16565b9050600061141882670de0b6b3a7640000611eb8565b60065460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561146a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148e9190611ef9565b50604080518581526020810184905233917f556f2cd053c19fa678c33006534a7ba4416fc1737d8dfebdf44da21c443222a2910160405180910390a250919491935090915050565b60005b8781101561087d5761155b8989838181106114f6576114f6611e34565b905060200201602081019061150b9190611a99565b88888481811061151d5761151d611e34565b9050602002013587878581811061153657611536611e34565b9050602002013586868681811061154f5761154f611e34565b90506020020135610db8565b8061156581611e60565b9150506114d9565b6005546001600160a01b031633146115975760405162461bcd60e51b81526004016106c490611e14565b42600955565b6005546001600160a01b031633146115c75760405162461bcd60e51b81526004016106c490611e14565b6001600160a01b038416600090815260076020526040812080548592906115ef908490611e79565b90915550506001600160a01b0384166000908152600860205260408120805484929061161c908490611e79565b90915550506001600160a01b03841660009081526002602052604081208054839290611649908490611e79565b90915550506001600160a01b0384166000908152600a602052604090205460ff166109c9575050506001600160a01b03166000818152600a60205260408120805460ff19166001908117909155600b805491820181559091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319169091179055565b6005546001600160a01b031633146117015760405162461bcd60e51b81526004016106c490611e14565b60055460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af1158015611754573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db39190611ef9565b6001600160a01b0381166000908152600c60209081526040808320546002835281842054600884528285205460079094529184205484939192916117bb91611e79565b6117c59190611e79565b91506000600d6000866001600160a01b03166001600160a01b031681526020019081526020016000205490506118226040518060400160405280600b81526020016a746f74616c706f696e747360a81b8152508483600e546119cb565b80831061184757600e546118368285611e8c565b6118409190611ee5565b935061184c565b600093505b818410611859578161185b565b835b6001600160a01b03861660009081526013602052604090205490945060ff1661188c578361188881611e60565b9450505b5050915091565b60005b828110156109c9576118ce8484838181106118b3576118b3611e34565b90506020020160208101906118c89190611a99565b8361069a565b806118d881611e60565b915050611896565b6005546001600160a01b0316331461190a5760405162461bcd60e51b81526004016106c490611e14565b600e55565b8281146119485760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016106c4565b60005b838110156119c4576119b285858381811061196857611968611e34565b905060200201602081019061197d9190611a99565b84848481811061198f5761198f611e34565b905060200201356001600160a01b03909116600090815260026020526040902055565b806119bc81611e60565b91505061194b565b5050505050565b6109c9848484846040516024016119e59493929190611f5c565b60408051601f198184030181529190526020810180516001600160e01b03166304772b3360e11b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6020808252825182820181905260009190848201906040850190845b81811015611a715783516001600160a01b031683529284019291840191600101611a4c565b50909695505050505050565b80356001600160a01b0381168114611a9457600080fd5b919050565b600060208284031215611aab57600080fd5b611ab482611a7d565b9392505050565b60008060408385031215611ace57600080fd5b611ad783611a7d565b946020939093013593505050565b60008083601f840112611af757600080fd5b50813567ffffffffffffffff811115611b0f57600080fd5b6020830191508360208260051b8501011115611b2a57600080fd5b9250929050565b6000806000806000806000806080898b031215611b4d57600080fd5b883567ffffffffffffffff80821115611b6557600080fd5b611b718c838d01611ae5565b909a50985060208b0135915080821115611b8a57600080fd5b611b968c838d01611ae5565b909850965060408b0135915080821115611baf57600080fd5b611bbb8c838d01611ae5565b909650945060608b0135915080821115611bd457600080fd5b50611be18b828c01611ae5565b999c989b5096995094979396929594505050565b600060208284031215611c0757600080fd5b5035919050565b60008060408385031215611c2157600080fd5b611c2a83611a7d565b9150611c3860208401611a7d565b90509250929050565b60008060008060808587031215611c5757600080fd5b611c6085611a7d565b966020860135965060408601359560600135945092505050565b60008060408385031215611c8d57600080fd5b50508035926020909101359150565b60008060208385031215611caf57600080fd5b823567ffffffffffffffff811115611cc657600080fd5b611cd285828601611ae5565b90969095509350505050565b600081518084526020808501945080840160005b83811015611d0e57815187529582019590820190600101611cf2565b509495945050505050565b606081526000611d2c6060830186611cde565b8281036020840152611d3e8186611cde565b90508281036040840152611d528185611cde565b9695505050505050565b600080600060408486031215611d7157600080fd5b833567ffffffffffffffff811115611d8857600080fd5b611d9486828701611ae5565b909790965060209590950135949350505050565b60008060008060408587031215611dbe57600080fd5b843567ffffffffffffffff80821115611dd657600080fd5b611de288838901611ae5565b90965094506020870135915080821115611dfb57600080fd5b50611e0887828801611ae5565b95989497509550505050565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611e7257611e72611e4a565b5060010190565b80820180821115610eeb57610eeb611e4a565b81810381811115610eeb57610eeb611e4a565b600060208284031215611eb157600080fd5b5051919050565b8082028115828204841417610eeb57610eeb611e4a565b634e487b7160e01b600052601260045260246000fd5b600082611ef457611ef4611ecf565b500490565b600060208284031215611f0b57600080fd5b81518015158114611ab457600080fd5b600082611f2a57611f2a611ecf565b500690565b634e487b7160e01b600052604160045260246000fd5b600081611f5457611f54611e4a565b506000190190565b608081526000855180608084015260005b81811015611f8a57602081890181015160a0868401015201611f6d565b50600060a0828501015260a0601f19601f8301168401019150508460208301528360408301528260608301529594505050505056fea264697066735822122015a3a14b0a1e1cfbc55541fa8767d6e06e730c3bec02af2443344e22240c062764736f6c63430008120033";

type BRPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BRPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BRP__factory extends ContractFactory {
  constructor(...args: BRPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BRP> {
    return super.deploy(overrides || {}) as Promise<BRP>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BRP {
    return super.attach(address) as BRP;
  }
  override connect(signer: Signer): BRP__factory {
    return super.connect(signer) as BRP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BRPInterface {
    return new utils.Interface(_abi) as BRPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BRP {
    return new Contract(address, _abi, signerOrProvider) as BRP;
  }
}
