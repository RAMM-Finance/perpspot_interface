/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { BRP, BRPInterface } from "../../../src/periphery/BRP";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AddedUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pointDifference",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tier",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    name: "ClaimedRebates",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UpdatedPoints",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradePoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lpPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "referralPoint",
        type: "uint256",
      },
    ],
    name: "addAllPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "referrers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tradePoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "lpPoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "referralPoints",
        type: "uint256[]",
      },
    ],
    name: "addAllPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ref",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isListed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimedPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRecordedLpPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRecordedPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRecordedTradePoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setlastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tierToRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradePoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lpPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "referralPoint",
        type: "uint256",
      },
    ],
    name: "updateAllPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "referrers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tradePoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "lpPoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "referralPoints",
        type: "uint256[]",
      },
    ],
    name: "updateAllPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "point",
        type: "uint256",
      },
    ],
    name: "updatePoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "referrers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "points",
        type: "uint256[]",
      },
    ],
    name: "updatePoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506114a8806100206000396000f3fe608060405234801561001057600080fd5b506004361061014c5760003560e01c8063673d66ad116100c3578063b901164b1161007c578063b901164b146102cf578063c1c4eec3146102f9578063dc8417e014610319578063f1f9151814610339578063f794062e1461034c578063f7c618c11461037f57600080fd5b8063673d66ad1461025b5780638da5cb5b1461027b578063ab5b5e841461028e578063af592d27146102a1578063b60f1840146102a9578063b753a98c146102bc57600080fd5b8063372500ab11610115578063372500ab146101e3578063485cc955146101eb5780634c89867f146101fe57806351d08cd5146102065780635ffab0e3146102195780636143e7331461023b57600080fd5b8062ce8e3e146101515780630ec227471461016f578063289035c71461019d5780632e97766d146101b2578063365b98b2146101b8575b600080fd5b610159610392565b6040516101669190610fe1565b60405180910390f35b61018f61017d36600461104a565b60076020526000908152604090205481565b604051908152602001610166565b6101b06101ab3660046110b8565b6103f4565b005b4361018f565b6101cb6101c636600461117c565b6105c0565b6040516001600160a01b039091168152602001610166565b61018f6105ea565b6101b06101f9366004611195565b6107a6565b60095461018f565b6101b06102143660046111c8565b610969565b61022c610227366004611201565b6109c7565b6040516101669392919061127e565b61018f61024936600461117c565b60036020526000908152604090205481565b61018f61026936600461104a565b60026020526000908152604090205481565b6005546101cb906001600160a01b031681565b6101b061029c3660046110b8565b610c09565b6101b0610d9d565b6101b06102b73660046111c8565b610dcd565b6101b06102ca3660046112c1565b610e84565b6101b06102dd3660046112c1565b6001600160a01b03909116600090815260026020526040902055565b61018f61030736600461104a565b60016020526000908152604090205481565b61018f61032736600461104a565b60086020526000908152604090205481565b6101b06103473660046112eb565b610f25565b61036f61035a36600461104a565b600a6020526000908152604090205460ff1681565b6040519015158152602001610166565b6006546101cb906001600160a01b031681565b6060600b8054806020026020016040519081016040528092919081815260200182805480156103ea57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103cc575b5050505050905090565b60005b878110156105885761047989898381811061041457610414611357565b9050602002016020810190610429919061104a565b88888481811061043b5761043b611357565b9050602002013587878581811061045457610454611357565b9050602002013586868681811061046d5761046d611357565b90506020020135610dcd565b600a60008a8a8481811061048f5761048f611357565b90506020020160208101906104a4919061104a565b6001600160a01b0316815260208101919091526040016000205460ff16610576576001600a60008b8b858181106104dd576104dd611357565b90506020020160208101906104f2919061104a565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600b89898381811061052e5761052e611357565b9050602002016020810190610543919061104a565b81546001810183556000928352602090922090910180546001600160a01b0319166001600160a01b039092169190911790555b8061058081611383565b9150506103f7565b506040517f2d25400765776242d664638c9c6b84875af2835cfa621d55979981e9bd8d67a590600090a1505042600955505050505050565b600b81815481106105d057600080fd5b6000918252602090912001546001600160a01b0316905081565b33600090815260016020908152604080832054600290925282205482916106109161139c565b600480546040516302b0540360e31b815233928101929092529192506000916001600160a01b031690631582a01890602401602060405180830381865afa15801561065f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068391906113b5565b6000818152600360205260408120549192506106a282620f42406113ce565b6106af85620f42406113ce565b6106b991906113e5565b60065460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561070b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072f9190611407565b5060065460408051868152602081018690529081018390526001600160a01b039091169033907ff8b680a8b775e82d2dcf9aad6301ed13b0563379af7820e6495737a4abf3bfbe9060600160405180910390a333600090815260026020908152604080832054600190925290912055949350505050565b600054610100900460ff16158080156107c65750600054600160ff909116105b806107e05750303b1580156107e0575060005460ff166001145b6108485760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561086b576000805461ff0019166101001790555b600480546001600160a01b038086166001600160a01b03199283161790925560068054928516928216929092179091556005805490911633179055600360205261029e7f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff5561014f7fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c55600260005260e17fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d558015610964576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6005546001600160a01b031633146109935760405162461bcd60e51b815260040161083f90611429565b6001600160a01b03909316600090815260076020908152604080832094909455600881528382209290925560029091522055565b6060808060008467ffffffffffffffff8111156109e6576109e6611449565b604051908082528060200260200182016040528015610a0f578160200160208202803683370190505b50905060008567ffffffffffffffff811115610a2d57610a2d611449565b604051908082528060200260200182016040528015610a56578160200160208202803683370190505b50905060008667ffffffffffffffff811115610a7457610a74611449565b604051908082528060200260200182016040528015610a9d578160200160208202803683370190505b50905060005b87811015610bfa57600760008a8a84818110610ac157610ac1611357565b9050602002016020810190610ad6919061104a565b6001600160a01b03166001600160a01b0316815260200190815260200160002054848281518110610b0957610b09611357565b602002602001018181525050600860008a8a84818110610b2b57610b2b611357565b9050602002016020810190610b40919061104a565b6001600160a01b03166001600160a01b0316815260200190815260200160002054838281518110610b7357610b73611357565b602002602001018181525050600260008a8a84818110610b9557610b95611357565b9050602002016020810190610baa919061104a565b6001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610bdd57610bdd611357565b602090810291909101015280610bf281611383565b915050610aa3565b50919450925090509250925092565b60005b8781101561058857610c8e898983818110610c2957610c29611357565b9050602002016020810190610c3e919061104a565b888884818110610c5057610c50611357565b90506020020135878785818110610c6957610c69611357565b90506020020135868686818110610c8257610c82611357565b90506020020135610969565b600a60008a8a84818110610ca457610ca4611357565b9050602002016020810190610cb9919061104a565b6001600160a01b0316815260208101919091526040016000205460ff16610d8b576001600a60008b8b85818110610cf257610cf2611357565b9050602002016020810190610d07919061104a565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600b898983818110610d4357610d43611357565b9050602002016020810190610d58919061104a565b81546001810183556000928352602090922090910180546001600160a01b0319166001600160a01b039092169190911790555b80610d9581611383565b915050610c0c565b6005546001600160a01b03163314610dc75760405162461bcd60e51b815260040161083f90611429565b42600955565b6005546001600160a01b03163314610df75760405162461bcd60e51b815260040161083f90611429565b6001600160a01b03841660009081526007602052604081208054859290610e1f90849061145f565b90915550506001600160a01b03841660009081526008602052604081208054849290610e4c90849061145f565b90915550506001600160a01b03841660009081526002602052604081208054839290610e7990849061145f565b909155505050505050565b6005546001600160a01b03163314610eae5760405162461bcd60e51b815260040161083f90611429565b60055460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af1158015610f01573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109649190611407565b828114610f5e5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161083f565b60005b83811015610fda57610fc8858583818110610f7e57610f7e611357565b9050602002016020810190610f93919061104a565b848484818110610fa557610fa5611357565b905060200201356001600160a01b03909116600090815260026020526040902055565b80610fd281611383565b915050610f61565b5050505050565b6020808252825182820181905260009190848201906040850190845b818110156110225783516001600160a01b031683529284019291840191600101610ffd565b50909695505050505050565b80356001600160a01b038116811461104557600080fd5b919050565b60006020828403121561105c57600080fd5b6110658261102e565b9392505050565b60008083601f84011261107e57600080fd5b50813567ffffffffffffffff81111561109657600080fd5b6020830191508360208260051b85010111156110b157600080fd5b9250929050565b6000806000806000806000806080898b0312156110d457600080fd5b883567ffffffffffffffff808211156110ec57600080fd5b6110f88c838d0161106c565b909a50985060208b013591508082111561111157600080fd5b61111d8c838d0161106c565b909850965060408b013591508082111561113657600080fd5b6111428c838d0161106c565b909650945060608b013591508082111561115b57600080fd5b506111688b828c0161106c565b999c989b5096995094979396929594505050565b60006020828403121561118e57600080fd5b5035919050565b600080604083850312156111a857600080fd5b6111b18361102e565b91506111bf6020840161102e565b90509250929050565b600080600080608085870312156111de57600080fd5b6111e78561102e565b966020860135965060408601359560600135945092505050565b6000806020838503121561121457600080fd5b823567ffffffffffffffff81111561122b57600080fd5b6112378582860161106c565b90969095509350505050565b600081518084526020808501945080840160005b8381101561127357815187529582019590820190600101611257565b509495945050505050565b6060815260006112916060830186611243565b82810360208401526112a38186611243565b905082810360408401526112b78185611243565b9695505050505050565b600080604083850312156112d457600080fd5b6112dd8361102e565b946020939093013593505050565b6000806000806040858703121561130157600080fd5b843567ffffffffffffffff8082111561131957600080fd5b6113258883890161106c565b9096509450602087013591508082111561133e57600080fd5b5061134b8782880161106c565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113955761139561136d565b5060010190565b818103818111156113af576113af61136d565b92915050565b6000602082840312156113c757600080fd5b5051919050565b80820281158282048414176113af576113af61136d565b60008261140257634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561141957600080fd5b8151801515811461106557600080fd5b60208082526006908201526510b7bbb732b960d11b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b808201808211156113af576113af61136d56fea2646970667358221220a94401bae99c27b995003539b12f69023a7535750cbc73521fe48d5ef79c72dc64736f6c63430008120033";

type BRPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BRPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BRP__factory extends ContractFactory {
  constructor(...args: BRPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BRP> {
    return super.deploy(overrides || {}) as Promise<BRP>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BRP {
    return super.attach(address) as BRP;
  }
  override connect(signer: Signer): BRP__factory {
    return super.connect(signer) as BRP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BRPInterface {
    return new utils.Interface(_abi) as BRPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BRP {
    return new Contract(address, _abi, signerOrProvider) as BRP;
  }
}
