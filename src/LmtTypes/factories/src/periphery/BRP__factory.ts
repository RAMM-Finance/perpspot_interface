/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { BRP, BRPInterface } from "../../../src/periphery/BRP";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AddedUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimableBoxes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    name: "BoxUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pointDifference",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tier",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    name: "ClaimedRebates",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UpdatedPoints",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradePoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lpPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "referralPoint",
        type: "uint256",
      },
    ],
    name: "addAllPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "referrers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tradePoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "lpPoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "referralPoints",
        type: "uint256[]",
      },
    ],
    name: "addAllPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "claimableBoxes",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableBoxes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPoints",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ref",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isListed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimedPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRecordedLpPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRecordedPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRecordedTradePoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numBoxes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pointPerUnlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pointsUsedForUnlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rangelow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rangeHigh",
        type: "uint256",
      },
    ],
    name: "randomWithinRange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pointPerUnlocks_",
        type: "uint256",
      },
    ],
    name: "setPointPerUnlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardToken_",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setlastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tierToRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockBox",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradePoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lpPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "referralPoint",
        type: "uint256",
      },
    ],
    name: "updateAllPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "referrers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tradePoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "lpPoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "referralPoints",
        type: "uint256[]",
      },
    ],
    name: "updateAllPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "point",
        type: "uint256",
      },
    ],
    name: "updatePoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "referrers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "points",
        type: "uint256[]",
      },
    ],
    name: "updatePoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506118a3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e45760003560e01c80638da5cb5b1161010f578063b901164b116100a2578063dc8417e011610071578063dc8417e014610463578063f1f9151814610483578063f794062e14610496578063f7c618c1146104c957600080fd5b8063b901164b146103f3578063bc8c67a21461041d578063c1c4eec314610430578063d375c81d1461045057600080fd5b8063ab5b5e84116100de578063ab5b5e84146103b2578063af592d27146103c5578063b60f1840146103cd578063b753a98c146103e057600080fd5b80638da5cb5b1461035957806393196a6d1461036c5780639aa1f9b214610389578063a60b7b70146103a957600080fd5b80634c89867f116101875780636143e733116101565780636143e733146102e6578063673d66ad14610306578063705f40c7146103265780638aee81271461034657600080fd5b80634c89867f1461029657806351d08cd51461029e57806357175f8c146102b15780635ffab0e3146102c457600080fd5b80632e97766d116101c35780632e97766d1461024a578063365b98b214610250578063372500ab1461027b578063485cc9551461028357600080fd5b8062ce8e3e146101e95780630ec2274714610207578063289035c714610235575b600080fd5b6101f16104dc565b6040516101fe91906113a4565b60405180910390f35b61022761021536600461140d565b60076020526000908152604090205481565b6040519081526020016101fe565b61024861024336600461147b565b61053e565b005b43610227565b61026361025e36600461153f565b61070a565b6040516001600160a01b0390911681526020016101fe565b610227610734565b610248610291366004611558565b6108f0565b600954610227565b6102486102ac36600461158b565b610ab3565b6102276102bf3660046115c4565b610b11565b6102d76102d23660046115e6565b610bec565b6040516101fe93929190611663565b6102276102f436600461153f565b60036020526000908152604090205481565b61022761031436600461140d565b60026020526000908152604090205481565b61022761033436600461140d565b600c6020526000908152604090205481565b61024861035436600461140d565b610e2e565b600554610263906001600160a01b031681565b610374610e7a565b604080519283526020830191909152016101fe565b61022761039736600461140d565b600d6020526000908152604090205481565b610227600e5481565b6102486103c036600461147b565b610f8a565b610248611021565b6102486103db36600461158b565b611051565b6102486103ee3660046116a6565b61118e565b6102486104013660046116a6565b6001600160a01b03909116600090815260026020526040902055565b61037461042b36600461140d565b61122f565b61022761043e36600461140d565b60016020526000908152604090205481565b61024861045e36600461153f565b6112b9565b61022761047136600461140d565b60086020526000908152604090205481565b6102486104913660046116d0565b6112e8565b6104b96104a436600461140d565b600a6020526000908152604090205460ff1681565b60405190151581526020016101fe565b600654610263906001600160a01b031681565b6060600b80548060200260200160405190810160405280929190818152602001828054801561053457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610516575b5050505050905090565b60005b878110156106d2576105c389898381811061055e5761055e61173c565b9050602002016020810190610573919061140d565b8888848181106105855761058561173c565b9050602002013587878581811061059e5761059e61173c565b905060200201358686868181106105b7576105b761173c565b90506020020135611051565b600a60008a8a848181106105d9576105d961173c565b90506020020160208101906105ee919061140d565b6001600160a01b0316815260208101919091526040016000205460ff166106c0576001600a60008b8b858181106106275761062761173c565b905060200201602081019061063c919061140d565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600b8989838181106106785761067861173c565b905060200201602081019061068d919061140d565b81546001810183556000928352602090922090910180546001600160a01b0319166001600160a01b039092169190911790555b806106ca81611768565b915050610541565b506040517f2d25400765776242d664638c9c6b84875af2835cfa621d55979981e9bd8d67a590600090a1505042600955505050505050565b600b818154811061071a57600080fd5b6000918252602090912001546001600160a01b0316905081565b336000908152600160209081526040808320546002909252822054829161075a91611781565b600480546040516302b0540360e31b815233928101929092529192506000916001600160a01b031690631582a01890602401602060405180830381865afa1580156107a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cd9190611794565b6000818152600360205260408120549192506107ec82620f42406117ad565b6107f985620f42406117ad565b61080391906117da565b60065460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610855573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087991906117ee565b5060065460408051868152602081018690529081018390526001600160a01b039091169033907ff8b680a8b775e82d2dcf9aad6301ed13b0563379af7820e6495737a4abf3bfbe9060600160405180910390a333600090815260026020908152604080832054600190925290912055949350505050565b600054610100900460ff16158080156109105750600054600160ff909116105b8061092a5750303b15801561092a575060005460ff166001145b6109925760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156109b5576000805461ff0019166101001790555b600480546001600160a01b038086166001600160a01b03199283161790925560068054928516928216929092179091556005805490911633179055600360205261029e7f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff5561014f7fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c55600260005260e17fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d558015610aae576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6005546001600160a01b03163314610add5760405162461bcd60e51b815260040161098990611810565b6001600160a01b03909316600090815260076020908152604080832094909455600881528382209290925560029091522055565b6000828211610b525760405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b6044820152606401610989565b6000610b5e8484611781565b610b69906001611830565b90506000610b78600143611781565b604080519140602083018190526bffffffffffffffffffffffff193360601b1691830191909152426054830152915060009060740160408051601f19818403018152919052805160209091012090506000610bd38483611843565b9050610bdf8188611830565b9450505050505b92915050565b6060808060008467ffffffffffffffff811115610c0b57610c0b611857565b604051908082528060200260200182016040528015610c34578160200160208202803683370190505b50905060008567ffffffffffffffff811115610c5257610c52611857565b604051908082528060200260200182016040528015610c7b578160200160208202803683370190505b50905060008667ffffffffffffffff811115610c9957610c99611857565b604051908082528060200260200182016040528015610cc2578160200160208202803683370190505b50905060005b87811015610e1f57600760008a8a84818110610ce657610ce661173c565b9050602002016020810190610cfb919061140d565b6001600160a01b03166001600160a01b0316815260200190815260200160002054848281518110610d2e57610d2e61173c565b602002602001018181525050600860008a8a84818110610d5057610d5061173c565b9050602002016020810190610d65919061140d565b6001600160a01b03166001600160a01b0316815260200190815260200160002054838281518110610d9857610d9861173c565b602002602001018181525050600260008a8a84818110610dba57610dba61173c565b9050602002016020810190610dcf919061140d565b6001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610e0257610e0261173c565b602090810291909101015280610e1781611768565b915050610cc8565b50919450925090509250925092565b6005546001600160a01b03163314610e585760405162461bcd60e51b815260040161098990611810565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600080600080610e893361122f565b336000908152600d602052604081208290559193509150610eac60326064610b11565b90506000610eba84836117ad565b610ecc90670de0b6b3a76400006117ad565b60065460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4291906117ee565b50604080518581526020810184905233917f556f2cd053c19fa678c33006534a7ba4416fc1737d8dfebdf44da21c443222a2910160405180910390a250919491935090915050565b60005b878110156106d25761100f898983818110610faa57610faa61173c565b9050602002016020810190610fbf919061140d565b888884818110610fd157610fd161173c565b90506020020135878785818110610fea57610fea61173c565b905060200201358686868181106110035761100361173c565b90506020020135610ab3565b8061101981611768565b915050610f8d565b6005546001600160a01b0316331461104b5760405162461bcd60e51b815260040161098990611810565b42600955565b6005546001600160a01b0316331461107b5760405162461bcd60e51b815260040161098990611810565b6001600160a01b038416600090815260076020526040812080548592906110a3908490611830565b90915550506001600160a01b038416600090815260086020526040812080548492906110d0908490611830565b90915550506001600160a01b038416600090815260026020526040812080548392906110fd908490611830565b90915550506001600160a01b0384166000908152600a602052604090205460ff16611188576001600160a01b0384166000818152600a60205260408120805460ff19166001908117909155600b805491820181559091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b03191690911790555b50505050565b6005546001600160a01b031633146111b85760405162461bcd60e51b815260040161098990611810565b60055460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af115801561120b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae91906117ee565b6001600160a01b0381166000908152600c602090815260408083205460028352818420546008845282852054600790945291842054849391929161127291611830565b61127c9190611830565b6001600160a01b0385166000908152600d6020526040902054600e54919350906112a68285611781565b6112b091906117da565b93505050915091565b6005546001600160a01b031633146112e35760405162461bcd60e51b815260040161098990611810565b600e55565b8281146113215760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610989565b60005b8381101561139d5761138b8585838181106113415761134161173c565b9050602002016020810190611356919061140d565b8484848181106113685761136861173c565b905060200201356001600160a01b03909116600090815260026020526040902055565b8061139581611768565b915050611324565b5050505050565b6020808252825182820181905260009190848201906040850190845b818110156113e55783516001600160a01b0316835292840192918401916001016113c0565b50909695505050505050565b80356001600160a01b038116811461140857600080fd5b919050565b60006020828403121561141f57600080fd5b611428826113f1565b9392505050565b60008083601f84011261144157600080fd5b50813567ffffffffffffffff81111561145957600080fd5b6020830191508360208260051b850101111561147457600080fd5b9250929050565b6000806000806000806000806080898b03121561149757600080fd5b883567ffffffffffffffff808211156114af57600080fd5b6114bb8c838d0161142f565b909a50985060208b01359150808211156114d457600080fd5b6114e08c838d0161142f565b909850965060408b01359150808211156114f957600080fd5b6115058c838d0161142f565b909650945060608b013591508082111561151e57600080fd5b5061152b8b828c0161142f565b999c989b5096995094979396929594505050565b60006020828403121561155157600080fd5b5035919050565b6000806040838503121561156b57600080fd5b611574836113f1565b9150611582602084016113f1565b90509250929050565b600080600080608085870312156115a157600080fd5b6115aa856113f1565b966020860135965060408601359560600135945092505050565b600080604083850312156115d757600080fd5b50508035926020909101359150565b600080602083850312156115f957600080fd5b823567ffffffffffffffff81111561161057600080fd5b61161c8582860161142f565b90969095509350505050565b600081518084526020808501945080840160005b838110156116585781518752958201959082019060010161163c565b509495945050505050565b6060815260006116766060830186611628565b82810360208401526116888186611628565b9050828103604084015261169c8185611628565b9695505050505050565b600080604083850312156116b957600080fd5b6116c2836113f1565b946020939093013593505050565b600080600080604085870312156116e657600080fd5b843567ffffffffffffffff808211156116fe57600080fd5b61170a8883890161142f565b9096509450602087013591508082111561172357600080fd5b506117308782880161142f565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161177a5761177a611752565b5060010190565b81810381811115610be657610be6611752565b6000602082840312156117a657600080fd5b5051919050565b8082028115828204841417610be657610be6611752565b634e487b7160e01b600052601260045260246000fd5b6000826117e9576117e96117c4565b500490565b60006020828403121561180057600080fd5b8151801515811461142857600080fd5b60208082526006908201526510b7bbb732b960d11b604082015260600190565b80820180821115610be657610be6611752565b600082611852576118526117c4565b500690565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220365b93988673533fce97bdaf803f5e414c44520b3dcdd4ee64a165a836201d3964736f6c63430008120033";

type BRPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BRPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BRP__factory extends ContractFactory {
  constructor(...args: BRPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BRP> {
    return super.deploy(overrides || {}) as Promise<BRP>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BRP {
    return super.attach(address) as BRP;
  }
  override connect(signer: Signer): BRP__factory {
    return super.connect(signer) as BRP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BRPInterface {
    return new utils.Interface(_abi) as BRPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BRP {
    return new Contract(address, _abi, signerOrProvider) as BRP;
  }
}
