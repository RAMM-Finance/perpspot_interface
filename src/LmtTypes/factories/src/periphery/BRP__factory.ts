/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { BRP, BRPInterface } from "../../../src/periphery/BRP";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AddedUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimableBoxes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    name: "BoxUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pointDifference",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tier",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    name: "ClaimedRebates",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UpdatedPoints",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradePoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lpPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "referralPoint",
        type: "uint256",
      },
    ],
    name: "addAllPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "referrers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tradePoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "lpPoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "referralPoints",
        type: "uint256[]",
      },
    ],
    name: "addAllPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "claimableBoxes",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableBoxes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPoints",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ref",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isListed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimedPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRecordedLpPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRecordedPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRecordedTradePoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numBoxes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pointPerUnlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pointsUsedForUnlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rangelow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rangeHigh",
        type: "uint256",
      },
    ],
    name: "randomWithinRange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boxes",
        type: "uint256",
      },
    ],
    name: "setNumBoxes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "who",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "boxes",
        type: "uint256",
      },
    ],
    name: "setNumBoxesBulk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pointPerUnlocks_",
        type: "uint256",
      },
    ],
    name: "setPointPerUnlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardToken_",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setlastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tierToRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockBox",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradePoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lpPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "referralPoint",
        type: "uint256",
      },
    ],
    name: "updateAllPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "referrers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tradePoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "lpPoints",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "referralPoints",
        type: "uint256[]",
      },
    ],
    name: "updateAllPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "point",
        type: "uint256",
      },
    ],
    name: "updatePoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "referrers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "points",
        type: "uint256[]",
      },
    ],
    name: "updatePoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b74806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fa5760003560e01c80638da5cb5b1161011a578063b901164b116100ad578063d375c81d1161007c578063d375c81d1461048c578063dc8417e01461049f578063f1f91518146104bf578063f794062e146104d2578063f7c618c11461050557600080fd5b8063b901164b1461041c578063bc8c67a214610446578063c1c4eec314610459578063d0c5de6a1461047957600080fd5b8063ab5b5e84116100e9578063ab5b5e84146103db578063af592d27146103ee578063b60f1840146103f6578063b753a98c1461040957600080fd5b80638da5cb5b1461038257806393196a6d146103955780639aa1f9b2146103b2578063a60b7b70146103d257600080fd5b80634c89867f116101925780636143e733116101615780636143e7331461030f578063673d66ad1461032f578063705f40c71461034f5780638aee81271461036f57600080fd5b80634c89867f146102bf57806351d08cd5146102c757806357175f8c146102da5780635ffab0e3146102ed57600080fd5b80632e97766d116101ce5780632e97766d14610273578063365b98b214610279578063372500ab146102a4578063485cc955146102ac57600080fd5b8062ce8e3e146101ff5780630ec227471461021d5780631c786ce01461024b578063289035c714610260575b600080fd5b610207610518565b60405161021491906115af565b60405180910390f35b61023d61022b366004611618565b60076020526000908152604090205481565b604051908152602001610214565b61025e61025936600461163a565b61057a565b005b61025e61026e3660046116b0565b6105c9565b4361023d565b61028c610287366004611774565b610795565b6040516001600160a01b039091168152602001610214565b61023d6107bf565b61025e6102ba36600461178d565b61097b565b60095461023d565b61025e6102d53660046117c0565b610b39565b61023d6102e83660046117f9565b610b97565b6103006102fb36600461181b565b610c72565b60405161021493929190611898565b61023d61031d366004611774565b60036020526000908152604090205481565b61023d61033d366004611618565b60026020526000908152604090205481565b61023d61035d366004611618565b600c6020526000908152604090205481565b61025e61037d366004611618565b610eb4565b60055461028c906001600160a01b031681565b61039d610f00565b60408051928352602083019190915201610214565b61023d6103c0366004611618565b600d6020526000908152604090205481565b61023d600e5481565b61025e6103e93660046116b0565b611081565b61025e611118565b61025e6104043660046117c0565b611148565b61025e61041736600461163a565b611285565b61025e61042a36600461163a565b6001600160a01b03909116600090815260026020526040902055565b61039d610454366004611618565b611326565b61023d610467366004611618565b60016020526000908152604090205481565b61025e6104873660046118db565b611412565b61025e61049a366004611774565b61145f565b61023d6104ad366004611618565b60086020526000908152604090205481565b61025e6104cd366004611927565b61148e565b6104f56104e0366004611618565b600a6020526000908152604090205460ff1681565b6040519015158152602001610214565b60065461028c906001600160a01b031681565b6060600b80548060200260200160405190810160405280929190818152602001828054801561057057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610552575b5050505050905090565b6005546001600160a01b031633146105ad5760405162461bcd60e51b81526004016105a490611993565b60405180910390fd5b6001600160a01b039091166000908152600c6020526040902055565b60005b8781101561075d5761064e8989838181106105e9576105e96119b3565b90506020020160208101906105fe9190611618565b888884818110610610576106106119b3565b90506020020135878785818110610629576106296119b3565b90506020020135868686818110610642576106426119b3565b90506020020135611148565b600a60008a8a84818110610664576106646119b3565b90506020020160208101906106799190611618565b6001600160a01b0316815260208101919091526040016000205460ff1661074b576001600a60008b8b858181106106b2576106b26119b3565b90506020020160208101906106c79190611618565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600b898983818110610703576107036119b3565b90506020020160208101906107189190611618565b81546001810183556000928352602090922090910180546001600160a01b0319166001600160a01b039092169190911790555b80610755816119df565b9150506105cc565b506040517f2d25400765776242d664638c9c6b84875af2835cfa621d55979981e9bd8d67a590600090a1505042600955505050505050565b600b81815481106107a557600080fd5b6000918252602090912001546001600160a01b0316905081565b33600090815260016020908152604080832054600290925282205482916107e5916119f8565b600480546040516302b0540360e31b815233928101929092529192506000916001600160a01b031690631582a01890602401602060405180830381865afa158015610834573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108589190611a0b565b60008181526003602052604081205491925061087782620f4240611a24565b61088485620f4240611a24565b61088e9190611a51565b60065460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156108e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109049190611a65565b5060065460408051868152602081018690529081018390526001600160a01b039091169033907ff8b680a8b775e82d2dcf9aad6301ed13b0563379af7820e6495737a4abf3bfbe9060600160405180910390a333600090815260026020908152604080832054600190925290912055949350505050565b600054610100900460ff161580801561099b5750600054600160ff909116105b806109b55750303b1580156109b5575060005460ff166001145b610a185760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105a4565b6000805460ff191660011790558015610a3b576000805461ff0019166101001790555b600480546001600160a01b038086166001600160a01b03199283161790925560068054928516928216929092179091556005805490911633179055600360205261029e7f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff5561014f7fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c55600260005260e17fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d558015610b34576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6005546001600160a01b03163314610b635760405162461bcd60e51b81526004016105a490611993565b6001600160a01b03909316600090815260076020908152604080832094909455600881528382209290925560029091522055565b6000828211610bd85760405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b60448201526064016105a4565b6000610be484846119f8565b610bef906001611a87565b90506000610bfe6001436119f8565b604080519140602083018190526bffffffffffffffffffffffff193360601b1691830191909152426054830152915060009060740160408051601f19818403018152919052805160209091012090506000610c598483611a9a565b9050610c658188611a87565b9450505050505b92915050565b6060808060008467ffffffffffffffff811115610c9157610c91611aae565b604051908082528060200260200182016040528015610cba578160200160208202803683370190505b50905060008567ffffffffffffffff811115610cd857610cd8611aae565b604051908082528060200260200182016040528015610d01578160200160208202803683370190505b50905060008667ffffffffffffffff811115610d1f57610d1f611aae565b604051908082528060200260200182016040528015610d48578160200160208202803683370190505b50905060005b87811015610ea557600760008a8a84818110610d6c57610d6c6119b3565b9050602002016020810190610d819190611618565b6001600160a01b03166001600160a01b0316815260200190815260200160002054848281518110610db457610db46119b3565b602002602001018181525050600860008a8a84818110610dd657610dd66119b3565b9050602002016020810190610deb9190611618565b6001600160a01b03166001600160a01b0316815260200190815260200160002054838281518110610e1e57610e1e6119b3565b602002602001018181525050600260008a8a84818110610e4057610e406119b3565b9050602002016020810190610e559190611618565b6001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610e8857610e886119b3565b602090810291909101015280610e9d816119df565b915050610d4e565b50919450925090509250925092565b6005546001600160a01b03163314610ede5760405162461bcd60e51b81526004016105a490611993565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600c60205260408120548190610f475760405162461bcd60e51b81526004016105a490602080825260049082015263060c4def60e31b604082015260600190565b600080610f5333611326565b600e54336000908152600d6020526040812080549496509294509092610f7a908490611a87565b9091555050336000908152600c60205260408120805491610f9a83611ac4565b91905055506000610fad60326064610b97565b90506000610fc382670de0b6b3a7640000611a24565b60065460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015611015573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110399190611a65565b50604080518581526020810184905233917f556f2cd053c19fa678c33006534a7ba4416fc1737d8dfebdf44da21c443222a2910160405180910390a250919491935090915050565b60005b8781101561075d576111068989838181106110a1576110a16119b3565b90506020020160208101906110b69190611618565b8888848181106110c8576110c86119b3565b905060200201358787858181106110e1576110e16119b3565b905060200201358686868181106110fa576110fa6119b3565b90506020020135610b39565b80611110816119df565b915050611084565b6005546001600160a01b031633146111425760405162461bcd60e51b81526004016105a490611993565b42600955565b6005546001600160a01b031633146111725760405162461bcd60e51b81526004016105a490611993565b6001600160a01b0384166000908152600760205260408120805485929061119a908490611a87565b90915550506001600160a01b038416600090815260086020526040812080548492906111c7908490611a87565b90915550506001600160a01b038416600090815260026020526040812080548392906111f4908490611a87565b90915550506001600160a01b0384166000908152600a602052604090205460ff1661127f576001600160a01b0384166000818152600a60205260408120805460ff19166001908117909155600b805491820181559091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b03191690911790555b50505050565b6005546001600160a01b031633146112af5760405162461bcd60e51b81526004016105a490611993565b60055460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af1158015611302573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b349190611a65565b6001600160a01b0381166000908152600c602090815260408083205460028352818420546008845282852054600790945291842054849391929161136991611a87565b6113739190611a87565b91506000600d6000866001600160a01b03166001600160a01b031681526020019081526020016000205490506113d06040518060400160405280600b81526020016a746f74616c706f696e747360a81b8152508483600e5461154a565b8083106113f557600e546113e482856119f8565b6113ee9190611a51565b93506113fa565b600093505b8184106114075781611409565b835b93505050915091565b60005b8281101561127f5761144d848483818110611432576114326119b3565b90506020020160208101906114479190611618565b8361057a565b80611457816119df565b915050611415565b6005546001600160a01b031633146114895760405162461bcd60e51b81526004016105a490611993565b600e55565b8281146114c75760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016105a4565b60005b83811015611543576115318585838181106114e7576114e76119b3565b90506020020160208101906114fc9190611618565b84848481811061150e5761150e6119b3565b905060200201356001600160a01b03909116600090815260026020526040902055565b8061153b816119df565b9150506114ca565b5050505050565b61127f848484846040516024016115649493929190611adb565b60408051601f198184030181529190526020810180516001600160e01b03166304772b3360e11b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6020808252825182820181905260009190848201906040850190845b818110156115f05783516001600160a01b0316835292840192918401916001016115cb565b50909695505050505050565b80356001600160a01b038116811461161357600080fd5b919050565b60006020828403121561162a57600080fd5b611633826115fc565b9392505050565b6000806040838503121561164d57600080fd5b611656836115fc565b946020939093013593505050565b60008083601f84011261167657600080fd5b50813567ffffffffffffffff81111561168e57600080fd5b6020830191508360208260051b85010111156116a957600080fd5b9250929050565b6000806000806000806000806080898b0312156116cc57600080fd5b883567ffffffffffffffff808211156116e457600080fd5b6116f08c838d01611664565b909a50985060208b013591508082111561170957600080fd5b6117158c838d01611664565b909850965060408b013591508082111561172e57600080fd5b61173a8c838d01611664565b909650945060608b013591508082111561175357600080fd5b506117608b828c01611664565b999c989b5096995094979396929594505050565b60006020828403121561178657600080fd5b5035919050565b600080604083850312156117a057600080fd5b6117a9836115fc565b91506117b7602084016115fc565b90509250929050565b600080600080608085870312156117d657600080fd5b6117df856115fc565b966020860135965060408601359560600135945092505050565b6000806040838503121561180c57600080fd5b50508035926020909101359150565b6000806020838503121561182e57600080fd5b823567ffffffffffffffff81111561184557600080fd5b61185185828601611664565b90969095509350505050565b600081518084526020808501945080840160005b8381101561188d57815187529582019590820190600101611871565b509495945050505050565b6060815260006118ab606083018661185d565b82810360208401526118bd818661185d565b905082810360408401526118d1818561185d565b9695505050505050565b6000806000604084860312156118f057600080fd5b833567ffffffffffffffff81111561190757600080fd5b61191386828701611664565b909790965060209590950135949350505050565b6000806000806040858703121561193d57600080fd5b843567ffffffffffffffff8082111561195557600080fd5b61196188838901611664565b9096509450602087013591508082111561197a57600080fd5b5061198787828801611664565b95989497509550505050565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016119f1576119f16119c9565b5060010190565b81810381811115610c6c57610c6c6119c9565b600060208284031215611a1d57600080fd5b5051919050565b8082028115828204841417610c6c57610c6c6119c9565b634e487b7160e01b600052601260045260246000fd5b600082611a6057611a60611a3b565b500490565b600060208284031215611a7757600080fd5b8151801515811461163357600080fd5b80820180821115610c6c57610c6c6119c9565b600082611aa957611aa9611a3b565b500690565b634e487b7160e01b600052604160045260246000fd5b600081611ad357611ad36119c9565b506000190190565b608081526000855180608084015260005b81811015611b0957602081890181015160a0868401015201611aec565b50600060a0828501015260a0601f19601f8301168401019150508460208301528360408301528260608301529594505050505056fea264697066735822122059e054add067e9dc1e83940705b54101b5261fddeb236635a5a4cac6330a88d964736f6c63430008120033";

type BRPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BRPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BRP__factory extends ContractFactory {
  constructor(...args: BRPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BRP> {
    return super.deploy(overrides || {}) as Promise<BRP>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BRP {
    return super.attach(address) as BRP;
  }
  override connect(signer: Signer): BRP__factory {
    return super.connect(signer) as BRP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BRPInterface {
    return new utils.Interface(_abi) as BRPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BRP {
    return new Contract(address, _abi, signerOrProvider) as BRP;
  }
}
