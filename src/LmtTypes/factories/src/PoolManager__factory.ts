/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "amount0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "feeAmountTickSpacing",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "estimatedMinimumSlippage",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint160",
        name: "sqrtStartingPriceX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "startingTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "finishTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "binSize",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "lte",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "findNearestInitializedBin",
    outputs: [
      {
        internalType: "int24",
        name: "nextTick",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getURates",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "isBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "orderFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reclaimer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
      {
        internalType: "address",
        name: "bf",
        type: "address",
      },
      {
        internalType: "address",
        name: "of_",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapFactory",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "updateUtilizationGrowth",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "growth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct UtilizationGrowth",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600b8054600161ffff199182168117909255600d8054909116909117905534801561002e57600080fd5b50600f80546001600160a01b0319163317905560026020527febaffbad3b7fced837389fa2c76ef17bd16e01452243bc801329ba9c392c939f805462ffffff19908116600a179091557f8f2d796c159bb2bb788bc3f1a337a929c07b0cf1d9277451fd5f909c263c02d680548216603c1790556127106000527f5e7cc46d63c0d79d92b677239084c61b6b019c2759734090f1970fc4b4823988805490911660c8179055615e1480620000e26000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80638da5cb5b1161013b578063ac00b809116100b8578063d41dcbea1161007c578063d41dcbea1461081a578063d578395314610822578063d7d3ed6a1461084f578063da69b0b314610862578063fe4f278a1461089657600080fd5b8063ac00b809146107ae578063ac9650d8146107c1578063c3419a71146107e1578063c5161a60146107f4578063d34879971461080757600080fd5b80639744a42d116100ff5780639744a42d146106dc578063a840465514610707578063a882c12d14610766578063aa966e5514610779578063abf978e41461079b57600080fd5b80638da5cb5b1461066e5780638f88d560146106815780638fd74d4d14610694578063912a8e00146106a757806395250923146106ba57600080fd5b806345e61a4d116101c9578063651976881161018d578063651976881461058e5780636fc280e1146105b157806379378b41146106065780637dc7306c146106195780637f8f1dda1461063957600080fd5b806345e61a4d146104055780634d18e0d01461049b5780635955cad3146104ae5780635a42047a1461053b578063626a45181461055c57600080fd5b806319fda2771161021057806319fda2771461034457806322afcccb14610390578063273cbaa0146103c85780632a6fc4ba146103dd5780634185a442146103f257600080fd5b80630229fb601461024d57806304ad52fc1461027a5780630ea50f501461029b5780631698ee82146102bf57806319fa103314610311575b600080fd5b61026061025b366004614aaa565b6108a9565b604080519283526020830191909152015b60405180910390f35b61028d610288366004614b74565b610b9f565b604051908152602001610271565b6102ae6102a9366004614be2565b610cd0565b604051610271959493929190614cb8565b6102f96102cd366004614cf6565b60036020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b039091168152602001610271565b61032461031f366004614d34565b61124f565b604080516001600160801b03938416815292909116602083015201610271565b610378610352366004614d7e565b60066020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b039091168152602001610271565b6103b561039e366004614dae565b600260208190526000918252604090912054900b81565b60405160029190910b8152602001610271565b6103d06114ea565b6040516102719190614dc9565b6103f06103eb366004614f21565b6115ba565b005b610260610400366004614f8b565b611808565b610489610413366004614fdc565b600e60209081526000918252604091829020825160a0810184528154815260018201549281019290925260028101549282019290925260038201546060820152600482015460808201526005820154600683015460078401546008850154600990950154939492939192909161ffff9091169086565b60405161027196959493929190614ff9565b6103f06104a9366004615061565b6118b8565b6105056104bc3660046150c0565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a001610271565b61054e6105493660046150e2565b611c72565b604051610271929190615130565b61026061056a36600461514b565b60056020908152600092835260408084209091529082529020805460019091015482565b6103b561059c366004615179565b60006020819052908152604090205460020b81565b6105eb6105bf36600461514b565b601660209081526000928352604080842090915290825290208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610271565b610260610614366004615192565b611f04565b61062c6106273660046150e2565b6122c7565b60405161027191906151e9565b61064c6106473660046151fc565b612439565b6040805182518152602080840151908201529181015190820152606001610271565b600f546102f9906001600160a01b031681565b6103f061068f3660046152c6565b612657565b6012546102f9906001600160a01b031681565b6103786106b53660046151fc565b612c1f565b6106cd6106c8366004615344565b612c8c565b60405161027193929190615360565b61028d6106ea3660046153f9565b600760209081526000928352604080842090915290825290205481565b61071a610715366004615424565b612e3c565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a001610271565b6010546102f9906001600160a01b031681565b61078c6107873660046150e2565b612f60565b60405161027193929190615474565b6102606107a9366004615499565b61316d565b6103f06107bc3660046154e9565b6136f9565b6107d46107cf36600461553a565b613789565b60405161027191906155fe565b6011546102f9906001600160a01b031681565b6013546102f9906001600160a01b031681565b6103f0610815366004615660565b613876565b6103d0613a51565b6108356108303660046156df565b613b1a565b6040805160029390930b8352901515602083015201610271565b61026061085d36600461574f565b613bd1565b610378610870366004614d7e565b60016020908152600092835260408084209091529082529020546001600160801b031681565b6103f06108a43660046157d1565b614011565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086516001600160a01b039081166000908152600360209081526040808320828c01805186168552908352818420828d01805162ffffff1686529084528285205490951660c08701528b5190519451915193946004948694610945949101615808565b604051602081830303815290604052805190602001208152602001908152602001600020600088883360405160200161098093929190615830565b60408051601f198184030181529181528151602092830120835290820192909252810160002060c08401519151639887b58960e01b81526001600160a01b039092166004830152600289810b602484015288900b6044830152915073__$d23a8dd93b7205fa6b646ffed38c165d68$__90639887b589906064016040805180830381865af4158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a9190615856565b6020840152825260c0820151610a5290888888611808565b60608401526040830181905282518390610a6d908390615890565b9052506060820151602083018051610a86908390615890565b905250805482516002830154610aad92909103906001600160801b0316600160801b6140e4565b6001600160801b039081166080840152600182015460208401516002840154610ae093929091039116600160801b6140e4565b6001600160801b0390811660a0840152608083015116151580610b10575060008260a001516001600160801b0316115b15610b655760808201516002820180546001600160801b03600160801b8083048216909401811690930290831617905560a08301516003830180548084169092019092166001600160801b0319919091161790555b81518155602090910151600182015560028101546003909101546001600160801b03600160801b9092048216935016905094509492505050565b6001600160a01b0383166000908152601660209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290610cc590610c0190670de0b6b3a7640000615890565b670de0b6b3a7640000610cbe846040015142610c1d91906158a3565b60208601516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91610c64918d91906004016158b6565b602060405180830381865af4158015610c81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca591906158fc565b610cb790670de0b6b3a7640000615890565b91906141c2565b91906140e4565b9150505b9392505050565b6010546000908190819081906060906001600160a01b0316331480610cff57506011546001600160a01b031633145b610d245760405162461bcd60e51b8152600401610d1b90615915565b60405180910390fd5b610d2c6148b9565b610d3960208c018c614fdc565b610d4960408d0160208e01614fdc565b610d5960608e0160408f01614dae565b604051602001610d6b93929190615808565b60408051601f19818403018152918152815160209092019190912090820152610da1670de0b6b3a76400008b610cbe8c82615890565b815260036000610db460208e018e614fdc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6020016020810190610de99190614fdc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6040016020810190610e1e9190614dae565b62ffffff16815260208082019290925260409081016000908120546001600160a01b0390811661012080870191825286850151845283865284842054600290810b60e0808a0191909152835185168652600e885294869020865161016081018852815460c08201908152600183015482890152928201546101008281019190915260038301549482019490945260048083015461014083015292815260058201549881019890985260068101548888015260078101546060890152600881015461ffff1660808901526009015460a088015290870195909552518351633850c7bd60e01b81529351911693633850c7bd93808201939291908290030181865afa158015610f2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f539190615934565b505050506001600160a01b0392909216602084018190528351604051630c7b626960e11b81528c1515600482015260248101919091526044810191909152606481018a905273__$93dfed57e8f421caed97f24c336a056d51$__92506318f6c4d29150608401602060405180830381865af4158015610fd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffa91906159d6565b95508761101f57856001600160a01b031681602001516001600160a01b031610611039565b856001600160a01b031681602001516001600160a01b0316115b61107b5760405162461bcd60e51b8152602060048201526013602482015272696e6665617369626c6520736c69707061676560681b6044820152606401610d1b565b604080516101008101825282820151815289151560208083019182526001600160a01b03808b1684860190815291860151811660608501908152608085018f8152600160a08701908152600360c08801908152670de0b6b3a764000060e089019081529851631967f40b60e11b81526007600482015297516024890152955115156044880152935183166064870152905190911660848501525160a48401525160c48301525160e4820152905161010482015273__$93dfed57e8f421caed97f24c336a056d51$__906332cfe8169061012401600060405180830381865af415801561116b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261119391908101906159f3565b608084019190915260608301829052925089146111dc5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610d1b565b6111f68b8261012001518484604001518560e00151614280565b909550935087611222576060810151608082015161121d91670de0b6b3a7640000906140e4565b61123f565b6080810151606082015161123f91670de0b6b3a7640000906140e4565b9250509550955095509550959050565b600080600085600001518660200151876040015160405160200161127593929190615808565b60408051601f1981840301815291815281516020928301206000818152928390529082205490925060020b908190036112d85760405162461bcd60e51b8152602060048201526005602482015264085c1bdbdb60da1b6044820152606401610d1b565b8460020b8660020b126112fd5760405162461bcd60e51b8152600401610d1b90615aff565b86516001600160a01b039081166000908152600360209081526040808320828c0151851684528252808320818c015162ffffff16845290915290205416865b8660020b8160020b12156113e4576001600160a01b038216634f1eb3d830836113658782615b1a565b6001600160801b03806040518663ffffffff1660e01b815260040161138e959493929190615b3f565b60408051808303816000875af11580156113ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d09190615b7c565b506113dd90508382615b1a565b905061133c565b60006004600086815260200190815260200160002060008a8a3360405160200161141093929190615830565b60408051808303601f190181529181528151602092830120835290820192909252016000206002810154909150600160801b90046001600160801b031615611475578951600282015461147591903390600160801b90046001600160801b03166145c6565b60038101546001600160801b0316156114a75760208a015160038201546114a7919033906001600160801b03166145c6565b600281018054600390920180546001600160801b038085169093556001600160801b03198116909155600160801b90920481169b91169950975050505050505050565b600b546060906000906115039060019061ffff16615bab565b61ffff1690506000816001600160401b038111156115235761152361498b565b60405190808252806020026020018201604052801561154c578160200160208202803683370190505b50905060005b828110156115b3576000818152600a602052604090205482516001600160a01b039091169083908390811061158957611589615bc6565b6001600160a01b0390921660209283029190910190910152806115ab81615bdc565b915050611552565b5092915050565b6010546001600160a01b03163314806115dd57506011546001600160a01b031633145b6115f95760405162461bcd60e51b8152600401610d1b90615915565b60006116086020870187614fdc565b6116186040880160208901614fdc565b6116286060890160408a01614dae565b60405160200161163a93929190615808565b6040516020818303038152906040528051906020012090506000806000808751866116659190615c0b565b905060005b88518110156117fb576001600087815260200190815260200160002060008a838151811061169a5761169a615bc6565b6020908102919091018101515160020b82528181019290925260409081016000908120546001600160a01b038e16825260059093529081208b516001600160801b039093169650918b90849081106116f4576116f4615bc6565b60200260200101516000015160020b60020b81526020019081526020016000209450611756828a838151811061172c5761172c615bc6565b6020026020010151604001516117429190615890565b600160801b866001600160801b03166140e4565b9250871561177d57828560010160008282546117729190615890565b909155506117979050565b828560000160008282546117919190615890565b90915550505b6001600160a01b038a1660009081526005602052604081208a519091908b90849081106117c6576117c6615bc6565b60200260200101516000015160020b60020b8152602001908152602001600020945080806117f390615bdc565b91505061166a565b5050505050505050505050565b600080600085905061182d604051806040016040528060008152602001600081525090565b8560020b8260020b12156118ad57506001600160a01b0387166000908152600560209081526040808320600285900b845282529182902082518084019093528054808452600190910154918301919091526118889085615890565b935080602001518361189a9190615890565b92506118a68583615b1a565b915061182d565b505094509492505050565b6010546001600160a01b03163314806118db57506011546001600160a01b031633145b806118f057506012546001600160a01b031633145b8061190557506013546001600160a01b031633145b6119215760405162461bcd60e51b8152600401610d1b90615915565b604080516080810182526000808252602082018190529181018290526060810191909152600360006119566020880188614fdc565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086602001602081019061198b9190614fdc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008660400160208101906119c09190614dae565b62ffffff168152602080820192909252604001600020546001600160a01b031660608301526119f190860186614fdc565b611a016040870160208801614fdc565b611a116060880160408901614dae565b604051602001611a2393929190615808565b60408051601f19818403018152918152815160209283012080845260009081528083529081205460020b918301919091525b8451811015611c6a57611aa184670de0b6b3a7640000878481518110611a7d57611a7d615bc6565b6020026020010151602001516001600160801b03166146c69092919063ffffffff16565b6001600160801b031660408084018290528351600090815260066020529081208751909190889085908110611ad857611ad8615bc6565b6020908102919091018101515160020b825281019190915260400160009081208054909190611b119084906001600160801b0316615c1f565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555081606001516001600160a01b0316633c8a7d8d30878481518110611b5b57611b5b615bc6565b6020026020010151600001518560200151898681518110611b7e57611b7e615bc6565b602002602001015160000151611b949190615b1a565b60408088015181516001600160a01b038b1660208201529091016040516020818303038152906040526040518663ffffffff1660e01b8152600401611bdd959493929190615c3f565b60408051808303816000875af1158015611bfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1f9190615856565b50611c579050611c3436889003880188615c81565b868381518110611c4657611c46615bc6565b602002602001015160000151612439565b5080611c6281615bdc565b915050611a55565b505050505050565b600060606000835111611cb45760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b6044820152606401610d1b565b60008080611cc56020880188614fdc565b611cd56040890160208a01614fdc565b611ce560608a0160408b01614dae565b604051602001611cf793929190615808565b60408051601f1981840301815291815281516020928301206000818152928390529082205490925060020b905b8751811015611ef05781888281518110611d4057611d40615bc6565b602002602001015160000151611d569190615c9d565b60020b15611d945760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b6044820152606401610d1b565b600160008481526020019081526020016000206000898381518110611dbb57611dbb615bc6565b6020908102919091018101515160020b82528101919091526040016000908120546001600160801b03169550859003611dff57600088965096505050505050611efd565b600660008481526020019081526020016000206000898381518110611e2657611e26615bc6565b6020908102919091018101515160020b8252810191909152604001600020546001600160801b039081169450611e69908590670de0b6b3a76400009088166140e4565b888281518110611e7b57611e7b615bc6565b60200260200101516060018181525050878181518110611e9d57611e9d615bc6565b60200260200101516020015184611eb49190615cbf565b6001600160801b0316856001600160801b03161015611ede57600088965096505050505050611efd565b80611ee881615bdc565b915050611d24565b5060018795509550505050505b9250929050565b60105460009081906001600160a01b0316331480611f2c57506011546001600160a01b031633145b80611f4157506012546001600160a01b031633145b80611f5657506013546001600160a01b031633145b611f725760405162461bcd60e51b8152600401610d1b90615915565b60408051608081018252600080825260208201819052918101829052606081019190915260036000611fa76020890189614fdc565b6001600160a01b03166001600160a01b031681526020019081526020016000206000876020016020810190611fdc9190614fdc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008760400160208101906120119190614dae565b62ffffff168152602080820192909252604001600020546001600160a01b0316606083015261204290870187614fdc565b6120526040880160208901614fdc565b6120626060890160408a01614dae565b60405160200161207493929190615808565b60408051601f19818403018152918152815160209283012080845260009081528083529081205460020b918301919091525b85518110156122bd578581815181106120c1576120c1615bc6565b602002602001015160200151600660008460000151815260200190815260200160002060008884815181106120f8576120f8615bc6565b6020908102919091018101515160020b8252810191909152604001600090812080549091906121319084906001600160801b0316615c1f565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060008083606001516001600160a01b0316633c8a7d8d308a868151811061217e5761217e615bc6565b60200260200101516000015187602001518c88815181106121a1576121a1615bc6565b6020026020010151600001516121b79190615b1a565b8c88815181106121c9576121c9615bc6565b6020026020010151602001518c6040516020016121f591906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401612224959493929190615c3f565b60408051808303816000875af1158015612242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122669190615856565b90925090506122758287615890565b95506122818186615890565b94506122a7612295368b90038b018b615c81565b898581518110611c4657611c46615bc6565b50505080806122b590615bdc565b9150506120a6565b5050935093915050565b606060006122d86020850185614fdc565b6122e86040860160208701614fdc565b6122f86060870160408801614dae565b60405160200161230a93929190615808565b60405160208183030381529060405280519060200120905060008060005b855181101561242b5760016000858152602001908152602001600020600087838151811061235857612358615bc6565b60200260200101516000015160020b60020b815260200190815260200160002060009054906101000a90046001600160801b031692506006600085815260200190815260200160002060008783815181106123b5576123b5615bc6565b6020908102919091018101515160020b8252810191909152604001600020546001600160801b0390811692506123f8908390670de0b6b3a76400009086166140e4565b86828151811061240a5761240a615bc6565b6020908102919091010151606001528061242381615bdc565b915050612328565b508493505050505b92915050565b61245d60405180606001604052806000815260200160008152602001600081525090565b600083600001518460200151856040015160405160200161248093929190615808565b60408051601f19818403018152828252805160209182012087516001600160a01b03908116600090815260038085528582208b8601518416835285528582208b87015162ffffff1683528552858220549092168082526016855285822060028b810b808552918752878420838552600e885288852060a08b018a5280548b526001818101548c8b0152928101548b8b01529586015460608b015260049095015460808a015285845286528683208184528652868320548584526006875287842091845295529490205481549296509394909390926001600160801b0390811692911690670de0b6b3a7640000906125de9061257b9083615890565b670de0b6b3a7640000610cbe88600201544261259791906158a3565b60018a01546040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91610c64918e91906004016158b6565b6125e891906158a3565b84556001600160801b0381161561261e576126196001600160801b0382811690670de0b6b3a76400009085166140e4565b612621565b60005b60018501819055426002860181905560408051606081018252965487526020870192909252908501525091979650505050505050565b600080856001600160a01b0316876001600160a01b03161061267a57858761267d565b86865b91509150856001600160a01b0316876001600160a01b03160361269f57600080fd5b6001600160a01b0382166126b257600080fd5b6001600160a01b0382811660009081526003602090815260408083208585168452825280832062ffffff8a16845290915290205416156126f157600080fd5b6001600160a01b0381811660009081526003602090815260408083208685168452825280832062ffffff8a168452909152902054161561273057600080fd5b60008083838860405160200161274893929190615808565b60408051601f198184030181529181528151602092830120835290820192909252016000205460020b1561277b57600080fd5b60008460020b1361278b57600080fd5b6000600260008762ffffff1662ffffff16815260200190815260200160002060009054906101000a900460020b90508860036000856001600160a01b03166001600160a01b031681526020019081526020016000206000846001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508860036000846001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508460008085858a6040516020016128e393929190615808565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548162ffffff021916908360020b62ffffff160217905550600d60009054906101000a900461ffff16846080019061ffff16908161ffff168152505083600e60008b6001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000016000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040155505060208201518160050155604082015181600601556060820151816007015560808201518160080160006101000a81548161ffff021916908361ffff16021790555060a0820151816009015590505088600c6000600d60009054906101000a900461ffff1661ffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600d600081819054906101000a900461ffff1680929190612a6790615cdf565b825461ffff9182166101009390930a9283029190920219909116179055506001600160a01b03831660009081526009602052604090205460ff16612b1957600b805461ffff9081166000908152600a6020908152604080832080546001600160a01b0319166001600160a01b038a16908117909155855490845260089092528220908316905582549091169190612afd83615cdf565b91906101000a81548161ffff021916908361ffff160217905550505b6001600160a01b03821660009081526009602052604090205460ff16612bad57600b805461ffff9081166000908152600a6020908152604080832080546001600160a01b0319166001600160a01b038916908117909155855490845260089092528220908316905582549091169190612b9183615cdf565b91906101000a81548161ffff021916908361ffff160217905550505b601054604051633eb4adab60e01b81526001600160a01b038581166004830152848116602483015290911690633eb4adab90604401600060405180830381600087803b158015612bfc57600080fd5b505af1158015612c10573d6000803e3d6000fd5b50505050505050505050505050565b600060016000846000015185602001518660400151604051602001612c4693929190615808565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120600286900b825290915220546001600160801b0316905092915050565b600080612c97614921565b60036000612ca86020870187614fdc565b6001600160a01b03166001600160a01b031681526020019081526020016000206000856020016020810190612cdd9190614fdc565b6001600160a01b03166001600160a01b031681526020019081526020016000206000856040016020810190612d129190614dae565b62ffffff1681526020808201929092526040016000908120546001600160a01b03169450908190612d4590870187614fdc565b612d556040880160208901614fdc565b612d656060890160408a01614dae565b604051602001612d7793929190615808565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120546001600160a01b0387168252600e835290839020835161016081018552815460c08201908152600183015460e08301526002838101546101008401526003840154610120840152600484015461014084015290825260058301549482019490945260068201549481019490945260078101546060850152600881015461ffff1660808501526009015460a0840152949694900b945092915050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915260046000612e786020880188614fdc565b612e886040890160208a01614fdc565b612e9860608a0160408b01614dae565b604051602001612eaa93929190615808565b6040516020818303038152906040528051906020012081526020019081526020016000206000858585604051602001612ee593929190615830565b60408051601f198184030181529181528151602092830120835282820193909352908201600020825160a0810184528154815260018201549281019290925260028101546001600160801b0380821694840194909452600160801b90048316606083015260030154909116608082015290505b949350505050565b60105460609060009081906001600160a01b0316331480612f8b57506011546001600160a01b031633145b80612fa057506012546001600160a01b031633145b612fbc5760405162461bcd60e51b8152600401610d1b90615915565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915260036000612fff6020890189614fdc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008760200160208101906130349190614fdc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008760400160208101906130699190614dae565b62ffffff168152602080820192909252604001600020546001600160a01b031660a083015261309a90870187614fdc565b6130aa6040880160208901614fdc565b6130ba6060890160408a01614dae565b6040516020016130cc93929190615808565b60408051601f1981840301815291815281516020928301206080840181905260009081529182905290205460020b81526131068686611c72565b901515602083018190529095506131485760405162461bcd60e51b8152600401610d1b90602080825260049082015263216c697160e01b604082015260600190565b613161868260a001518784608001518560000151614280565b95979096509350505050565b6000806131a56040518060a0016040528060008152602001600081526020016000815260200160008152602001600080191681525090565b6131b26020880188614fdc565b6131c26040890160208a01614fdc565b6131d260608a0160408b01614dae565b6040516020016131e493929190615808565b60408051601f1981840301815291815281516020928301206080840181905260009081529182905281205460020b90879082900361324c5760405162461bcd60e51b8152602060048201526005602482015264085c1bdbdb60da1b6044820152606401610d1b565b8660020b8860020b126132715760405162461bcd60e51b8152600401610d1b90615aff565b600060038161328360208d018d614fdc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008b60200160208101906132b89190614fdc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008b60400160208101906132ed9190614dae565b62ffffff1681526020810191909152604001600020546001600160a01b031690505b8760020b8260020b12156135d7576080840180516000908152600660209081526040808320600287900b8085529083528184205494518452600183528184209084529091529020546001600160801b039182169161336f918a9116615c1f565b6001600160801b031610156133b25760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b6044820152606401610d1b565b6001600160a01b03811663a34123a7836133cc8682615b1a565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526001600160801b038a16604482015260640160408051808303816000875af1158015613421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134459190615856565b602086015284526001600160a01b038116634f1eb3d830846134678782615b1a565b885160208a01516040516001600160e01b031960e088901b168152613493959493929190600401615b3f565b60408051808303816000875af11580156134b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134d59190615b7c565b505083516040850180516134ea908390615890565b9052506020840151606085018051613503908390615890565b90525060808401516000908152600160209081526040808320600286900b8452909152812080548992906135419084906001600160801b0316615c1f565b82546101009290920a6001600160801b0381810219909316918316021790915560808601516000908152600160209081526040808320600288900b8452909152812054909116900390506135ad57608084015160009081526007602052604090206135ad908385614706565b6135c56135bf368c90038c018c615c81565b83612439565b506135d08383615b1a565b915061330f565b6135f16135e9368c90038c018c615c81565b8a8a866108a9565b505086600460008660800151815260200190815260200160002060008b8b3360405160200161362293929190615830565b60405160208183030381529060405280519060200120815260200190815260200160002060020160008282829054906101000a90046001600160801b031661366a9190615c1f565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000846040015111156136b6576136b66136ab60208c018c614fdc565b3386604001516145c6565b6060840151156136de576136de6136d360408c0160208d01614fdc565b3386606001516145c6565b83604001518460600151955095505050505094509492505050565b600f546001600160a01b0316331461373c5760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610d1b565b601480546001600160a01b03199081166001600160a01b03938416179091556010805482169583169590951790945560118054851693821693909317909255601280549093169116179055565b6060816001600160401b038111156137a3576137a361498b565b6040519080825280602002602001820160405280156137d657816020015b60608152602001906001900390816137c15790505b50905060005b828110156115b357613846308585848181106137fa576137fa615bc6565b905060200281019061380c9190615cf6565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061478392505050565b82828151811061385857613858615bc6565b6020026020010181905250808061386e90615bdc565b9150506137dc565b600061388482840184614fdc565b9050600080336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138eb91906159d6565b336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061394d91906159d6565b6040516323b872dd60e01b81526001600160a01b038681166004830152336024830152604482018b9052929450909250908316906323b872dd906064016020604051808303816000875af11580156139a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139cd9190615d3c565b506040516323b872dd60e01b81526001600160a01b038481166004830152336024830152604482018890528216906323b872dd906064016020604051808303816000875af1158015613a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a479190615d3c565b5050505050505050565b600d54606090600090613a6a9060019061ffff16615bab565b61ffff1690506000816001600160401b03811115613a8a57613a8a61498b565b604051908082528060200260200182016040528015613ab3578160200160208202803683370190505b50905060005b828110156115b3576000818152600c602052604090205482516001600160a01b0390911690839083908110613af057613af0615bc6565b6001600160a01b039092166020928302919091019091015280613b1281615bdc565b915050613ab9565b604051637058199160e01b815260076004820152600286810b602483015285810b604483015284900b6064820152821515608482015260a4810187905260c48101829052600090819073__$93dfed57e8f421caed97f24c336a056d51$__9063705819919060e4016040805180830381865af4158015613b9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bc29190615d59565b91509150965096945050505050565b60008080613be260208a018a614fdc565b613bf260408b0160208c01614fdc565b613c0260608c0160408d01614dae565b604051602001613c1493929190615808565b60408051601f1981840301815291815281516020928301206000818152928390529082205490925060020b90819003613c745760405162461bcd60e51b8152602060048201526002602482015261021760f41b6044820152606401610d1b565b8760020b8960020b12613c995760405162461bcd60e51b8152600401610d1b90615aff565b6000876001600160801b031611613cc25760405162461bcd60e51b8152600401610d1b90615aff565b613ccc818a615c9d565b60020b158015613ce65750613ce18189615c9d565b60020b155b613d025760405162461bcd60e51b8152600401610d1b90615aff565b6000600381613d1460208e018e614fdc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6020016020810190613d499190614fdc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6040016020810190613d7e9190614dae565b62ffffff1681526020810191909152604001600020546001600160a01b03169050895b8960020b8160020b1215613f4f576000806001600160a01b038416633c8a7d8d3085613dcd8982615b1a565b8f8e604051602001613dee91906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401613e1d959493929190615c3f565b60408051808303816000875af1158015613e3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e5f9190615856565b9092509050613e6e8289615890565b9750613e7a8188615890565b6000878152600160209081526040808320600288900b84529091528120549198506001600160801b039091169003613ec5576000868152600760205260409020613ec5908487614706565b6000868152600160209081526040808320600287900b8452909152812080548d9290613efb9084906001600160801b0316615cbf565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550613f398e803603810190613f339190615c81565b84612439565b5050508281613f489190615b1a565b9050613da1565b613f69613f61368e90038e018e615c81565b8c8c866108a9565b5050886004600086815260200190815260200160002060008d8d8c604051602001613f9693929190615830565b60405160208183030381529060405280519060200120815260200190815260200160002060020160008282829054906101000a90046001600160801b0316613fde9190615cbf565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505050965096945050505050565b600f546001600160a01b031633146140545760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610d1b565b6001600160a01b03919091166000908152600e6020908152604091829020835180518255808301516001830155808401516002830155606080820151600384015560809182015160048401559285015160058301559284015160068201559083015160078201559082015160088201805461ffff191661ffff90921691909117905560a090910151600990910155565b600080806000198587098587029250828110838203039150508060000361411d576000841161411257600080fd5b508290049050610cc9565b8084116141555760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401610d1b565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000838015614262576001841680156141dd578592506141e1565b8392505b508260011c8460011c94505b841561425c578560801c1561420157600080fd5b8586028181018181101561421457600080fd5b859004965050600185161561425157858302838782041461423a57861561423a57600080fd5b8181018181101561424a57600080fd5b8590049350505b8460011c94506141ed565b50614278565b8380156142725760009250614276565b8392505b505b509392505050565b60008060005b8551811015614528578581815181106142a1576142a1615bc6565b6020026020010151602001516006600087815260200190815260200160002060008884815181106142d4576142d4615bc6565b6020908102919091018101515160020b82528101919091526040016000908120805490919061430d9084906001600160801b0316615cbf565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600080886001600160a01b031663a34123a789858151811061435557614355615bc6565b602002602001015160000151888b878151811061437457614374615bc6565b60200260200101516000015161438a9190615b1a565b8b878151811061439c5761439c615bc6565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af1158015614402573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144269190615856565b91509150886001600160a01b0316634f1eb3d8308a868151811061444c5761444c615bc6565b602002602001015160000151898c888151811061446b5761446b615bc6565b6020026020010151600001516144819190615b1a565b86866040518663ffffffff1660e01b81526004016144a3959493929190615b3f565b60408051808303816000875af11580156144c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144e59190615b7c565b506144f290508286615890565b94506144fe8185615890565b9350614512612295368c90038c018c615c81565b505050808061452090615bdc565b915050614286565b50600082118015614537575080155b8061454b57508115801561454b5750600081115b61457f5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b6044820152606401610d1b565b811561459c5761459c6145956020890189614fdc565b33846145c6565b80156145bc576145bc6145b56040890160208a01614fdc565b33836145c6565b9550959350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916146229190615d88565b6000604051808303816000865af19150503d806000811461465f576040519150601f19603f3d011682016040523d82523d6000602084013e614664565b606091505b509150915081801561468e57508051158061468e57508080602001905181019061468e9190615d3c565b6146bf5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610d1b565b5050505050565b60006146d38484846140e4565b9050600082806146e5576146e5615bf5565b8486091115610cc95760001981106146fc57600080fd5b6001019392505050565b8060020b8260020b8161471b5761471b615bf5565b0760020b1561472957600080fd5b6000806147578360020b8560020b8161474457614744615bf5565b0560020b600881901d9161010090910790565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b6060610cc98383604051806060016040528060278152602001615db8602791396060600080856001600160a01b0316856040516147c09190615d88565b600060405180830381855af49150503d80600081146147fb576040519150601f19603f3d011682016040523d82523d6000602084013e614800565b606091505b50915091506148118683838761481b565b9695505050505050565b6060831561488a578251600003614883576001600160a01b0385163b6148835760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d1b565b5081612f58565b612f58838381511561489f5781518083602001fd5b8060405162461bcd60e51b8152600401610d1b9190615da4565b6040518061014001604052806000815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600060020b8152602001614914614921565b8152600060209091015290565b6040518060c0016040528061495e6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff168152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b03811182821017156149c3576149c361498b565b60405290565b604051601f8201601f191681016001600160401b03811182821017156149f1576149f161498b565b604052919050565b6001600160a01b0381168114614a0e57600080fd5b50565b803562ffffff81168114614a2457600080fd5b919050565b600060608284031215614a3b57600080fd5b604051606081018181106001600160401b0382111715614a5d57614a5d61498b565b6040529050808235614a6e816149f9565b81526020830135614a7e816149f9565b6020820152614a8f60408401614a11565b60408201525092915050565b8060020b8114614a0e57600080fd5b60008060008060c08587031215614ac057600080fd5b614aca8686614a29565b93506060850135614ada81614a9b565b92506080850135614aea81614a9b565b915060a0850135614afa81614a9b565b939692955090935050565b600060a08284031215614b1757600080fd5b60405160a081018181106001600160401b0382111715614b3957614b3961498b565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b600080600060e08486031215614b8957600080fd5b8335614b94816149f9565b92506020840135614ba481614a9b565b9150614bb38560408601614b05565b90509250925092565b600060608284031215614bce57600080fd5b50919050565b8015158114614a0e57600080fd5b600080600080600060e08688031215614bfa57600080fd5b614c048787614bbc565b9450606086013593506080860135925060a0860135614c2281614bd4565b9497939650919460c0013592915050565b600081518084526020808501945080840160005b83811015614cad578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0808201519089015260c0908101519088015260e09096019590820190600101614c47565b509495945050505050565b60018060a01b038616815284602082015283604082015282606082015260a060808201526000614ceb60a0830184614c33565b979650505050505050565b600080600060608486031215614d0b57600080fd5b8335614d16816149f9565b92506020840135614d26816149f9565b9150614bb360408501614a11565b600080600060a08486031215614d4957600080fd5b614d538585614a29565b92506060840135614d6381614a9b565b91506080840135614d7381614a9b565b809150509250925092565b60008060408385031215614d9157600080fd5b823591506020830135614da381614a9b565b809150509250929050565b600060208284031215614dc057600080fd5b610cc982614a11565b6020808252825182820181905260009190848201906040850190845b81811015614e0a5783516001600160a01b031683529284019291840191600101614de5565b50909695505050505050565b60006001600160401b03821115614e2f57614e2f61498b565b5060051b60200190565b6001600160801b0381168114614a0e57600080fd5b600082601f830112614e5f57600080fd5b81356020614e74614e6f83614e16565b6149c9565b82815260e09283028501820192828201919087851115614e9357600080fd5b8387015b85811015614f145781818a031215614eaf5760008081fd5b614eb76149a1565b8135614ec281614a9b565b815281860135614ed181614e39565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c080830135908201528452928401928101614e97565b5090979650505050505050565b600080600080600060e08688031215614f3957600080fd5b614f438787614bbc565b94506060860135614f53816149f9565b935060808601356001600160401b03811115614f6e57600080fd5b614f7a88828901614e4e565b93505060a0860135614c2281614bd4565b60008060008060808587031215614fa157600080fd5b8435614fac816149f9565b93506020850135614fbc81614a9b565b92506040850135614fcc81614a9b565b91506060850135614afa81614a9b565b600060208284031215614fee57600080fd5b8135610cc9816149f9565b6101408101615033828980518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b60a082019690965260c081019490945260e084019290925261ffff1661010083015261012090910152919050565b60008060008060c0858703121561507757600080fd5b6150818686614bbc565b935060608501356001600160401b0381111561509c57600080fd5b6150a887828801614e4e565b9350506080850135915060a0850135614afa816149f9565b600080604083850312156150d357600080fd5b50508035926020909101359150565b600080608083850312156150f557600080fd5b6150ff8484614bbc565b915060608301356001600160401b0381111561511a57600080fd5b61512685828601614e4e565b9150509250929050565b8215158152604060208201526000612f586040830184614c33565b6000806040838503121561515e57600080fd5b8235615169816149f9565b91506020830135614da381614a9b565b60006020828403121561518b57600080fd5b5035919050565b600080600060a084860312156151a757600080fd5b6151b18585614bbc565b925060608401356001600160401b038111156151cc57600080fd5b6151d886828701614e4e565b9250506080840135614d73816149f9565b602081526000610cc96020830184614c33565b6000806080838503121561520f57600080fd5b6152198484614a29565b91506060830135614da381614a9b565b61ffff81168114614a0e57600080fd5b6000610140828403121561524c57600080fd5b60405160c081018181106001600160401b038211171561526e5761526e61498b565b60405290508061527e8484614b05565b815260a0830135602082015260c0830135604082015260e083013560608201526101008301356152ad81615229565b8060808301525061012083013560a08201525092915050565b6000806000806000806101e087890312156152e057600080fd5b86356152eb816149f9565b955060208701356152fb816149f9565b9450604087013561530b816149f9565b935061531960608801614a11565b9250608087013561532981614a9b565b91506153388860a08901615239565b90509295509295509295565b60006060828403121561535657600080fd5b610cc98383614bbc565b6001600160a01b0384168152600283900b602082015281516101808201906153b790604084019080518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b602083015160e08301526040830151610100830152606083015161012083015261ffff60808401511661014083015260a0830151610160830152949350505050565b6000806040838503121561540c57600080fd5b8235915060208301358060010b8114614da357600080fd5b60008060008060c0858703121561543a57600080fd5b6154448686614bbc565b9350606085013561545481614a9b565b9250608085013561546481614a9b565b915060a0850135614afa816149f9565b6060815260006154876060830186614c33565b60208301949094525060400152919050565b60008060008060c085870312156154af57600080fd5b6154b98686614bbc565b935060608501356154c981614a9b565b925060808501356154d981614a9b565b915060a0850135614afa81614e39565b600080600080608085870312156154ff57600080fd5b843561550a816149f9565b9350602085013561551a816149f9565b9250604085013561552a816149f9565b91506060850135614afa816149f9565b6000806020838503121561554d57600080fd5b82356001600160401b038082111561556457600080fd5b818501915085601f83011261557857600080fd5b81358181111561558757600080fd5b8660208260051b850101111561559c57600080fd5b60209290920196919550909350505050565b60005b838110156155c95781810151838201526020016155b1565b50506000910152565b600081518084526155ea8160208601602086016155ae565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561565357603f198886030184526156418583516155d2565b94509285019290850190600101615625565b5092979650505050505050565b6000806000806060858703121561567657600080fd5b843593506020850135925060408501356001600160401b038082111561569b57600080fd5b818701915087601f8301126156af57600080fd5b8135818111156156be57600080fd5b8860208285010111156156d057600080fd5b95989497505060200194505050565b60008060008060008060c087890312156156f857600080fd5b86359550602087013561570a81614a9b565b9450604087013561571a81614a9b565b9350606087013561572a81614a9b565b9250608087013561573a81614bd4565b8092505060a087013590509295509295509295565b600080600080600080610100878903121561576957600080fd5b6157738888614bbc565b9550606087013561578381614a9b565b9450608087013561579381614a9b565b935060a08701356157a381614e39565b925060c08701356157b3816149f9565b915060e08701356157c3816149f9565b809150509295509295509295565b60008061016083850312156157e557600080fd5b82356157f0816149f9565b91506157ff8460208501615239565b90509250929050565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b600293840b81529190920b60208201526001600160a01b03909116604082015260600190565b6000806040838503121561586957600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b808201808211156124335761243361587a565b818103818111156124335761243361587a565b60c081016158ef828580518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8260a08301529392505050565b60006020828403121561590e57600080fd5b5051919050565b602080825260059082015264042c2eae8d60db1b604082015260600190565b600080600080600080600060e0888a03121561594f57600080fd5b875161595a816149f9565b602089015190975061596b81614a9b565b604089015190965061597c81615229565b606089015190955061598d81615229565b608089015190945061599e81615229565b60a089015190935060ff811681146159b557600080fd5b60c08901519092506159c681614bd4565b8091505092959891949750929550565b6000602082840312156159e857600080fd5b8151610cc9816149f9565b60008060006060808587031215615a0957600080fd5b8451935060208086015193506040808701516001600160401b03811115615a2f57600080fd5b8701601f81018913615a4057600080fd5b8051615a4e614e6f82614e16565b81815260e0918202830185019185820191908c841115615a6d57600080fd5b938601935b83851015615aed5780858e031215615a8a5760008081fd5b615a926149a1565b8551615a9d81614a9b565b815285880151615aac81614e39565b81890152858701518782015288860151898201526080808701519082015260a0808701519082015260c0808701519082015283529384019391860191615a72565b50809750505050505050509250925092565b6020808252600190820152606960f81b604082015260600190565b600281810b9083900b01627fffff8113627fffff19821217156124335761243361587a565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b60008060408385031215615b8f57600080fd5b8251615b9a81614e39565b6020840151909250614da381614e39565b61ffff8281168282160390808211156115b3576115b361587a565b634e487b7160e01b600052603260045260246000fd5b600060018201615bee57615bee61587a565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082615c1a57615c1a615bf5565b500490565b6001600160801b038281168282160390808211156115b3576115b361587a565b60018060a01b03861681528460020b60208201528360020b60408201526001600160801b038316606082015260a060808201526000614ceb60a08301846155d2565b600060608284031215615c9357600080fd5b610cc98383614a29565b60008260020b80615cb057615cb0615bf5565b808360020b0791505092915050565b6001600160801b038181168382160190808211156115b3576115b361587a565b600061ffff8083168181036146fc576146fc61587a565b6000808335601e19843603018112615d0d57600080fd5b8301803591506001600160401b03821115615d2757600080fd5b602001915036819003821315611efd57600080fd5b600060208284031215615d4e57600080fd5b8151610cc981614bd4565b60008060408385031215615d6c57600080fd5b8251615d7781614a9b565b6020840151909250614da381614bd4565b60008251615d9a8184602087016155ae565b9190910192915050565b602081526000610cc960208301846155d256fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212209924a1c3b58fb45774a9ddfdeed99477767078c00aa2069c9f4d698189f39aa664736f6c63430008120033";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/Util.sol:Utils"]: string;
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
}
