/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium1",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "REPAY_THRESHOLD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "_updateUtilizationGrowth",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "growth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct UtilizationGrowth",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "premiumOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "premiumOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeParams",
    outputs: [
      {
        internalType: "uint128",
        name: "openFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "feeToPool",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFeeToPool",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint160",
        name: "sqrtStartingPriceX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "startingTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "finishTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "binSize",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "lte",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "findNearestInitializedBin",
    outputs: [
      {
        internalType: "int24",
        name: "nextTick",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getFeeParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getHashedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getHashedPositionKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedKey",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getIsBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getPremiumsCollected",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "premium0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "premium1",
            type: "uint128",
          },
        ],
        internalType: "struct PremiumsCollected",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getProfitFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "minLiquidities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumInBorrowedAsset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumInPairAsset",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
      {
        internalType: "address",
        name: "bf",
        type: "address",
      },
      {
        internalType: "address",
        name: "of_",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapFactory",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "minLiquidity",
        type: "uint256",
      },
    ],
    name: "setMinLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFeeToPool",
        type: "uint256",
      },
    ],
    name: "updateFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "updateUtilizationGrowth",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "growth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct UtilizationGrowth",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016000819055600e805461ffff1916909117905534801561002557600080fd5b50600e805462010000600160b01b031916336201000002179055615f35806200004f6000396000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80638da5cb5b1161015c578063b3a4016e116100ce578063d578395311610087578063d5783953146108f7578063d7a3dca014610924578063d7d3ed6a14610956578063da69b0b314610969578063f2d490a51461099d578063fd8d019c146109b057600080fd5b8063b3a4016e146107f5578063b75323a71461082f578063bbd9547214610842578063c6c2c2ca14610855578063d3487997146108cf578063d41dcbea146108e257600080fd5b8063a840465511610120578063a84046551461071d578063a841fdd81461077c578063a882c12d1461079c578063abf978e4146107af578063ac00b809146107c2578063ac9650d8146107d557600080fd5b80638da5cb5b14610681578063911f1b471461069a578063912a8e00146106bd57806395250923146106d05780639744a42d146106f257600080fd5b8063406a3d02116101f557806365197688116101b957806365197688146105885780636cb42a2f146105be5780636fc280e1146105d15780637f8f1dda146106265780638228108a1461065b5780638bdb2afa1461066e57600080fd5b8063406a3d021461042857806345e61a4d1461043b57806348222442146104d55780635955cad3146104e85780635ea33ec51461057557600080fd5b806318cdea9d1161024757806318cdea9d1461035d57806319fa10331461037057806319fda277146103a35780632398c1a9146103ef57806329aa38191461040257806334f3b11a1461041557600080fd5b80630229fb601461028457806304ad52fc146102b15780630ea50f50146102d25780630f429931146102f65780631698ee821461030b575b600080fd5b610297610292366004614b79565b6109c3565b604080519283526020830191909152015b60405180910390f35b6102c46102bf366004614c43565b610a14565b6040519081526020016102a8565b6102e56102e0366004614cb1565b610b45565b6040516102a8959493929190614d02565b610309610304366004614e53565b611159565b005b610345610319366004614ed1565b600b6020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b0390911681526020016102a8565b61030961036b366004614f0f565b611603565b61038361037e366004614f3a565b611682565b604080516001600160801b039384168152929091166020830152016102a8565b6103d76103b1366004614f84565b60026020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b0390911681526020016102a8565b6103096103fd366004614fb4565b611bdc565b6103d7610410366004614ff7565b611c55565b610309610423366004615024565b611c98565b6102c461043636600461505b565b611d64565b6104c261044936600461509b565b600760208181526000928352604092839020835160a081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301546080820152600583015460068401549284015460088501546009860154600a909601549395929493919261ffff9091169187565b6040516102a897969594939291906150b8565b6102c46104e3366004615129565b611db0565b61053f6104f6366004615145565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a0016102a8565b610297610583366004615167565b611df0565b6105ab6105963660046151af565b600a6020526000908152604090205460020b81565b60405160029190910b81526020016102a8565b6102976105cc3660046152c9565b611e96565b61060b6105df366004615320565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b604080519384526020840192909252908201526060016102a8565b610639610634366004614ff7565b6121f1565b60408051825181526020808401519082015291810151908201526060016102a8565b610639610669366004614ff7565b612252565b601054610345906001600160a01b031681565b600e54610345906201000090046001600160a01b031681565b6106ad6106a836600461534e565b612448565b60405190151581526020016102a8565b6103d76106cb366004614ff7565b61268f565b6106e36106de36600461539c565b61269e565b6040516102a8939291906153b8565b6102c461070036600461545c565b600c60209081526000928352604080842090915290825290205481565b61073061072b366004615487565b61285b565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a0016102a8565b6102c461078a3660046151af565b60086020526000908152604090205481565b600f54610345906001600160a01b031681565b6102976107bd3660046154d7565b61291c565b6103096107d0366004615527565b612f1c565b6107e86107e3366004615578565b612f80565b6040516102a8919061563c565b610808610803366004615129565b613074565b6040805182516001600160801b0390811682526020938401511692810192909252016102a8565b61029761083d366004615129565b6130d4565b61029761085036600461534e565b613111565b61089c6108633660046151af565b600960205260009081526040902080546001909101546001600160801b0380831692600160801b90819004821692808316929190041684565b604080516001600160801b03958616815293851660208501529184169183019190915290911660608201526080016102a8565b6103096108dd36600461569e565b613259565b6108ea613355565b6040516102a8919061571d565b61090a61090536600461576a565b61341e565b6040805160029390930b83529015156020830152016102a8565b610297610932366004614f84565b60036020908152600092835260408084209091529082529020805460019091015482565b6102976109643660046157da565b6134d5565b6103d7610977366004614f84565b60016020908152600092835260408084209091529082529020546001600160801b031681565b6102976109ab366004615129565b6139a8565b6103096109be36600461585c565b6139e2565b6000806000546001146109f15760405162461bcd60e51b81526004016109e8906158ec565b60405180910390fd5b6002600055610a0286868686613d7e565b60016000559097909650945050505050565b6001600160a01b0383166000908152600660209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290610b3a90610a7690670de0b6b3a7640000615926565b670de0b6b3a7640000610b33846040015142610a929190615939565b60208601516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91610ad9918d919060040161594c565b602060405180830381865af4158015610af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1a9190615992565b610b2c90670de0b6b3a7640000615926565b9190614019565b91906140d7565b9150505b9392505050565b600f546000908190819081906060906001600160a01b03163314610b7b5760405162461bcd60e51b81526004016109e8906159ab565b610b83614981565b610b9060208c018c61509b565b610ba060408d0160208e0161509b565b610bb060608e0160408f016159ca565b604051602001610bc2939291906159e5565b60408051601f19818403018152918152815160209283012090830152600b90600090610bf0908e018e61509b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6020016020810190610c25919061509b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6040016020810190610c5a91906159ca565b62ffffff16815260208082019290925260409081016000908120546001600160a01b03908116610120808701918252868501518452600a80875285852054600290810b60e0808b01919091528451861687526007808a5296889020885161018081018a5281548184019081526001830154610100838101919091529483015496820196909652600382015461014082015260048083015461016083015295815260058201549a81019a909a5260068101548a8a01529687015460608a0152600887015461ffff1660808a0152600987015460a08a0152959091015460c0880152870195909552518351633850c7bd60e01b81529351911693633850c7bd93808201939291908290030181865afa158015610d78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9c9190615a0d565b505050506001600160a01b03929092166020840152505060405163e5561d0d60e01b81528815156004820152602481018a90526044810188905273__$93dfed57e8f421caed97f24c336a056d51$__9063e5561d0d90606401602060405180830381865af4158015610e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e369190615aaf565b602082015160405163332b1def60e21b81528a15156004820152602481018c9052604481018d90526001600160a01b03909116606482015290965060009073__$93dfed57e8f421caed97f24c336a056d51$__9063ccac77bc90608401602060405180830381865af4158015610eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed49190615aaf565b905088610ef657806001600160a01b0316876001600160a01b03161115610f0d565b806001600160a01b0316876001600160a01b031610155b610f525760405162461bcd60e51b8152602060048201526016602482015275696e76616c6964207374617274696e6720707269636560501b60448201526064016109e8565b73__$93dfed57e8f421caed97f24c336a056d51$$eacbb88ed4bd2af84aa4d43bcf675bcf7e$$93dfed57e8f421caed97f24c336a056d51$__9063705819919060e4016040805180830381865af41580156134a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134c69190615e5d565b91509150965096945050505050565b6000806000546001146134fa5760405162461bcd60e51b81526004016109e8906158ec565b600260009081556135136104e3368b90038b018b615129565b6000818152600a602052604081205491925060029190910b9081900361354b5760405162461bcd60e51b81526004016109e890615c0f565b8760020b8960020b126135705760405162461bcd60e51b81526004016109e890615c2a565b6000876001600160801b0316116135ad5760405162461bcd60e51b81526020600482015260016024820152601b60fa1b60448201526064016109e8565b6135b7818a615dcc565b60020b1580156135d157506135cc8189615dcc565b60020b155b6136015760405162461bcd60e51b81526020600482015260016024820152601960fa1b60448201526064016109e8565b6000600b8161361360208e018e61509b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6020016020810190613648919061509b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c604001602081019061367d91906159ca565b62ffffff1681526020810191909152604001600020546001600160a01b03169050895b8960020b8160020b121561384e576000806001600160a01b038416633c8a7d8d30856136cc8982615c45565b8f8e6040516020016136ed91906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161371c959493929190615d50565b60408051808303816000875af115801561373a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061375e9190615c6a565b909250905061376d8289615926565b97506137798188615926565b6000878152600160209081526040808320600288900b84529091528120549198506001600160801b0390911690036137c4576000868152600c602052604090206137c4908487614746565b6000868152600160209081526040808320600287900b8452909152812080548d92906137fa9084906001600160801b0316615cfa565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506138388e8036038101906138329190615129565b84612252565b50505082816138479190615c45565b90506136a0565b613868613860368e90038e018e615129565b8c8c86613d7e565b5050886004600086815260200190815260200160002060008d8d8c6040516020016138b793929190600293840b81529190920b60208201526001600160a01b0391909116604082015260600190565b60405160208183030381529060405280519060200120815260200190815260200160002060020160008282829054906101000a90046001600160801b03166138ff9190615cfa565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550876001600160a01b0316826001600160a01b03167f7e1aa040ae22ae078b2e04d7e756a73671a8435cd8b72b0bd15f1cef372133d28b8e8e60405161398a939291906001600160801b03939093168352600291820b6020840152900b604082015260600190565b60405180910390a35050600160005550919890975095505050505050565b60008060006139b684611db0565b6000908152600960205260409020546001600160801b0380821696600160801b90920416945092505050565b600f546001600160a01b03163314613a0c5760405162461bcd60e51b81526004016109e8906159ab565b6000613a206104e3368a90038a018a615129565b60008181526005602052604090209091508515613ad657613a418585615cfa565b81548290601090613a63908490600160801b90046001600160801b0316615cfa565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550828160000160008282829054906101000a90046001600160801b0316613aad9190615cfa565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550613b6a565b613ae08585615cfa565b81548290600090613afb9084906001600160801b0316615cfa565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550828160000160108282829054906101000a90046001600160801b0316613b459190615cfa565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b60008060008060008060005b8d51811015613bbc578d8181518110613b9157613b91615d3a565b60200260200101516020015183613ba89190615cfa565b925080613bb481615d9d565b915050613b76565b5060005b8d51811015613d6c57600160008a815260200190815260200160002060008f8381518110613bf057613bf0615d3a565b60200260200101516000015160020b60020b815260200190815260200160002060009054906101000a90046001600160801b03169550613c6a8e8281518110613c3b57613c3b615d3a565b6020026020010151602001516001600160801b0316846001600160801b03168e6140d79092919063ffffffff16565b9350613cac848f8381518110613c8257613c82615d3a565b602002602001015160400151613c989190615926565b600160801b886001600160801b03166140d7565b9450613cc6856001600160801b038816600160801b6140d7565b613cd09083615926565b9150600360008a815260200190815260200160002060008f8381518110613cf957613cf9615d3a565b60200260200101516000015160020b60020b815260200190815260200160002096508c15613d405784876001016000828254613d359190615926565b90915550613d5a9050565b84876000016000828254613d549190615926565b90915550505b80613d6481615d9d565b915050613bc0565b50505050505050505050505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086516001600160a01b039081166000908152600b60209081526040808320828c0151851684528252808320818c015162ffffff16845290915290205416613dfe88611db0565b60c08301819052600090815260046020526040812081613e1f8a8a33611d64565b8152602081019190915260409081016000209051639887b58960e01b81526001600160a01b038416600482015260028a810b602483015289900b604482015290915073__$d23a8dd93b7205fa6b646ffed38c165d68$__90639887b589906064016040805180830381865af4158015613e9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ec09190615c6a565b6020850152835260c0830151613ed890898989611df0565b6060850181905260408501829052845190910180855260208501805190920190915281546002830154613f1d9291909103906001600160801b0316600160801b6140d7565b6001600160801b039081166080850152600182015460208501516002840154613f5093929091039116600160801b6140d7565b6001600160801b0390811660a0850152608084015116151580613f80575060008360a001516001600160801b0316115b15613fde5760808301516002820180546001600160801b03600160801b8083048216909401811690930290831617905560a08401516003830180548084169092019092166fffffffffffffffffffffffffffffffff19919091161790555b8251815560209092015160018301555060028101546003909101546001600160801b03600160801b9092048216935016905094509492505050565b60008380156140b95760018416801561403457859250614038565b8392505b508260011c8460011c94505b84156140b3578560801c1561405857600080fd5b8586028181018181101561406b57600080fd5b85900496505060018516156140a857858302838782041461409157861561409157600080fd5b818101818110156140a157600080fd5b8590049350505b8460011c9450614044565b506140cf565b8380156140c957600092506140cd565b8392505b505b509392505050565b6000808060001985870985870292508281108382030391505080600003614110576000841161410557600080fd5b508290049050610b3e565b8084116141485760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b60448201526064016109e8565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600082815260086020526040812054819081805b87518110156145a6576001600088815260200190815260200160002060008983815181106141f9576141f9615d3a565b6020908102919091018101515160020b8252810191909152604001600020546001600160801b031691506142368383670de0b6b3a76400006140d7565b6002600089815260200190815260200160002060008a848151811061425d5761425d615d3a565b6020908102919091018101515160020b82528101919091526040016000205461428f91906001600160801b0316615926565b8882815181106142a1576142a1615d3a565b602002602001015160200151836142b89190615d1a565b6001600160801b031610156142fb5760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b60448201526064016109e8565b87818151811061430d5761430d615d3a565b6020026020010151602001516002600089815260200190815260200160002060008a848151811061434057614340615d3a565b6020908102919091018101515160020b8252810191909152604001600090812080549091906143799084906001600160801b0316615cfa565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000808a6001600160a01b031663a34123a78b85815181106143c1576143c1615d3a565b6020026020010151600001518a8d87815181106143e0576143e0615d3a565b6020026020010151600001516143f69190615c45565b8d878151811061440857614408615d3a565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af115801561446e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144929190615c6a565b915091508a6001600160a01b0316634f1eb3d8308c86815181106144b8576144b8615d3a565b6020026020010151600001518b8e88815181106144d7576144d7615d3a565b6020026020010151600001516144ed9190615c45565b86866040518663ffffffff1660e01b815260040161450f959493929190615c8e565b60408051808303816000875af115801561452d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145519190615ccb565b5061455e90508288615926565b965061456a8187615926565b955061459061457e368e90038e018e615129565b8b85815181106121c2576121c2615d3a565b505050808061459e90615d9d565b9150506141c9565b506000841180156145b5575082155b806145c95750831580156145c95750600083115b6145fd5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b60448201526064016109e8565b831561461a5761461a61461360208b018b61509b565b3386614646565b821561463a5761463a61463360408b0160208c0161509b565b3385614646565b50509550959350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916146a29190615e8c565b6000604051808303816000865af19150503d80600081146146df576040519150601f19603f3d011682016040523d82523d6000602084013e6146e4565b606091505b509150915081801561470e57508051158061470e57508080602001905181019061470e9190615ea8565b61473f5760405162461bcd60e51b815260206004820152600260248201526114d560f21b60448201526064016109e8565b5050505050565b8060020b8260020b8161475b5761475b615db6565b0760020b1561476957600080fd5b6000806147978360020b8560020b8161478457614784615db6565b0560020b600881901d9161010090910790565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b6060610b3e8383604051806060016040528060278152602001615ed96027913961486b565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061473f5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016109e8565b6060600080856001600160a01b0316856040516148889190615e8c565b600060405180830381855af49150503d80600081146148c3576040519150601f19603f3d011682016040523d82523d6000602084013e6148c8565b606091505b50915091506148d9868383876148e3565b9695505050505050565b6060831561495257825160000361494b576001600160a01b0385163b61494b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109e8565b5081612914565b61291483838151156149675781518083602001fd5b8060405162461bcd60e51b81526004016109e89190615ec5565b6040518061014001604052806000815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600060020b81526020016149dc6149e9565b8152600060209091015290565b6040518060e00160405280614a266040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff16815260200160008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715614a9257614a92614a5a565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614ac057614ac0614a5a565b604052919050565b6001600160a01b0381168114614add57600080fd5b50565b803562ffffff81168114614af357600080fd5b919050565b600060608284031215614b0a57600080fd5b604051606081018181106001600160401b0382111715614b2c57614b2c614a5a565b6040529050808235614b3d81614ac8565b81526020830135614b4d81614ac8565b6020820152614b5e60408401614ae0565b60408201525092915050565b8060020b8114614add57600080fd5b60008060008060c08587031215614b8f57600080fd5b614b998686614af8565b93506060850135614ba981614b6a565b92506080850135614bb981614b6a565b915060a0850135614bc981614b6a565b939692955090935050565b600060a08284031215614be657600080fd5b60405160a081018181106001600160401b0382111715614c0857614c08614a5a565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b600080600060e08486031215614c5857600080fd5b8335614c6381614ac8565b92506020840135614c7381614b6a565b9150614c828560408601614bd4565b90509250925092565b600060608284031215614c9d57600080fd5b50919050565b8015158114614add57600080fd5b600080600080600060e08688031215614cc957600080fd5b614cd38787614c8b565b9450606086013593506080860135925060a0860135614cf181614ca3565b9497939650919460c0013592915050565b600060a080830160018060a01b03891684526020888186015260408881870152606088818801526080858189015284895180875260c09650868a019150858b0160005b82811015614d96578151805160020b8552888101516001600160801b0316898601528781015188860152868101518786015285810151868601528a01518a8501529288019290870190600101614d45565b50919f9e505050505050505050505050505050565b61ffff81168114614add57600080fd5b60006101608284031215614dce57600080fd5b60405160e081018181106001600160401b0382111715614df057614df0614a5a565b604052905080614e008484614bd4565b815260a0830135602082015260c0830135604082015260e08301356060820152610100830135614e2f81614dab565b8060808301525061012083013560a082015261014083013560c08201525092915050565b6000806000806000806102008789031215614e6d57600080fd5b8635614e7881614ac8565b95506020870135614e8881614ac8565b94506040870135614e9881614ac8565b9350614ea660608801614ae0565b92506080870135614eb681614b6a565b9150614ec58860a08901614dbb565b90509295509295509295565b600080600060608486031215614ee657600080fd5b8335614ef181614ac8565b92506020840135614f0181614ac8565b9150614c8260408501614ae0565b60008060808385031215614f2257600080fd5b614f2c8484614af8565b946060939093013593505050565b600080600060a08486031215614f4f57600080fd5b614f598585614af8565b92506060840135614f6981614b6a565b91506080840135614f7981614b6a565b809150509250925092565b60008060408385031215614f9757600080fd5b823591506020830135614fa981614b6a565b809150509250929050565b600080600080600060e08688031215614fcc57600080fd5b614fd68787614af8565b976060870135975060808701359660a0810135965060c00135945092505050565b6000806080838503121561500a57600080fd5b6150148484614af8565b91506060830135614fa981614b6a565b600080610180838503121561503857600080fd5b823561504381614ac8565b91506150528460208501614dbb565b90509250929050565b60008060006060848603121561507057600080fd5b833561507b81614b6a565b9250602084013561508b81614b6a565b91506040840135614f7981614ac8565b6000602082840312156150ad57600080fd5b8135610b3e81614ac8565b61016081016150f2828a80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8760a08301528660c08301528560e083015261ffff8516610100830152836101208301528261014083015298975050505050505050565b60006060828403121561513b57600080fd5b610b3e8383614af8565b6000806040838503121561515857600080fd5b50508035926020909101359150565b6000806000806080858703121561517d57600080fd5b84359350602085013561518f81614b6a565b9250604085013561519f81614b6a565b91506060850135614bc981614b6a565b6000602082840312156151c157600080fd5b5035919050565b60006001600160401b038211156151e1576151e1614a5a565b5060051b60200190565b6001600160801b0381168114614add57600080fd5b600082601f83011261521157600080fd5b81356020615226615221836151c8565b614a98565b82815260c0928302850182019282820191908785111561524557600080fd5b8387015b858110156152bc5781818a0312156152615760008081fd5b615269614a70565b813561527481614b6a565b815281860135615283816151eb565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101615249565b5090979650505050505050565b600080600060a084860312156152de57600080fd5b6152e88585614c8b565b925060608401356001600160401b0381111561530357600080fd5b61530f86828701615200565b9250506080840135614f7981614ac8565b6000806040838503121561533357600080fd5b823561533e81614ac8565b91506020830135614fa981614b6a565b6000806080838503121561536157600080fd5b61536b8484614c8b565b915060608301356001600160401b0381111561538657600080fd5b61539285828601615200565b9150509250929050565b6000606082840312156153ae57600080fd5b610b3e8383614c8b565b6001600160a01b0384168152600283900b602082015281516101a082019061540f90604084019080518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b602083015160e08301526040830151610100830152606083015161012083015261ffff60808401511661014083015260a083015161016083015260c0830151610180830152949350505050565b6000806040838503121561546f57600080fd5b8235915060208301358060010b8114614fa957600080fd5b60008060008060c0858703121561549d57600080fd5b6154a78686614c8b565b935060608501356154b781614b6a565b925060808501356154c781614b6a565b915060a0850135614bc981614ac8565b60008060008060c085870312156154ed57600080fd5b6154f78686614c8b565b9350606085013561550781614b6a565b9250608085013561551781614b6a565b915060a0850135614bc9816151eb565b6000806000806080858703121561553d57600080fd5b843561554881614ac8565b9350602085013561555881614ac8565b9250604085013561556881614ac8565b91506060850135614bc981614ac8565b6000806020838503121561558b57600080fd5b82356001600160401b03808211156155a257600080fd5b818501915085601f8301126155b657600080fd5b8135818111156155c557600080fd5b8660208260051b85010111156155da57600080fd5b60209290920196919550909350505050565b60005b838110156156075781810151838201526020016155ef565b50506000910152565b600081518084526156288160208601602086016155ec565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561569157603f1988860301845261567f858351615610565b94509285019290850190600101615663565b5092979650505050505050565b600080600080606085870312156156b457600080fd5b843593506020850135925060408501356001600160401b03808211156156d957600080fd5b818701915087601f8301126156ed57600080fd5b8135818111156156fc57600080fd5b88602082850101111561570e57600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b8181101561575e5783516001600160a01b031683529284019291840191600101615739565b50909695505050505050565b60008060008060008060c0878903121561578357600080fd5b86359550602087013561579581614b6a565b945060408701356157a581614b6a565b935060608701356157b581614b6a565b925060808701356157c581614ca3565b8092505060a087013590509295509295509295565b60008060008060008061010087890312156157f457600080fd5b6157fe8888614c8b565b9550606087013561580e81614b6a565b9450608087013561581e81614b6a565b935060a087013561582e816151eb565b925060c087013561583e81614ac8565b915060e087013561584e81614ac8565b809150509295509295509295565b6000806000806000806000610120888a03121561587857600080fd5b6158828989614c8b565b9650606088013561589281614ac8565b955060808801356001600160401b038111156158ad57600080fd5b6158b98a828b01615200565b95505060a08801356158ca81614ca3565b9699959850939660c08101359560e08201359550610100909101359350915050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611c9257611c92615910565b81810381811115611c9257611c92615910565b60c08101615985828580518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8260a08301529392505050565b6000602082840312156159a457600080fd5b5051919050565b602080825260059082015264042c2eae8d60db1b604082015260600190565b6000602082840312156159dc57600080fd5b610b3e82614ae0565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b600080600080600080600060e0888a031215615a2857600080fd5b8751615a3381614ac8565b6020890151909750615a4481614b6a565b6040890151909650615a5581614dab565b6060890151909550615a6681614dab565b6080890151909450615a7781614dab565b60a089015190935060ff81168114615a8e57600080fd5b60c0890151909250615a9f81614ca3565b8091505092959891949750929550565b600060208284031215615ac157600080fd5b8151610b3e81614ac8565b60008060006060808587031215615ae257600080fd5b8451935060208086015193506040808701516001600160401b03811115615b0857600080fd5b8701601f81018913615b1957600080fd5b8051615b27615221826151c8565b81815260c0918202830185019185820191908c841115615b4657600080fd5b938601935b83851015615bbc5780858e031215615b635760008081fd5b615b6b614a70565b8551615b7681614b6a565b815285880151615b85816151eb565b81890152858701518782015288860151898201526080808701519082015260a0808701519082015283529384019391860191615b4b565b50809750505050505050509250925092565b600061ffff808316818103615be557615be5615910565b6001019392505050565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b6020808252600190820152600760fc1b604082015260600190565b6020808252600190820152606960f81b604082015260600190565b600281810b9083900b01627fffff8113627fffff1982121715611c9257611c92615910565b60008060408385031215615c7d57600080fd5b505080516020909101519092909150565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b60008060408385031215615cde57600080fd5b8251615ce9816151eb565b6020840151909250614fa9816151eb565b6001600160801b0381811683821601908082111561306d5761306d615910565b6001600160801b0382811682821603908082111561306d5761306d615910565b634e487b7160e01b600052603260045260246000fd5b60018060a01b03861681528460020b60208201528360020b60408201526001600160801b038316606082015260a060808201526000615d9260a0830184615610565b979650505050505050565b600060018201615daf57615daf615910565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008260020b80615ded57634e487b7160e01b600052601260045260246000fd5b808360020b0791505092915050565b6000808335601e19843603018112615e1357600080fd5b8301803591506001600160401b03821115615e2d57600080fd5b60200191503681900382131561325257600080fd5b61ffff82811682821603908082111561306d5761306d615910565b60008060408385031215615e7057600080fd5b8251615e7b81614b6a565b6020840151909250614fa981614ca3565b60008251615e9e8184602087016155ec565b9190910192915050565b600060208284031215615eba57600080fd5b8151610b3e81614ca3565b602081526000610b3e602083018461561056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220cfbc5ed0f20b398cf732ccb75b44ae497435a305b89cbb2cb65d588b9d4f870364736f6c63430008120033";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
  ["src/Util.sol:Utils"]: string;
}
