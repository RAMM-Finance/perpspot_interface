/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "amount0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "feeAmountTickSpacing",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "estimatedMinimumSlippage",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint160",
        name: "sqrtStartingPriceX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "startingTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "finishTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "binSize",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "lte",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "findNearestInitializedBin",
    outputs: [
      {
        internalType: "int24",
        name: "nextTick",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getURates",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "isBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "orderFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reclaimer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
      {
        internalType: "address",
        name: "bf",
        type: "address",
      },
      {
        internalType: "address",
        name: "of_",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapFactory",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "updateUtilizationGrowth",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "growth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct UtilizationGrowth",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600b8054600161ffff199182168117909255600d8054909116909117905534801561002e57600080fd5b50600f80546001600160a01b0319163317905560026020527febaffbad3b7fced837389fa2c76ef17bd16e01452243bc801329ba9c392c939f805462ffffff19908116600a179091557f8f2d796c159bb2bb788bc3f1a337a929c07b0cf1d9277451fd5f909c263c02d680548216603c1790556127106000527f5e7cc46d63c0d79d92b677239084c61b6b019c2759734090f1970fc4b4823988805490911660c8179055615f6980620000e26000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80638da5cb5b1161013b578063ac00b809116100b8578063d41dcbea1161007c578063d41dcbea1461081a578063d578395314610822578063d7d3ed6a1461084f578063da69b0b314610862578063fe4f278a1461089657600080fd5b8063ac00b809146107ae578063ac9650d8146107c1578063c3419a71146107e1578063c5161a60146107f4578063d34879971461080757600080fd5b80639744a42d116100ff5780639744a42d146106dc578063a840465514610707578063a882c12d14610766578063aa966e5514610779578063abf978e41461079b57600080fd5b80638da5cb5b1461066e5780638f88d560146106815780638fd74d4d14610694578063912a8e00146106a757806395250923146106ba57600080fd5b806345e61a4d116101c9578063651976881161018d578063651976881461058e5780636fc280e1146105b157806379378b41146106065780637dc7306c146106195780637f8f1dda1461063957600080fd5b806345e61a4d146104055780634d18e0d01461049b5780635955cad3146104ae5780635a42047a1461053b578063626a45181461055c57600080fd5b806319fda2771161021057806319fda2771461034457806322afcccb14610390578063273cbaa0146103c85780632a6fc4ba146103dd5780634185a442146103f257600080fd5b80630229fb601461024d57806304ad52fc1461027a5780630ea50f501461029b5780631698ee82146102bf57806319fa103314610311575b600080fd5b61026061025b366004614bec565b6108a9565b604080519283526020830191909152015b60405180910390f35b61028d610288366004614cb6565b610bdc565b604051908152602001610271565b6102ae6102a9366004614d24565b610d0d565b604051610271959493929190614dfa565b6102f96102cd366004614e38565b60036020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b039091168152602001610271565b61032461031f366004614e76565b61128c565b604080516001600160801b03938416815292909116602083015201610271565b610378610352366004614ec0565b60066020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b039091168152602001610271565b6103b561039e366004614ef0565b600260208190526000918252604090912054900b81565b60405160029190910b8152602001610271565b6103d061151f565b6040516102719190614f0b565b6103f06103eb366004615063565b6115ef565b005b6102606104003660046150cd565b61183d565b61048961041336600461511e565b600e60209081526000918252604091829020825160a0810184528154815260018201549281019290925260028101549282019290925260038201546060820152600482015460808201526005820154600683015460078401546008850154600990950154939492939192909161ffff9091169086565b6040516102719695949392919061513b565b6103f06104a93660046151a3565b6118ed565b6105056104bc366004615202565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a001610271565b61054e610549366004615224565b611ca7565b604051610271929190615272565b61026061056a36600461528d565b60056020908152600092835260408084209091529082529020805460019091015482565b6103b561059c3660046152bb565b60006020819052908152604090205460020b81565b6105eb6105bf36600461528d565b601660209081526000928352604080842090915290825290208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610271565b6102606106143660046152d4565b611f39565b61062c610627366004615224565b61239f565b604051610271919061532b565b61064c61064736600461533e565b612511565b6040805182518152602080840151908201529181015190820152606001610271565b600f546102f9906001600160a01b031681565b6103f061068f366004615408565b61272f565b6012546102f9906001600160a01b031681565b6103786106b536600461533e565b612c64565b6106cd6106c8366004615486565b612cd1565b604051610271939291906154a2565b61028d6106ea36600461553b565b600760209081526000928352604080842090915290825290205481565b61071a610715366004615566565b612e81565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a001610271565b6010546102f9906001600160a01b031681565b61078c610787366004615224565b612fa5565b604051610271939291906155b6565b6102606107a93660046155db565b6131b2565b6103f06107bc36600461562b565b6137c9565b6107d46107cf36600461567c565b613859565b6040516102719190615740565b6011546102f9906001600160a01b031681565b6013546102f9906001600160a01b031681565b6103f06108153660046157a2565b613946565b6103d0613b21565b610835610830366004615821565b613bea565b6040805160029390930b8352901515602083015201610271565b61026061085d366004615891565b613ca1565b610378610870366004614ec0565b60016020908152600092835260408084209091529082529020546001600160801b031681565b6103f06108a4366004615913565b6140e1565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086516001600160a01b039081166000908152600360209081526040808320828c01805186168552908352818420828d01805162ffffff1686529084528285205490951660c08701528b519051945191519394600494869461094594910161594a565b604051602081830303815290604052805190602001208152602001908152602001600020600088883360405160200161098093929190615972565b60408051601f198184030181529181528151602092830120835290820192909252810160002060c08401519151639887b58960e01b81526001600160a01b039092166004830152600289810b602484015288900b6044830152915073__$d23a8dd93b7205fa6b646ffed38c165d68$__90639887b589906064016040805180830381865af4158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a9190615998565b6020840152825260c0820151610a529088888861183d565b60608401526040830181905282518390610a6d9083906159d2565b9052506060820151602083018051610a869083906159d2565b90525087516020808a01516040808c01519051600094610aaa94909392910161594a565b60408051601f198184030181529190528051602090910120825484516002850154929350610ae992919003906001600160801b0316600160801b6141b4565b6001600160801b039081166080850152600183015460208501516002850154610b1c93929091039116600160801b6141b4565b6001600160801b0390811660a0850152608084015116151580610b4c575060008360a001516001600160801b0316115b15610ba15760808301516002830180546001600160801b03600160801b8083048216909401811690930290831617905560a08401516003840180548084169092019092166001600160801b0319919091161790555b5081518155602090910151600182015560028101546003909101546001600160801b03600160801b9092048216935016905094509492505050565b6001600160a01b0383166000908152601660209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290610d0290610c3e90670de0b6b3a76400006159d2565b670de0b6b3a7640000610cfb846040015142610c5a91906159e5565b60208601516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91610ca1918d91906004016159f8565b602060405180830381865af4158015610cbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce29190615a3e565b610cf490670de0b6b3a76400006159d2565b9190614292565b91906141b4565b9150505b9392505050565b6010546000908190819081906060906001600160a01b0316331480610d3c57506011546001600160a01b031633145b610d615760405162461bcd60e51b8152600401610d5890615a57565b60405180910390fd5b610d696149fb565b610d7660208c018c61511e565b610d8660408d0160208e0161511e565b610d9660608e0160408f01614ef0565b604051602001610da89392919061594a565b60408051601f19818403018152918152815160209092019190912090820152610dde670de0b6b3a76400008b610cfb8c826159d2565b815260036000610df160208e018e61511e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6020016020810190610e26919061511e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6040016020810190610e5b9190614ef0565b62ffffff16815260208082019290925260409081016000908120546001600160a01b0390811661012080870191825286850151845283865284842054600290810b60e0808a0191909152835185168652600e885294869020865161016081018852815460c08201908152600183015482890152928201546101008281019190915260038301549482019490945260048083015461014083015292815260058201549881019890985260068101548888015260078101546060890152600881015461ffff1660808901526009015460a088015290870195909552518351633850c7bd60e01b81529351911693633850c7bd93808201939291908290030181865afa158015610f6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f909190615a76565b505050506001600160a01b0392909216602084018190528351604051630c7b626960e11b81528c1515600482015260248101919091526044810191909152606481018a905273__$93dfed57e8f421caed97f24c336a056d51$__92506318f6c4d29150608401602060405180830381865af4158015611013573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110379190615b18565b95508761105c57856001600160a01b031681602001516001600160a01b031610611076565b856001600160a01b031681602001516001600160a01b0316115b6110b85760405162461bcd60e51b8152602060048201526013602482015272696e6665617369626c6520736c69707061676560681b6044820152606401610d58565b604080516101008101825282820151815289151560208083019182526001600160a01b03808b1684860190815291860151811660608501908152608085018f8152600160a08701908152600360c08801908152670de0b6b3a764000060e089019081529851631967f40b60e11b81526007600482015297516024890152955115156044880152935183166064870152905190911660848501525160a48401525160c48301525160e4820152905161010482015273__$93dfed57e8f421caed97f24c336a056d51$__906332cfe8169061012401600060405180830381865af41580156111a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111d09190810190615b35565b608084019190915260608301829052925089146112195760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610d58565b6112338b8261012001518484604001518560e00151614350565b90955093508761125f576060810151608082015161125a91670de0b6b3a7640000906141b4565b61127c565b6080810151606082015161127c91670de0b6b3a7640000906141b4565b9250509550955095509550959050565b60008060008560000151866020015187604001516040516020016112b29392919061594a565b60408051601f1981840301815291815281516020928301206000818152928390529082205490925060020b908190036113155760405162461bcd60e51b8152602060048201526005602482015264085c1bdbdb60da1b6044820152606401610d58565b8460020b8660020b1261133a5760405162461bcd60e51b8152600401610d5890615c41565b86516001600160a01b039081166000908152600360209081526040808320828c0151851684528252808320818c015162ffffff16845282528083205486845260048352818420915194169390918391611399918c918c91339101615972565b604051602081830303815290604052805190602001208152602001908152602001600020905060008890505b8760020b8160020b121561146d576001600160a01b038316634f1eb3d830836113ee8882615c5c565b6001600160801b03806040518663ffffffff1660e01b8152600401611417959493929190615c81565b60408051808303816000875af1158015611435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114599190615cbe565b5061146690508482615c5c565b90506113c5565b6002820154600160801b90046001600160801b0316156114aa57895160028301546114aa91903390600160801b90046001600160801b0316614696565b60038201546001600160801b0316156114dc5760208a015160038301546114dc919033906001600160801b0316614696565b50600281018054600390920180546001600160801b038085169093556001600160801b03198116909155600160801b90920481169a911698509650505050505050565b600b546060906000906115389060019061ffff16615ced565b61ffff1690506000816001600160401b0381111561155857611558614acd565b604051908082528060200260200182016040528015611581578160200160208202803683370190505b50905060005b828110156115e8576000818152600a602052604090205482516001600160a01b03909116908390839081106115be576115be615d08565b6001600160a01b0390921660209283029190910190910152806115e081615d1e565b915050611587565b5092915050565b6010546001600160a01b031633148061161257506011546001600160a01b031633145b61162e5760405162461bcd60e51b8152600401610d5890615a57565b600061163d602087018761511e565b61164d604088016020890161511e565b61165d6060890160408a01614ef0565b60405160200161166f9392919061594a565b60405160208183030381529060405280519060200120905060008060008087518661169a9190615d4d565b905060005b8851811015611830576001600087815260200190815260200160002060008a83815181106116cf576116cf615d08565b6020908102919091018101515160020b82528181019290925260409081016000908120546001600160a01b038e16825260059093529081208b516001600160801b039093169650918b908490811061172957611729615d08565b60200260200101516000015160020b60020b8152602001908152602001600020945061178b828a838151811061176157611761615d08565b60200260200101516040015161177791906159d2565b600160801b866001600160801b03166141b4565b925087156117b257828560010160008282546117a791906159d2565b909155506117cc9050565b828560000160008282546117c691906159d2565b90915550505b6001600160a01b038a1660009081526005602052604081208a519091908b90849081106117fb576117fb615d08565b60200260200101516000015160020b60020b81526020019081526020016000209450808061182890615d1e565b91505061169f565b5050505050505050505050565b6000806000859050611862604051806040016040528060008152602001600081525090565b8560020b8260020b12156118e257506001600160a01b0387166000908152600560209081526040808320600285900b845282529182902082518084019093528054808452600190910154918301919091526118bd90856159d2565b93508060200151836118cf91906159d2565b92506118db8583615c5c565b9150611862565b505094509492505050565b6010546001600160a01b031633148061191057506011546001600160a01b031633145b8061192557506012546001600160a01b031633145b8061193a57506013546001600160a01b031633145b6119565760405162461bcd60e51b8152600401610d5890615a57565b6040805160808101825260008082526020820181905291810182905260608101919091526003600061198b602088018861511e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008660200160208101906119c0919061511e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008660400160208101906119f59190614ef0565b62ffffff168152602080820192909252604001600020546001600160a01b03166060830152611a269086018661511e565b611a36604087016020880161511e565b611a466060880160408901614ef0565b604051602001611a589392919061594a565b60408051601f19818403018152918152815160209283012080845260009081528083529081205460020b918301919091525b8451811015611c9f57611ad684670de0b6b3a7640000878481518110611ab257611ab2615d08565b6020026020010151602001516001600160801b03166147969092919063ffffffff16565b6001600160801b031660408084018290528351600090815260066020529081208751909190889085908110611b0d57611b0d615d08565b6020908102919091018101515160020b825281019190915260400160009081208054909190611b469084906001600160801b0316615d61565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555081606001516001600160a01b0316633c8a7d8d30878481518110611b9057611b90615d08565b6020026020010151600001518560200151898681518110611bb357611bb3615d08565b602002602001015160000151611bc99190615c5c565b60408088015181516001600160a01b038b1660208201529091016040516020818303038152906040526040518663ffffffff1660e01b8152600401611c12959493929190615d81565b60408051808303816000875af1158015611c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c549190615998565b50611c8c9050611c6936889003880188615dc3565b868381518110611c7b57611c7b615d08565b602002602001015160000151612511565b5080611c9781615d1e565b915050611a8a565b505050505050565b600060606000835111611ce95760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b6044820152606401610d58565b60008080611cfa602088018861511e565b611d0a6040890160208a0161511e565b611d1a60608a0160408b01614ef0565b604051602001611d2c9392919061594a565b60408051601f1981840301815291815281516020928301206000818152928390529082205490925060020b905b8751811015611f255781888281518110611d7557611d75615d08565b602002602001015160000151611d8b9190615ddf565b60020b15611dc95760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b6044820152606401610d58565b600160008481526020019081526020016000206000898381518110611df057611df0615d08565b6020908102919091018101515160020b82528101919091526040016000908120546001600160801b03169550859003611e3457600088965096505050505050611f32565b600660008481526020019081526020016000206000898381518110611e5b57611e5b615d08565b6020908102919091018101515160020b8252810191909152604001600020546001600160801b039081169450611e9e908590670de0b6b3a76400009088166141b4565b888281518110611eb057611eb0615d08565b60200260200101516060018181525050878181518110611ed257611ed2615d08565b60200260200101516020015184611ee99190615e01565b6001600160801b0316856001600160801b03161015611f1357600088965096505050505050611f32565b80611f1d81615d1e565b915050611d59565b5060018795509550505050505b9250929050565b60105460009081906001600160a01b0316331480611f6157506011546001600160a01b031633145b80611f7657506012546001600160a01b031633145b80611f8b57506013546001600160a01b031633145b611fa75760405162461bcd60e51b8152600401610d5890615a57565b60408051608081018252600080825260208201819052918101829052606081019190915260036000611fdc602089018961511e565b6001600160a01b03166001600160a01b031681526020019081526020016000206000876020016020810190612011919061511e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008760400160208101906120469190614ef0565b62ffffff168152602080820192909252604001600020546001600160a01b031660608301526120779087018761511e565b612087604088016020890161511e565b6120976060890160408a01614ef0565b6040516020016120a99392919061594a565b60408051601f19818403018152918152815160209283012080845260009081528083529081205460020b918301919091525b855181101561239557612187604051806040016040528060038152602001623bba3360e91b8152506006600085600001518152602001908152602001600020600089858151811061212e5761212e615d08565b6020908102919091018101515160020b82528101919091526040016000205488516001600160801b039091169089908590811061216d5761216d615d08565b6020026020010151602001516001600160801b03166147d6565b85818151811061219957612199615d08565b602002602001015160200151600660008460000151815260200190815260200160002060008884815181106121d0576121d0615d08565b6020908102919091018101515160020b8252810191909152604001600090812080549091906122099084906001600160801b0316615d61565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060008083606001516001600160a01b0316633c8a7d8d308a868151811061225657612256615d08565b60200260200101516000015187602001518c888151811061227957612279615d08565b60200260200101516000015161228f9190615c5c565b8c88815181106122a1576122a1615d08565b6020026020010151602001518c6040516020016122cd91906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016122fc959493929190615d81565b60408051808303816000875af115801561231a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061233e9190615998565b909250905061234d82876159d2565b955061235981866159d2565b945061237f61236d368b90038b018b615dc3565b898581518110611c7b57611c7b615d08565b505050808061238d90615d1e565b9150506120db565b5050935093915050565b606060006123b0602085018561511e565b6123c0604086016020870161511e565b6123d06060870160408801614ef0565b6040516020016123e29392919061594a565b60405160208183030381529060405280519060200120905060008060005b85518110156125035760016000858152602001908152602001600020600087838151811061243057612430615d08565b60200260200101516000015160020b60020b815260200190815260200160002060009054906101000a90046001600160801b0316925060066000858152602001908152602001600020600087838151811061248d5761248d615d08565b6020908102919091018101515160020b8252810191909152604001600020546001600160801b0390811692506124d0908390670de0b6b3a76400009086166141b4565b8682815181106124e2576124e2615d08565b602090810291909101015160600152806124fb81615d1e565b915050612400565b508493505050505b92915050565b61253560405180606001604052806000815260200160008152602001600081525090565b60008360000151846020015185604001516040516020016125589392919061594a565b60408051601f19818403018152828252805160209182012087516001600160a01b03908116600090815260038085528582208b8601518416835285528582208b87015162ffffff1683528552858220549092168082526016855285822060028b810b808552918752878420838552600e885288852060a08b018a5280548b526001818101548c8b0152928101548b8b01529586015460608b015260049095015460808a015285845286528683208184528652868320548584526006875287842091845295529490205481549296509394909390926001600160801b0390811692911690670de0b6b3a7640000906126b69061265390836159d2565b670de0b6b3a7640000610cfb88600201544261266f91906159e5565b60018a01546040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$$93dfed57e8f421caed97f24c336a056d51$__9063705819919060e4016040805180830381865af4158015613c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c929190615e9b565b91509150965096945050505050565b60008080613cb260208a018a61511e565b613cc260408b0160208c0161511e565b613cd260608c0160408d01614ef0565b604051602001613ce49392919061594a565b60408051601f1981840301815291815281516020928301206000818152928390529082205490925060020b90819003613d445760405162461bcd60e51b8152602060048201526002602482015261021760f41b6044820152606401610d58565b8760020b8960020b12613d695760405162461bcd60e51b8152600401610d5890615c41565b6000876001600160801b031611613d925760405162461bcd60e51b8152600401610d5890615c41565b613d9c818a615ddf565b60020b158015613db65750613db18189615ddf565b60020b155b613dd25760405162461bcd60e51b8152600401610d5890615c41565b6000600381613de460208e018e61511e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6020016020810190613e19919061511e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6040016020810190613e4e9190614ef0565b62ffffff1681526020810191909152604001600020546001600160a01b03169050895b8960020b8160020b121561401f576000806001600160a01b038416633c8a7d8d3085613e9d8982615c5c565b8f8e604051602001613ebe91906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401613eed959493929190615d81565b60408051808303816000875af1158015613f0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f2f9190615998565b9092509050613f3e82896159d2565b9750613f4a81886159d2565b6000878152600160209081526040808320600288900b84529091528120549198506001600160801b039091169003613f95576000868152600760205260409020613f95908487614822565b6000868152600160209081526040808320600287900b8452909152812080548d9290613fcb9084906001600160801b0316615e01565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506140098e8036038101906140039190615dc3565b84612511565b50505082816140189190615c5c565b9050613e71565b614039614031368e90038e018e615dc3565b8c8c866108a9565b5050886004600086815260200190815260200160002060008d8d8c60405160200161406693929190615972565b60405160208183030381529060405280519060200120815260200190815260200160002060020160008282829054906101000a90046001600160801b03166140ae9190615e01565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505050965096945050505050565b600f546001600160a01b031633146141245760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610d58565b6001600160a01b03919091166000908152600e6020908152604091829020835180518255808301516001830155808401516002830155606080820151600384015560809182015160048401559285015160058301559284015160068201559083015160078201559082015160088201805461ffff191661ffff90921691909117905560a090910151600990910155565b60008080600019858709858702925082811083820303915050806000036141ed57600084116141e257600080fd5b508290049050610d06565b8084116142255760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401610d58565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000838015614332576001841680156142ad578592506142b1565b8392505b508260011c8460011c94505b841561432c578560801c156142d157600080fd5b858602818101818110156142e457600080fd5b859004965050600185161561432157858302838782041461430a57861561430a57600080fd5b8181018181101561431a57600080fd5b8590049350505b8460011c94506142bd565b50614348565b8380156143425760009250614346565b8392505b505b509392505050565b60008060005b85518110156145f85785818151811061437157614371615d08565b6020026020010151602001516006600087815260200190815260200160002060008884815181106143a4576143a4615d08565b6020908102919091018101515160020b8252810191909152604001600090812080549091906143dd9084906001600160801b0316615e01565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600080886001600160a01b031663a34123a789858151811061442557614425615d08565b602002602001015160000151888b878151811061444457614444615d08565b60200260200101516000015161445a9190615c5c565b8b878151811061446c5761446c615d08565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af11580156144d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144f69190615998565b91509150886001600160a01b0316634f1eb3d8308a868151811061451c5761451c615d08565b602002602001015160000151898c888151811061453b5761453b615d08565b6020026020010151600001516145519190615c5c565b86866040518663ffffffff1660e01b8152600401614573959493929190615c81565b60408051808303816000875af1158015614591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145b59190615cbe565b506145c2905082866159d2565b94506145ce81856159d2565b93506145e261236d368c90038c018c615dc3565b50505080806145f090615d1e565b915050614356565b50600082118015614607575080155b8061461b57508115801561461b5750600081115b61464f5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b6044820152606401610d58565b811561466c5761466c614665602089018961511e565b3384614696565b801561468c5761468c6146856040890160208a0161511e565b3383614696565b9550959350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916146f29190615eca565b6000604051808303816000865af19150503d806000811461472f576040519150601f19603f3d011682016040523d82523d6000602084013e614734565b606091505b509150915081801561475e57508051158061475e57508080602001905181019061475e9190615e7e565b61478f5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610d58565b5050505050565b60006147a38484846141b4565b9050600082806147b5576147b5615d37565b8486091115610d065760001981106147cc57600080fd5b6001019392505050565b61481d8383836040516024016147ee93929190615ee6565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b1790526148c4565b505050565b8060020b8260020b8161483757614837615d37565b0760020b1561484557600080fd5b6000806148738360020b8560020b8161486057614860615d37565b0560020b600881901d9161010090910790565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b6060610d068383604051806060016040528060278152602001615f0d602791396148e5565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060600080856001600160a01b0316856040516149029190615eca565b600060405180830381855af49150503d806000811461493d576040519150601f19603f3d011682016040523d82523d6000602084013e614942565b606091505b50915091506149538683838761495d565b9695505050505050565b606083156149cc5782516000036149c5576001600160a01b0385163b6149c55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d58565b5081612f9d565b612f9d83838151156149e15781518083602001fd5b8060405162461bcd60e51b8152600401610d589190615ef9565b6040518061014001604052806000815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600060020b8152602001614a56614a63565b8152600060209091015290565b6040518060c00160405280614aa06040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff168152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715614b0557614b05614acd565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614b3357614b33614acd565b604052919050565b6001600160a01b0381168114614b5057600080fd5b50565b803562ffffff81168114614b6657600080fd5b919050565b600060608284031215614b7d57600080fd5b604051606081018181106001600160401b0382111715614b9f57614b9f614acd565b6040529050808235614bb081614b3b565b81526020830135614bc081614b3b565b6020820152614bd160408401614b53565b60408201525092915050565b8060020b8114614b5057600080fd5b60008060008060c08587031215614c0257600080fd5b614c0c8686614b6b565b93506060850135614c1c81614bdd565b92506080850135614c2c81614bdd565b915060a0850135614c3c81614bdd565b939692955090935050565b600060a08284031215614c5957600080fd5b60405160a081018181106001600160401b0382111715614c7b57614c7b614acd565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b600080600060e08486031215614ccb57600080fd5b8335614cd681614b3b565b92506020840135614ce681614bdd565b9150614cf58560408601614c47565b90509250925092565b600060608284031215614d1057600080fd5b50919050565b8015158114614b5057600080fd5b600080600080600060e08688031215614d3c57600080fd5b614d468787614cfe565b9450606086013593506080860135925060a0860135614d6481614d16565b9497939650919460c0013592915050565b600081518084526020808501945080840160005b83811015614def578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0808201519089015260c0908101519088015260e09096019590820190600101614d89565b509495945050505050565b60018060a01b038616815284602082015283604082015282606082015260a060808201526000614e2d60a0830184614d75565b979650505050505050565b600080600060608486031215614e4d57600080fd5b8335614e5881614b3b565b92506020840135614e6881614b3b565b9150614cf560408501614b53565b600080600060a08486031215614e8b57600080fd5b614e958585614b6b565b92506060840135614ea581614bdd565b91506080840135614eb581614bdd565b809150509250925092565b60008060408385031215614ed357600080fd5b823591506020830135614ee581614bdd565b809150509250929050565b600060208284031215614f0257600080fd5b610d0682614b53565b6020808252825182820181905260009190848201906040850190845b81811015614f4c5783516001600160a01b031683529284019291840191600101614f27565b50909695505050505050565b60006001600160401b03821115614f7157614f71614acd565b5060051b60200190565b6001600160801b0381168114614b5057600080fd5b600082601f830112614fa157600080fd5b81356020614fb6614fb183614f58565b614b0b565b82815260e09283028501820192828201919087851115614fd557600080fd5b8387015b858110156150565781818a031215614ff15760008081fd5b614ff9614ae3565b813561500481614bdd565b81528186013561501381614f7b565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c080830135908201528452928401928101614fd9565b5090979650505050505050565b600080600080600060e0868803121561507b57600080fd5b6150858787614cfe565b9450606086013561509581614b3b565b935060808601356001600160401b038111156150b057600080fd5b6150bc88828901614f90565b93505060a0860135614d6481614d16565b600080600080608085870312156150e357600080fd5b84356150ee81614b3b565b935060208501356150fe81614bdd565b9250604085013561510e81614bdd565b91506060850135614c3c81614bdd565b60006020828403121561513057600080fd5b8135610d0681614b3b565b6101408101615175828980518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b60a082019690965260c081019490945260e084019290925261ffff1661010083015261012090910152919050565b60008060008060c085870312156151b957600080fd5b6151c38686614cfe565b935060608501356001600160401b038111156151de57600080fd5b6151ea87828801614f90565b9350506080850135915060a0850135614c3c81614b3b565b6000806040838503121561521557600080fd5b50508035926020909101359150565b6000806080838503121561523757600080fd5b6152418484614cfe565b915060608301356001600160401b0381111561525c57600080fd5b61526885828601614f90565b9150509250929050565b8215158152604060208201526000612f9d6040830184614d75565b600080604083850312156152a057600080fd5b82356152ab81614b3b565b91506020830135614ee581614bdd565b6000602082840312156152cd57600080fd5b5035919050565b600080600060a084860312156152e957600080fd5b6152f38585614cfe565b925060608401356001600160401b0381111561530e57600080fd5b61531a86828701614f90565b9250506080840135614eb581614b3b565b602081526000610d066020830184614d75565b6000806080838503121561535157600080fd5b61535b8484614b6b565b91506060830135614ee581614bdd565b61ffff81168114614b5057600080fd5b6000610140828403121561538e57600080fd5b60405160c081018181106001600160401b03821117156153b0576153b0614acd565b6040529050806153c08484614c47565b815260a0830135602082015260c0830135604082015260e083013560608201526101008301356153ef8161536b565b8060808301525061012083013560a08201525092915050565b6000806000806000806101e0878903121561542257600080fd5b863561542d81614b3b565b9550602087013561543d81614b3b565b9450604087013561544d81614b3b565b935061545b60608801614b53565b9250608087013561546b81614bdd565b915061547a8860a0890161537b565b90509295509295509295565b60006060828403121561549857600080fd5b610d068383614cfe565b6001600160a01b0384168152600283900b602082015281516101808201906154f990604084019080518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b602083015160e08301526040830151610100830152606083015161012083015261ffff60808401511661014083015260a0830151610160830152949350505050565b6000806040838503121561554e57600080fd5b8235915060208301358060010b8114614ee557600080fd5b60008060008060c0858703121561557c57600080fd5b6155868686614cfe565b9350606085013561559681614bdd565b925060808501356155a681614bdd565b915060a0850135614c3c81614b3b565b6060815260006155c96060830186614d75565b60208301949094525060400152919050565b60008060008060c085870312156155f157600080fd5b6155fb8686614cfe565b9350606085013561560b81614bdd565b9250608085013561561b81614bdd565b915060a0850135614c3c81614f7b565b6000806000806080858703121561564157600080fd5b843561564c81614b3b565b9350602085013561565c81614b3b565b9250604085013561566c81614b3b565b91506060850135614c3c81614b3b565b6000806020838503121561568f57600080fd5b82356001600160401b03808211156156a657600080fd5b818501915085601f8301126156ba57600080fd5b8135818111156156c957600080fd5b8660208260051b85010111156156de57600080fd5b60209290920196919550909350505050565b60005b8381101561570b5781810151838201526020016156f3565b50506000910152565b6000815180845261572c8160208601602086016156f0565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561579557603f19888603018452615783858351615714565b94509285019290850190600101615767565b5092979650505050505050565b600080600080606085870312156157b857600080fd5b843593506020850135925060408501356001600160401b03808211156157dd57600080fd5b818701915087601f8301126157f157600080fd5b81358181111561580057600080fd5b88602082850101111561581257600080fd5b95989497505060200194505050565b60008060008060008060c0878903121561583a57600080fd5b86359550602087013561584c81614bdd565b9450604087013561585c81614bdd565b9350606087013561586c81614bdd565b9250608087013561587c81614d16565b8092505060a087013590509295509295509295565b60008060008060008061010087890312156158ab57600080fd5b6158b58888614cfe565b955060608701356158c581614bdd565b945060808701356158d581614bdd565b935060a08701356158e581614f7b565b925060c08701356158f581614b3b565b915060e087013561590581614b3b565b809150509295509295509295565b600080610160838503121561592757600080fd5b823561593281614b3b565b9150615941846020850161537b565b90509250929050565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b600293840b81529190920b60208201526001600160a01b03909116604082015260600190565b600080604083850312156159ab57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b8082018082111561250b5761250b6159bc565b8181038181111561250b5761250b6159bc565b60c08101615a31828580518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8260a08301529392505050565b600060208284031215615a5057600080fd5b5051919050565b602080825260059082015264042c2eae8d60db1b604082015260600190565b600080600080600080600060e0888a031215615a9157600080fd5b8751615a9c81614b3b565b6020890151909750615aad81614bdd565b6040890151909650615abe8161536b565b6060890151909550615acf8161536b565b6080890151909450615ae08161536b565b60a089015190935060ff81168114615af757600080fd5b60c0890151909250615b0881614d16565b8091505092959891949750929550565b600060208284031215615b2a57600080fd5b8151610d0681614b3b565b60008060006060808587031215615b4b57600080fd5b8451935060208086015193506040808701516001600160401b03811115615b7157600080fd5b8701601f81018913615b8257600080fd5b8051615b90614fb182614f58565b81815260e0918202830185019185820191908c841115615baf57600080fd5b938601935b83851015615c2f5780858e031215615bcc5760008081fd5b615bd4614ae3565b8551615bdf81614bdd565b815285880151615bee81614f7b565b81890152858701518782015288860151898201526080808701519082015260a0808701519082015260c0808701519082015283529384019391860191615bb4565b50809750505050505050509250925092565b6020808252600190820152606960f81b604082015260600190565b600281810b9083900b01627fffff8113627fffff198212171561250b5761250b6159bc565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b60008060408385031215615cd157600080fd5b8251615cdc81614f7b565b6020840151909250614ee581614f7b565b61ffff8281168282160390808211156115e8576115e86159bc565b634e487b7160e01b600052603260045260246000fd5b600060018201615d3057615d306159bc565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082615d5c57615d5c615d37565b500490565b6001600160801b038281168282160390808211156115e8576115e86159bc565b60018060a01b03861681528460020b60208201528360020b60408201526001600160801b038316606082015260a060808201526000614e2d60a0830184615714565b600060608284031215615dd557600080fd5b610d068383614b6b565b60008260020b80615df257615df2615d37565b808360020b0791505092915050565b6001600160801b038181168382160190808211156115e8576115e86159bc565b600061ffff8083168181036147cc576147cc6159bc565b6000808335601e19843603018112615e4f57600080fd5b8301803591506001600160401b03821115615e6957600080fd5b602001915036819003821315611f3257600080fd5b600060208284031215615e9057600080fd5b8151610d0681614d16565b60008060408385031215615eae57600080fd5b8251615eb981614bdd565b6020840151909250614ee581614d16565b60008251615edc8184602087016156f0565b9190910192915050565b6060815260006155c96060830186615714565b602081526000610d06602083018461571456fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122083393f9de43102e4d32729446fcc786b9c9c0f507b8d86b82198ea9c65a6f3ce64736f6c63430008120033";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/Util.sol:Utils"]: string;
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
}
