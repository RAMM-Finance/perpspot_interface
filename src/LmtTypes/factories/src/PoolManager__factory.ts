/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium1",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "PoolAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "REPAY_THRESHOLD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "collectedFees0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "collectedFees1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeParams",
    outputs: [
      {
        internalType: "uint128",
        name: "openFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "feeToPool",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFeeToPool",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "startingTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "finishTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "binSize",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "lte",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "findNearestInitializedBin",
    outputs: [
      {
        internalType: "int24",
        name: "nextTick",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "finishPriceX96",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getFeeParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getHashedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getHashedPositionKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedKey",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getProfitFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "minLiquidities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "collectPaused",
        type: "bool",
      },
    ],
    name: "setCollectPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "minLiquidity",
        type: "uint256",
      },
    ],
    name: "setMinLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "providePaused",
        type: "bool",
      },
    ],
    name: "setProvidePaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "withdrawPaused",
        type: "bool",
      },
    ],
    name: "setWithdrawPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFeeToPool",
        type: "uint256",
      },
    ],
    name: "updateFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50615fad80620000216000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80638da5cb5b11610151578063b9a402a5116100c3578063d578395311610087578063d57839531461088d578063d7a3dca0146108ba578063da69b0b3146108ec578063dc724d3a14610920578063f2d490a514610933578063fc6e9cbf1461094657600080fd5b8063b9a402a5146107c5578063bbd95472146107d8578063c6c2c2ca146107eb578063d348799714610865578063d41dcbea1461087857600080fd5b8063a882c12d11610115578063a882c12d14610746578063abf978e414610759578063ac9650d81461076c578063aea84c911461078c578063b75323a71461079f578063b8919fa6146107b257600080fd5b80638da5cb5b14610661578063952509231461067a5780639744a42d1461069c578063a8404655146106c7578063a841fdd81461072657600080fd5b806345e61a4d116101ea57806365197688116101ae578063651976881461059557806368335691146105cb5780636cb42a2f146105de5780636fc280e1146105f15780638129fc1c14610646578063895f4ade1461064e57600080fd5b806345e61a4d1461041b57806348222442146104c157806348c6f866146104d45780635955cad3146104f55780635ea33ec51461058257600080fd5b806319fa10331161023c57806319fa10331461034257806319fda277146103755780632398c1a9146103c157806325f149ce146103d457806337d15139146103e7578063406a3d02146103fa57600080fd5b80630229fb60146102795780630ea50f50146102a657806313af4035146102c85780631698ee82146102dd57806318cdea9d1461032f575b600080fd5b61028c610287366004614aef565b610959565b604080519283526020830191909152015b60405180910390f35b6102b96102b4366004614b58565b6109ac565b60405161029d93929190614c24565b6102db6102d6366004614c58565b610bc1565b005b6103176102eb366004614c8d565b600a6020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b03909116815260200161029d565b6102db61033d366004614db4565b610c1b565b610355610350366004614ddf565b610c6e565b604080516001600160801b0393841681529290911660208301520161029d565b6103a9610383366004614e29565b60026020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b03909116815260200161029d565b6102db6103cf366004614e59565b610e03565b6102db6103e2366004614e9c565b610e7c565b6102db6103f5366004614e9c565b610eca565b61040d610408366004614eb9565b610f18565b60405190815260200161029d565b6104ae610429366004614c58565b600660208181526000928352604092839020835160c081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301546080820152600583015460a082015290820154600783015460088401546009850154600a860154600b90960154949593949293919261ffff909116919087565b60405161029d9796959493929190614f33565b61040d6104cf366004614f7a565b610f65565b6104e76104e2366004614f96565b610fa5565b60405161029d929190614ffd565b61054c610503366004615016565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a00161029d565b61028c610590366004615038565b611110565b6105b86105a3366004615080565b60096020526000908152604090205460020b81565b60405160029190910b815260200161029d565b61040d6105d93660046150f1565b6111b6565b61028c6105ec366004615232565b6112f1565b61062b6105ff366004615289565b600560209081526000928352604080842090915290825290208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161029d565b6102db61169c565b6102db61065c366004615360565b6117cb565b600d54610317906201000090046001600160a01b031681565b61068d610688366004615397565b6118a0565b60405161029d939291906153b3565b61040d6106aa36600461542d565b600b60209081526000928352604080842090915290825290205481565b6106da6106d5366004615458565b611a26565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a00161029d565b61040d610734366004615080565b60076020526000908152604090205481565b600e54610317906001600160a01b031681565b61028c6107673660046154a8565b611ae7565b61077f61077a3660046154f8565b61220a565b60405161029d91906155bc565b6102db61079a366004614c58565b6122ff565b61028c6107ad366004614f7a565b612351565b61028c6107c036600461561e565b61238e565b6102db6107d336600461568e565b612a59565b61028c6107e636600461570c565b613150565b6108326107f9366004615080565b600860205260009081526040902080546001909101546001600160801b0380831692600160801b90819004821692808316929190041684565b604080516001600160801b039586168152938516602085015291841691830191909152909116606082015260800161029d565b6102db61087336600461575a565b613298565b6108806133a1565b60405161029d91906157d9565b6108a061089b366004615826565b61347e565b6040805160029390930b835290151560208301520161029d565b61028c6108c8366004614e29565b60036020908152600092835260408084209091529082529020805460019091015482565b6103a96108fa366004614e29565b60016020908152600092835260408084209091529082529020546001600160801b031681565b6102db61092e366004614e9c565b613535565b61028c610941366004614f7a565b613583565b6102db610954366004615896565b6135bd565b600080600f546001146109875760405162461bcd60e51b815260040161097e906158fe565b60405180910390fd5b6002600f5561099a8686868660016137e3565b6001600f559097909650945050505050565b600e5460009081906060906001600160a01b031633146109de5760405162461bcd60e51b815260040161097e90615922565b6109e661495d565b6109f360208a018a614c58565b610a0360408b0160208c01614c58565b610a1360608c0160408d01615941565b604051602001610a259392919061595c565b60408051601f19818403018152918152815160209283012090830152600a90600090610a53908c018c614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6020016020810190610a889190614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190610abd9190615941565b62ffffff16815260208082019290925260409081016000908120546001600160a01b0390811661012086019081528584015183526009909452908290205460020b60e08086019190915292518251633850c7bd60e01b81529251911692633850c7bd92600480820193918290030181865afa158015610b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b649190615984565b5050506001600160a01b0390931660208501819052610b8f93508c92508b91508a908a908a90610fa5565b905080925050610baf898261012001518484604001518560e00151613a6a565b909a9099509197509095505050505050565b600d546201000090046001600160a01b03163314610bf15760405162461bcd60e51b815260040161097e90615a26565b600d80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b600d546201000090046001600160a01b03163314610c4b5760405162461bcd60e51b815260040161097e90615a26565b8060076000610c5985610f65565b81526020810191909152604001600020555050565b600080600f54600114610c935760405162461bcd60e51b815260040161097e906158fe565b6002600f556000610ca386610f65565b600081815260096020526040902054600e5491925060020b90600160b01b900460ff1615610ce35760405162461bcd60e51b815260040161097e90615a46565b8060020b600003610d065760405162461bcd60e51b815260040161097e90615a66565b8460020b8660020b12610d2b5760405162461bcd60e51b815260040161097e90615a81565b600082815260046020526040812081610d45898933610f18565b815260208101919091526040016000206002810154909150600160801b90046001600160801b031615610da95760028101548851600160801b9091046001600160801b03169550610d97903387613f56565b6002810180546001600160801b031690555b60038101546001600160801b031615610df157600381015460208901516001600160801b039091169450610dde903386613f56565b6003810180546001600160801b03191690555b50506001600f55509094909350915050565b600d546201000090046001600160a01b03163314610e335760405162461bcd60e51b815260040161097e90615a26565b6000610e3e86610f65565b60009081526008602052604090206001600160801b03958616600160801b958716860217815592851691909416909202919091176001909101555050565b600d546201000090046001600160a01b03163314610eac5760405162461bcd60e51b815260040161097e90615a26565b600e8054911515600160a01b0260ff60a01b19909216919091179055565b600d546201000090046001600160a01b03163314610efa5760405162461bcd60e51b815260040161097e90615a26565b600e8054911515600160a81b0260ff60a81b19909216919091179055565b60408051600285810b602083015284900b918101919091526001600160a01b03821660608201526000906080016040516020818303038152906040528051906020012090505b9392505050565b6000816000015182602001518360400151604051602001610f889392919061595c565b604051602081830303815290604052805190602001209050919050565b60006060610fb161495d565b610fc36104cf368b90038b018b614f7a565b60408083018290525163225e631360e21b8152600b600482015287151560248201526044810189905260648101879052608481018a90526001600160a01b03861660a482015260c481019190915273__$93dfed57e8f421caed97f24c336a056d51$__906389798c4c9060e401600060405180830381865af415801561104d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110759190810190615a9c565b608084019190915260608301829052925087146110be5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b604482015260640161097e565b856110e557606081015160808201516110e091670de0b6b3a764000090614056565b611102565b6080810151606082015161110291670de0b6b3a764000090614056565b925050965096945050505050565b6000806000859050611135604051806040016040528060008152602001600081525090565b8560020b8260020b12156111ab57506000878152600360209081526040808320600285900b845282529182902082518084019093528054808452600190910154918301919091526111869085615bb4565b93508060200151836111989190615bb4565b92506111a48583615bc7565b9150611135565b505094509492505050565b6001600160a01b0383166000908152600560209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290670de0b6b3a7640000906112de9061121a9083615bb4565b670de0b6b3a76400006112d78560400151426112369190615bec565b60208701516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf9161127d918e9190600401615bff565b602060405180830381865af415801561129a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112be9190615c1a565b6112d090670de0b6b3a7640000615bb4565b9190614134565b9190614056565b6112e89190615bec565b95945050505050565b600e5460009081906001600160a01b031633146113205760405162461bcd60e51b815260040161097e90615922565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526000600a8161135d60208a018a614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906113929190614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860400160208101906113c79190615941565b62ffffff1681526020810191909152604001600020546001600160a01b031690506113fa6104cf36899003890189614f7a565b808352600090815260096020908152604080832054600290810b838701526001600160a01b038516845260068352818420825160c08101845281548152600182015494810194909452908101549183019190915260038101546060830152600481015460808301526005015460a0820152905b87518110156116905787818151811061148857611488615c33565b602002602001015160200151600260008660000151815260200190815260200160002060008a84815181106114bf576114bf615c33565b6020908102919091018101515160020b8252810191909152604001600090812080549091906114f89084906001600160801b0316615c49565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550826001600160a01b0316633c8a7d8d308a848151811061153e5761153e615c33565b60200260200101516000015187602001518c868151811061156157611561615c33565b6020026020010151600001516115779190615bc7565b8c868151811061158957611589615c33565b6020026020010151602001518c6040516020016115b591906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016115e4959493929190615c69565b60408051808303816000875af1158015611602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116269190615cb6565b60808601526060850181905261163c9087615bb4565b955083608001518561164e9190615bb4565b945061167d88828151811061166557611665615c33565b602002602001015160000151856000015185856141f2565b508061168881615cda565b91505061146d565b50505050935093915050565b600054610100900460ff16158080156116bc5750600054600160ff909116105b806116d65750303b1580156116d6575060005460ff166001145b6117395760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161097e565b6000805460ff19166001179055801561175c576000805461ff0019166101001790555b600d80546001600f8190556001600160b01b031990911633620100000261ffff19161717905580156117c8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b600d546201000090046001600160a01b031633146117fb5760405162461bcd60e51b815260040161097e90615a26565b6001600160a01b03919091166000908152600660208181526040928390208451805182558083015160018301558085015160028301556060808201516003840155608080830151600485015560a0928301516005850155938701519483019490945593850151600782015591840151600883015583015160098201805461ffff191661ffff90921691909117905590820151600a82015560c090910151600b90910155565b6000806118ab6149c5565b600a60006118bc6020870187614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160208101906118f19190614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560400160208101906119269190615941565b62ffffff16815260208101919091526040016000908120546001600160a01b0316935060099061195e6104cf36889003880188614f7a565b815260208082019290925260409081016000908120546001600160a01b038716825260068085529183902083516101a081018552815460e082019081526001830154610100830152600283810154610120840152600384015461014084015260048401546101608401526005840154610180840152908252938201549581019590955260078101549385019390935260088301546060850152600983015461ffff166080850152600a83015460a0850152600b9092015460c08401529496940b945092915050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915260046000611a676104cf36899003890189614f7a565b81526020019081526020016000206000611a82868686610f18565b81526020808201929092526040908101600020815160a0810183528154815260018201549381019390935260028101546001600160801b0380821693850193909352600160801b9004821660608401526003015416608082015290505b949350505050565b600080600f54600114611b0c5760405162461bcd60e51b815260040161097e906158fe565b6002600f556040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152611b5c6104cf36899003890189614f7a565b6080820181815260009182526009602090815260408084205460020b60a08601529151835260049052812081611b93898933610f18565b81526020019081526020016000209050600e60159054906101000a900460ff1615611bd05760405162461bcd60e51b815260040161097e90615a46565b8160a0015160020b600003611bf75760405162461bcd60e51b815260040161097e90615a66565b8560020b8760020b12611c1c5760405162461bcd60e51b815260040161097e90615a81565b60028101546001600160801b031615801590611c48575060028101546001600160801b03808716911610155b611c785760405162461bcd60e51b81526020600482015260016024820152603760f91b604482015260640161097e565b6000600a81611c8a60208c018c614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6020016020810190611cbf9190614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190611cf49190615941565b62ffffff16815260208082019290925260409081016000908120546001600160a01b031680825260068452828220835160c080820186528254825260018301548288015260028301548287015260038301546060830152600483015460808084019190915260059093015460a083015291890151845260079095529290912054918601919091529150885b8860020b8160020b12156120b9576080850180516000908152600160209081526040808320600286810b8086529184528285205460c08c0151965186529084528285209185529252909120546001600160801b039182169291611de391168b615cf3565b6001600160801b0316611df69190615bb4565b816001600160801b03161015611e3a5760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b604482015260640161097e565b836001600160a01b031663a34123a7838860a0015185611e5a9190615bc7565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526001600160801b038c16604482015260640160408051808303816000875af1158015611eaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed39190615cb6565b6020880152865260a086015160009081906001600160a01b03871690634f1eb3d89030908790611f039082615bc7565b6001600160801b03806040518663ffffffff1660e01b8152600401611f2c959493929190615d13565b60408051808303816000875af1158015611f4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6e9190615d50565b90925090506001600160801b03831615611fc257611fc28860800151858a60000151856001600160801b0316611fa49190615bec565b60208c0151611fbc906001600160801b038716615bec565b87614369565b8751604089018051611fd5908390615bb4565b9052506020880151606089018051611fee908390615bb4565b90525060808801516000908152600160209081526040808320600288900b8452909152812080548d929061202c9084906001600160801b0316615c49565b92506101000a8154816001600160801b0302191690836001600160801b031602179055508a8361205c9190615c49565b6001600160801b031660000361208f5760a088015160808901516000908152600b6020526040902061208f9186906143ef565b61209f84896080015188886141f2565b50505060a08601516120b2915082615bc7565b9050611d7f565b6120cb8b8b8b8860a0015160006137e3565b50506080850151600090815260046020526040812089916120ed8d8d33610f18565b815260208101919091526040016000908120600201805490919061211b9084906001600160801b0316615c49565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000856040015111156121675761216761215c60208d018d614c58565b338760400151613f56565b60608501511561218f5761218f61218460408d0160208e01614c58565b338760600151613f56565b604080516001600160801b038a16815260028c810b60208301528b900b81830152905133916001600160a01b038616917f49ae36094cb0a2af1fad270a75bb3188db1a6e13c5b0b9a230319221247fda9d9181900360600190a35050505060408101516060909101516001600f559097909650945050505050565b6060816001600160401b0381111561222457612224614cd4565b60405190808252806020026020018201604052801561225757816020015b60608152602001906001900390816122425790505b50905060005b828110156122f7576122c73085858481811061227b5761227b615c33565b905060200281019061228d9190615d7f565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061446c92505050565b8282815181106122d9576122d9615c33565b602002602001018190525080806122ef90615cda565b91505061225d565b505b92915050565b600d546201000090046001600160a01b0316331461232f5760405162461bcd60e51b815260040161097e90615a26565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600080600061235f84610f65565b6000908152600860205260409020600101546001600160801b0380821696600160801b90920416945092505050565b600080600f546001146123b35760405162461bcd60e51b815260040161097e906158fe565b6002600f556123c0614a3d565b6123d26104cf368a90038a018a614f7a565b808252600090815260096020908152604082205460020b81840152600a9082906123fe908c018c614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60200160208101906124339190614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60400160208101906124689190615941565b62ffffff16815260208082019290925260409081016000908120546001600160a01b03168082526006845290829020825160c0810184528154815260018201549481019490945260028101548484015260038101546060850152600481015460808501526005015460a084015290840191909152600e54909150600160a01b900460ff16156125095760405162461bcd60e51b815260040161097e90615a46565b816020015160020b6000036125305760405162461bcd60e51b815260040161097e90615a66565b8660020b8860020b126125555760405162461bcd60e51b815260040161097e90615a81565b6000866001600160801b0316116125925760405162461bcd60e51b81526020600482015260016024820152601b60fa1b604482015260640161097e565b60208201516125a19089615ddb565b60020b1580156125c0575060208201516125bb9088615ddb565b60020b155b6125f05760405162461bcd60e51b81526020600482015260016024820152601960fa1b604482015260640161097e565b875b8760020b8160020b121561295357816001600160a01b0316633c8a7d8d30838660200151856126219190615bc7565b604080513360208201528d91016040516020818303038152906040526040518663ffffffff1660e01b815260040161265d959493929190615c69565b60408051808303816000875af115801561267b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061269f9190615cb6565b6080850152606084018190526126b59086615bb4565b94508260800151846126c79190615bb4565b9350816001600160a01b031663514ea4bf30838660200151856126ea9190615bc7565b60405160609390931b6bffffffffffffffffffffffff1916602084015260e891821b6034840152901b6037820152603a01604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161274f91815260200190565b60a060405180830381865afa15801561276c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127909190615e0b565b6001600160801b0390811660c08901521660a08701819052151592508291506127bf9050575060008360c00151115b1561285357816001600160a01b0316634f1eb3d830838660200151856127e59190615bc7565b6001600160801b03806040518663ffffffff1660e01b815260040161280e959493929190615d13565b60408051808303816000875af115801561282c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128509190615d50565b50505b82516000908152600160209081526040808320600285900b84529091529020546001600160801b031660e08401819052156128aa576128a58360000151828560a001518660c001518760e00151614369565b6128cc565b60208084015184516000908152600b90925260409091206128cc9183906143ef565b82516000908152600160209081526040808320600285900b8452909152812080548992906129049084906001600160801b0316615cf3565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061293c8184600001518486604001516141f2565b50602083015161294c9082615bc7565b90506125f2565b6129658a8a8a866020015160006137e3565b50508251600090815260046020526040812088916129848c8c8b610f18565b81526020810191909152604001600090812060020180549091906129b29084906001600160801b0316615cf3565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550856001600160a01b0316826001600160a01b03167f7e1aa040ae22ae078b2e04d7e756a73671a8435cd8b72b0bd15f1cef372133d2898c8c604051612a3d939291906001600160801b03939093168352600291820b6020840152900b604082015260600190565b60405180910390a350506001600f555090969095509350505050565b600080856001600160a01b0316876001600160a01b031610612a7c578587612a7f565b86865b915091506000828287604051602001612a9a9392919061595c565b604051602081830303815290604052805190602001209050866001600160a01b0316886001600160a01b031603612b005760405162461bcd60e51b815260206004820152600a60248201526939b0b6b2903a37b5b2b760b11b604482015260640161097e565b6001600160a01b03831615801590612b2057506001600160a01b03821615155b612b5b5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b604482015260640161097e565b6001600160a01b038381166000908152600a602090815260408083208685168452825280832062ffffff8b1684529091529020541615612bcb5760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b604482015260640161097e565b6001600160a01b038281166000908152600a602090815260408083208785168452825280832062ffffff8b1684529091529020541615612c3b5760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b604482015260640161097e565b60008181526009602052604090205460020b15612c885760405162461bcd60e51b815260206004820152600b60248201526a7469636b2065786973747360a81b604482015260640161097e565b60008560020b138015612d075750886001600160a01b031663d0c93a7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf89190615e5f565b612d029086615ddb565b60020b155b612d3d5760405162461bcd60e51b815260206004820152600760248201526673706163696e6760c81b604482015260640161097e565b88600a6000856001600160a01b03166001600160a01b031681526020019081526020016000206000846001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555088600a6000846001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550846009600083815260200190815260200160002060006101000a81548162ffffff021916908360020b62ffffff1602179055506064600760008381526020019081526020016000208190555083600660008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155505060208201518160060155604082015181600701556060820151816008015560808201518160090160006101000a81548161ffff021916908361ffff16021790555060a082015181600a015560c082015181600b015590505088600c6000600d60009054906101000a900461ffff1661ffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600d600081819054906101000a900461ffff1680929190612fca90615e7c565b825461ffff9182166101009390930a928302919092021990911617905550600e54604051633eb4adab60e01b81526001600160a01b038581166004830152848116602483015290911690633eb4adab90604401600060405180830381600087803b15801561303757600080fd5b505af115801561304b573d6000803e3d6000fd5b505050600082815260086020526040908190207706f05b59d3b20000000000000000000000038d7ea4c6800081557706f05b59d3b20000000000000000000000b1a2bc2ec50000600190910155516332148f6760e01b8152606460048201526001600160a01b038b1691506332148f6790602401600060405180830381600087803b1580156130d957600080fd5b505af11580156130ed573d6000803e3d6000fd5b50506040805162ffffff8a168152600289900b60208201526001600160a01b03808716945087811693508d16917fc57f9b9fa0ab86d2c86cc2d78f2f5d7cb8320503c0203fa154565617b830d0f9910160405180910390a4505050505050505050565b600e5460009081906001600160a01b0316331461317f5760405162461bcd60e51b815260040161097e90615922565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526131bc6104cf36879003870187614f7a565b60808201819052600090815260096020908152604082205460020b835261328a918791600a91906131ef90840184614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906132249190614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860400160208101906132599190615941565b62ffffff168152602081019190915260400160002054608084015184516001600160a01b0390921691889190613a6a565b9093509150505b9250929050565b60006132a682840184614c58565b9050600080336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156132e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061330d9190615e9d565b336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561334b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061336f9190615e9d565b90925090508615613386576133868284338a614491565b85156133985761339881843389614491565b50505050505050565b600d546060906000906133ba9060019061ffff16615eba565b61ffff1690506000816001600160401b038111156133da576133da614cd4565b604051908082528060200260200182016040528015613403578160200160208202803683370190505b50905060005b828110156122f757600c6000613420836001615bb4565b815260200190815260200160002060009054906101000a90046001600160a01b031682828151811061345457613454615c33565b6001600160a01b03909216602092830291909101909101528061347681615cda565b915050613409565b604051637058199160e01b8152600b6004820152600286810b602483015285810b604483015284900b6064820152821515608482015260a4810187905260c48101829052600090819073__$93dfed57e8f421caed97f24c336a056d51$__9063705819919060e4016040805180830381865af4158015613502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135269190615ed5565b91509150965096945050505050565b600d546201000090046001600160a01b031633146135655760405162461bcd60e51b815260040161097e90615a26565b600e8054911515600160b01b0260ff60b01b19909216919091179055565b600080600061359184610f65565b6000908152600860205260409020546001600160801b0380821696600160801b90920416945092505050565b600e546001600160a01b031633146135e75760405162461bcd60e51b815260040161097e90615922565b60006135fb6104cf36879003870187614f7a565b90506000806000806000805b895181101561364d5789818151811061362257613622615c33565b602002602001015160200151826136399190615cf3565b91508061364581615cda565b915050613607565b5060005b89518110156137d6576001600088815260200190815260200160002060008b838151811061368157613681615c33565b60200260200101516000015160020b60020b815260200190815260200160002060009054906101000a90046001600160801b031694506136fb8a82815181106136cc576136cc615c33565b6020026020010151602001516001600160801b0316836001600160801b03168a6140569092919063ffffffff16565b925061373d838b838151811061371357613713615c33565b6020026020010151604001516137299190615bb4565b600160801b876001600160801b0316614056565b60008881526003602052604081208c51929650918c908490811061376357613763615c33565b60200260200101516000015160020b60020b8152602001908152602001600020955088156137aa578386600101600082825461379f9190615bb4565b909155506137c49050565b838660000160008282546137be9190615bb4565b90915550505b806137ce81615cda565b915050613651565b5050505050505050505050565b60008061384a6040518061012001604052806000815260200160008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b031681526020016000801916815260200160008152602001600081525090565b831561385b5761385b888888614514565b6000600a8161386d60208c018c614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60200160208101906138a29190614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60400160208101906138d79190615941565b62ffffff1681526020810191909152604001600020546001600160a01b0316905061390a6104cf368b90038b018b614f7a565b60c0830181905260009081526004602052604081208161392b8b8b33610f18565b8152602001908152602001600020905061394b8360c001518a8a8a611110565b6020850152808452815460028301546139769291909103906001600160801b0316600160801b614056565b6001600160801b0390811660808501526001820154602085015160028401546139a993929091039116600160801b614056565b6001600160801b0390811660a08501526080840151161515806139d9575060008360a001516001600160801b0316115b15613a2e5760808301516002820180546001600160801b03600160801b8083048216909401811690930290831617905560a08401516003830180548084169092019092166001600160801b0319919091161790555b8251815560209092015160018301555060028101546003909101546001600160801b03600160801b909204821693501690509550959350505050565b6000828152600760209081526040808320546001600160a01b038816845260068352818420825160c08101845281548152600182015494810194909452600281015492840192909252600382015460608401526004820154608084015260059091015460a083015282918290815b8851811015613eb5576001600089815260200190815260200160002060008a8381518110613b0857613b08615c33565b6020908102919091018101515160020b82528101919091526040016000205489516001600160801b039091169350899082908110613b4857613b48615c33565b6020026020010151602001516001600160801b031684600260008b815260200190815260200160002060008c8581518110613b8557613b85615c33565b6020908102919091018101515160020b825281019190915260400160002054613bb791906001600160801b0316615bb4565b613bc19190615bb4565b836001600160801b03161015613c055760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b604482015260640161097e565b888181518110613c1757613c17615c33565b602002602001015160200151600260008a815260200190815260200160002060008b8481518110613c4a57613c4a615c33565b6020908102919091018101515160020b825281019190915260400160009081208054909190613c839084906001600160801b0316615cf3565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000808b6001600160a01b031663a34123a78c8581518110613ccb57613ccb615c33565b6020026020010151600001518b8e8781518110613cea57613cea615c33565b602002602001015160000151613d009190615bc7565b8e8781518110613d1257613d12615c33565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af1158015613d78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d9c9190615cb6565b915091508b6001600160a01b0316634f1eb3d8308d8681518110613dc257613dc2615c33565b6020026020010151600001518c8f8881518110613de157613de1615c33565b602002602001015160000151613df79190615bc7565b86866040518663ffffffff1660e01b8152600401613e19959493929190615d13565b60408051808303816000875af1158015613e37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e5b9190615d50565b50613e6890508289615bb4565b9750613e748188615bb4565b9650613e9f8b8481518110613e8b57613e8b615c33565b6020026020010151600001518b8e876141f2565b5050508080613ead90615cda565b915050613ad8565b50600085118015613ec4575083155b80613ed8575084158015613ed85750600084115b613f0c5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b604482015260640161097e565b8415613f2957613f29613f2260208c018c614c58565b3387613f56565b8315613f4957613f49613f4260408c0160208d01614c58565b3386613f56565b5050509550959350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691613fb29190615f04565b6000604051808303816000865af19150503d8060008114613fef576040519150601f19603f3d011682016040523d82523d6000602084013e613ff4565b606091505b509150915081801561401e57508051158061401e57508080602001905181019061401e9190615f20565b61404f5760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640161097e565b5050505050565b600080806000198587098587029250828110838203039150508060000361408f576000841161408457600080fd5b508290049050610f5e565b8084116140c75760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b604482015260640161097e565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60008380156141d45760018416801561414f57859250614153565b8392505b508260011c8460011c94505b84156141ce578560801c1561417357600080fd5b8586028181018181101561418657600080fd5b85900496505060018516156141c35785830283878204146141ac5786156141ac57600080fd5b818101818110156141bc57600080fd5b8590049350505b8460011c945061415f565b506141ea565b8380156141e457600092506141e8565b8392505b505b509392505050565b61421660405180606001604052806000815260200160008152602001600081525090565b6001600160a01b0383166000908152600560209081526040808320600289810b808652918452828520898652600185528386208387528552838620548a87529185528386209286529190935292205482546001600160801b039283169290911690670de0b6b3a7640000906142f19061428f9083615bb4565b670de0b6b3a76400006112d78760020154426142ab9190615bec565b670de0b6b3a764000073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__6317b474bf8d8c600101546040518363ffffffff1660e01b815260040161127d929190615bff565b6142fb9190615bec565b83556001600160801b038116156143315761432c6001600160801b0382811690670de0b6b3a7640000908516614056565b614334565b60005b600184018190554260028501819055604080516060810182529554865260208601929092529084015250909695505050505050565b6000858152600360209081526040808320600288900b8452909152902061439e84600160801b6001600160801b038516614056565b8160000160008282546143b19190615bb4565b909155506143cf905083600160801b6001600160801b038516614056565b8160010160008282546143e29190615bb4565b9091555050505050505050565b8060020b8260020b8161440457614404615dc5565b0760020b1561441257600080fd5b6000806144408360020b8560020b8161442d5761442d615dc5565b0560020b600881901d9161010090910790565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b6060610f5e8383604051806060016040528060278152602001615f5160279139614847565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061404f5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161097e565b60006145286104cf36869003860186614f7a565b600081815260096020908152604082205492935060029290920b918591908190819081908190600a90829061455f908e018e614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c60200160208101906145949190614c58565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c60400160208101906145c99190615941565b62ffffff1681526020810191909152604001600020546001600160a01b031690505b8860020b8660020b12156137d657600088815260016020908152604080832060028a900b84529091529020546001600160801b0316156146b3576001600160a01b03811663a34123a78761463f8a82615bc7565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526000604482015260640160408051808303816000875af115801561468c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146b09190615cb6565b50505b6000806001600160a01b038316634f1eb3d8308a6146d18d82615bc7565b6001600160801b03806040518663ffffffff1660e01b81526004016146fa959493929190615d13565b60408051808303816000875af1158015614718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061473c9190615d50565b91509150600360008b815260200190815260200160002060008960020b60020b81526020019081526020016000209650600160008b815260200190815260200160002060008960020b60020b815260200190815260200160002060009054906101000a90046001600160801b031693506000846001600160801b03161115614833576147df826001600160801b0316600160801b866001600160801b0316614056565b8760000160008282546147f29190615bb4565b9250508190555061481a816001600160801b0316600160801b866001600160801b0316614056565b87600101600082825461482d9190615bb4565b90915550505b5061484090508787615bc7565b95506145eb565b6060600080856001600160a01b0316856040516148649190615f04565b600060405180830381855af49150503d806000811461489f576040519150601f19603f3d011682016040523d82523d6000602084013e6148a4565b606091505b50915091506148b5868383876148bf565b9695505050505050565b6060831561492e578251600003614927576001600160a01b0385163b6149275760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161097e565b5081611adf565b611adf83838151156149435781518083602001fd5b8060405162461bcd60e51b815260040161097e9190615f3d565b6040518061014001604052806000815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600060020b81526020016149b86149c5565b8152600060209091015290565b6040518060e00160405280614a096040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff16815260200160008152602001600081525090565b60405180610100016040528060008019168152602001600060020b8152602001614a966040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160006001600160801b031681525090565b600060608284031215614ada57600080fd5b50919050565b8060020b81146117c857600080fd5b60008060008060c08587031215614b0557600080fd5b614b0f8686614ac8565b93506060850135614b1f81614ae0565b92506080850135614b2f81614ae0565b915060a0850135614b3f81614ae0565b939692955090935050565b80151581146117c857600080fd5b600080600080600060e08688031215614b7057600080fd5b614b7a8787614ac8565b9450606086013593506080860135925060a0860135614b9881614b4a565b9497939650919460c0013592915050565b600081518084526020808501945080840160005b83811015614c19578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c09096019590820190600101614bbd565b509495945050505050565b8381528260208201526060604082015260006112e86060830184614ba9565b6001600160a01b03811681146117c857600080fd5b600060208284031215614c6a57600080fd5b8135610f5e81614c43565b803562ffffff81168114614c8857600080fd5b919050565b600080600060608486031215614ca257600080fd5b8335614cad81614c43565b92506020840135614cbd81614c43565b9150614ccb60408501614c75565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715614d0c57614d0c614cd4565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614d3a57614d3a614cd4565b604052919050565b600060608284031215614d5457600080fd5b604051606081018181106001600160401b0382111715614d7657614d76614cd4565b6040529050808235614d8781614c43565b81526020830135614d9781614c43565b6020820152614da860408401614c75565b60408201525092915050565b60008060808385031215614dc757600080fd5b614dd18484614d42565b946060939093013593505050565b600080600060a08486031215614df457600080fd5b614dfe8585614d42565b92506060840135614e0e81614ae0565b91506080840135614e1e81614ae0565b809150509250925092565b60008060408385031215614e3c57600080fd5b823591506020830135614e4e81614ae0565b809150509250929050565b600080600080600060e08688031215614e7157600080fd5b614e7b8787614d42565b976060870135975060808701359660a0810135965060c00135945092505050565b600060208284031215614eae57600080fd5b8135610f5e81614b4a565b600080600060608486031215614ece57600080fd5b8335614ed981614ae0565b92506020840135614ee981614ae0565b91506040840135614e1e81614c43565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b6101808101614f42828a614ef9565b8760c08301528660e08301528561010083015261ffff8516610120830152836101408301528261016083015298975050505050505050565b600060608284031215614f8c57600080fd5b610f5e8383614d42565b6000806000806000806101008789031215614fb057600080fd5b614fba8888614ac8565b9550606087013594506080870135935060a0870135614fd881614b4a565b925060c0870135915060e0870135614fef81614c43565b809150509295509295509295565b828152604060208201526000611adf6040830184614ba9565b6000806040838503121561502957600080fd5b50508035926020909101359150565b6000806000806080858703121561504e57600080fd5b84359350602085013561506081614ae0565b9250604085013561507081614ae0565b91506060850135614b3f81614ae0565b60006020828403121561509257600080fd5b5035919050565b600060c082840312156150ab57600080fd5b6150b3614cea565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015292915050565b6000806000610100848603121561510757600080fd5b833561511281614c43565b9250602084013561512281614ae0565b9150614ccb8560408601615099565b60006001600160401b0382111561514a5761514a614cd4565b5060051b60200190565b6001600160801b03811681146117c857600080fd5b600082601f83011261517a57600080fd5b8135602061518f61518a83615131565b614d12565b82815260c092830285018201928282019190878511156151ae57600080fd5b8387015b858110156152255781818a0312156151ca5760008081fd5b6151d2614cea565b81356151dd81614ae0565b8152818601356151ec81615154565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015284529284019281016151b2565b5090979650505050505050565b600080600060a0848603121561524757600080fd5b6152518585614ac8565b925060608401356001600160401b0381111561526c57600080fd5b61527886828701615169565b9250506080840135614e1e81614c43565b6000806040838503121561529c57600080fd5b82356152a781614c43565b91506020830135614e4e81614ae0565b61ffff811681146117c857600080fd5b600061018082840312156152da57600080fd5b60405160e081018181106001600160401b03821117156152fc576152fc614cd4565b60405290508061530c8484615099565b815260c0830135602082015260e08301356040820152610100830135606082015261012083013561533c816152b7565b8060808301525061014083013560a082015261016083013560c08201525092915050565b6000806101a0838503121561537457600080fd5b823561537f81614c43565b915061538e84602085016152c7565b90509250929050565b6000606082840312156153a957600080fd5b610f5e8383614ac8565b6001600160a01b0384168152600283900b602082015281516101c08201906153df906040840190614ef9565b60208301516101008301526040830151610120830152606083015161014083015261ffff60808401511661016083015260a083015161018083015260c08301516101a0830152949350505050565b6000806040838503121561544057600080fd5b8235915060208301358060010b8114614e4e57600080fd5b60008060008060c0858703121561546e57600080fd5b6154788686614ac8565b9350606085013561548881614ae0565b9250608085013561549881614ae0565b915060a0850135614b3f81614c43565b60008060008060c085870312156154be57600080fd5b6154c88686614ac8565b935060608501356154d881614ae0565b925060808501356154e881614ae0565b915060a0850135614b3f81615154565b6000806020838503121561550b57600080fd5b82356001600160401b038082111561552257600080fd5b818501915085601f83011261553657600080fd5b81358181111561554557600080fd5b8660208260051b850101111561555a57600080fd5b60209290920196919550909350505050565b60005b8381101561558757818101518382015260200161556f565b50506000910152565b600081518084526155a881602086016020860161556c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561561157603f198886030184526155ff858351615590565b945092850192908501906001016155e3565b5092979650505050505050565b600080600080600060e0868803121561563657600080fd5b6156408787614ac8565b9450606086013561565081614ae0565b9350608086013561566081614ae0565b925060a086013561567081615154565b915060c086013561568081614c43565b809150509295509295909350565b60008060008060008061022087890312156156a857600080fd5b86356156b381614c43565b955060208701356156c381614c43565b945060408701356156d381614c43565b93506156e160608801614c75565b925060808701356156f181614ae0565b91506157008860a089016152c7565b90509295509295509295565b6000806080838503121561571f57600080fd5b6157298484614ac8565b915060608301356001600160401b0381111561574457600080fd5b61575085828601615169565b9150509250929050565b6000806000806060858703121561577057600080fd5b843593506020850135925060408501356001600160401b038082111561579557600080fd5b818701915087601f8301126157a957600080fd5b8135818111156157b857600080fd5b8860208285010111156157ca57600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b8181101561581a5783516001600160a01b0316835292840192918401916001016157f5565b50909695505050505050565b60008060008060008060c0878903121561583f57600080fd5b86359550602087013561585181614ae0565b9450604087013561586181614ae0565b9350606087013561587181614ae0565b9250608087013561588181614b4a565b8092505060a087013590509295509295509295565b60008060008060c085870312156158ac57600080fd5b6158b68686614ac8565b935060608501356001600160401b038111156158d157600080fd5b6158dd87828801615169565b93505060808501356158ee81614b4a565b9396929550929360a00135925050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b602080825260059082015264042c2eae8d60db1b604082015260600190565b60006020828403121561595357600080fd5b610f5e82614c75565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b600080600080600080600060e0888a03121561599f57600080fd5b87516159aa81614c43565b60208901519097506159bb81614ae0565b60408901519096506159cc816152b7565b60608901519095506159dd816152b7565b60808901519094506159ee816152b7565b60a089015190935060ff81168114615a0557600080fd5b60c0890151909250615a1681614b4a565b8091505092959891949750929550565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b6020808252600690820152651c185d5cd95960d21b604082015260600190565b6020808252600190820152600760fc1b604082015260600190565b6020808252600190820152606960f81b604082015260600190565b60008060006060808587031215615ab257600080fd5b8451935060208086015193506040808701516001600160401b03811115615ad857600080fd5b8701601f81018913615ae957600080fd5b8051615af761518a82615131565b81815260c0918202830185019185820191908c841115615b1657600080fd5b938601935b83851015615b8c5780858e031215615b335760008081fd5b615b3b614cea565b8551615b4681614ae0565b815285880151615b5581615154565b81890152858701518782015288860151898201526080808701519082015260a0808701519082015283529384019391860191615b1b565b50809750505050505050509250925092565b634e487b7160e01b600052601160045260246000fd5b808201808211156122f9576122f9615b9e565b600281810b9083900b01627fffff8113627fffff19821217156122f9576122f9615b9e565b818103818111156122f9576122f9615b9e565b60e08101615c0d8285614ef9565b8260c08301529392505050565b600060208284031215615c2c57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6001600160801b038281168282160390808211156122f7576122f7615b9e565b60018060a01b03861681528460020b60208201528360020b60408201526001600160801b038316606082015260a060808201526000615cab60a0830184615590565b979650505050505050565b60008060408385031215615cc957600080fd5b505080516020909101519092909150565b600060018201615cec57615cec615b9e565b5060010190565b6001600160801b038181168382160190808211156122f7576122f7615b9e565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b60008060408385031215615d6357600080fd5b8251615d6e81615154565b6020840151909250614e4e81615154565b6000808335601e19843603018112615d9657600080fd5b8301803591506001600160401b03821115615db057600080fd5b60200191503681900382131561329157600080fd5b634e487b7160e01b600052601260045260246000fd5b60008260020b80615dfc57634e487b7160e01b600052601260045260246000fd5b808360020b0791505092915050565b600080600080600060a08688031215615e2357600080fd5b8551615e2e81615154565b8095505060208601519350604086015192506060860151615e4e81615154565b608087015190925061568081615154565b600060208284031215615e7157600080fd5b8151610f5e81614ae0565b600061ffff808316818103615e9357615e93615b9e565b6001019392505050565b600060208284031215615eaf57600080fd5b8151610f5e81614c43565b61ffff8281168282160390808211156122f7576122f7615b9e565b60008060408385031215615ee857600080fd5b8251615ef381614ae0565b6020840151909250614e4e81614b4a565b60008251615f1681846020870161556c565b9190910192915050565b600060208284031215615f3257600080fd5b8151610f5e81614b4a565b602081526000610f5e602083018461559056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122065e8aae3b6b445f35919a7fcdd8a648702b57c39a16e4a59f3c2c5fcd35b4d9e64736f6c63430008120033";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
}
