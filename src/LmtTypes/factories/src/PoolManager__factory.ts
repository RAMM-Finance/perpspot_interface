/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium1",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "REPAY_THRESHOLD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "collectedFees0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "collectedFees1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeParams",
    outputs: [
      {
        internalType: "uint128",
        name: "openFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "feeToPool",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFeeToPool",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "startingTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "finishTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "binSize",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "lte",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "findNearestInitializedBin",
    outputs: [
      {
        internalType: "int24",
        name: "nextTick",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getFeeParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getHashedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getHashedPositionKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedKey",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getProfitFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "minLiquidities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "collectPaused",
        type: "bool",
      },
    ],
    name: "setCollectPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
      {
        internalType: "address",
        name: "bf",
        type: "address",
      },
      {
        internalType: "address",
        name: "of_",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapFactory",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "minLiquidity",
        type: "uint256",
      },
    ],
    name: "setMinLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "providePaused",
        type: "bool",
      },
    ],
    name: "setProvidePaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "withdrawPaused",
        type: "bool",
      },
    ],
    name: "setWithdrawPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFeeToPool",
        type: "uint256",
      },
    ],
    name: "updateFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf916110c4918e91906004016159a3565b602060405180830381865af41580156110e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110591906159be565b61111790670de0b6b3a7640000615958565b9190613fb1565b919061406f565b61112f9190615990565b95945050505050565b600e5460009081906001600160a01b031633146111675760405162461bcd60e51b81526004016109899061586a565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526000600a816111a460208a018a614bb6565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906111d99190614bb6565b6001600160a01b03166001600160a01b03168152602001908152602001600020600088604001602081019061120e9190615889565b62ffffff1681526020810191909152604001600020546001600160a01b031690506112416104cf36899003890189614ed8565b808352600090815260096020908152604080832054600290810b838701526001600160a01b038516845260068352818420825160c08101845281548152600182015494810194909452908101549183019190915260038101546060830152600481015460808301526005015460a0820152905b87518110156114d7578781815181106112cf576112cf6159d7565b602002602001015160200151600260008660000151815260200190815260200160002060008a8481518110611306576113066159d7565b6020908102919091018101515160020b82528101919091526040016000908120805490919061133f9084906001600160801b03166159ed565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550826001600160a01b0316633c8a7d8d308a8481518110611385576113856159d7565b60200260200101516000015187602001518c86815181106113a8576113a86159d7565b6020026020010151600001516113be919061596b565b8c86815181106113d0576113d06159d7565b6020026020010151602001518c6040516020016113fc91906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161142b959493929190615a0d565b60408051808303816000875af1158015611449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146d9190615a5a565b6080860152606085018190526114839087615958565b95508360800151856114959190615958565b94506114c48882815181106114ac576114ac6159d7565b6020026020010151600001518560000151858561414d565b50806114cf81615a7e565b9150506112b4565b50505050935093915050565b600d546201000090046001600160a01b031633146115135760405162461bcd60e51b8152600401610989906158cc565b6001600160a01b03919091166000908152600660208181526040928390208451805182558083015160018301558085015160028301556060808201516003840155608080830151600485015560a0928301516005850155938701519483019490945593850151600782015591840151600883015583015160098201805461ffff191661ffff90921691909117905590820151600a82015560c090910151600b90910155565b6000806115c3614920565b600a60006115d46020870187614bb6565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160208101906116099190614bb6565b6001600160a01b03166001600160a01b03168152602001908152602001600020600085604001602081019061163e9190615889565b62ffffff16815260208101919091526040016000908120546001600160a01b031693506009906116766104cf36889003880188614ed8565b815260208082019290925260409081016000908120546001600160a01b038716825260068085529183902083516101a081018552815460e082019081526001830154610100830152600283810154610120840152600384015461014084015260048401546101608401526005840154610180840152908252938201549581019590955260078101549385019390935260088301546060850152600983015461ffff166080850152600a83015460a0850152600b9092015460c08401529496940b945092915050565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526004600061177f6104cf36899003890189614ed8565b8152602001908152602001600020600061179a868686610eca565b81526020808201929092526040908101600020815160a0810183528154815260018201549381019390935260028101546001600160801b0380821693850193909352600160801b9004821660608401526003015416608082015290505b949350505050565b6000806000546001146118245760405162461bcd60e51b815260040161098990615846565b600260009081556040805160e08101825282815260208101839052908101829052606081018290526080810182905260a0810182905260c08101919091526118746104cf36899003890189614ed8565b6080820181815260009182526009602090815260408084205460020b60a086015291518352600490528120816118ab898933610eca565b81526020019081526020016000209050600f60159054906101000a900460ff16156118e85760405162461bcd60e51b8152600401610989906158ec565b8160a0015160020b60000361190f5760405162461bcd60e51b81526004016109899061590c565b8560020b8760020b126119345760405162461bcd60e51b815260040161098990615927565b60028101546001600160801b031615801590611960575060028101546001600160801b03808716911610155b6119905760405162461bcd60e51b81526020600482015260016024820152603760f91b6044820152606401610989565b6000600a816119a260208c018c614bb6565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60200160208101906119d79190614bb6565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190611a0c9190615889565b62ffffff16815260208082019290925260409081016000908120546001600160a01b031680825260068452828220835160c080820186528254825260018301548288015260028301548287015260038301546060830152600483015460808084019190915260059093015460a083015291890151845260079095529290912054918601919091529150885b8860020b8160020b1215611dd1576080850180516000908152600160209081526040808320600286810b8086529184528285205460c08c0151965186529084528285209185529252909120546001600160801b039182169291611afb91168b615a97565b6001600160801b0316611b0e9190615958565b816001600160801b03161015611b525760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b6044820152606401610989565b836001600160a01b031663a34123a7838860a0015185611b72919061596b565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526001600160801b038c16604482015260640160408051808303816000875af1158015611bc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611beb9190615a5a565b6020880152865260a086015160009081906001600160a01b03871690634f1eb3d89030908790611c1b908261596b565b6001600160801b03806040518663ffffffff1660e01b8152600401611c44959493929190615ab7565b60408051808303816000875af1158015611c62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c869190615af4565b90925090506001600160801b03831615611cda57611cda8860800151858a60000151856001600160801b0316611cbc9190615990565b60208c0151611cd4906001600160801b038716615990565b876142c4565b8751604089018051611ced908390615958565b9052506020880151606089018051611d06908390615958565b90525060808801516000908152600160209081526040808320600288900b8452909152812080548d9290611d449084906001600160801b03166159ed565b92506101000a8154816001600160801b0302191690836001600160801b031602179055508a83611d7491906159ed565b6001600160801b0316600003611da75760a088015160808901516000908152600b60205260409020611da791869061434a565b611db7848960800151888861414d565b50505060a0860151611dca91508261596b565b9050611a97565b611de38b8b8b8860a00151600061373e565b5050608085015160009081526004602052604081208991611e058d8d33610eca565b8152602081019190915260400160009081206002018054909190611e339084906001600160801b03166159ed565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600085604001511115611e7f57611e7f611e7460208d018d614bb6565b338760400151613eb1565b606085015115611ea757611ea7611e9c60408d0160208e01614bb6565b338760600151613eb1565b604080516001600160801b038a16815260028c810b60208301528b900b81830152905133916001600160a01b038616917f49ae36094cb0a2af1fad270a75bb3188db1a6e13c5b0b9a230319221247fda9d9181900360600190a350505050604081015160609091015160016000559097909650945050505050565b600d546201000090046001600160a01b03163314611f525760405162461bcd60e51b8152600401610989906158cc565b600f80546001600160a01b039283166001600160a01b031991821617909155600e8054959092169416939093179092555050565b6060816001600160401b03811115611fa057611fa0614c32565b604051908082528060200260200182016040528015611fd357816020015b6060815260200190600190039081611fbe5790505b50905060005b828110156120735761204330858584818110611ff757611ff76159d7565b90506020028101906120099190615b23565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506143c792505050565b828281518110612055576120556159d7565b6020026020010181905250808061206b90615a7e565b915050611fd9565b505b92915050565b600080600061208984610f17565b6000908152600860205260409020600101546001600160801b0380821696600160801b90920416945092505050565b6000806000546001146120dd5760405162461bcd60e51b815260040161098990615846565b60026000556120ea614998565b6120fc6104cf368a90038a018a614ed8565b808252600090815260096020908152604082205460020b81840152600a908290612128908c018c614bb6565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a602001602081019061215d9190614bb6565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60400160208101906121929190615889565b62ffffff16815260208082019290925260409081016000908120546001600160a01b03168082526006845290829020825160c0810184528154815260018201549481019490945260028101548484015260038101546060850152600481015460808501526005015460a084015290840191909152600f54909150600160a01b900460ff16156122335760405162461bcd60e51b8152600401610989906158ec565b816020015160020b60000361225a5760405162461bcd60e51b81526004016109899061590c565b8660020b8860020b1261227f5760405162461bcd60e51b815260040161098990615927565b6000866001600160801b0316116122bc5760405162461bcd60e51b81526020600482015260016024820152601b60fa1b6044820152606401610989565b60208201516122cb9089615b7f565b60020b1580156122ea575060208201516122e59088615b7f565b60020b155b61231a5760405162461bcd60e51b81526020600482015260016024820152601960fa1b6044820152606401610989565b875b8760020b8160020b121561267d57816001600160a01b0316633c8a7d8d308386602001518561234b919061596b565b604080513360208201528d91016040516020818303038152906040526040518663ffffffff1660e01b8152600401612387959493929190615a0d565b60408051808303816000875af11580156123a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c99190615a5a565b6080850152606084018190526123df9086615958565b94508260800151846123f19190615958565b9350816001600160a01b031663514ea4bf3083866020015185612414919061596b565b60405160609390931b6bffffffffffffffffffffffff1916602084015260e891821b6034840152901b6037820152603a01604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161247991815260200190565b60a060405180830381865afa158015612496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ba9190615baf565b6001600160801b0390811660c08901521660a08701819052151592508291506124e99050575060008360c00151115b1561257d57816001600160a01b0316634f1eb3d8308386602001518561250f919061596b565b6001600160801b03806040518663ffffffff1660e01b8152600401612538959493929190615ab7565b60408051808303816000875af1158015612556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061257a9190615af4565b50505b82516000908152600160209081526040808320600285900b84529091529020546001600160801b031660e08401819052156125d4576125cf8360000151828560a001518660c001518760e001516142c4565b6125f6565b60208084015184516000908152600b90925260409091206125f691839061434a565b82516000908152600160209081526040808320600285900b84529091528120805489929061262e9084906001600160801b0316615a97565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061266681846000015184866040015161414d565b506020830151612676908261596b565b905061231c565b61268f8a8a8a8660200151600061373e565b50508251600090815260046020526040812088916126ae8c8c8b610eca565b81526020810191909152604001600090812060020180549091906126dc9084906001600160801b0316615a97565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550856001600160a01b0316826001600160a01b03167f7e1aa040ae22ae078b2e04d7e756a73671a8435cd8b72b0bd15f1cef372133d2898c8c604051612767939291906001600160801b03939093168352600291820b6020840152900b604082015260600190565b60405180910390a3505060016000555090969095509350505050565b600080856001600160a01b0316876001600160a01b0316106127a65785876127a9565b86865b9150915060008282876040516020016127c4939291906158a4565b604051602081830303815290604052805190602001209050866001600160a01b0316886001600160a01b03160361282a5760405162461bcd60e51b815260206004820152600a60248201526939b0b6b2903a37b5b2b760b11b6044820152606401610989565b6001600160a01b0383161580159061284a57506001600160a01b03821615155b6128855760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610989565b6001600160a01b038381166000908152600a602090815260408083208685168452825280832062ffffff8b16845290915290205416156128f55760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b6044820152606401610989565b6001600160a01b038281166000908152600a602090815260408083208785168452825280832062ffffff8b16845290915290205416156129655760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b6044820152606401610989565b60008181526009602052604090205460020b156129b25760405162461bcd60e51b815260206004820152600b60248201526a7469636b2065786973747360a81b6044820152606401610989565b60008560020b138015612a315750886001600160a01b031663d0c93a7c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156129fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a229190615c03565b612a2c9086615b7f565b60020b155b612a675760405162461bcd60e51b815260206004820152600760248201526673706163696e6760c81b6044820152606401610989565b88600a6000856001600160a01b03166001600160a01b031681526020019081526020016000206000846001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555088600a6000846001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550846009600083815260200190815260200160002060006101000a81548162ffffff021916908360020b62ffffff1602179055506064600760008381526020019081526020016000208190555083600660008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155505060208201518160060155604082015181600701556060820151816008015560808201518160090160006101000a81548161ffff021916908361ffff16021790555060a082015181600a015560c082015181600b015590505088600c6000600d60009054906101000a900461ffff1661ffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600d600081819054906101000a900461ffff1680929190612cf490615c20565b825461ffff9182166101009390930a928302919092021990911617905550600e54604051633eb4adab60e01b81526001600160a01b038581166004830152848116602483015290911690633eb4adab90604401600060405180830381600087803b158015612d6157600080fd5b505af1158015612d75573d6000803e3d6000fd5b505050600082815260086020526040908190207706f05b59d3b20000000000000000000000038d7ea4c6800081557706f05b59d3b20000000000000000000000b1a2bc2ec50000600190910155516332148f6760e01b8152606460048201526001600160a01b038b1691506332148f6790602401600060405180830381600087803b158015612e0357600080fd5b505af1158015612e17573d6000803e3d6000fd5b50505050505050505050505050565b600e5460009081906001600160a01b03163314612e555760405162461bcd60e51b81526004016109899061586a565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152612e926104cf36879003870187614ed8565b60808201819052600090815260096020908152604082205460020b8352612f60918791600a9190612ec590840184614bb6565b6001600160a01b03166001600160a01b031681526020019081526020016000206000886020016020810190612efa9190614bb6565b6001600160a01b03166001600160a01b031681526020019081526020016000206000886040016020810190612f2f9190615889565b62ffffff168152602081019190915260400160002054608084015184516001600160a01b03909216918891906139c5565b9093509150505b9250929050565b60006060612f7a6148b8565b612f8c6104cf368a90038a018a614ed8565b6040820152600a6000612fa260208b018b614bb6565b6001600160a01b03166001600160a01b031681526020019081526020016000206000896020016020810190612fd79190614bb6565b6001600160a01b03166001600160a01b03168152602001908152602001600020600089604001602081019061300c9190615889565b62ffffff1662ffffff16815260200190815260200160002060009054906101000a90046001600160a01b03166001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015613075573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130999190615c41565b5050506001600160a01b0390931660208501819052604080860151905163225e631360e21b8152600b60048201528a15156024820152604481018c9052606481018a9052608481018d905260a481019290925260c482015273__$93dfed57e8f421caed97f24c336a056d51$__93506389798c4c925060e4019050600060405180830381865af4158015613131573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526131599190810190615ce3565b608084019190915260608301829052925086146131a25760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610989565b846131c957606081015160808201516131c491670de0b6b3a76400009061406f565b6131e6565b608081015160608201516131e691670de0b6b3a76400009061406f565b9250509550959350505050565b600061320182840184614bb6565b9050600080336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132689190615de5565b336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156132a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132ca9190615de5565b909250905086156132e1576132e18284338a6143ec565b85156132f3576132f3818433896143ec565b50505050505050565b600d546060906000906133159060019061ffff16615e02565b61ffff1690506000816001600160401b0381111561333557613335614c32565b60405190808252806020026020018201604052801561335e578160200160208202803683370190505b50905060005b8281101561207357600c600061337b836001615958565b815260200190815260200160002060009054906101000a90046001600160a01b03168282815181106133af576133af6159d7565b6001600160a01b0390921660209283029190910190910152806133d181615a7e565b915050613364565b604051637058199160e01b8152600b6004820152600286810b602483015285810b604483015284900b6064820152821515608482015260a4810187905260c48101829052600090819073__$93dfed57e8f421caed97f24c336a056d51$__9063705819919060e4016040805180830381865af415801561345d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134819190615e1d565b91509150965096945050505050565b600d546201000090046001600160a01b031633146134c05760405162461bcd60e51b8152600401610989906158cc565b600f8054911515600160b01b0260ff60b01b19909216919091179055565b60008060006134ec84610f17565b6000908152600860205260409020546001600160801b0380821696600160801b90920416945092505050565b600e546001600160a01b031633146135425760405162461bcd60e51b81526004016109899061586a565b60006135566104cf36879003870187614ed8565b90506000806000806000805b89518110156135a85789818151811061357d5761357d6159d7565b602002602001015160200151826135949190615a97565b9150806135a081615a7e565b915050613562565b5060005b8951811015613731576001600088815260200190815260200160002060008b83815181106135dc576135dc6159d7565b60200260200101516000015160020b60020b815260200190815260200160002060009054906101000a90046001600160801b031694506136568a8281518110613627576136276159d7565b6020026020010151602001516001600160801b0316836001600160801b03168a61406f9092919063ffffffff16565b9250613698838b838151811061366e5761366e6159d7565b6020026020010151604001516136849190615958565b600160801b876001600160801b031661406f565b60008881526003602052604081208c51929650918c90849081106136be576136be6159d7565b60200260200101516000015160020b60020b81526020019081526020016000209550881561370557838660010160008282546136fa9190615958565b9091555061371f9050565b838660000160008282546137199190615958565b90915550505b8061372981615a7e565b9150506135ac565b5050505050505050505050565b6000806137a56040518061012001604052806000815260200160008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b031681526020016000801916815260200160008152602001600081525090565b83156137b6576137b688888861446f565b6000600a816137c860208c018c614bb6565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60200160208101906137fd9190614bb6565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60400160208101906138329190615889565b62ffffff1681526020810191909152604001600020546001600160a01b031690506138656104cf368b90038b018b614ed8565b60c083018190526000908152600460205260408120816138868b8b33610eca565b815260200190815260200160002090506138a68360c001518a8a8a610f57565b6020850152808452815460028301546138d19291909103906001600160801b0316600160801b61406f565b6001600160801b03908116608085015260018201546020850151600284015461390493929091039116600160801b61406f565b6001600160801b0390811660a0850152608084015116151580613934575060008360a001516001600160801b0316115b156139895760808301516002820180546001600160801b03600160801b8083048216909401811690930290831617905560a08401516003830180548084169092019092166001600160801b0319919091161790555b8251815560209092015160018301555060028101546003909101546001600160801b03600160801b909204821693501690509550959350505050565b6000828152600760209081526040808320546001600160a01b038816845260068352818420825160c08101845281548152600182015494810194909452600281015492840192909252600382015460608401526004820154608084015260059091015460a083015282918290815b8851811015613e10576001600089815260200190815260200160002060008a8381518110613a6357613a636159d7565b6020908102919091018101515160020b82528101919091526040016000205489516001600160801b039091169350899082908110613aa357613aa36159d7565b6020026020010151602001516001600160801b031684600260008b815260200190815260200160002060008c8581518110613ae057613ae06159d7565b6020908102919091018101515160020b825281019190915260400160002054613b1291906001600160801b0316615958565b613b1c9190615958565b836001600160801b03161015613b605760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b6044820152606401610989565b888181518110613b7257613b726159d7565b602002602001015160200151600260008a815260200190815260200160002060008b8481518110613ba557613ba56159d7565b6020908102919091018101515160020b825281019190915260400160009081208054909190613bde9084906001600160801b0316615a97565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000808b6001600160a01b031663a34123a78c8581518110613c2657613c266159d7565b6020026020010151600001518b8e8781518110613c4557613c456159d7565b602002602001015160000151613c5b919061596b565b8e8781518110613c6d57613c6d6159d7565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af1158015613cd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cf79190615a5a565b915091508b6001600160a01b0316634f1eb3d8308d8681518110613d1d57613d1d6159d7565b6020026020010151600001518c8f8881518110613d3c57613d3c6159d7565b602002602001015160000151613d52919061596b565b86866040518663ffffffff1660e01b8152600401613d74959493929190615ab7565b60408051808303816000875af1158015613d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613db69190615af4565b50613dc390508289615958565b9750613dcf8188615958565b9650613dfa8b8481518110613de657613de66159d7565b6020026020010151600001518b8e8761414d565b5050508080613e0890615a7e565b915050613a33565b50600085118015613e1f575083155b80613e33575084158015613e335750600084115b613e675760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b6044820152606401610989565b8415613e8457613e84613e7d60208c018c614bb6565b3387613eb1565b8315613ea457613ea4613e9d60408c0160208d01614bb6565b3386613eb1565b5050509550959350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691613f0d9190615e4c565b6000604051808303816000865af19150503d8060008114613f4a576040519150601f19603f3d011682016040523d82523d6000602084013e613f4f565b606091505b5091509150818015613f79575080511580613f79575080806020019051810190613f799190615e68565b613faa5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610989565b5050505050565b600083801561405157600184168015613fcc57859250613fd0565b8392505b508260011c8460011c94505b841561404b578560801c15613ff057600080fd5b8586028181018181101561400357600080fd5b859004965050600185161561404057858302838782041461402957861561402957600080fd5b8181018181101561403957600080fd5b8590049350505b8460011c9450613fdc565b50614067565b8380156140615760009250614065565b8392505b505b509392505050565b60008080600019858709858702925082811083820303915050806000036140a8576000841161409d57600080fd5b508290049050610f10565b8084116140e05760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401610989565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b61417160405180606001604052806000815260200160008152602001600081525090565b6001600160a01b0383166000908152600560209081526040808320600289810b808652918452828520898652600185528386208387528552838620548a87529185528386209286529190935292205482546001600160801b039283169290911690670de0b6b3a76400009061424c906141ea9083615958565b670de0b6b3a764000061111e8760020154426142069190615990565b670de0b6b3a764000073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
}
