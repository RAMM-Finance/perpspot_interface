/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium1",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortChange0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortChange1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "REPAY_THRESHOLD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "premiumOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "premiumOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeParams",
    outputs: [
      {
        internalType: "uint128",
        name: "openFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "feeToPool",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFeeToPool",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint160",
        name: "sqrtStartingPriceX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "startingTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "finishTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "binSize",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "lte",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "findNearestInitializedBin",
    outputs: [
      {
        internalType: "int24",
        name: "nextTick",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getFeeParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getHashedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getHashedPositionKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedKey",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getPremiumsCollected",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "premium0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "premium1",
            type: "uint128",
          },
        ],
        internalType: "struct PremiumsCollected",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getProfitFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "minLiquidities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumInBorrowedAsset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumInPairAsset",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "collectPaused",
        type: "bool",
      },
    ],
    name: "setCollectPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
      {
        internalType: "address",
        name: "bf",
        type: "address",
      },
      {
        internalType: "address",
        name: "of_",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapFactory",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "minLiquidity",
        type: "uint256",
      },
    ],
    name: "setMinLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "providePaused",
        type: "bool",
      },
    ],
    name: "setProvidePaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "withdrawPaused",
        type: "bool",
      },
    ],
    name: "setWithdrawPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFeeToPool",
        type: "uint256",
      },
    ],
    name: "updateFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016000819055600e805461ffff1916909117905534801561002557600080fd5b50600e805462010000600160b01b031916336201000002179055615fc3806200004f6000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80638bdb2afa11610151578063b75323a7116100c3578063d578395311610087578063d5783953146108a7578063d7a3dca0146108d4578063d7d3ed6a14610933578063da69b0b314610946578063dc724d3a1461097a578063f2d490a51461098d57600080fd5b8063b75323a7146107df578063bbd95472146107f2578063c6c2c2ca14610805578063d34879971461087f578063d41dcbea1461089257600080fd5b8063a841fdd811610115578063a841fdd81461072c578063a882c12d1461074c578063abf978e41461075f578063ac00b80914610772578063ac9650d814610785578063b3a4016e146107a557600080fd5b80638bdb2afa146106545780638da5cb5b1461066757806395250923146106805780639744a42d146106a2578063a8404655146106cd57600080fd5b806334f3b11a116101ea57806348222442116101ae57806348222442146105035780635955cad3146105165780635ea33ec5146105a357806365197688146105b65780636cb42a2f146105ec5780636fc280e1146105ff57600080fd5b806334f3b11a1461041d578063377c3e101461043057806337d1513914610443578063406a3d021461045657806345e61a4d1461046957600080fd5b80631698ee821161023c5780631698ee821461031357806318cdea9d1461036557806319fa10331461037857806319fda277146103ab5780632398c1a9146103f757806325f149ce1461040a57600080fd5b80630229fb601461027957806304ad52fc146102a65780630ea50f50146102c75780630f429931146102eb57806313af403514610300575b600080fd5b61028c610287366004614c0a565b6109a0565b604080519283526020830191909152015b60405180910390f35b6102b96102b4366004614cd4565b6109f1565b60405190815260200161029d565b6102da6102d5366004614d42565b610b2e565b60405161029d959493929190614d93565b6102fe6102f9366004614ee4565b611142565b005b6102fe61030e366004614f62565b6115e6565b61034d610321366004614f7f565b600b6020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b03909116815260200161029d565b6102fe610373366004614fbd565b611640565b61038b610386366004614fe8565b6116bf565b604080516001600160801b0393841681529290911660208301520161029d565b6103df6103b9366004615032565b60026020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b03909116815260200161029d565b6102fe610405366004615062565b611c70565b6102fe6104183660046150a5565b611ce9565b6102fe61042b3660046150c2565b611d37565b6102fe61043e3660046151fa565b611e03565b6102fe6104513660046150a5565b612174565b6102b9610464366004615277565b6121c2565b6104f0610477366004614f62565b600760208181526000928352604092839020835160a081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301546080820152600583015460068401549284015460088501546009860154600a909601549395929493919261ffff9091169187565b60405161029d97969594939291906152b7565b6102b9610511366004615328565b61220e565b61056d610524366004615344565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a00161029d565b61028c6105b1366004615366565b61224e565b6105d96105c43660046153ae565b600a6020526000908152604090205460020b81565b60405160029190910b815260200161029d565b61028c6105fa3660046153c7565b612316565b61063961060d36600461541e565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161029d565b60105461034d906001600160a01b031681565b600e5461034d906201000090046001600160a01b031681565b61069361068e36600461544c565b6126c6565b60405161029d93929190615468565b6102b96106b036600461550c565b600c60209081526000928352604080842090915290825290205481565b6106e06106db366004615537565b612843565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a00161029d565b6102b961073a3660046153ae565b60086020526000908152604090205481565b600f5461034d906001600160a01b031681565b61028c61076d366004615587565b612904565b6102fe6107803660046155d7565b612feb565b610798610793366004615628565b61304f565b60405161029d91906156ec565b6107b86107b3366004615328565b613144565b6040805182516001600160801b03908116825260209384015116928101929092520161029d565b61028c6107ed366004615328565b6131a4565b61028c61080036600461574e565b6131e1565b61084c6108133660046153ae565b600960205260009081526040902080546001909101546001600160801b0380831692600160801b90819004821692808316929190041684565b604080516001600160801b039586168152938516602085015291841691830191909152909116606082015260800161029d565b6102fe61088d36600461579c565b613329565b61089a613435565b60405161029d919061581b565b6108ba6108b5366004615868565b613512565b6040805160029390930b835290151560208301520161029d565b6109136108e2366004615032565b6003602081815260009384526040808520909152918352912080546001820154600283015492909301549092919084565b60408051948552602085019390935291830152606082015260800161029d565b61028c6109413660046158d8565b6135c9565b6103df610954366004615032565b60016020908152600092835260408084209091529082529020546001600160801b031681565b6102fe6109883660046150a5565b613b2c565b61028c61099b366004615328565b613b7a565b6000806000546001146109ce5760405162461bcd60e51b81526004016109c59061595a565b60405180910390fd5b60026000556109df86868686613bb4565b60016000559097909650945050505050565b6001600160a01b0383166000908152600660209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290670de0b6b3a764000090610b1990610a559083615994565b670de0b6b3a7640000610b12856040015142610a7191906159a7565b60208701516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91610ab8918e91906004016159ba565b602060405180830381865af4158015610ad5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af99190615a00565b610b0b90670de0b6b3a7640000615994565b9190613e7c565b9190613f3a565b610b2391906159a7565b9150505b9392505050565b600f546000908190819081906060906001600160a01b03163314610b645760405162461bcd60e51b81526004016109c590615a19565b610b6c6149bc565b610b7960208c018c614f62565b610b8960408d0160208e01614f62565b610b9960608e0160408f01615a38565b604051602001610bab93929190615a53565b60408051601f19818403018152918152815160209283012090830152600b90600090610bd9908e018e614f62565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6020016020810190610c0e9190614f62565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6040016020810190610c439190615a38565b62ffffff16815260208082019290925260409081016000908120546001600160a01b03908116610120808701918252868501518452600a80875285852054600290810b60e0808b01919091528451861687526007808a5296889020885161018081018a5281548184019081526001830154610100838101919091529483015496820196909652600382015461014082015260048083015461016083015295815260058201549a81019a909a5260068101548a8a01529687015460608a0152600887015461ffff1660808a0152600987015460a08a0152959091015460c0880152870195909552518351633850c7bd60e01b81529351911693633850c7bd93808201939291908290030181865afa158015610d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d859190615a7b565b505050506001600160a01b03929092166020840152505060405163e5561d0d60e01b81528815156004820152602481018a90526044810188905273__$93dfed57e8f421caed97f24c336a056d51$__9063e5561d0d90606401602060405180830381865af4158015610dfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1f9190615b1d565b602082015160405163332b1def60e21b81528a15156004820152602481018c9052604481018d90526001600160a01b03909116606482015290965060009073__$93dfed57e8f421caed97f24c336a056d51$__9063ccac77bc90608401602060405180830381865af4158015610e99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebd9190615b1d565b905088610edf57806001600160a01b0316876001600160a01b03161115610ef6565b806001600160a01b0316876001600160a01b031610155b610f3b5760405162461bcd60e51b8152602060048201526016602482015275696e76616c6964207374617274696e6720707269636560501b60448201526064016109c5565b73__$93dfed57e8f421caed97f24c336a056d51$$93dfed57e8f421caed97f24c336a056d51$__9063705819919060e4016040805180830381865af4158015613596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135ba9190615ea5565b91509150965096945050505050565b6000806000546001146135ee5760405162461bcd60e51b81526004016109c59061595a565b60026000556135fb614a95565b61360d610511368b90038b018b615328565b8082526000908152600a6020908152604082205460020b81840152600b908290613639908d018d614f62565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001602081019061366e9190614f62565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008b60400160208101906136a39190615a38565b62ffffff16815260208082019290925260409081016000908120546001600160a01b03168082526007845290829020825160a081018452815481526001820154948101949094526002810154848401526003810154606085015260040154608084015290840191909152601054909150600160a01b900460ff161561373a5760405162461bcd60e51b81526004016109c590615c7d565b816020015160020b6000036137615760405162461bcd60e51b81526004016109c590615c9d565b8760020b8960020b126137865760405162461bcd60e51b81526004016109c590615cb8565b6000876001600160801b0316116137c35760405162461bcd60e51b81526020600482015260016024820152601b60fa1b60448201526064016109c5565b60208201516137d2908a615eea565b60020b1580156137f1575060208201516137ec9089615eea565b60020b155b6138215760405162461bcd60e51b81526020600482015260016024820152601960fa1b60448201526064016109c5565b885b8860020b8160020b12156139f257600080836001600160a01b0316633c8a7d8d30858860200151876138559190615cd3565b8e8d60405160200161387691906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016138a5959493929190615df7565b60408051808303816000875af11580156138c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138e79190615cf8565b90925090506138f68288615994565b96506139028187615994565b85516000908152600160209081526040808320600288900b84529091528120549197506001600160801b0390911690036139585760208086015186516000908152600c9092526040909120613958918590614781565b84516000908152600160209081526040808320600287900b8452909152812080548c92906139909084906001600160801b0316615d88565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506139d98d8036038101906139c89190615328565b848760000151878960400151614609565b50505060208301516139eb9082615cd3565b9050613823565b613a10613a04368d90038d018d615328565b8b8b8660200151613bb4565b505082516000908152600460209081526040808320815160028f810b828601528e810b828501526001600160a01b038d1660608084019190915284518084039091018152608090920184528151918501919091208552925282200180548a9290613a849084906001600160801b0316615d88565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550866001600160a01b0316826001600160a01b03167f7e1aa040ae22ae078b2e04d7e756a73671a8435cd8b72b0bd15f1cef372133d28a8d8d604051613b0f939291906001600160801b03939093168352600291820b6020840152900b604082015260600190565b60405180910390a350506001600055509097909650945050505050565b600e546201000090046001600160a01b03163314613b5c5760405162461bcd60e51b81526004016109c590615c5d565b60108054911515600160b01b0260ff60b01b19909216919091179055565b6000806000613b888461220e565b6000908152600960205260409020546001600160801b0380821696600160801b90920416945092505050565b600080613c1b6040518061012001604052806000815260200160008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b031681526020016000801916815260200160008152602001600081525090565b86516001600160a01b039081166000908152600b60209081526040808320828c0151851684528252808320818c015162ffffff16845290915290205416613c618861220e565b60c08301819052600090815260046020526040812081613c828a8a336121c2565b8152602081019190915260409081016000209051639887b58960e01b81526001600160a01b038416600482015260028a810b602483015289900b604482015290915073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__90639887b589906064016040805180830381865af4158015613cff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d239190615cf8565b6020850152835260c0830151613d3b9089898961224e565b6060850181905260408501829052845190910180855260208501805190920190915281546002830154613d809291909103906001600160801b0316600160801b613f3a565b6001600160801b039081166080850152600182015460208501516002840154613db393929091039116600160801b613f3a565b6001600160801b0390811660a0850152608084015116151580613de3575060008360a001516001600160801b0316115b15613e415760808301516002820180546001600160801b03600160801b8083048216909401811690930290831617905560a08401516003830180548084169092019092166fffffffffffffffffffffffffffffffff19919091161790555b8251815560209092015160018301555060028101546003909101546001600160801b03600160801b9092048216935016905094509492505050565b6000838015613f1c57600184168015613e9757859250613e9b565b8392505b508260011c8460011c94505b8415613f16578560801c15613ebb57600080fd5b85860281810181811015613ece57600080fd5b8590049650506001851615613f0b578583028387820414613ef4578615613ef457600080fd5b81810181811015613f0457600080fd5b8590049350505b8460011c9450613ea7565b50613f32565b838015613f2c5760009250613f30565b8392505b505b509392505050565b6000808060001985870985870292508281108382030391505080600003613f735760008411613f6857600080fd5b508290049050610b27565b808411613fab5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b60448201526064016109c5565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000828152600860209081526040808320546001600160a01b038816845260078352818420825160a0810184528154815260018201549481019490945260028101549284019290925260038201546060840152600490910154608083015282918290815b8851811015614468576001600089815260200190815260200160002060008a83815181106140ac576140ac615dc8565b6020908102919091018101515160020b82528101919091526040016000205489516001600160801b0390911693508990829081106140ec576140ec615dc8565b6020026020010151602001516001600160801b031684600260008b815260200190815260200160002060008c858151811061412957614129615dc8565b6020908102919091018101515160020b82528101919091526040016000205461415b91906001600160801b0316615994565b6141659190615994565b836001600160801b031610156141a95760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b60448201526064016109c5565b8881815181106141bb576141bb615dc8565b602002602001015160200151600260008a815260200190815260200160002060008b84815181106141ee576141ee615dc8565b6020908102919091018101515160020b8252810191909152604001600090812080549091906142279084906001600160801b0316615d88565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000808b6001600160a01b031663a34123a78c858151811061426f5761426f615dc8565b6020026020010151600001518b8e878151811061428e5761428e615dc8565b6020026020010151600001516142a49190615cd3565b8e87815181106142b6576142b6615dc8565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af115801561431c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143409190615cf8565b915091508b6001600160a01b0316634f1eb3d8308d868151811061436657614366615dc8565b6020026020010151600001518c8f888151811061438557614385615dc8565b60200260200101516000015161439b9190615cd3565b86866040518663ffffffff1660e01b81526004016143bd959493929190615d1c565b60408051808303816000875af11580156143db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143ff9190615d59565b5061440c90508289615994565b97506144188188615994565b965061445261442c368f90038f018f615328565b8c858151811061443e5761443e615dc8565b6020026020010151600001518c8f88614609565b505050808061446090615dde565b91505061407c565b50600085118015614477575083155b8061448b57508415801561448b5750600084115b6144bf5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b60448201526064016109c5565b84156144dc576144dc6144d560208c018c614f62565b3387614509565b83156144fc576144fc6144f560408c0160208d01614f62565b3386614509565b5050509550959350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916145659190615f1a565b6000604051808303816000865af19150503d80600081146145a2576040519150601f19603f3d011682016040523d82523d6000602084013e6145a7565b606091505b50915091508180156145d15750805115806145d15750808060200190518101906145d19190615f36565b6146025760405162461bcd60e51b815260206004820152600260248201526114d560f21b60448201526064016109c5565b5050505050565b61462d60405180606001604052806000815260200160008152602001600081525090565b6001600160a01b0383166000908152600660209081526040808320600289810b808652918452828520898652600185528386208387528552838620548a87529185528386209286529190935292205482546001600160801b039283169290911690670de0b6b3a764000090614708906146a69083615994565b670de0b6b3a7640000610b128760020154426146c291906159a7565b670de0b6b3a764000073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__6317b474bf8d8c600101546040518363ffffffff1660e01b8152600401610ab89291906159ba565b61471291906159a7565b83556001600160801b03811615614748576147436001600160801b0382811690670de0b6b3a7640000908516613f3a565b61474b565b60005b60018401819055426002850181905560408051606081018252955486526020860192909252908401525090979650505050505050565b8060020b8260020b8161479657614796615ed4565b0760020b156147a457600080fd5b6000806147d28360020b8560020b816147bf576147bf615ed4565b0560020b600881901d9161010090910790565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b6060610b278383604051806060016040528060278152602001615f67602791396148a6565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806146025760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016109c5565b6060600080856001600160a01b0316856040516148c39190615f1a565b600060405180830381855af49150503d80600081146148fe576040519150601f19603f3d011682016040523d82523d6000602084013e614903565b606091505b50915091506149148683838761491e565b9695505050505050565b6060831561498d578251600003614986576001600160a01b0385163b6149865760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109c5565b50816128fc565b6128fc83838151156149a25781518083602001fd5b8060405162461bcd60e51b81526004016109c59190615f53565b6040518061014001604052806000815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600060020b8152602001614a17614a24565b8152600060209091015290565b6040518060e00160405280614a616040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff16815260200160008152602001600081525090565b604051806060016040528060008019168152602001600060020b8152602001614ae66040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b905290565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715614b2357614b23614aeb565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614b5157614b51614aeb565b604052919050565b6001600160a01b0381168114614b6e57600080fd5b50565b803562ffffff81168114614b8457600080fd5b919050565b600060608284031215614b9b57600080fd5b604051606081018181106001600160401b0382111715614bbd57614bbd614aeb565b6040529050808235614bce81614b59565b81526020830135614bde81614b59565b6020820152614bef60408401614b71565b60408201525092915050565b8060020b8114614b6e57600080fd5b60008060008060c08587031215614c2057600080fd5b614c2a8686614b89565b93506060850135614c3a81614bfb565b92506080850135614c4a81614bfb565b915060a0850135614c5a81614bfb565b939692955090935050565b600060a08284031215614c7757600080fd5b60405160a081018181106001600160401b0382111715614c9957614c99614aeb565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b600080600060e08486031215614ce957600080fd5b8335614cf481614b59565b92506020840135614d0481614bfb565b9150614d138560408601614c65565b90509250925092565b600060608284031215614d2e57600080fd5b50919050565b8015158114614b6e57600080fd5b600080600080600060e08688031215614d5a57600080fd5b614d648787614d1c565b9450606086013593506080860135925060a0860135614d8281614d34565b9497939650919460c0013592915050565b600060a080830160018060a01b03891684526020888186015260408881870152606088818801526080858189015284895180875260c09650868a019150858b0160005b82811015614e27578151805160020b8552888101516001600160801b0316898601528781015188860152868101518786015285810151868601528a01518a8501529288019290870190600101614dd6565b50919f9e505050505050505050505050505050565b61ffff81168114614b6e57600080fd5b60006101608284031215614e5f57600080fd5b60405160e081018181106001600160401b0382111715614e8157614e81614aeb565b604052905080614e918484614c65565b815260a0830135602082015260c0830135604082015260e08301356060820152610100830135614ec081614e3c565b8060808301525061012083013560a082015261014083013560c08201525092915050565b6000806000806000806102008789031215614efe57600080fd5b8635614f0981614b59565b95506020870135614f1981614b59565b94506040870135614f2981614b59565b9350614f3760608801614b71565b92506080870135614f4781614bfb565b9150614f568860a08901614e4c565b90509295509295509295565b600060208284031215614f7457600080fd5b8135610b2781614b59565b600080600060608486031215614f9457600080fd5b8335614f9f81614b59565b92506020840135614faf81614b59565b9150614d1360408501614b71565b60008060808385031215614fd057600080fd5b614fda8484614b89565b946060939093013593505050565b600080600060a08486031215614ffd57600080fd5b6150078585614b89565b9250606084013561501781614bfb565b9150608084013561502781614bfb565b809150509250925092565b6000806040838503121561504557600080fd5b82359150602083013561505781614bfb565b809150509250929050565b600080600080600060e0868803121561507a57600080fd5b6150848787614b89565b976060870135975060808701359660a0810135965060c00135945092505050565b6000602082840312156150b757600080fd5b8135610b2781614d34565b60008061018083850312156150d657600080fd5b82356150e181614b59565b91506150f08460208501614e4c565b90509250929050565b60006001600160401b0382111561511257615112614aeb565b5060051b60200190565b6001600160801b0381168114614b6e57600080fd5b600082601f83011261514257600080fd5b81356020615157615152836150f9565b614b29565b82815260c0928302850182019282820191908785111561517657600080fd5b8387015b858110156151ed5781818a0312156151925760008081fd5b61519a614b01565b81356151a581614bfb565b8152818601356151b48161511c565b8187015260408281013590820152606080830135908201526080808301359082015260a08083013590820152845292840192810161517a565b5090979650505050505050565b600080600080600080610100878903121561521457600080fd5b61521e8888614d1c565b955060608701356001600160401b0381111561523957600080fd5b61524589828a01615131565b955050608087013561525681614d34565b9598949750949560a0810135955060c08101359460e0909101359350915050565b60008060006060848603121561528c57600080fd5b833561529781614bfb565b925060208401356152a781614bfb565b9150604084013561502781614b59565b61016081016152f1828a80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8760a08301528660c08301528560e083015261ffff8516610100830152836101208301528261014083015298975050505050505050565b60006060828403121561533a57600080fd5b610b278383614b89565b6000806040838503121561535757600080fd5b50508035926020909101359150565b6000806000806080858703121561537c57600080fd5b84359350602085013561538e81614bfb565b9250604085013561539e81614bfb565b91506060850135614c5a81614bfb565b6000602082840312156153c057600080fd5b5035919050565b600080600060a084860312156153dc57600080fd5b6153e68585614d1c565b925060608401356001600160401b0381111561540157600080fd5b61540d86828701615131565b925050608084013561502781614b59565b6000806040838503121561543157600080fd5b823561543c81614b59565b9150602083013561505781614bfb565b60006060828403121561545e57600080fd5b610b278383614d1c565b6001600160a01b0384168152600283900b602082015281516101a08201906154bf90604084019080518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b602083015160e08301526040830151610100830152606083015161012083015261ffff60808401511661014083015260a083015161016083015260c0830151610180830152949350505050565b6000806040838503121561551f57600080fd5b8235915060208301358060010b811461505757600080fd5b60008060008060c0858703121561554d57600080fd5b6155578686614d1c565b9350606085013561556781614bfb565b9250608085013561557781614bfb565b915060a0850135614c5a81614b59565b60008060008060c0858703121561559d57600080fd5b6155a78686614d1c565b935060608501356155b781614bfb565b925060808501356155c781614bfb565b915060a0850135614c5a8161511c565b600080600080608085870312156155ed57600080fd5b84356155f881614b59565b9350602085013561560881614b59565b9250604085013561561881614b59565b91506060850135614c5a81614b59565b6000806020838503121561563b57600080fd5b82356001600160401b038082111561565257600080fd5b818501915085601f83011261566657600080fd5b81358181111561567557600080fd5b8660208260051b850101111561568a57600080fd5b60209290920196919550909350505050565b60005b838110156156b757818101518382015260200161569f565b50506000910152565b600081518084526156d881602086016020860161569c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561574157603f1988860301845261572f8583516156c0565b94509285019290850190600101615713565b5092979650505050505050565b6000806080838503121561576157600080fd5b61576b8484614d1c565b915060608301356001600160401b0381111561578657600080fd5b61579285828601615131565b9150509250929050565b600080600080606085870312156157b257600080fd5b843593506020850135925060408501356001600160401b03808211156157d757600080fd5b818701915087601f8301126157eb57600080fd5b8135818111156157fa57600080fd5b88602082850101111561580c57600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b8181101561585c5783516001600160a01b031683529284019291840191600101615837565b50909695505050505050565b60008060008060008060c0878903121561588157600080fd5b86359550602087013561589381614bfb565b945060408701356158a381614bfb565b935060608701356158b381614bfb565b925060808701356158c381614d34565b8092505060a087013590509295509295509295565b60008060008060008061010087890312156158f257600080fd5b6158fc8888614d1c565b9550606087013561590c81614bfb565b9450608087013561591c81614bfb565b935060a087013561592c8161511c565b925060c087013561593c81614b59565b915060e087013561594c81614b59565b809150509295509295509295565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561313e5761313e61597e565b8181038181111561313e5761313e61597e565b60c081016159f3828580518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8260a08301529392505050565b600060208284031215615a1257600080fd5b5051919050565b602080825260059082015264042c2eae8d60db1b604082015260600190565b600060208284031215615a4a57600080fd5b610b2782614b71565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b600080600080600080600060e0888a031215615a9657600080fd5b8751615aa181614b59565b6020890151909750615ab281614bfb565b6040890151909650615ac381614e3c565b6060890151909550615ad481614e3c565b6080890151909450615ae581614e3c565b60a089015190935060ff81168114615afc57600080fd5b60c0890151909250615b0d81614d34565b8091505092959891949750929550565b600060208284031215615b2f57600080fd5b8151610b2781614b59565b60008060006060808587031215615b5057600080fd5b8451935060208086015193506040808701516001600160401b03811115615b7657600080fd5b8701601f81018913615b8757600080fd5b8051615b95615152826150f9565b81815260c0918202830185019185820191908c841115615bb457600080fd5b938601935b83851015615c2a5780858e031215615bd15760008081fd5b615bd9614b01565b8551615be481614bfb565b815285880151615bf38161511c565b81890152858701518782015288860151898201526080808701519082015260a0808701519082015283529384019391860191615bb9565b50809750505050505050509250925092565b600061ffff808316818103615c5357615c5361597e565b6001019392505050565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b6020808252600690820152651c185d5cd95960d21b604082015260600190565b6020808252600190820152600760fc1b604082015260600190565b6020808252600190820152606960f81b604082015260600190565b600281810b9083900b01627fffff8113627fffff198212171561313e5761313e61597e565b60008060408385031215615d0b57600080fd5b505080516020909101519092909150565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b60008060408385031215615d6c57600080fd5b8251615d778161511c565b60208401519092506150578161511c565b6001600160801b0381811683821601908082111561313c5761313c61597e565b6001600160801b0382811682821603908082111561313c5761313c61597e565b634e487b7160e01b600052603260045260246000fd5b600060018201615df057615df061597e565b5060010190565b60018060a01b03861681528460020b60208201528360020b60408201526001600160801b038316606082015260a060808201526000615e3960a08301846156c0565b979650505050505050565b6000808335601e19843603018112615e5b57600080fd5b8301803591506001600160401b03821115615e7557600080fd5b60200191503681900382131561332257600080fd5b61ffff82811682821603908082111561313c5761313c61597e565b60008060408385031215615eb857600080fd5b8251615ec381614bfb565b602084015190925061505781614d34565b634e487b7160e01b600052601260045260246000fd5b60008260020b80615f0b57634e487b7160e01b600052601260045260246000fd5b808360020b0791505092915050565b60008251615f2c81846020870161569c565b9190910192915050565b600060208284031215615f4857600080fd5b8151610b2781614d34565b602081526000610b2760208301846156c056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b2e4f89433ce70d0a5e44604b1775e8bb6ed1c12ff944ae100626404ddc1b6ae64736f6c63430008120033";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
}
