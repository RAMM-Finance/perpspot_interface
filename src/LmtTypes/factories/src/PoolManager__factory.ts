/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium1",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "PoolAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "REPAY_THRESHOLD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "collectedFees0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "collectedFees1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeParams",
    outputs: [
      {
        internalType: "uint128",
        name: "openFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "feeToPool",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFeeToPool",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "LPFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "finishPriceX96",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getHashedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getHashedPositionKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedKey",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "minLiquidities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolTrusted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFeeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "LPFee",
        type: "uint256",
      },
    ],
    name: "updateFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061605680620000216000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80638da5cb5b11610130578063aea84c91116100b8578063d34879971161007c578063d348799714610819578063d41dcbea1461082c578063d7a3dca014610841578063da69b0b314610873578063fc6e9cbf146108a757600080fd5b8063aea84c9114610744578063b8919fa614610757578063b9a402a51461076a578063bbd954721461077d578063c6c2c2ca1461079057600080fd5b8063a8404655116100ff578063a84046551461067f578063a841fdd8146106de578063a882c12d146106fe578063abf978e414610711578063ac9650d81461072457600080fd5b80638da5cb5b14610606578063952509231461061f5780639744a42d146106415780639c47697c1461066c57600080fd5b806348222442116101be578063683356911161018257806368335691146105705780636cb42a2f146105835780636fc280e1146105965780638129fc1c146105eb578063895f4ade146105f357600080fd5b8063482224421461046657806348c6f866146104795780635955cad31461049a5780635ea33ec514610527578063651976881461053a57600080fd5b80631698ee82116102055780631698ee82146102ce57806319fa10331461032057806319fda27714610353578063406a3d021461039f57806345e61a4d146103c057600080fd5b80630229fb6014610237578063089ca8dd146102645780630ea50f501461029757806313af4035146102b9575b600080fd5b61024a610245366004614ccf565b6108ba565b604080519283526020830191909152015b60405180910390f35b610287610272366004614d3f565b60106020526000908152604090205460ff1681565b604051901515815260200161025b565b6102aa6102a5366004614d6a565b61090d565b60405161025b93929190614e36565b6102cc6102c7366004614d3f565b610add565b005b6103086102dc366004614e6d565b600a6020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b03909116815260200161025b565b61033361032e366004614f94565b610b37565b604080516001600160801b0393841681529290911660208301520161025b565b610387610361366004614fde565b60026020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b03909116815260200161025b565b6103b26103ad36600461500e565b610dd9565b60405190815260200161025b565b6104536103ce366004614d3f565b600660208181526000928352604092839020835160c081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301546080820152600583015460a082015290820154600783015460088401546009850154600a860154600b90960154949593949293919261ffff909116919087565b60405161025b9796959493929190615088565b6103b26104743660046150cf565b610e26565b61048c6104873660046150eb565b610e75565b60405161025b929190615152565b6104f16104a836600461516b565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a00161025b565b61024a61053536600461518d565b610fe0565b61055d6105483660046151d5565b60096020526000908152604090205460020b81565b60405160029190910b815260200161025b565b6103b261057e366004615246565b611086565b61024a610591366004615387565b6111c1565b6105d06105a43660046153de565b600560209081526000928352604080842090915290825290208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161025b565b6102cc61156b565b6102cc6106013660046154b5565b61169a565b600d54610308906201000090046001600160a01b031681565b61063261062d3660046154ec565b61176f565b60405161025b93929190615508565b6103b261064f366004615582565b600b60209081526000928352604080842090915290825290205481565b6102cc61067a3660046155ad565b6118f5565b61069261068d3660046155f9565b61196e565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a00161025b565b6103b26106ec3660046151d5565b60076020526000908152604090205481565b600e54610308906001600160a01b031681565b61024a61071f366004615649565b611a2f565b610737610732366004615699565b612234565b60405161025b919061575d565b6102cc610752366004614d3f565b612329565b61024a6107653660046157bf565b61237b565b6102cc61077836600461582f565b612ae1565b61024a61078b3660046158ad565b61326c565b6107de61079e3660046151d5565b6008602052600090815260409020805460018201546002909201546001600160801b0380831693600160801b938490048216938183169391049091169085565b604080516001600160801b0396871681529486166020860152928516928401929092529092166060820152608081019190915260a00161025b565b6102cc6108273660046158fb565b6133b4565b610834613504565b60405161025b919061597a565b61024a61084f366004614fde565b60036020908152600092835260408084209091529082529020805460019091015482565b610387610881366004614fde565b60016020908152600092835260408084209091529082529020546001600160801b031681565b6102cc6108b53660046159c7565b6135e1565b600080600f546001146108e85760405162461bcd60e51b81526004016108df90615a2f565b60405180910390fd5b6002600f556108fb868686866001613961565b6001600f559097909650945050505050565b600e5460009081906060906001600160a01b0316331461093f5760405162461bcd60e51b81526004016108df90615a53565b610947614b28565b610959610474368b90038b018b6150cf565b6040820152600a600061096f60208c018c614d3f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60200160208101906109a49190614d3f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60400160208101906109d99190615a72565b62ffffff16815260208082019290925260409081016000908120546001600160a01b0390811661012086019081528584015183526009909452908290205460020b60e08086019190915292518251633850c7bd60e01b81529251911692633850c7bd92600480820193918290030181865afa158015610a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a809190615a8d565b5050506001600160a01b0390931660208501819052610aab93508c92508b91508a908a908a90610e75565b905080925050610acb898261012001518484604001518560e00151613b4a565b909a9099509197509095505050505050565b600d546201000090046001600160a01b03163314610b0d5760405162461bcd60e51b81526004016108df90615b2f565b600d80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b600080600f54600114610b5c5760405162461bcd60e51b81526004016108df90615a2f565b6002600f556000610b6c86610e26565b6000818152600960209081526040808320546004909252822092935060020b9181610b98898933610dd9565b815260208082019290925260409081016000208151808301909252600a8252691d1bdbd95b9cdbddd95960b21b9282019290925260028201546003830154929350610bf6926001600160801b03600160801b90920482169116614035565b6002810154600090600160801b90046001600160801b031615610ce85788516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7e9190615b4f565b60028301549091506001600160801b03600160801b909104811690821610610cba576002820154600160801b90046001600160801b0316610cbc565b805b9550610cd6896000015133886001600160801b0316614081565b6002820180546001600160801b031690555b60038201546001600160801b031615610dc65760208901516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610d45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d699190615b4f565b60038301549091506001600160801b0390811690821610610d975760038201546001600160801b0316610d99565b805b9450610db3896020015133876001600160801b0316614081565b6003820180546001600160801b03191690555b50506001600f5550919590945092505050565b60408051600285810b602083015284900b918101919091526001600160a01b03821660608201526000906080016040516020818303038152906040528051906020012090505b9392505050565b805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff16606080840191909152835180840390910181526080909201909252805191012090565b60006060610e81614b28565b610e93610474368b90038b018b6150cf565b60408083018290525163225e631360e21b8152600b600482015287151560248201526044810189905260648101879052608481018a90526001600160a01b03861660a482015260c481019190915273__$93dfed57e8f421caed97f24c336a056d51$__906389798c4c9060e401600060405180830381865af4158015610f1d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f459190810190615b68565b60808401919091526060830182905292508714610f8e5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b60448201526064016108df565b85610fb55760608101516080820151610fb091670de0b6b3a764000090614181565b610fd2565b60808101516060820151610fd291670de0b6b3a764000090614181565b925050965096945050505050565b6000806000859050611005604051806040016040528060008152602001600081525090565b8560020b8260020b121561107b57506000878152600360209081526040808320600285900b845282529182902082518084019093528054808452600190910154918301919091526110569085615c80565b93508060200151836110689190615c80565b92506110748583615c93565b9150611005565b505094509492505050565b6001600160a01b0383166000908152600560209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290670de0b6b3a7640000906111ae906110ea9083615c80565b670de0b6b3a76400006111a78560400151426111069190615cb8565b60208701516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf9161114d918e9190600401615ccb565b602060405180830381865af415801561116a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118e9190615b4f565b6111a090670de0b6b3a7640000615c80565b919061425f565b9190614181565b6111b89190615cb8565b95945050505050565b600e5460009081906001600160a01b031633146111f05760405162461bcd60e51b81526004016108df90615a53565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526000600a8161122d60208a018a614d3f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906112629190614d3f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860400160208101906112979190615a72565b62ffffff1681526020810191909152604001600020546001600160a01b031690506112ca610474368990038901896150cf565b808352600090815260096020908152604080832054600290810b838701526001600160a01b038516845260068352818420825160c08101845281548152600182015494810194909452908101549183019190915260038101546060830152600481015460808301526005015460a0820152905b875181101561155f5787818151811061135857611358615ce6565b602002602001015160200151600260008660000151815260200190815260200160002060008a848151811061138f5761138f615ce6565b6020908102919091018101515160020b8252810191909152604001600090812080549091906113c89084906001600160801b0316615cfc565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550826001600160a01b0316633c8a7d8d308a848151811061140e5761140e615ce6565b60200260200101516000015187602001518c868151811061143157611431615ce6565b6020026020010151600001516114479190615c93565b8c868151811061145957611459615ce6565b6020026020010151602001518c60405160200161148591906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016114b4959493929190615d1c565b60408051808303816000875af11580156114d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f69190615d69565b60808601526060850181905261150c9087615c80565b955083608001518561151e9190615c80565b945061154d88828151811061153557611535615ce6565b6020026020010151600001518560000151858561431d565b8061155781615d8d565b91505061133d565b50505050935093915050565b600054610100900460ff161580801561158b5750600054600160ff909116105b806115a55750303b1580156115a5575060005460ff166001145b6116085760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108df565b6000805460ff19166001179055801561162b576000805461ff0019166101001790555b600d80546001600f8190556001600160b01b031990911633620100000261ffff1916171790558015611697576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b600d546201000090046001600160a01b031633146116ca5760405162461bcd60e51b81526004016108df90615b2f565b6001600160a01b03919091166000908152600660208181526040928390208451805182558083015160018301558085015160028301556060808201516003840155608080830151600485015560a0928301516005850155938701519483019490945593850151600782015591840151600883015583015160098201805461ffff191661ffff90921691909117905590820151600a82015560c090910151600b90910155565b60008061177a614b90565b600a600061178b6020870187614d3f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160208101906117c09190614d3f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560400160208101906117f59190615a72565b62ffffff16815260208101919091526040016000908120546001600160a01b0316935060099061182d610474368890038801886150cf565b815260208082019290925260409081016000908120546001600160a01b038716825260068085529183902083516101a081018552815460e082019081526001830154610100830152600283810154610120840152600384015461014084015260048401546101608401526005840154610180840152908252938201549581019590955260078101549385019390935260088301546060850152600983015461ffff166080850152600a83015460a0850152600b9092015460c08401529496940b945092915050565b600d546201000090046001600160a01b031633146119255760405162461bcd60e51b81526004016108df90615b2f565b600061193087610e26565b60009081526008602052604090206001600160801b03968716600160801b968816870217815593861692909516909302176001820155600201555050565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152600460006119af610474368990038901896150cf565b815260200190815260200160002060006119ca868686610dd9565b81526020808201929092526040908101600020815160a0810183528154815260018201549381019390935260028101546001600160801b0380821693850193909352600160801b9004821660608401526003015416608082015290505b949350505050565b600080600f54600114611a545760405162461bcd60e51b81526004016108df90615a2f565b6002600f81905550611ab86040518061014001604052806000815260200160008152602001600081526020016000815260200160008019168152602001600060020b8152602001600081526020016000815260200160008152602001600081525090565b611aca610474368990038901896150cf565b60808201818152600091825260096020908152604080842054600290810b60a08701528351855260088352818520015460e08601529151835260049052812081611b15898933610dd9565b8152602081019190915260400160002060028101549091506001600160801b031615801590611b54575060028101546001600160801b03808716911610155b611b845760405162461bcd60e51b81526020600482015260016024820152603760f91b60448201526064016108df565b6000600a81611b9660208c018c614d3f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6020016020810190611bcb9190614d3f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190611c009190615a72565b62ffffff16815260208082019290925260409081016000908120546001600160a01b031680825260068452828220835160c080820186528254825260018301548288015260028301548287015260038301546060830152600483015460808084019190915260059093015460a083015291890151845260079095529290912054918601919091529150885b8860020b8160020b1215612068576080850180516000908152600160209081526040808320600286810b8086529184528285205460c08c0151965186529084528285209185529252909120546001600160801b039182169291611cef91168b615da6565b6001600160801b0316611d029190615c80565b816001600160801b03161015611d465760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b60448201526064016108df565b836001600160a01b031663a34123a7838860a0015185611d669190615c93565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526001600160801b038c16604482015260640160408051808303816000875af1158015611dbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ddf9190615d69565b6020880152865260a086015160009081906001600160a01b03871690634f1eb3d89030908790611e0f9082615c93565b6001600160801b03806040518663ffffffff1660e01b8152600401611e38959493929190615dc6565b60408051808303816000875af1158015611e56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7a9190615e03565b90925090506001600160801b03831615611f72576000611eba8960e00151670de0b6b3a76400008b60000151866001600160801b03166111a79190615cb8565b90506000611ee88a60e00151670de0b6b3a76400008c60200151866001600160801b03166111a79190615cb8565b9050818a61010001818151611efd9190615c80565b9052506101208a018051829190611f15908390615c80565b90525060808a01518a51611f6f919088908590611f3b906001600160801b038a16615cb8565b611f459190615cb8565b848e60200151886001600160801b0316611f5f9190615cb8565b611f699190615cb8565b89614450565b50505b8751604089018051611f85908390615c80565b9052506020880151606089018051611f9e908390615c80565b90525060808801516000908152600160209081526040808320600288900b8452909152812080548d9290611fdc9084906001600160801b0316615cfc565b92506101000a8154816001600160801b0302191690836001600160801b031602179055508a8361200c9190615cfc565b6001600160801b031660000361203f5760a088015160808901516000908152600b6020526040902061203f9186906144d6565b61204f848960800151888861431d565b50505060a08501516120619082615c93565b9050611c8b565b61207a8b8b8b8860a001516000613961565b505060808501516000908152600460205260408120899161209c8d8d33610dd9565b81526020810191909152604001600090812060020180549091906120ca9084906001600160801b0316615cfc565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000856040015111156121165761211661210b60208d018d614d3f565b338760400151614081565b60608501511561213e5761213e61213360408d0160208e01614d3f565b338760600151614081565b6101008501511561217a5761217a61215960208d018d614d3f565b600d60029054906101000a90046001600160a01b0316876101000151614081565b610120850151156121b9576121b961219860408d0160208e01614d3f565b600d60029054906101000a90046001600160a01b0316876101200151614081565b604080516001600160801b038a16815260028c810b60208301528b900b81830152905133916001600160a01b038616917f49ae36094cb0a2af1fad270a75bb3188db1a6e13c5b0b9a230319221247fda9d9181900360600190a35050505060408101516060909101516001600f559097909650945050505050565b6060816001600160401b0381111561224e5761224e614eb4565b60405190808252806020026020018201604052801561228157816020015b606081526020019060019003908161226c5790505b50905060005b82811015612321576122f1308585848181106122a5576122a5615ce6565b90506020028101906122b79190615e32565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061455392505050565b82828151811061230357612303615ce6565b6020026020010181905250808061231990615d8d565b915050612287565b505b92915050565b600d546201000090046001600160a01b031633146123595760405162461bcd60e51b81526004016108df90615b2f565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600080600f546001146123a05760405162461bcd60e51b81526004016108df90615a2f565b6002600f556123ad614c08565b6123bf610474368a90038a018a6150cf565b808252600090815260096020908152604082205460020b81840152600a9082906123eb908c018c614d3f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60200160208101906124209190614d3f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60400160208101906124559190615a72565b62ffffff16815260208082019290925260409081016000908120546001600160a01b031680825260068452828220835160c0810185528154815260018201548187015260028083015482870152600383015460608301526004830154608083015260059092015460a082015287850152865183526008909452919020820154610100850152915087810b9089900b126125145760405162461bcd60e51b81526020600482015260016024820152606960f81b60448201526064016108df565b60208201516125239089615e8e565b60020b1580156125425750602082015161253d9088615e8e565b60020b155b6125725760405162461bcd60e51b81526020600482015260016024820152601960fa1b60448201526064016108df565b875b8760020b8160020b121561296057816001600160a01b0316633c8a7d8d30838660200151856125a39190615c93565b604080513360208201528d91016040516020818303038152906040526040518663ffffffff1660e01b81526004016125df959493929190615d1c565b60408051808303816000875af11580156125fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126219190615d69565b6080850152606084018190526126379086615c80565b94508260800151846126499190615c80565b9350816001600160a01b031663514ea4bf308386602001518561266c9190615c93565b60405160609390931b6bffffffffffffffffffffffff1916602084015260e891821b6034840152901b6037820152603a01604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016126d191815260200190565b60a060405180830381865afa1580156126ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127129190615ebe565b6001600160801b0390811660c08901521660a08701819052151592508291506127419050575060008360c00151115b156127d557816001600160a01b0316634f1eb3d830838660200151856127679190615c93565b6001600160801b03806040518663ffffffff1660e01b8152600401612790959493929190615dc6565b60408051808303816000875af11580156127ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d29190615e03565b50505b82516000908152600160209081526040808320600285900b84529091529020546001600160801b031660e08401819052156128b85761010083015160a084015160009161282b9190670de0b6b3a7640000614181565b61010085015160c086015191925060009161284e91670de0b6b3a7640000614181565b90508185610120018181516128639190615c80565b9052506101408501805182919061287b908390615c80565b905250845160a08601516128b191908590612897908690615cb8565b848960c001516128a79190615cb8565b8960e00151614450565b50506128da565b60208084015184516000908152600b90925260409091206128da9183906144d6565b82516000908152600160209081526040808320600285900b8452909152812080548992906129129084906001600160801b0316615da6565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061294a81846000015184866040015161431d565b60208301516129599082615c93565b9050612574565b6129728a8a8a86602001516000613961565b5050610120830151156129b0576129b061298f60208c018c614d3f565b600d60029054906101000a90046001600160a01b0316856101200151614081565b610140830151156129ef576129ef6129ce60408c0160208d01614d3f565b600d60029054906101000a90046001600160a01b0316856101400151614081565b825160009081526004602052604081208891612a0c8c8c8b610dd9565b8152602081019190915260400160009081206002018054909190612a3a9084906001600160801b0316615da6565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550856001600160a01b0316826001600160a01b03167f7e1aa040ae22ae078b2e04d7e756a73671a8435cd8b72b0bd15f1cef372133d2898c8c604051612ac5939291906001600160801b03939093168352600291820b6020840152900b604082015260600190565b60405180910390a350506001600f555090969095509350505050565b600d546201000090046001600160a01b03163314612b115760405162461bcd60e51b81526004016108df90615b2f565b600080856001600160a01b0316876001600160a01b031610612b34578587612b37565b86865b604080516001600160a01b03808516602083015283169181019190915262ffffff881660608201529193509150600090608001604051602081830303815290604052805190602001209050866001600160a01b0316886001600160a01b031603612bd05760405162461bcd60e51b815260206004820152600a60248201526939b0b6b2903a37b5b2b760b11b60448201526064016108df565b6001600160a01b03831615801590612bf057506001600160a01b03821615155b612c2b5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016108df565b6001600160a01b038381166000908152600a602090815260408083208685168452825280832062ffffff8b1684529091529020541615612c9b5760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b60448201526064016108df565b6001600160a01b038281166000908152600a602090815260408083208785168452825280832062ffffff8b1684529091529020541615612d0b5760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b60448201526064016108df565b60008181526009602052604090205460020b15612d585760405162461bcd60e51b815260206004820152600b60248201526a7469636b2065786973747360a81b60448201526064016108df565b60008560020b138015612dd75750886001600160a01b031663d0c93a7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612da4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dc89190615f12565b612dd29086615e8e565b60020b155b612e0d5760405162461bcd60e51b815260206004820152600760248201526673706163696e6760c81b60448201526064016108df565b6001601060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555088600a6000856001600160a01b03166001600160a01b031681526020019081526020016000206000846001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555088600a6000846001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550846009600083815260200190815260200160002060006101000a81548162ffffff021916908360020b62ffffff1602179055506064600760008381526020019081526020016000208190555083600660008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155505060208201518160060155604082015181600701556060820151816008015560808201518160090160006101000a81548161ffff021916908361ffff16021790555060a082015181600a015560c082015181600b015590505088600c6000600d60009054906101000a900461ffff1661ffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600d600081819054906101000a900461ffff16809291906130d890615f2f565b825461ffff9182166101009390930a928302919092021990911617905550600e54604051633eb4adab60e01b81526001600160a01b038581166004830152848116602483015290911690633eb4adab90604401600060405180830381600087803b15801561314557600080fd5b505af1158015613159573d6000803e3d6000fd5b505050600082815260086020526040908190207706f05b59d3b20000000000000000000000038d7ea4c6800081557706f05b59d3b20000000000000000000000b1a2bc2ec50000600182015567016345785d8a0000600290910155516332148f6760e01b8152606460048201526001600160a01b038b1691506332148f6790602401600060405180830381600087803b1580156131f557600080fd5b505af1158015613209573d6000803e3d6000fd5b50506040805162ffffff8a168152600289900b60208201526001600160a01b03808716945087811693508d16917fc57f9b9fa0ab86d2c86cc2d78f2f5d7cb8320503c0203fa154565617b830d0f9910160405180910390a4505050505050505050565b600e5460009081906001600160a01b0316331461329b5760405162461bcd60e51b81526004016108df90615a53565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526132d8610474368790038701876150cf565b60808201819052600090815260096020908152604082205460020b83526133a6918791600a919061330b90840184614d3f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906133409190614d3f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860400160208101906133759190615a72565b62ffffff168152602081019190915260400160002054608084015184516001600160a01b0390921691889190613b4a565b9093509150505b9250929050565b3360009081526010602052604090205460ff166133fb5760405162461bcd60e51b8152602060048201526005602482015264085c1bdbdb60da1b60448201526064016108df565b600061340982840184614d3f565b9050600080336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561344c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134709190615f50565b336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156134ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134d29190615f50565b909250905086156134e9576134e98284338a614578565b85156134fb576134fb81843389614578565b50505050505050565b600d5460609060009061351d9060019061ffff16615f6d565b61ffff1690506000816001600160401b0381111561353d5761353d614eb4565b604051908082528060200260200182016040528015613566578160200160208202803683370190505b50905060005b8281101561232157600c6000613583836001615c80565b815260200190815260200160002060009054906101000a90046001600160a01b03168282815181106135b7576135b7615ce6565b6001600160a01b0390921660209283029190910190910152806135d981615d8d565b91505061356c565b600e546001600160a01b0316331461360b5760405162461bcd60e51b81526004016108df90615a53565b61366860405180610100016040528060006001600160801b03168152602001600081526020016000815260200160006001600160801b03168152602001600081526020016000801916815260200160008152602001600081525090565b61367a610474368790038701876150cf565b60a0820181905260009081526008602052604081206002015460c0830152805b85518110156136f0578581815181106136b5576136b5615ce6565b602002602001015160200151836060018181516136d29190615da6565b6001600160801b0316905250806136e881615d8d565b91505061369a565b5060005b855181101561390457600160008460a001518152602001908152602001600020600087838151811061372857613728615ce6565b6020908102919091018101515160020b8252810191909152604001600020546001600160801b03168352855161379d9087908390811061376a5761376a615ce6565b6020026020010151602001516001600160801b031684606001516001600160801b0316866141819092919063ffffffff16565b6040840181905260c084015187516137e192670de0b6b3a7640000918a90869081106137cb576137cb615ce6565b6020026020010151604001516111a79190615c80565b60e084018190526080840180516137f9908390615c80565b915081815250506138558360e00151846040015188848151811061381f5761381f615ce6565b6020026020010151604001516138359190615c80565b61383f9190615cb8565b8451600160801b906001600160801b0316614181565b836020018181525050600360008460a001518152602001908152602001600020600087838151811061388957613889615ce6565b60200260200101516000015160020b60020b8152602001908152602001600020915084156138d45782602001518260010160008282546138c99190615c80565b909155506138f29050565b82602001518260000160008282546138ec9190615c80565b90915550505b806138fc81615d8d565b9150506136f4565b506080820151156139595761395984613929576139246020880188614d3f565b613939565b6139396040880160208901614d3f565b600d60029054906101000a90046001600160a01b03168460800151614081565b505050505050565b6000806139c86040518061012001604052806000815260200160008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b031681526020016000801916815260200160008152602001600081525090565b83156139d9576139d98888886145fb565b6139eb610474368a90038a018a6150cf565b60c08201819052600090815260046020526040812081613a0c8a8a33610dd9565b81526020019081526020016000209050613a2c8260c00151898989610fe0565b602084015280835281546002830154613a579291909103906001600160801b0316600160801b614181565b6001600160801b039081166080840152600182015460208401516002840154613a8a93929091039116600160801b614181565b6001600160801b0390811660a0840152608083015116151580613aba575060008260a001516001600160801b0316115b15613b0f5760808201516002820180546001600160801b03600160801b8083048216909401811690930290831617905560a08301516003830180548084169092019092166001600160801b0319919091161790555b81518155602090910151600182015560028101546003909101546001600160801b03600160801b909204821693501690509550959350505050565b6000828152600760209081526040808320546001600160a01b038816845260068352818420825160c08101845281548152600182015494810194909452600281015492840192909252600382015460608401526004820154608084015260059091015460a083015282918290815b8851811015613f94576001600089815260200190815260200160002060008a8381518110613be857613be8615ce6565b6020908102919091018101515160020b82528101919091526040016000205489516001600160801b039091169350899082908110613c2857613c28615ce6565b6020026020010151602001516001600160801b031684600260008b815260200190815260200160002060008c8581518110613c6557613c65615ce6565b6020908102919091018101515160020b825281019190915260400160002054613c9791906001600160801b0316615c80565b613ca19190615c80565b836001600160801b03161015613ce55760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b60448201526064016108df565b888181518110613cf757613cf7615ce6565b602002602001015160200151600260008a815260200190815260200160002060008b8481518110613d2a57613d2a615ce6565b6020908102919091018101515160020b825281019190915260400160009081208054909190613d639084906001600160801b0316615da6565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000808b6001600160a01b031663a34123a78c8581518110613dab57613dab615ce6565b6020026020010151600001518b8e8781518110613dca57613dca615ce6565b602002602001015160000151613de09190615c93565b8e8781518110613df257613df2615ce6565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af1158015613e58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e7c9190615d69565b915091508b6001600160a01b0316634f1eb3d8308d8681518110613ea257613ea2615ce6565b6020026020010151600001518c8f8881518110613ec157613ec1615ce6565b602002602001015160000151613ed79190615c93565b86866040518663ffffffff1660e01b8152600401613ef9959493929190615dc6565b60408051808303816000875af1158015613f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f3b9190615e03565b50613f4890508289615c80565b9750613f548188615c80565b9650613f7f8b8481518110613f6b57613f6b615ce6565b6020026020010151600001518b8e8761431d565b50508080613f8c90615d8d565b915050613bb8565b50600085118015613fa3575083155b80613fb7575084158015613fb75750600084115b613feb5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b60448201526064016108df565b84156140085761400861400160208c018c614d3f565b3387614081565b83156140285761402861402160408c0160208d01614d3f565b3386614081565b5050509550959350505050565b61407c83838360405160240161404d93929190615f88565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b1790526149f1565b505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916140dd9190615fad565b6000604051808303816000865af19150503d806000811461411a576040519150601f19603f3d011682016040523d82523d6000602084013e61411f565b606091505b50915091508180156141495750805115806141495750808060200190518101906141499190615fc9565b61417a5760405162461bcd60e51b815260206004820152600260248201526114d560f21b60448201526064016108df565b5050505050565b60008080600019858709858702925082811083820303915050806000036141ba57600084116141af57600080fd5b508290049050610e1f565b8084116141f25760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b60448201526064016108df565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60008380156142ff5760018416801561427a5785925061427e565b8392505b508260011c8460011c94505b84156142f9578560801c1561429e57600080fd5b858602818101818110156142b157600080fd5b85900496505060018516156142ee5785830283878204146142d75786156142d757600080fd5b818101818110156142e757600080fd5b8590049350505b8460011c945061428a565b50614315565b83801561430f5760009250614313565b8392505b505b509392505050565b6001600160a01b0382166000908152600560209081526040808320600288810b808652918452828520888652600185528386208387528552838620548987529185528386209286529190935292205482546001600160801b039283169290911690670de0b6b3a7640000906143f9906143969083615c80565b670de0b6b3a76400006111a78760020154426143b29190615cb8565b60018901546040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
}
