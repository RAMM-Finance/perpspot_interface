/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium1",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "PoolAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "REPAY_THRESHOLD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "collectedFees0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "collectedFees1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeParams",
    outputs: [
      {
        internalType: "uint128",
        name: "openFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "feeToPool",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFeeToPool",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "LPFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "finishPriceX96",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getHashedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getHashedPositionKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedKey",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "minLiquidities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolTrusted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "setPoolTrusted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "providePaused",
        type: "bool",
      },
    ],
    name: "setProvidePaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFeeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "LPFee",
        type: "uint256",
      },
    ],
    name: "updateFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50615fe280620000216000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c8063895f4ade1161013b578063aea84c91116100b8578063d34879971161007c578063d348799714610855578063d41dcbea14610868578063d7a3dca01461087d578063da69b0b3146108af578063fc6e9cbf146108e357600080fd5b8063aea84c9114610780578063b8919fa614610793578063b9a402a5146107a6578063bbd95472146107b9578063c6c2c2ca146107cc57600080fd5b8063a8404655116100ff578063a8404655146106bb578063a841fdd81461071a578063a882c12d1461073a578063abf978e41461074d578063ac9650d81461076057600080fd5b8063895f4ade1461062f5780638da5cb5b14610642578063952509231461065b5780639744a42d1461067d5780639c47697c146106a857600080fd5b806345e61a4d116101c9578063651976881161018d578063651976881461057657806368335691146105ac5780636cb42a2f146105bf5780636fc280e1146105d25780638129fc1c1461062757600080fd5b806345e61a4d146103fc57806348222442146104a257806348c6f866146104b55780635955cad3146104d65780635ea33ec51461056357600080fd5b80631698ee82116102105780631698ee82146102f757806319fa10331461034957806319fda2771461037c57806325f149ce146103c8578063406a3d02146103db57600080fd5b80630229fb601461024d57806305d192641461027a578063089ca8dd1461028f5780630ea50f50146102c257806313af4035146102e4575b600080fd5b61026061025b366004614c43565b6108f6565b604080519283526020830191909152015b60405180910390f35b61028d610288366004614cb3565b610949565b005b6102b261029d366004614cb3565b60106020526000908152604090205460ff1681565b6040519015158152602001610271565b6102d56102d0366004614cde565b6109a2565b60405161027193929190614daa565b61028d6102f2366004614cb3565b610b72565b610331610305366004614de1565b600a6020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b039091168152602001610271565b61035c610357366004614f08565b610bcc565b604080516001600160801b03938416815292909116602083015201610271565b6103b061038a366004614f52565b60026020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b039091168152602001610271565b61028d6103d6366004614f82565b610d15565b6103ee6103e9366004614f9f565b610d63565b604051908152602001610271565b61048f61040a366004614cb3565b600660208181526000928352604092839020835160c081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301546080820152600583015460a082015290820154600783015460088401546009850154600a860154600b90960154949593949293919261ffff909116919087565b6040516102719796959493929190615019565b6103ee6104b0366004615060565b610db0565b6104c86104c336600461507c565b610dff565b6040516102719291906150e3565b61052d6104e43660046150fc565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a001610271565b61026061057136600461511e565b610f6a565b610599610584366004615166565b60096020526000908152604090205460020b81565b60405160029190910b8152602001610271565b6103ee6105ba3660046151d7565b611010565b6102606105cd366004615318565b61114b565b61060c6105e036600461536f565b600560209081526000928352604080842090915290825290208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610271565b61028d6114f5565b61028d61063d366004615446565b611624565b600d54610331906201000090046001600160a01b031681565b61066e61066936600461547d565b6116f9565b60405161027193929190615499565b6103ee61068b366004615513565b600b60209081526000928352604080842090915290825290205481565b61028d6106b636600461553e565b61187f565b6106ce6106c936600461558a565b6118f8565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a001610271565b6103ee610728366004615166565b60076020526000908152604090205481565b600e54610331906001600160a01b031681565b61026061075b3660046155da565b6119b9565b61077361076e36600461562a565b6121e8565b60405161027191906156ee565b61028d61078e366004614cb3565b6122dd565b6102606107a1366004615750565b61232f565b61028d6107b43660046157c0565b612ac2565b6102606107c736600461583e565b61324d565b61081a6107da366004615166565b6008602052600090815260409020805460018201546002909201546001600160801b0380831693600160801b938490048216938183169391049091169085565b604080516001600160801b0396871681529486166020860152928516928401929092529092166060820152608081019190915260a001610271565b61028d61086336600461588c565b613395565b6108706134e5565b604051610271919061590b565b61026061088b366004614f52565b60036020908152600092835260408084209091529082529020805460019091015482565b6103b06108bd366004614f52565b60016020908152600092835260408084209091529082529020546001600160801b031681565b61028d6108f1366004615958565b6135c2565b600080600f546001146109245760405162461bcd60e51b815260040161091b906159c0565b60405180910390fd5b6002600f55610937868686866001613942565b6001600f559097909650945050505050565b600d546201000090046001600160a01b031633146109795760405162461bcd60e51b815260040161091b906159e4565b6001600160a01b03166000908152601060205260409020805460ff19811660ff90911615179055565b600e5460009081906060906001600160a01b031633146109d45760405162461bcd60e51b815260040161091b90615a04565b6109dc614a9c565b6109ee6104b0368b90038b018b615060565b6040820152600a6000610a0460208c018c614cb3565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6020016020810190610a399190614cb3565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190610a6e9190615a23565b62ffffff16815260208082019290925260409081016000908120546001600160a01b0390811661012086019081528584015183526009909452908290205460020b60e08086019190915292518251633850c7bd60e01b81529251911692633850c7bd92600480820193918290030181865afa158015610af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b159190615a3e565b5050506001600160a01b0390931660208501819052610b4093508c92508b91508a908a908a90610dff565b905080925050610b60898261012001518484604001518560e00151613b2b565b909a9099509197509095505050505050565b600d546201000090046001600160a01b03163314610ba25760405162461bcd60e51b815260040161091b906159e4565b600d80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b600080600f54600114610bf15760405162461bcd60e51b815260040161091b906159c0565b6002600f55600e54600160b01b900460ff1615610c205760405162461bcd60e51b815260040161091b90615ae0565b6000610c2b86610db0565b6000818152600960209081526040808320546004909252822092935060020b9181610c57898933610d63565b815260208101919091526040016000206002810154909150600160801b90046001600160801b031615610cbb5760028101548851600160801b9091046001600160801b03169550610ca9903387614016565b6002810180546001600160801b031690555b60038101546001600160801b031615610d0357600381015460208901516001600160801b039091169450610cf0903386614016565b6003810180546001600160801b03191690555b50506001600f55509094909350915050565b600d546201000090046001600160a01b03163314610d455760405162461bcd60e51b815260040161091b906159e4565b600e8054911515600160a01b0260ff60a01b19909216919091179055565b60408051600285810b602083015284900b918101919091526001600160a01b03821660608201526000906080016040516020818303038152906040528051906020012090505b9392505050565b805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff16606080840191909152835180840390910181526080909201909252805191012090565b60006060610e0b614a9c565b610e1d6104b0368b90038b018b615060565b60408083018290525163225e631360e21b8152600b600482015287151560248201526044810189905260648101879052608481018a90526001600160a01b03861660a482015260c481019190915273__$93dfed57e8f421caed97f24c336a056d51$__906389798c4c9060e401600060405180830381865af4158015610ea7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ecf9190810190615b00565b60808401919091526060830182905292508714610f185760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b604482015260640161091b565b85610f3f5760608101516080820151610f3a91670de0b6b3a764000090614116565b610f5c565b60808101516060820151610f5c91670de0b6b3a764000090614116565b925050965096945050505050565b6000806000859050610f8f604051806040016040528060008152602001600081525090565b8560020b8260020b121561100557506000878152600360209081526040808320600285900b84528252918290208251808401909352805480845260019091015491830191909152610fe09085615c18565b9350806020015183610ff29190615c18565b9250610ffe8583615c2b565b9150610f8f565b505094509492505050565b6001600160a01b0383166000908152600560209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290670de0b6b3a764000090611138906110749083615c18565b670de0b6b3a76400006111318560400151426110909190615c50565b60208701516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf916110d7918e9190600401615c63565b602060405180830381865af41580156110f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111189190615c7e565b61112a90670de0b6b3a7640000615c18565b91906141f4565b9190614116565b6111429190615c50565b95945050505050565b600e5460009081906001600160a01b0316331461117a5760405162461bcd60e51b815260040161091b90615a04565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526000600a816111b760208a018a614cb3565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906111ec9190614cb3565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860400160208101906112219190615a23565b62ffffff1681526020810191909152604001600020546001600160a01b031690506112546104b036899003890189615060565b808352600090815260096020908152604080832054600290810b838701526001600160a01b038516845260068352818420825160c08101845281548152600182015494810194909452908101549183019190915260038101546060830152600481015460808301526005015460a0820152905b87518110156114e9578781815181106112e2576112e2615c97565b602002602001015160200151600260008660000151815260200190815260200160002060008a848151811061131957611319615c97565b6020908102919091018101515160020b8252810191909152604001600090812080549091906113529084906001600160801b0316615cad565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550826001600160a01b0316633c8a7d8d308a848151811061139857611398615c97565b60200260200101516000015187602001518c86815181106113bb576113bb615c97565b6020026020010151600001516113d19190615c2b565b8c86815181106113e3576113e3615c97565b6020026020010151602001518c60405160200161140f91906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161143e959493929190615ccd565b60408051808303816000875af115801561145c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114809190615d1a565b6080860152606085018190526114969087615c18565b95508360800151856114a89190615c18565b94506114d78882815181106114bf576114bf615c97565b602002602001015160000151856000015185856142b2565b806114e181615d3e565b9150506112c7565b50505050935093915050565b600054610100900460ff16158080156115155750600054600160ff909116105b8061152f5750303b15801561152f575060005460ff166001145b6115925760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161091b565b6000805460ff1916600117905580156115b5576000805461ff0019166101001790555b600d80546001600f8190556001600160b01b031990911633620100000261ffff1916171790558015611621576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b600d546201000090046001600160a01b031633146116545760405162461bcd60e51b815260040161091b906159e4565b6001600160a01b03919091166000908152600660208181526040928390208451805182558083015160018301558085015160028301556060808201516003840155608080830151600485015560a0928301516005850155938701519483019490945593850151600782015591840151600883015583015160098201805461ffff191661ffff90921691909117905590820151600a82015560c090910151600b90910155565b600080611704614b04565b600a60006117156020870187614cb3565b6001600160a01b03166001600160a01b03168152602001908152602001600020600085602001602081019061174a9190614cb3565b6001600160a01b03166001600160a01b03168152602001908152602001600020600085604001602081019061177f9190615a23565b62ffffff16815260208101919091526040016000908120546001600160a01b031693506009906117b76104b036889003880188615060565b815260208082019290925260409081016000908120546001600160a01b038716825260068085529183902083516101a081018552815460e082019081526001830154610100830152600283810154610120840152600384015461014084015260048401546101608401526005840154610180840152908252938201549581019590955260078101549385019390935260088301546060850152600983015461ffff166080850152600a83015460a0850152600b9092015460c08401529496940b945092915050565b600d546201000090046001600160a01b031633146118af5760405162461bcd60e51b815260040161091b906159e4565b60006118ba87610db0565b60009081526008602052604090206001600160801b03968716600160801b968816870217815593861692909516909302176001820155600201555050565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152600460006119396104b036899003890189615060565b81526020019081526020016000206000611954868686610d63565b81526020808201929092526040908101600020815160a0810183528154815260018201549381019390935260028101546001600160801b0380821693850193909352600160801b9004821660608401526003015416608082015290505b949350505050565b600080600f546001146119de5760405162461bcd60e51b815260040161091b906159c0565b6002600f81905550611a426040518061014001604052806000815260200160008152602001600081526020016000815260200160008019168152602001600060020b8152602001600081526020016000815260200160008152602001600081525090565b611a546104b036899003890189615060565b60808201818152600091825260096020908152604080842054600290810b60a08701528351855260088352818520015460e08601529151835260049052812081611a9f898933610d63565b81526020019081526020016000209050600e60159054906101000a900460ff1615611adc5760405162461bcd60e51b815260040161091b90615ae0565b60028101546001600160801b031615801590611b08575060028101546001600160801b03808716911610155b611b385760405162461bcd60e51b81526020600482015260016024820152603760f91b604482015260640161091b565b6000600a81611b4a60208c018c614cb3565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6020016020810190611b7f9190614cb3565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190611bb49190615a23565b62ffffff16815260208082019290925260409081016000908120546001600160a01b031680825260068452828220835160c080820186528254825260018301548288015260028301548287015260038301546060830152600483015460808084019190915260059093015460a083015291890151845260079095529290912054918601919091529150885b8860020b8160020b121561201c576080850180516000908152600160209081526040808320600286810b8086529184528285205460c08c0151965186529084528285209185529252909120546001600160801b039182169291611ca391168b615d57565b6001600160801b0316611cb69190615c18565b816001600160801b03161015611cfa5760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b604482015260640161091b565b836001600160a01b031663a34123a7838860a0015185611d1a9190615c2b565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526001600160801b038c16604482015260640160408051808303816000875af1158015611d6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d939190615d1a565b6020880152865260a086015160009081906001600160a01b03871690634f1eb3d89030908790611dc39082615c2b565b6001600160801b03806040518663ffffffff1660e01b8152600401611dec959493929190615d77565b60408051808303816000875af1158015611e0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2e9190615db4565b90925090506001600160801b03831615611f26576000611e6e8960e00151670de0b6b3a76400008b60000151866001600160801b03166111319190615c50565b90506000611e9c8a60e00151670de0b6b3a76400008c60200151866001600160801b03166111319190615c50565b9050818a61010001818151611eb19190615c18565b9052506101208a018051829190611ec9908390615c18565b90525060808a01518a51611f23919088908590611eef906001600160801b038a16615c50565b611ef99190615c50565b848e60200151886001600160801b0316611f139190615c50565b611f1d9190615c50565b896143e5565b50505b8751604089018051611f39908390615c18565b9052506020880151606089018051611f52908390615c18565b90525060808801516000908152600160209081526040808320600288900b8452909152812080548d9290611f909084906001600160801b0316615cad565b92506101000a8154816001600160801b0302191690836001600160801b031602179055508a83611fc09190615cad565b6001600160801b0316600003611ff35760a088015160808901516000908152600b60205260409020611ff391869061446b565b61200384896080015188886142b2565b50505060a08501516120159082615c2b565b9050611c3f565b61202e8b8b8b8860a001516000613942565b50506080850151600090815260046020526040812089916120508d8d33610d63565b815260208101919091526040016000908120600201805490919061207e9084906001600160801b0316615cad565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000856040015111156120ca576120ca6120bf60208d018d614cb3565b338760400151614016565b6060850151156120f2576120f26120e760408d0160208e01614cb3565b338760600151614016565b6101008501511561212e5761212e61210d60208d018d614cb3565b600d60029054906101000a90046001600160a01b0316876101000151614016565b6101208501511561216d5761216d61214c60408d0160208e01614cb3565b600d60029054906101000a90046001600160a01b0316876101200151614016565b604080516001600160801b038a16815260028c810b60208301528b900b81830152905133916001600160a01b038616917f49ae36094cb0a2af1fad270a75bb3188db1a6e13c5b0b9a230319221247fda9d9181900360600190a35050505060408101516060909101516001600f559097909650945050505050565b6060816001600160401b0381111561220257612202614e28565b60405190808252806020026020018201604052801561223557816020015b60608152602001906001900390816122205790505b50905060005b828110156122d5576122a53085858481811061225957612259615c97565b905060200281019061226b9190615de3565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506144e892505050565b8282815181106122b7576122b7615c97565b602002602001018190525080806122cd90615d3e565b91505061223b565b505b92915050565b600d546201000090046001600160a01b0316331461230d5760405162461bcd60e51b815260040161091b906159e4565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600080600f546001146123545760405162461bcd60e51b815260040161091b906159c0565b6002600f55612361614b7c565b6123736104b0368a90038a018a615060565b808252600090815260096020908152604082205460020b81840152600a90829061239f908c018c614cb3565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60200160208101906123d49190614cb3565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60400160208101906124099190615a23565b62ffffff16815260208082019290925260409081016000908120546001600160a01b031680825260068452828220835160c0810185528154815260018201548187015260028083015482870152600383015460608301526004830154608083015260059092015460a08201528785015286518352600890945291902090910154610100840152600e54909150600160a01b900460ff16156124bc5760405162461bcd60e51b815260040161091b90615ae0565b8660020b8860020b126124f55760405162461bcd60e51b81526020600482015260016024820152606960f81b604482015260640161091b565b60208201516125049089615e3f565b60020b1580156125235750602082015161251e9088615e3f565b60020b155b6125535760405162461bcd60e51b81526020600482015260016024820152601960fa1b604482015260640161091b565b875b8760020b8160020b121561294157816001600160a01b0316633c8a7d8d30838660200151856125849190615c2b565b604080513360208201528d91016040516020818303038152906040526040518663ffffffff1660e01b81526004016125c0959493929190615ccd565b60408051808303816000875af11580156125de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126029190615d1a565b6080850152606084018190526126189086615c18565b945082608001518461262a9190615c18565b9350816001600160a01b031663514ea4bf308386602001518561264d9190615c2b565b60405160609390931b6bffffffffffffffffffffffff1916602084015260e891821b6034840152901b6037820152603a01604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016126b291815260200190565b60a060405180830381865afa1580156126cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f39190615e6f565b6001600160801b0390811660c08901521660a08701819052151592508291506127229050575060008360c00151115b156127b657816001600160a01b0316634f1eb3d830838660200151856127489190615c2b565b6001600160801b03806040518663ffffffff1660e01b8152600401612771959493929190615d77565b60408051808303816000875af115801561278f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b39190615db4565b50505b82516000908152600160209081526040808320600285900b84529091529020546001600160801b031660e08401819052156128995761010083015160a084015160009161280c9190670de0b6b3a7640000614116565b61010085015160c086015191925060009161282f91670de0b6b3a7640000614116565b90508185610120018181516128449190615c18565b9052506101408501805182919061285c908390615c18565b905250845160a086015161289291908590612878908690615c50565b848960c001516128889190615c50565b8960e001516143e5565b50506128bb565b60208084015184516000908152600b90925260409091206128bb91839061446b565b82516000908152600160209081526040808320600285900b8452909152812080548992906128f39084906001600160801b0316615d57565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061292b8184600001518486604001516142b2565b602083015161293a9082615c2b565b9050612555565b6129538a8a8a86602001516000613942565b5050610120830151156129915761299161297060208c018c614cb3565b600d60029054906101000a90046001600160a01b0316856101200151614016565b610140830151156129d0576129d06129af60408c0160208d01614cb3565b600d60029054906101000a90046001600160a01b0316856101400151614016565b8251600090815260046020526040812088916129ed8c8c8b610d63565b8152602081019190915260400160009081206002018054909190612a1b9084906001600160801b0316615d57565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550856001600160a01b0316826001600160a01b03167f7e1aa040ae22ae078b2e04d7e756a73671a8435cd8b72b0bd15f1cef372133d2898c8c604051612aa6939291906001600160801b03939093168352600291820b6020840152900b604082015260600190565b60405180910390a350506001600f555090969095509350505050565b600d546201000090046001600160a01b03163314612af25760405162461bcd60e51b815260040161091b906159e4565b600080856001600160a01b0316876001600160a01b031610612b15578587612b18565b86865b604080516001600160a01b03808516602083015283169181019190915262ffffff881660608201529193509150600090608001604051602081830303815290604052805190602001209050866001600160a01b0316886001600160a01b031603612bb15760405162461bcd60e51b815260206004820152600a60248201526939b0b6b2903a37b5b2b760b11b604482015260640161091b565b6001600160a01b03831615801590612bd157506001600160a01b03821615155b612c0c5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b604482015260640161091b565b6001600160a01b038381166000908152600a602090815260408083208685168452825280832062ffffff8b1684529091529020541615612c7c5760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b604482015260640161091b565b6001600160a01b038281166000908152600a602090815260408083208785168452825280832062ffffff8b1684529091529020541615612cec5760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b604482015260640161091b565b60008181526009602052604090205460020b15612d395760405162461bcd60e51b815260206004820152600b60248201526a7469636b2065786973747360a81b604482015260640161091b565b60008560020b138015612db85750886001600160a01b031663d0c93a7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612da99190615ec3565b612db39086615e3f565b60020b155b612dee5760405162461bcd60e51b815260206004820152600760248201526673706163696e6760c81b604482015260640161091b565b6001601060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555088600a6000856001600160a01b03166001600160a01b031681526020019081526020016000206000846001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555088600a6000846001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550846009600083815260200190815260200160002060006101000a81548162ffffff021916908360020b62ffffff1602179055506064600760008381526020019081526020016000208190555083600660008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155505060208201518160060155604082015181600701556060820151816008015560808201518160090160006101000a81548161ffff021916908361ffff16021790555060a082015181600a015560c082015181600b015590505088600c6000600d60009054906101000a900461ffff1661ffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600d600081819054906101000a900461ffff16809291906130b990615ee0565b825461ffff9182166101009390930a928302919092021990911617905550600e54604051633eb4adab60e01b81526001600160a01b038581166004830152848116602483015290911690633eb4adab90604401600060405180830381600087803b15801561312657600080fd5b505af115801561313a573d6000803e3d6000fd5b505050600082815260086020526040908190207706f05b59d3b20000000000000000000000038d7ea4c6800081557706f05b59d3b20000000000000000000000b1a2bc2ec50000600182015567016345785d8a0000600290910155516332148f6760e01b8152606460048201526001600160a01b038b1691506332148f6790602401600060405180830381600087803b1580156131d657600080fd5b505af11580156131ea573d6000803e3d6000fd5b50506040805162ffffff8a168152600289900b60208201526001600160a01b03808716945087811693508d16917fc57f9b9fa0ab86d2c86cc2d78f2f5d7cb8320503c0203fa154565617b830d0f9910160405180910390a4505050505050505050565b600e5460009081906001600160a01b0316331461327c5760405162461bcd60e51b815260040161091b90615a04565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526132b96104b036879003870187615060565b60808201819052600090815260096020908152604082205460020b8352613387918791600a91906132ec90840184614cb3565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906133219190614cb3565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860400160208101906133569190615a23565b62ffffff168152602081019190915260400160002054608084015184516001600160a01b0390921691889190613b2b565b9093509150505b9250929050565b3360009081526010602052604090205460ff166133dc5760405162461bcd60e51b8152602060048201526005602482015264085c1bdbdb60da1b604482015260640161091b565b60006133ea82840184614cb3565b9050600080336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561342d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134519190615f01565b336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561348f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134b39190615f01565b909250905086156134ca576134ca8284338a61450d565b85156134dc576134dc8184338961450d565b50505050505050565b600d546060906000906134fe9060019061ffff16615f1e565b61ffff1690506000816001600160401b0381111561351e5761351e614e28565b604051908082528060200260200182016040528015613547578160200160208202803683370190505b50905060005b828110156122d557600c6000613564836001615c18565b815260200190815260200160002060009054906101000a90046001600160a01b031682828151811061359857613598615c97565b6001600160a01b0390921660209283029190910190910152806135ba81615d3e565b91505061354d565b600e546001600160a01b031633146135ec5760405162461bcd60e51b815260040161091b90615a04565b61364960405180610100016040528060006001600160801b03168152602001600081526020016000815260200160006001600160801b03168152602001600081526020016000801916815260200160008152602001600081525090565b61365b6104b036879003870187615060565b60a0820181905260009081526008602052604081206002015460c0830152805b85518110156136d15785818151811061369657613696615c97565b602002602001015160200151836060018181516136b39190615d57565b6001600160801b0316905250806136c981615d3e565b91505061367b565b5060005b85518110156138e557600160008460a001518152602001908152602001600020600087838151811061370957613709615c97565b6020908102919091018101515160020b8252810191909152604001600020546001600160801b03168352855161377e9087908390811061374b5761374b615c97565b6020026020010151602001516001600160801b031684606001516001600160801b0316866141169092919063ffffffff16565b6040840181905260c084015187516137c292670de0b6b3a7640000918a90869081106137ac576137ac615c97565b6020026020010151604001516111319190615c18565b60e084018190526080840180516137da908390615c18565b915081815250506138368360e00151846040015188848151811061380057613800615c97565b6020026020010151604001516138169190615c18565b6138209190615c50565b8451600160801b906001600160801b0316614116565b836020018181525050600360008460a001518152602001908152602001600020600087838151811061386a5761386a615c97565b60200260200101516000015160020b60020b8152602001908152602001600020915084156138b55782602001518260010160008282546138aa9190615c18565b909155506138d39050565b82602001518260000160008282546138cd9190615c18565b90915550505b806138dd81615d3e565b9150506136d5565b5060808201511561393a5761393a8461390a576139056020880188614cb3565b61391a565b61391a6040880160208901614cb3565b600d60029054906101000a90046001600160a01b03168460800151614016565b505050505050565b6000806139a96040518061012001604052806000815260200160008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b031681526020016000801916815260200160008152602001600081525090565b83156139ba576139ba888888614590565b6139cc6104b0368a90038a018a615060565b60c082018190526000908152600460205260408120816139ed8a8a33610d63565b81526020019081526020016000209050613a0d8260c00151898989610f6a565b602084015280835281546002830154613a389291909103906001600160801b0316600160801b614116565b6001600160801b039081166080840152600182015460208401516002840154613a6b93929091039116600160801b614116565b6001600160801b0390811660a0840152608083015116151580613a9b575060008260a001516001600160801b0316115b15613af05760808201516002820180546001600160801b03600160801b8083048216909401811690930290831617905560a08301516003830180548084169092019092166001600160801b0319919091161790555b81518155602090910151600182015560028101546003909101546001600160801b03600160801b909204821693501690509550959350505050565b6000828152600760209081526040808320546001600160a01b038816845260068352818420825160c08101845281548152600182015494810194909452600281015492840192909252600382015460608401526004820154608084015260059091015460a083015282918290815b8851811015613f75576001600089815260200190815260200160002060008a8381518110613bc957613bc9615c97565b6020908102919091018101515160020b82528101919091526040016000205489516001600160801b039091169350899082908110613c0957613c09615c97565b6020026020010151602001516001600160801b031684600260008b815260200190815260200160002060008c8581518110613c4657613c46615c97565b6020908102919091018101515160020b825281019190915260400160002054613c7891906001600160801b0316615c18565b613c829190615c18565b836001600160801b03161015613cc65760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b604482015260640161091b565b888181518110613cd857613cd8615c97565b602002602001015160200151600260008a815260200190815260200160002060008b8481518110613d0b57613d0b615c97565b6020908102919091018101515160020b825281019190915260400160009081208054909190613d449084906001600160801b0316615d57565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000808b6001600160a01b031663a34123a78c8581518110613d8c57613d8c615c97565b6020026020010151600001518b8e8781518110613dab57613dab615c97565b602002602001015160000151613dc19190615c2b565b8e8781518110613dd357613dd3615c97565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af1158015613e39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e5d9190615d1a565b915091508b6001600160a01b0316634f1eb3d8308d8681518110613e8357613e83615c97565b6020026020010151600001518c8f8881518110613ea257613ea2615c97565b602002602001015160000151613eb89190615c2b565b86866040518663ffffffff1660e01b8152600401613eda959493929190615d77565b60408051808303816000875af1158015613ef8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f1c9190615db4565b50613f2990508289615c18565b9750613f358188615c18565b9650613f608b8481518110613f4c57613f4c615c97565b6020026020010151600001518b8e876142b2565b50508080613f6d90615d3e565b915050613b99565b50600085118015613f84575083155b80613f98575084158015613f985750600084115b613fcc5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b604482015260640161091b565b8415613fe957613fe9613fe260208c018c614cb3565b3387614016565b83156140095761400961400260408c0160208d01614cb3565b3386614016565b5050509550959350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916140729190615f39565b6000604051808303816000865af19150503d80600081146140af576040519150601f19603f3d011682016040523d82523d6000602084013e6140b4565b606091505b50915091508180156140de5750805115806140de5750808060200190518101906140de9190615f55565b61410f5760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640161091b565b5050505050565b600080806000198587098587029250828110838203039150508060000361414f576000841161414457600080fd5b508290049050610da9565b8084116141875760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b604482015260640161091b565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60008380156142945760018416801561420f57859250614213565b8392505b508260011c8460011c94505b841561428e578560801c1561423357600080fd5b8586028181018181101561424657600080fd5b859004965050600185161561428357858302838782041461426c57861561426c57600080fd5b8181018181101561427c57600080fd5b8590049350505b8460011c945061421f565b506142aa565b8380156142a457600092506142a8565b8392505b505b509392505050565b6001600160a01b0382166000908152600560209081526040808320600288810b808652918452828520888652600185528386208387528552838620548987529185528386209286529190935292205482546001600160801b039283169290911690670de0b6b3a76400009061438e9061432b9083615c18565b670de0b6b3a76400006111318760020154426143479190615c50565b60018901546040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
}
