/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium1",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "PoolAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "REPAY_THRESHOLD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "collectedFees0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "collectedFees1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeParams",
    outputs: [
      {
        internalType: "uint128",
        name: "openFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "feeToPool",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFeeToPool",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "LPFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "finishPriceX96",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "found",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getHashedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getHashedPositionKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedKey",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "minLiquidities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolTrusted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFeeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "LPFee",
        type: "uint256",
      },
    ],
    name: "updateFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50615f9b80620000216000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80639525092311610130578063aea84c91116100b8578063d34879971161007c578063d348799714610819578063d41dcbea1461082c578063d7a3dca014610841578063da69b0b314610873578063fc6e9cbf146108a757600080fd5b8063aea84c9114610744578063b8919fa614610757578063b9a402a51461076a578063bbd954721461077d578063c6c2c2ca1461079057600080fd5b8063a841fdd8116100ff578063a841fdd8146106bd578063a882c12d146106dd578063abf978e4146106f0578063ac9650d814610703578063ad16ab7e1461072357600080fd5b806395250923146105fe5780639744a42d146106205780639c47697c1461064b578063a84046551461065e57600080fd5b80635955cad3116101be5780636fc280e1116101825780636fc280e1146105535780637b4ee295146105a85780638129fc1c146105ca578063895f4ade146105d25780638da5cb5b146105e557600080fd5b80635955cad3146104575780635ea33ec5146104e457806365197688146104f7578063683356911461052d5780636cb42a2f1461054057600080fd5b806319fa10331161020557806319fa1033146102fe57806319fda27714610331578063406a3d021461037d57806345e61a4d1461039e578063482224421461044457600080fd5b80630229fb6014610237578063089ca8dd1461026457806313af4035146102975780631698ee82146102ac575b600080fd5b61024a610245366004614b91565b6108ba565b604080519283526020830191909152015b60405180910390f35b610287610272366004614c01565b60106020526000908152604090205460ff1681565b604051901515815260200161025b565b6102aa6102a5366004614c01565b61090d565b005b6102e66102ba366004614c31565b600a6020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b03909116815260200161025b565b61031161030c366004614d58565b610967565b604080516001600160801b0393841681529290911660208301520161025b565b61036561033f366004614da2565b60026020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b03909116815260200161025b565b61039061038b366004614dd2565b610b8b565b60405190815260200161025b565b6104316103ac366004614c01565b600660208181526000928352604092839020835160c081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301546080820152600583015460a082015290820154600783015460088401546009850154600a860154600b90960154949593949293919261ffff909116919087565b60405161025b9796959493929190614e4c565b610390610452366004614e93565b610bd8565b6104ae610465366004614eaf565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a00161025b565b61024a6104f2366004614ed1565b610c27565b61051a610505366004614f19565b60096020526000908152604090205460020b81565b60405160029190910b815260200161025b565b61039061053b366004614f8a565b610ccd565b61024a61054e3660046150cb565b610e08565b61058d610561366004615122565b600560209081526000928352604080842090915290825290208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161025b565b6105bb6105b636600461515e565b61112e565b60405161025b93929190615230565b6102aa611395565b6102aa6105e03660046152f8565b6114c4565b600d546102e6906201000090046001600160a01b031681565b61061161060c36600461532f565b611599565b60405161025b9392919061534b565b61039061062e3660046153c5565b600b60209081526000928352604080842090915290825290205481565b6102aa6106593660046153f0565b61171f565b61067161066c36600461543c565b611798565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a00161025b565b6103906106cb366004614f19565b60076020526000908152604090205481565b600e546102e6906001600160a01b031681565b61024a6106fe36600461548c565b611859565b6107166107113660046154dc565b612065565b60405161025b91906155a0565b610736610731366004615602565b61215a565b60405161025b929190615660565b6102aa610752366004614c01565b6122ce565b61024a610765366004615679565b612320565b6102aa6107783660046156db565b612a86565b61024a61078b366004615759565b613204565b6107de61079e366004614f19565b6008602052600090815260409020805460018201546002909201546001600160801b0380831693600160801b938490048216938183169391049091169085565b604080516001600160801b0396871681529486166020860152928516928401929092529092166060820152608081019190915260a00161025b565b6102aa6108273660046157a7565b61334c565b61083461349c565b60405161025b9190615826565b61024a61084f366004614da2565b60036020908152600092835260408084209091529082529020805460019091015482565b610365610881366004614da2565b60016020908152600092835260408084209091529082529020546001600160801b031681565b6102aa6108b5366004615873565b613579565b600080600f546001146108e85760405162461bcd60e51b81526004016108df906158cb565b60405180910390fd5b6002600f556108fb8686868660016138f9565b6001600f559097909650945050505050565b600d546201000090046001600160a01b0316331461093d5760405162461bcd60e51b81526004016108df906158ef565b600d80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b600080600f5460011461098c5760405162461bcd60e51b81526004016108df906158cb565b6002600f55600061099c86610bd8565b6000818152600960209081526040808320546004909252822092935060020b91816109c8898933610b8b565b8152602081019190915260400160009081206002810154909250600160801b90046001600160801b031615610ad45788516040516370a0823160e01b8152306004820152610a6a916001600160a01b0316906370a08231906024015b602060405180830381865afa158015610a41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a65919061590f565b613ae7565b60028301549091506001600160801b03600160801b909104811690821610610aa6576002820154600160801b90046001600160801b0316610aa8565b805b9550610ac2896000015133886001600160801b0316613b35565b6002820180546001600160801b031690555b60038201546001600160801b031615610b785760208901516040516370a0823160e01b8152306004820152610b1b916001600160a01b0316906370a0823190602401610a24565b60038301549091506001600160801b0390811690821610610b495760038201546001600160801b0316610b4b565b805b9450610b65896020015133876001600160801b0316613b35565b6003820180546001600160801b03191690555b50506001600f5550919590945092505050565b60408051600285810b602083015284900b918101919091526001600160a01b03821660608201526000906080016040516020818303038152906040528051906020012090505b9392505050565b805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff16606080840191909152835180840390910181526080909201909252805191012090565b6000806000859050610c4c604051806040016040528060008152602001600081525090565b8560020b8260020b1215610cc257506000878152600360209081526040808320600285900b84528252918290208251808401909352805480845260019091015491830191909152610c9d908561593e565b9350806020015183610caf919061593e565b9250610cbb8583615951565b9150610c4c565b505094509492505050565b6001600160a01b0383166000908152600560209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290670de0b6b3a764000090610df590610d31908361593e565b670de0b6b3a7640000610dee856040015142610d4d9190615976565b60208701516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91610d94918e9190600401615989565b602060405180830381865af4158015610db1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd5919061590f565b610de790670de0b6b3a764000061593e565b9190613c35565b9190613cf3565b610dff9190615976565b95945050505050565b600e5460009081906001600160a01b03163314610e375760405162461bcd60e51b81526004016108df906159a4565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526000600a81610e7460208a018a614c01565b6001600160a01b03166001600160a01b031681526020019081526020016000206000886020016020810190610ea99190614c01565b6001600160a01b03166001600160a01b031681526020019081526020016000206000886040016020810190610ede91906159c3565b62ffffff1681526020810191909152604001600020546001600160a01b03169050610f1161045236899003890189614e93565b808352600090815260096020908152604080832054600290810b838701526001600160a01b03851684526006835292819020815160c081018352815481526001820154938101939093529283015490820152600382015460608201526004820154608082015260059091015460a0820152610f8a6149a8565b60005b885181101561112157888181518110610fa857610fa86159de565b602090810291909101810151808201518751600090815260028085526040808320855190920b83529452928320805492955090929091610ff29084906001600160801b03166159f4565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550836001600160a01b0316633c8a7d8d3084600001518860200151866000015161103f9190615951565b86602001518d60405160200161106491906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611093959493929190615a14565b60408051808303816000875af11580156110b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d59190615a61565b6080870152606086018190526110eb908861593e565b96508460800151866110fd919061593e565b8251865191975061110f918686613dd1565b8061111981615a85565b915050610f8d565b5050505050935093915050565b600e5460009081906060906001600160a01b031633146111605760405162461bcd60e51b81526004016108df906159a4565b6111686149ea565b61117a610452368a90038a018a614e93565b6040820152600a600061119060208b018b614c01565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008960200160208101906111c59190614c01565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008960400160208101906111fa91906159c3565b62ffffff16815260208082019290925260409081016000908120546001600160a01b0390811661012086019081528584015183526009909452908290205460020b60e08086019190915292518251633850c7bd60e01b81529251911692633850c7bd92600480820193918290030181865afa15801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a19190615a9e565b5050506001600160a01b0390931660208501819052600093506112cd92508b91508a908a908a9061215a565b93509050600281900361136957731c93b108f6fc769fd8328624649ab8b61b7af9c76001600160a01b0316630b8a4f478a85600081518110611311576113116159de565b60200260200101516040518363ffffffff1660e01b8152600401611336929190615b87565b600060405180830381600087803b15801561135057600080fd5b505af1158015611364573d6000803e3d6000fd5b505050505b611383898361012001518585604001518660e00151613f04565b909a9099509297509195505050505050565b600054610100900460ff16158080156113b55750600054600160ff909116105b806113cf5750303b1580156113cf575060005460ff166001145b6114325760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108df565b6000805460ff191660011790558015611455576000805461ff0019166101001790555b600d80546001600f8190556001600160b01b031990911633620100000261ffff19161717905580156114c1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b600d546201000090046001600160a01b031633146114f45760405162461bcd60e51b81526004016108df906158ef565b6001600160a01b03919091166000908152600660208181526040928390208451805182558083015160018301558085015160028301556060808201516003840155608080830151600485015560a0928301516005850155938701519483019490945593850151600782015591840151600883015583015160098201805461ffff191661ffff90921691909117905590820151600a82015560c090910151600b90910155565b6000806115a4614a52565b600a60006115b56020870187614c01565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160208101906115ea9190614c01565b6001600160a01b03166001600160a01b03168152602001908152602001600020600085604001602081019061161f91906159c3565b62ffffff16815260208101919091526040016000908120546001600160a01b0316935060099061165761045236889003880188614e93565b815260208082019290925260409081016000908120546001600160a01b038716825260068085529183902083516101a081018552815460e082019081526001830154610100830152600283810154610120840152600384015461014084015260048401546101608401526005840154610180840152908252938201549581019590955260078101549385019390935260088301546060850152600983015461ffff166080850152600a83015460a0850152600b9092015460c08401529496940b945092915050565b600d546201000090046001600160a01b0316331461174f5760405162461bcd60e51b81526004016108df906158ef565b600061175a87610bd8565b60009081526008602052604090206001600160801b03968716600160801b968816870217815593861692909516909302176001820155600201555050565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152600460006117d961045236899003890189614e93565b815260200190815260200160002060006117f4868686610b8b565b81526020808201929092526040908101600020815160a0810183528154815260018201549381019390935260028101546001600160801b0380821693850193909352600160801b9004821660608401526003015416608082015290505b949350505050565b600080600f5460011461187e5760405162461bcd60e51b81526004016108df906158cb565b6002600f819055506118e26040518061014001604052806000815260200160008152602001600081526020016000815260200160008019168152602001600060020b8152602001600081526020016000815260200160008152602001600081525090565b6118f461045236899003890189614e93565b60808201818152600091825260096020908152604080842054600290810b60a08701528351855260088352818520015460e0860152915183526004905281208161193f898933610b8b565b8152602081019190915260400160002060028101549091506001600160801b03161580159061197e575060028101546001600160801b03808716911610155b6119ae5760405162461bcd60e51b81526020600482015260016024820152603760f91b60448201526064016108df565b6000600a816119c060208c018c614c01565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60200160208101906119f59190614c01565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190611a2a91906159c3565b62ffffff16815260208082019290925260409081016000908120546001600160a01b031680825260068452828220835160c080820186528254825260018301548288015260028301548287015260038301546060830152600483015460808084019190915260059093015460a083015291890151845260079095529290912054918601919091529150885b8860020b8160020b1215611e99576080850180516000908152600160209081526040808320600286810b808652918452828520549551855283528184209084529091529020546001600160801b039182169116611b12818b615ba3565b6001600160801b0316826001600160801b03161015611b5f5760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b60448201526064016108df565b6000611b6b82846159f4565b6001600160801b03161115611c1b57846001600160a01b031663a34123a7848960a0015186611b9a9190615951565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526001600160801b038d16604482015260640160408051808303816000875af1158015611bef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c139190615a61565b602089015287525b600080866001600160a01b0316634f1eb3d830878c60a0015189611c3f9190615951565b6001600160801b03806040518663ffffffff1660e01b8152600401611c68959493929190615bc3565b60408051808303816000875af1158015611c86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611caa9190615c00565b90925090506001600160801b03841615611da2576000611cea8a60e00151670de0b6b3a76400008c60000151866001600160801b0316610dee9190615976565b90506000611d188b60e00151670de0b6b3a76400008d60200151866001600160801b0316610dee9190615976565b9050818b61010001818151611d2d919061593e565b9052506101208b018051829190611d4590839061593e565b90525060808b01518b51611d9f919089908590611d6b906001600160801b038a16615976565b611d759190615976565b848f60200151886001600160801b0316611d8f9190615976565b611d999190615976565b8a6142c5565b50505b885160408a018051611db590839061593e565b905250602089015160608a018051611dce90839061593e565b90525060808901516000908152600160209081526040808320600289900b8452909152812080548e9290611e0c9084906001600160801b03166159f4565b92506101000a8154816001600160801b0302191690836001600160801b031602179055508b84611e3c91906159f4565b6001600160801b0316600003611e6f5760a089015160808a01516000908152600b60205260409020611e6f91879061434b565b611e7f858a608001518989613dd1565b50505060a0860151611e92915082615951565b9050611ab5565b611eab8b8b8b8860a0015160006138f9565b5050608085015160009081526004602052604081208991611ecd8d8d33610b8b565b8152602081019190915260400160009081206002018054909190611efb9084906001600160801b03166159f4565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600085604001511115611f4757611f47611f3c60208d018d614c01565b338760400151613b35565b606085015115611f6f57611f6f611f6460408d0160208e01614c01565b338760600151613b35565b61010085015115611fab57611fab611f8a60208d018d614c01565b600d60029054906101000a90046001600160a01b0316876101000151613b35565b61012085015115611fea57611fea611fc960408d0160208e01614c01565b600d60029054906101000a90046001600160a01b0316876101200151613b35565b604080516001600160801b038a16815260028c810b60208301528b900b81830152905133916001600160a01b038616917f49ae36094cb0a2af1fad270a75bb3188db1a6e13c5b0b9a230319221247fda9d9181900360600190a35050505060408101516060909101516001600f559097909650945050505050565b6060816001600160401b0381111561207f5761207f614c78565b6040519080825280602002602001820160405280156120b257816020015b606081526020019060019003908161209d5790505b50905060005b8281101561215257612122308585848181106120d6576120d66159de565b90506020028101906120e89190615c2f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506143c892505050565b828281518110612134576121346159de565b6020026020010181905250808061214a90615a85565b9150506120b8565b505b92915050565b600060606121666149ea565b612178610452368a90038a018a614e93565b6040828101829052516314368c3f60e31b8152600b6004820152871515602482015260448101899052606481018790526001600160a01b038616608482015260a481019190915273__$93dfed57e8f421caed97f24c336a056d51$$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91610d94918f9190600401615989565b613eb79190615976565b83556001600160801b03811615613eed57613ee86001600160801b0382811690670de0b6b3a7640000908516613cf3565b613ef0565b60005b600184015550504260029091015550505050565b6000828152600760209081526040808320546001600160a01b038816845260068352818420825160c08101845281548152600182015494810194909452600281015492840192909252600382015460608401526004820154608084015260059091015460a083015282918290613f786149a8565b60005b895181101561422357898181518110613f9657613f966159de565b60209081029190910181015160008b81526001835260408082208351600290810b845290855281832054848601518f8552828752838520865190930b8552919095529120546001600160801b039384169750919450613ff792909116615ba3565b6001600160801b0316846001600160801b031610156140445760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b60448201526064016108df565b60208083015160008b815260028084526040808320875190920b8352935291822080549192909161407f9084906001600160801b0316615ba3565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000808c6001600160a01b031663a34123a785600001518c87600001516140ca9190615951565b60208801516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af1158015614127573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061414b9190615a61565b855191935091506001600160a01b038e1690634f1eb3d890309061416f8e82615951565b61417887613ae7565b61418187613ae7565b6040518663ffffffff1660e01b81526004016141a1959493929190615bc3565b60408051808303816000875af11580156141bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141e39190615c00565b506141f09050828a61593e565b98506141fc818961593e565b975061420e84600001518c8f88613dd1565b5050808061421b90615a85565b915050613f7b565b50600086118015614232575084155b806142465750851580156142465750600085115b61427a5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b60448201526064016108df565b85156142975761429761429060208d018d614c01565b3388613b35565b84156142b7576142b76142b060408d0160208e01614c01565b3387613b35565b505050509550959350505050565b6000858152600360209081526040808320600288900b845290915290206142fa84600160801b6001600160801b038516613cf3565b81600001600082825461430d919061593e565b9091555061432b905083600160801b6001600160801b038516613cf3565b81600101600082825461433e919061593e565b9091555050505050505050565b8060020b8260020b8161436057614360615de2565b0760020b1561436e57600080fd5b60008061439c8360020b8560020b8161438957614389615de2565b0560020b600881901d9161010090910790565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b6060610bd18383604051806060016040528060278152602001615f3f60279139614892565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080613c2e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016108df565b600061448461045236869003860186614e93565b600081815260096020908152604080832054600883529083206002908101549495500b92869290918190819081908190600a9082906144c5908f018f614c01565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008d60200160208101906144fa9190614c01565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008d604001602081019061452f91906159c3565b62ffffff1681526020810191909152604001600020546001600160a01b031690505b8960020b8760020b1215614825576000898152600260208181526040808420928b900b808552928252808420548d855260018352818520938552929091528220546145a8916001600160801b0390811691166159f4565b6001600160801b03161115614645576001600160a01b03811663a34123a7886145d18b82615951565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526000604482015260640160408051808303816000875af115801561461e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146429190615a61565b50505b6000806001600160a01b038316634f1eb3d8308b6146638e82615951565b6001600160801b03806040518663ffffffff1660e01b815260040161468c959493929190615bc3565b60408051808303816000875af11580156146aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146ce9190615c00565b90925090506000806146f26001600160801b0385168b670de0b6b3a7640000613cf3565b61470e6001600160801b0385168c670de0b6b3a7640000613cf3565b909250905061471d828a61593e565b9850614729818961593e565b9750600160008e815260200190815260200160002060008c60020b60020b815260200190815260200160002060009054906101000a90046001600160801b031696506000876001600160801b0316111561480e5760008d815260036020908152604080832060028f900b8452909152902095506147c66147b2836001600160801b038716615976565b600160801b896001600160801b0316613cf3565b8660000160008282546147d9919061593e565b909155506147f590506147b2826001600160801b038616615976565b866001016000828254614808919061593e565b90915550505b50505050878761481e9190615951565b9650614551565b84156148535761485361483b60208e018e614c01565b600d546201000090046001600160a01b031687613b35565b83156148845761488461486c60408e0160208f01614c01565b600d546201000090046001600160a01b031686613b35565b505050505050505050505050565b6060600080856001600160a01b0316856040516148af9190615ef2565b600060405180830381855af49150503d80600081146148ea576040519150601f19603f3d011682016040523d82523d6000602084013e6148ef565b606091505b50915091506149008683838761490a565b9695505050505050565b60608315614979578251600003614972576001600160a01b0385163b6149725760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108df565b5081611851565b611851838381511561498e5781518083602001fd5b8060405162461bcd60e51b81526004016108df9190615f2b565b6040518060c00160405280600060020b815260200160006001600160801b03168152602001600081526020016000815260200160008152602001600081525090565b6040518061014001604052806000815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600060020b8152602001614a45614a52565b8152600060209091015290565b6040518060e00160405280614a966040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff16815260200160008152602001600081525090565b60405180610160016040528060008019168152602001600060020b8152602001614b236040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160006001600160801b031681526020016000815260200160008152602001600081525090565b600060608284031215614b7c57600080fd5b50919050565b8060020b81146114c157600080fd5b60008060008060c08587031215614ba757600080fd5b614bb18686614b6a565b93506060850135614bc181614b82565b92506080850135614bd181614b82565b915060a0850135614be181614b82565b939692955090935050565b6001600160a01b03811681146114c157600080fd5b600060208284031215614c1357600080fd5b8135610bd181614bec565b803562ffffff81168114613b3057600080fd5b600080600060608486031215614c4657600080fd5b8335614c5181614bec565b92506020840135614c6181614bec565b9150614c6f60408501614c1e565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715614cb057614cb0614c78565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614cde57614cde614c78565b604052919050565b600060608284031215614cf857600080fd5b604051606081018181106001600160401b0382111715614d1a57614d1a614c78565b6040529050808235614d2b81614bec565b81526020830135614d3b81614bec565b6020820152614d4c60408401614c1e565b60408201525092915050565b600080600060a08486031215614d6d57600080fd5b614d778585614ce6565b92506060840135614d8781614b82565b91506080840135614d9781614b82565b809150509250925092565b60008060408385031215614db557600080fd5b823591506020830135614dc781614b82565b809150509250929050565b600080600060608486031215614de757600080fd5b8335614df281614b82565b92506020840135614e0281614b82565b91506040840135614d9781614bec565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b6101808101614e5b828a614e12565b8760c08301528660e08301528561010083015261ffff8516610120830152836101408301528261016083015298975050505050505050565b600060608284031215614ea557600080fd5b610bd18383614ce6565b60008060408385031215614ec257600080fd5b50508035926020909101359150565b60008060008060808587031215614ee757600080fd5b843593506020850135614ef981614b82565b92506040850135614f0981614b82565b91506060850135614be181614b82565b600060208284031215614f2b57600080fd5b5035919050565b600060c08284031215614f4457600080fd5b614f4c614c8e565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015292915050565b60008060006101008486031215614fa057600080fd5b8335614fab81614bec565b92506020840135614fbb81614b82565b9150614c6f8560408601614f32565b60006001600160401b03821115614fe357614fe3614c78565b5060051b60200190565b6001600160801b03811681146114c157600080fd5b600082601f83011261501357600080fd5b8135602061502861502383614fca565b614cb6565b82815260c0928302850182019282820191908785111561504757600080fd5b8387015b858110156150be5781818a0312156150635760008081fd5b61506b614c8e565b813561507681614b82565b81528186013561508581614fed565b8187015260408281013590820152606080830135908201526080808301359082015260a08083013590820152845292840192810161504b565b5090979650505050505050565b600080600060a084860312156150e057600080fd5b6150ea8585614b6a565b925060608401356001600160401b0381111561510557600080fd5b61511186828701615002565b9250506080840135614d9781614bec565b6000806040838503121561513557600080fd5b823561514081614bec565b91506020830135614dc781614b82565b80151581146114c157600080fd5b60008060008060c0858703121561517457600080fd5b61517e8686614b6a565b935060608501359250608085013561519581615150565b9396929550929360a00135925050565b805160020b82526001600160801b03602082015116602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600081518084526020808501945080840160005b83811015615225576152128783516151a5565b60c09690960195908201906001016151ff565b509495945050505050565b838152826020820152606060408201526000610dff60608301846151eb565b61ffff811681146114c157600080fd5b6000610180828403121561527257600080fd5b60405160e081018181106001600160401b038211171561529457615294614c78565b6040529050806152a48484614f32565b815260c0830135602082015260e0830135604082015261010083013560608201526101208301356152d48161524f565b8060808301525061014083013560a082015261016083013560c08201525092915050565b6000806101a0838503121561530c57600080fd5b823561531781614bec565b9150615326846020850161525f565b90509250929050565b60006060828403121561534157600080fd5b610bd18383614b6a565b6001600160a01b0384168152600283900b602082015281516101c0820190615377906040840190614e12565b60208301516101008301526040830151610120830152606083015161014083015261ffff60808401511661016083015260a083015161018083015260c08301516101a0830152949350505050565b600080604083850312156153d857600080fd5b8235915060208301358060010b8114614dc757600080fd5b600080600080600080610100878903121561540a57600080fd5b6154148888614ce6565b986060880135985060808801359760a0810135975060c0810135965060e00135945092505050565b60008060008060c0858703121561545257600080fd5b61545c8686614b6a565b9350606085013561546c81614b82565b9250608085013561547c81614b82565b915060a0850135614be181614bec565b60008060008060c085870312156154a257600080fd5b6154ac8686614b6a565b935060608501356154bc81614b82565b925060808501356154cc81614b82565b915060a0850135614be181614fed565b600080602083850312156154ef57600080fd5b82356001600160401b038082111561550657600080fd5b818501915085601f83011261551a57600080fd5b81358181111561552957600080fd5b8660208260051b850101111561553e57600080fd5b60209290920196919550909350505050565b60005b8381101561556b578181015183820152602001615553565b50506000910152565b6000815180845261558c816020860160208601615550565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156155f557603f198886030184526155e3858351615574565b945092850192908501906001016155c7565b5092979650505050505050565b600080600080600060e0868803121561561a57600080fd5b6156248787614b6a565b945060608601359350608086013561563b81615150565b925060a0860135915060c086013561565281614bec565b809150509295509295909350565b82815260406020820152600061185160408301846151eb565b600080600080600060e0868803121561569157600080fd5b61569b8787614b6a565b945060608601356156ab81614b82565b935060808601356156bb81614b82565b925060a08601356156cb81614fed565b915060c086013561565281614bec565b60008060008060008061022087890312156156f557600080fd5b863561570081614bec565b9550602087013561571081614bec565b9450604087013561572081614bec565b935061572e60608801614c1e565b9250608087013561573e81614b82565b915061574d8860a0890161525f565b90509295509295509295565b6000806080838503121561576c57600080fd5b6157768484614b6a565b915060608301356001600160401b0381111561579157600080fd5b61579d85828601615002565b9150509250929050565b600080600080606085870312156157bd57600080fd5b843593506020850135925060408501356001600160401b03808211156157e257600080fd5b818701915087601f8301126157f657600080fd5b81358181111561580557600080fd5b88602082850101111561581757600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b818110156158675783516001600160a01b031683529284019291840191600101615842565b50909695505050505050565b60008060008060c0858703121561588957600080fd5b6158938686614b6a565b935060608501356001600160401b038111156158ae57600080fd5b6158ba87828801615002565b935050608085013561519581615150565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b60006020828403121561592157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561215457612154615928565b600281810b9083900b01627fffff8113627fffff198212171561215457612154615928565b8181038181111561215457612154615928565b60e081016159978285614e12565b8260c08301529392505050565b602080825260059082015264042c2eae8d60db1b604082015260600190565b6000602082840312156159d557600080fd5b610bd182614c1e565b634e487b7160e01b600052603260045260246000fd5b6001600160801b0382811682821603908082111561215257612152615928565b60018060a01b03861681528460020b60208201528360020b60408201526001600160801b038316606082015260a060808201526000615a5660a0830184615574565b979650505050505050565b60008060408385031215615a7457600080fd5b505080516020909101519092909150565b600060018201615a9757615a97615928565b5060010190565b600080600080600080600060e0888a031215615ab957600080fd5b8751615ac481614bec565b6020890151909750615ad581614b82565b6040890151909650615ae68161524f565b6060890151909550615af78161524f565b6080890151909450615b088161524f565b60a089015190935060ff81168114615b1f57600080fd5b60c0890151909250615b3081615150565b8091505092959891949750929550565b8035615b4b81614bec565b6001600160a01b039081168352602082013590615b6782614bec565b16602083015262ffffff615b7d60408301614c1e565b1660408301525050565b6101208101615b968285615b40565b610bd160608301846151a5565b6001600160801b0381811683821601908082111561215257612152615928565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b60008060408385031215615c1357600080fd5b8251615c1e81614fed565b6020840151909250614dc781614fed565b6000808335601e19843603018112615c4657600080fd5b8301803591506001600160401b03821115615c6057600080fd5b60200191503681900382131561334557600080fd5b600082601f830112615c8657600080fd5b81516020615c9661502383614fca565b82815260c09283028501820192828201919087851115615cb557600080fd5b8387015b858110156150be5781818a031215615cd15760008081fd5b615cd9614c8e565b8151615ce481614b82565b815281860151615cf381614fed565b8187015260408281015190820152606080830151908201526080808301519082015260a080830151908201528452928401928101615cb9565b600080600060608486031215615d4157600080fd5b835192506020840151915060408401516001600160401b03811115615d6557600080fd5b615d7186828701615c75565b9150509250925092565b851515815260208101859052604081018490526001600160a01b038316606082015260e081016149006080830184615b40565b600060208284031215615dc057600080fd5b81516001600160401b03811115615dd657600080fd5b61185184828501615c75565b634e487b7160e01b600052601260045260246000fd5b60008260020b80615e1957634e487b7160e01b600052601260045260246000fd5b808360020b0791505092915050565b600080600080600060a08688031215615e4057600080fd5b8551615e4b81614fed565b8095505060208601519350604086015192506060860151615e6b81614fed565b608087015190925061565281614fed565b600060208284031215615e8e57600080fd5b8151610bd181614b82565b600061ffff808316818103615eb057615eb0615928565b6001019392505050565b600060208284031215615ecc57600080fd5b8151610bd181614bec565b61ffff82811682821603908082111561215257612152615928565b60008251615f04818460208701615550565b9190910192915050565b600060208284031215615f2057600080fd5b8151610bd181615150565b602081526000610bd1602083018461557456fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bb61017c15e3c322e2395eeea2f985ff68153af876265e3876e10d3eea1c42fe64736f6c63430008120033";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
}
