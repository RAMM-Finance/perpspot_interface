/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium1",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "PoolAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "REPAY_THRESHOLD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "collectedFees0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "collectedFees1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeParams",
    outputs: [
      {
        internalType: "uint128",
        name: "openFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "feeToPool",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFeeToPool",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "LPFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "finishPriceX96",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getHashedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getHashedPositionKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedKey",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "minLiquidities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "collectPaused",
        type: "bool",
      },
    ],
    name: "setCollectPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "minLiquidity",
        type: "uint256",
      },
    ],
    name: "setMinLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "providePaused",
        type: "bool",
      },
    ],
    name: "setProvidePaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "withdrawPaused",
        type: "bool",
      },
    ],
    name: "setWithdrawPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFeeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "LPFee",
        type: "uint256",
      },
    ],
    name: "updateFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50615fec80620000216000396000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c8063895f4ade11610146578063aea84c91116100c3578063d348799711610087578063d348799714610840578063d41dcbea14610853578063d7a3dca014610868578063da69b0b31461089a578063dc724d3a146108ce578063fc6e9cbf146108e157600080fd5b8063aea84c911461076b578063b8919fa61461077e578063b9a402a514610791578063bbd95472146107a4578063c6c2c2ca146107b757600080fd5b8063a84046551161010a578063a8404655146106a6578063a841fdd814610705578063a882c12d14610725578063abf978e414610738578063ac9650d81461074b57600080fd5b8063895f4ade1461061a5780638da5cb5b1461062d57806395250923146106465780639744a42d146106685780639c47697c1461069357600080fd5b806345e61a4d116101d45780636519768811610198578063651976881461056157806368335691146105975780636cb42a2f146105aa5780636fc280e1146105bd5780638129fc1c1461061257600080fd5b806345e61a4d146103e7578063482224421461048d57806348c6f866146104a05780635955cad3146104c15780635ea33ec51461054e57600080fd5b806319fa10331161021b57806319fa10331461032157806319fda2771461035457806325f149ce146103a057806337d15139146103b3578063406a3d02146103c657600080fd5b80630229fb60146102585780630ea50f501461028557806313af4035146102a75780631698ee82146102bc57806318cdea9d1461030e575b600080fd5b61026b610266366004614c22565b6108f4565b604080519283526020830191909152015b60405180910390f35b610298610293366004614c8b565b610947565b60405161027c93929190614d57565b6102ba6102b5366004614d8b565b610b17565b005b6102f66102ca366004614dc0565b600a6020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b03909116815260200161027c565b6102ba61031c366004614ee7565b610b71565b61033461032f366004614f12565b610bc4565b604080516001600160801b0393841681529290911660208301520161027c565b610388610362366004614f5c565b60026020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b03909116815260200161027c565b6102ba6103ae366004614f8c565b610d0d565b6102ba6103c1366004614f8c565b610d5b565b6103d96103d4366004614fa9565b610da9565b60405190815260200161027c565b61047a6103f5366004614d8b565b600660208181526000928352604092839020835160c081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301546080820152600583015460a082015290820154600783015460088401546009850154600a860154600b90960154949593949293919261ffff909116919087565b60405161027c9796959493929190615023565b6103d961049b36600461506a565b610df6565b6104b36104ae366004615086565b610e45565b60405161027c9291906150ed565b6105186104cf366004615106565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a00161027c565b61026b61055c366004615128565b610fb0565b61058461056f366004615170565b60096020526000908152604090205460020b81565b60405160029190910b815260200161027c565b6103d96105a53660046151e1565b611056565b61026b6105b8366004615322565b611191565b6105f76105cb366004615379565b600560209081526000928352604080842090915290825290208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161027c565b6102ba61153b565b6102ba610628366004615450565b61166a565b600d546102f6906201000090046001600160a01b031681565b610659610654366004615487565b61173f565b60405161027c939291906154a3565b6103d961067636600461551d565b600b60209081526000928352604080842090915290825290205481565b6102ba6106a1366004615548565b6118c5565b6106b96106b4366004615594565b61193e565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a00161027c565b6103d9610713366004615170565b60076020526000908152604090205481565b600e546102f6906001600160a01b031681565b61026b6107463660046155e4565b6119ff565b61075e610759366004615634565b61222e565b60405161027c91906156f8565b6102ba610779366004614d8b565b612323565b61026b61078c36600461575a565b612375565b6102ba61079f3660046157ca565b612b08565b61026b6107b2366004615848565b613225565b6108056107c5366004615170565b6008602052600090815260409020805460018201546002909201546001600160801b0380831693600160801b938490048216938183169391049091169085565b604080516001600160801b0396871681529486166020860152928516928401929092529092166060820152608081019190915260a00161027c565b6102ba61084e366004615896565b61336d565b61085b613476565b60405161027c9190615915565b61026b610876366004614f5c565b60036020908152600092835260408084209091529082529020805460019091015482565b6103886108a8366004614f5c565b60016020908152600092835260408084209091529082529020546001600160801b031681565b6102ba6108dc366004614f8c565b613553565b6102ba6108ef366004615962565b6135a1565b600080600f546001146109225760405162461bcd60e51b8152600401610919906159ca565b60405180910390fd5b6002600f55610935868686866001613921565b6001600f559097909650945050505050565b600e5460009081906060906001600160a01b031633146109795760405162461bcd60e51b8152600401610919906159ee565b610981614a7b565b61099361049b368b90038b018b61506a565b6040820152600a60006109a960208c018c614d8b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60200160208101906109de9190614d8b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190610a139190615a0d565b62ffffff16815260208082019290925260409081016000908120546001600160a01b0390811661012086019081528584015183526009909452908290205460020b60e08086019190915292518251633850c7bd60e01b81529251911692633850c7bd92600480820193918290030181865afa158015610a96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aba9190615a28565b5050506001600160a01b0390931660208501819052610ae593508c92508b91508a908a908a90610e45565b905080925050610b05898261012001518484604001518560e00151613b0a565b909a9099509197509095505050505050565b600d546201000090046001600160a01b03163314610b475760405162461bcd60e51b815260040161091990615aca565b600d80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b600d546201000090046001600160a01b03163314610ba15760405162461bcd60e51b815260040161091990615aca565b8060076000610baf85610df6565b81526020810191909152604001600020555050565b600080600f54600114610be95760405162461bcd60e51b8152600401610919906159ca565b6002600f55600e54600160b01b900460ff1615610c185760405162461bcd60e51b815260040161091990615aea565b6000610c2386610df6565b6000818152600960209081526040808320546004909252822092935060020b9181610c4f898933610da9565b815260208101919091526040016000206002810154909150600160801b90046001600160801b031615610cb35760028101548851600160801b9091046001600160801b03169550610ca1903387613ff5565b6002810180546001600160801b031690555b60038101546001600160801b031615610cfb57600381015460208901516001600160801b039091169450610ce8903386613ff5565b6003810180546001600160801b03191690555b50506001600f55509094909350915050565b600d546201000090046001600160a01b03163314610d3d5760405162461bcd60e51b815260040161091990615aca565b600e8054911515600160a01b0260ff60a01b19909216919091179055565b600d546201000090046001600160a01b03163314610d8b5760405162461bcd60e51b815260040161091990615aca565b600e8054911515600160a81b0260ff60a81b19909216919091179055565b60408051600285810b602083015284900b918101919091526001600160a01b03821660608201526000906080016040516020818303038152906040528051906020012090505b9392505050565b805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff16606080840191909152835180840390910181526080909201909252805191012090565b60006060610e51614a7b565b610e6361049b368b90038b018b61506a565b60408083018290525163225e631360e21b8152600b600482015287151560248201526044810189905260648101879052608481018a90526001600160a01b03861660a482015260c481019190915273__$93dfed57e8f421caed97f24c336a056d51$__906389798c4c9060e401600060405180830381865af4158015610eed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f159190810190615b0a565b60808401919091526060830182905292508714610f5e5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610919565b85610f855760608101516080820151610f8091670de0b6b3a7640000906140f5565b610fa2565b60808101516060820151610fa291670de0b6b3a7640000906140f5565b925050965096945050505050565b6000806000859050610fd5604051806040016040528060008152602001600081525090565b8560020b8260020b121561104b57506000878152600360209081526040808320600285900b845282529182902082518084019093528054808452600190910154918301919091526110269085615c22565b93508060200151836110389190615c22565b92506110448583615c35565b9150610fd5565b505094509492505050565b6001600160a01b0383166000908152600560209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290670de0b6b3a76400009061117e906110ba9083615c22565b670de0b6b3a76400006111778560400151426110d69190615c5a565b60208701516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf9161111d918e9190600401615c6d565b602060405180830381865af415801561113a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115e9190615c88565b61117090670de0b6b3a7640000615c22565b91906141d3565b91906140f5565b6111889190615c5a565b95945050505050565b600e5460009081906001600160a01b031633146111c05760405162461bcd60e51b8152600401610919906159ee565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526000600a816111fd60208a018a614d8b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906112329190614d8b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860400160208101906112679190615a0d565b62ffffff1681526020810191909152604001600020546001600160a01b0316905061129a61049b3689900389018961506a565b808352600090815260096020908152604080832054600290810b838701526001600160a01b038516845260068352818420825160c08101845281548152600182015494810194909452908101549183019190915260038101546060830152600481015460808301526005015460a0820152905b875181101561152f5787818151811061132857611328615ca1565b602002602001015160200151600260008660000151815260200190815260200160002060008a848151811061135f5761135f615ca1565b6020908102919091018101515160020b8252810191909152604001600090812080549091906113989084906001600160801b0316615cb7565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550826001600160a01b0316633c8a7d8d308a84815181106113de576113de615ca1565b60200260200101516000015187602001518c868151811061140157611401615ca1565b6020026020010151600001516114179190615c35565b8c868151811061142957611429615ca1565b6020026020010151602001518c60405160200161145591906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611484959493929190615cd7565b60408051808303816000875af11580156114a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c69190615d24565b6080860152606085018190526114dc9087615c22565b95508360800151856114ee9190615c22565b945061151d88828151811061150557611505615ca1565b60200260200101516000015185600001518585614291565b8061152781615d48565b91505061130d565b50505050935093915050565b600054610100900460ff161580801561155b5750600054600160ff909116105b806115755750303b158015611575575060005460ff166001145b6115d85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610919565b6000805460ff1916600117905580156115fb576000805461ff0019166101001790555b600d80546001600f8190556001600160b01b031990911633620100000261ffff1916171790558015611667576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b600d546201000090046001600160a01b0316331461169a5760405162461bcd60e51b815260040161091990615aca565b6001600160a01b03919091166000908152600660208181526040928390208451805182558083015160018301558085015160028301556060808201516003840155608080830151600485015560a0928301516005850155938701519483019490945593850151600782015591840151600883015583015160098201805461ffff191661ffff90921691909117905590820151600a82015560c090910151600b90910155565b60008061174a614ae3565b600a600061175b6020870187614d8b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160208101906117909190614d8b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560400160208101906117c59190615a0d565b62ffffff16815260208101919091526040016000908120546001600160a01b031693506009906117fd61049b3688900388018861506a565b815260208082019290925260409081016000908120546001600160a01b038716825260068085529183902083516101a081018552815460e082019081526001830154610100830152600283810154610120840152600384015461014084015260048401546101608401526005840154610180840152908252938201549581019590955260078101549385019390935260088301546060850152600983015461ffff166080850152600a83015460a0850152600b9092015460c08401529496940b945092915050565b600d546201000090046001600160a01b031633146118f55760405162461bcd60e51b815260040161091990615aca565b600061190087610df6565b60009081526008602052604090206001600160801b03968716600160801b968816870217815593861692909516909302176001820155600201555050565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526004600061197f61049b3689900389018961506a565b8152602001908152602001600020600061199a868686610da9565b81526020808201929092526040908101600020815160a0810183528154815260018201549381019390935260028101546001600160801b0380821693850193909352600160801b9004821660608401526003015416608082015290505b949350505050565b600080600f54600114611a245760405162461bcd60e51b8152600401610919906159ca565b6002600f81905550611a886040518061014001604052806000815260200160008152602001600081526020016000815260200160008019168152602001600060020b8152602001600081526020016000815260200160008152602001600081525090565b611a9a61049b3689900389018961506a565b60808201818152600091825260096020908152604080842054600290810b60a08701528351855260088352818520015460e08601529151835260049052812081611ae5898933610da9565b81526020019081526020016000209050600e60159054906101000a900460ff1615611b225760405162461bcd60e51b815260040161091990615aea565b60028101546001600160801b031615801590611b4e575060028101546001600160801b03808716911610155b611b7e5760405162461bcd60e51b81526020600482015260016024820152603760f91b6044820152606401610919565b6000600a81611b9060208c018c614d8b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6020016020810190611bc59190614d8b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190611bfa9190615a0d565b62ffffff16815260208082019290925260409081016000908120546001600160a01b031680825260068452828220835160c080820186528254825260018301548288015260028301548287015260038301546060830152600483015460808084019190915260059093015460a083015291890151845260079095529290912054918601919091529150885b8860020b8160020b1215612062576080850180516000908152600160209081526040808320600286810b8086529184528285205460c08c0151965186529084528285209185529252909120546001600160801b039182169291611ce991168b615d61565b6001600160801b0316611cfc9190615c22565b816001600160801b03161015611d405760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b6044820152606401610919565b836001600160a01b031663a34123a7838860a0015185611d609190615c35565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526001600160801b038c16604482015260640160408051808303816000875af1158015611db5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd99190615d24565b6020880152865260a086015160009081906001600160a01b03871690634f1eb3d89030908790611e099082615c35565b6001600160801b03806040518663ffffffff1660e01b8152600401611e32959493929190615d81565b60408051808303816000875af1158015611e50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e749190615dbe565b90925090506001600160801b03831615611f6c576000611eb48960e00151670de0b6b3a76400008b60000151866001600160801b03166111779190615c5a565b90506000611ee28a60e00151670de0b6b3a76400008c60200151866001600160801b03166111779190615c5a565b9050818a61010001818151611ef79190615c22565b9052506101208a018051829190611f0f908390615c22565b90525060808a01518a51611f69919088908590611f35906001600160801b038a16615c5a565b611f3f9190615c5a565b848e60200151886001600160801b0316611f599190615c5a565b611f639190615c5a565b896143c4565b50505b8751604089018051611f7f908390615c22565b9052506020880151606089018051611f98908390615c22565b90525060808801516000908152600160209081526040808320600288900b8452909152812080548d9290611fd69084906001600160801b0316615cb7565b92506101000a8154816001600160801b0302191690836001600160801b031602179055508a836120069190615cb7565b6001600160801b03166000036120395760a088015160808901516000908152600b6020526040902061203991869061444a565b6120498489608001518888614291565b50505060a085015161205b9082615c35565b9050611c85565b6120748b8b8b8860a001516000613921565b50506080850151600090815260046020526040812089916120968d8d33610da9565b81526020810191909152604001600090812060020180549091906120c49084906001600160801b0316615cb7565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000856040015111156121105761211061210560208d018d614d8b565b338760400151613ff5565b6060850151156121385761213861212d60408d0160208e01614d8b565b338760600151613ff5565b610100850151156121745761217461215360208d018d614d8b565b600d60029054906101000a90046001600160a01b0316876101000151613ff5565b610120850151156121b3576121b361219260408d0160208e01614d8b565b600d60029054906101000a90046001600160a01b0316876101200151613ff5565b604080516001600160801b038a16815260028c810b60208301528b900b81830152905133916001600160a01b038616917f49ae36094cb0a2af1fad270a75bb3188db1a6e13c5b0b9a230319221247fda9d9181900360600190a35050505060408101516060909101516001600f559097909650945050505050565b6060816001600160401b0381111561224857612248614e07565b60405190808252806020026020018201604052801561227b57816020015b60608152602001906001900390816122665790505b50905060005b8281101561231b576122eb3085858481811061229f5761229f615ca1565b90506020028101906122b19190615ded565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506144c792505050565b8282815181106122fd576122fd615ca1565b6020026020010181905250808061231390615d48565b915050612281565b505b92915050565b600d546201000090046001600160a01b031633146123535760405162461bcd60e51b815260040161091990615aca565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600080600f5460011461239a5760405162461bcd60e51b8152600401610919906159ca565b6002600f556123a7614b5b565b6123b961049b368a90038a018a61506a565b808252600090815260096020908152604082205460020b81840152600a9082906123e5908c018c614d8b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a602001602081019061241a9190614d8b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a604001602081019061244f9190615a0d565b62ffffff16815260208082019290925260409081016000908120546001600160a01b031680825260068452828220835160c0810185528154815260018201548187015260028083015482870152600383015460608301526004830154608083015260059092015460a08201528785015286518352600890945291902090910154610100840152600e54909150600160a01b900460ff16156125025760405162461bcd60e51b815260040161091990615aea565b8660020b8860020b1261253b5760405162461bcd60e51b81526020600482015260016024820152606960f81b6044820152606401610919565b602082015161254a9089615e49565b60020b158015612569575060208201516125649088615e49565b60020b155b6125995760405162461bcd60e51b81526020600482015260016024820152601960fa1b6044820152606401610919565b875b8760020b8160020b121561298757816001600160a01b0316633c8a7d8d30838660200151856125ca9190615c35565b604080513360208201528d91016040516020818303038152906040526040518663ffffffff1660e01b8152600401612606959493929190615cd7565b60408051808303816000875af1158015612624573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126489190615d24565b60808501526060840181905261265e9086615c22565b94508260800151846126709190615c22565b9350816001600160a01b031663514ea4bf30838660200151856126939190615c35565b60405160609390931b6bffffffffffffffffffffffff1916602084015260e891821b6034840152901b6037820152603a01604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016126f891815260200190565b60a060405180830381865afa158015612715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127399190615e79565b6001600160801b0390811660c08901521660a08701819052151592508291506127689050575060008360c00151115b156127fc57816001600160a01b0316634f1eb3d8308386602001518561278e9190615c35565b6001600160801b03806040518663ffffffff1660e01b81526004016127b7959493929190615d81565b60408051808303816000875af11580156127d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f99190615dbe565b50505b82516000908152600160209081526040808320600285900b84529091529020546001600160801b031660e08401819052156128df5761010083015160a08401516000916128529190670de0b6b3a76400006140f5565b61010085015160c086015191925060009161287591670de0b6b3a76400006140f5565b905081856101200181815161288a9190615c22565b905250610140850180518291906128a2908390615c22565b905250845160a08601516128d8919085906128be908690615c5a565b848960c001516128ce9190615c5a565b8960e001516143c4565b5050612901565b60208084015184516000908152600b909252604090912061290191839061444a565b82516000908152600160209081526040808320600285900b8452909152812080548992906129399084906001600160801b0316615d61565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550612971818460000151848660400151614291565b60208301516129809082615c35565b905061259b565b6129998a8a8a86602001516000613921565b5050610120830151156129d7576129d76129b660208c018c614d8b565b600d60029054906101000a90046001600160a01b0316856101200151613ff5565b61014083015115612a1657612a166129f560408c0160208d01614d8b565b600d60029054906101000a90046001600160a01b0316856101400151613ff5565b825160009081526004602052604081208891612a338c8c8b610da9565b8152602081019190915260400160009081206002018054909190612a619084906001600160801b0316615d61565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550856001600160a01b0316826001600160a01b03167f7e1aa040ae22ae078b2e04d7e756a73671a8435cd8b72b0bd15f1cef372133d2898c8c604051612aec939291906001600160801b03939093168352600291820b6020840152900b604082015260600190565b60405180910390a350506001600f555090969095509350505050565b600080856001600160a01b0316876001600160a01b031610612b2b578587612b2e565b86865b604080516001600160a01b03808516602083015283169181019190915262ffffff881660608201529193509150600090608001604051602081830303815290604052805190602001209050866001600160a01b0316886001600160a01b031603612bc75760405162461bcd60e51b815260206004820152600a60248201526939b0b6b2903a37b5b2b760b11b6044820152606401610919565b6001600160a01b03831615801590612be757506001600160a01b03821615155b612c225760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610919565b6001600160a01b038381166000908152600a602090815260408083208685168452825280832062ffffff8b1684529091529020541615612c925760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b6044820152606401610919565b6001600160a01b038281166000908152600a602090815260408083208785168452825280832062ffffff8b1684529091529020541615612d025760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b6044820152606401610919565b60008181526009602052604090205460020b15612d4f5760405162461bcd60e51b815260206004820152600b60248201526a7469636b2065786973747360a81b6044820152606401610919565b60008560020b138015612dce5750886001600160a01b031663d0c93a7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dbf9190615ecd565b612dc99086615e49565b60020b155b612e045760405162461bcd60e51b815260206004820152600760248201526673706163696e6760c81b6044820152606401610919565b88600a6000856001600160a01b03166001600160a01b031681526020019081526020016000206000846001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555088600a6000846001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550846009600083815260200190815260200160002060006101000a81548162ffffff021916908360020b62ffffff1602179055506064600760008381526020019081526020016000208190555083600660008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155505060208201518160060155604082015181600701556060820151816008015560808201518160090160006101000a81548161ffff021916908361ffff16021790555060a082015181600a015560c082015181600b015590505088600c6000600d60009054906101000a900461ffff1661ffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600d600081819054906101000a900461ffff168092919061309190615eea565b825461ffff9182166101009390930a928302919092021990911617905550600e54604051633eb4adab60e01b81526001600160a01b038581166004830152848116602483015290911690633eb4adab90604401600060405180830381600087803b1580156130fe57600080fd5b505af1158015613112573d6000803e3d6000fd5b505050600082815260086020526040908190207706f05b59d3b20000000000000000000000038d7ea4c6800081557706f05b59d3b20000000000000000000000b1a2bc2ec50000600182015567016345785d8a0000600290910155516332148f6760e01b8152606460048201526001600160a01b038b1691506332148f6790602401600060405180830381600087803b1580156131ae57600080fd5b505af11580156131c2573d6000803e3d6000fd5b50506040805162ffffff8a168152600289900b60208201526001600160a01b03808716945087811693508d16917fc57f9b9fa0ab86d2c86cc2d78f2f5d7cb8320503c0203fa154565617b830d0f9910160405180910390a4505050505050505050565b600e5460009081906001600160a01b031633146132545760405162461bcd60e51b8152600401610919906159ee565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261329161049b3687900387018761506a565b60808201819052600090815260096020908152604082205460020b835261335f918791600a91906132c490840184614d8b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906132f99190614d8b565b6001600160a01b03166001600160a01b03168152602001908152602001600020600088604001602081019061332e9190615a0d565b62ffffff168152602081019190915260400160002054608084015184516001600160a01b0390921691889190613b0a565b9093509150505b9250929050565b600061337b82840184614d8b565b9050600080336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156133be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133e29190615f0b565b336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134449190615f0b565b9092509050861561345b5761345b8284338a6144ec565b851561346d5761346d818433896144ec565b50505050505050565b600d5460609060009061348f9060019061ffff16615f28565b61ffff1690506000816001600160401b038111156134af576134af614e07565b6040519080825280602002602001820160405280156134d8578160200160208202803683370190505b50905060005b8281101561231b57600c60006134f5836001615c22565b815260200190815260200160002060009054906101000a90046001600160a01b031682828151811061352957613529615ca1565b6001600160a01b03909216602092830291909101909101528061354b81615d48565b9150506134de565b600d546201000090046001600160a01b031633146135835760405162461bcd60e51b815260040161091990615aca565b600e8054911515600160b01b0260ff60b01b19909216919091179055565b600e546001600160a01b031633146135cb5760405162461bcd60e51b8152600401610919906159ee565b61362860405180610100016040528060006001600160801b03168152602001600081526020016000815260200160006001600160801b03168152602001600081526020016000801916815260200160008152602001600081525090565b61363a61049b3687900387018761506a565b60a0820181905260009081526008602052604081206002015460c0830152805b85518110156136b05785818151811061367557613675615ca1565b602002602001015160200151836060018181516136929190615d61565b6001600160801b0316905250806136a881615d48565b91505061365a565b5060005b85518110156138c457600160008460a00151815260200190815260200160002060008783815181106136e8576136e8615ca1565b6020908102919091018101515160020b8252810191909152604001600020546001600160801b03168352855161375d9087908390811061372a5761372a615ca1565b6020026020010151602001516001600160801b031684606001516001600160801b0316866140f59092919063ffffffff16565b6040840181905260c084015187516137a192670de0b6b3a7640000918a908690811061378b5761378b615ca1565b6020026020010151604001516111779190615c22565b60e084018190526080840180516137b9908390615c22565b915081815250506138158360e0015184604001518884815181106137df576137df615ca1565b6020026020010151604001516137f59190615c22565b6137ff9190615c5a565b8451600160801b906001600160801b03166140f5565b836020018181525050600360008460a001518152602001908152602001600020600087838151811061384957613849615ca1565b60200260200101516000015160020b60020b8152602001908152602001600020915084156138945782602001518260010160008282546138899190615c22565b909155506138b29050565b82602001518260000160008282546138ac9190615c22565b90915550505b806138bc81615d48565b9150506136b4565b5060808201511561391957613919846138e9576138e46020880188614d8b565b6138f9565b6138f96040880160208901614d8b565b600d60029054906101000a90046001600160a01b03168460800151613ff5565b505050505050565b6000806139886040518061012001604052806000815260200160008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b031681526020016000801916815260200160008152602001600081525090565b83156139995761399988888861456f565b6139ab61049b368a90038a018a61506a565b60c082018190526000908152600460205260408120816139cc8a8a33610da9565b815260200190815260200160002090506139ec8260c00151898989610fb0565b602084015280835281546002830154613a179291909103906001600160801b0316600160801b6140f5565b6001600160801b039081166080840152600182015460208401516002840154613a4a93929091039116600160801b6140f5565b6001600160801b0390811660a0840152608083015116151580613a7a575060008260a001516001600160801b0316115b15613acf5760808201516002820180546001600160801b03600160801b8083048216909401811690930290831617905560a08301516003830180548084169092019092166001600160801b0319919091161790555b81518155602090910151600182015560028101546003909101546001600160801b03600160801b909204821693501690509550959350505050565b6000828152600760209081526040808320546001600160a01b038816845260068352818420825160c08101845281548152600182015494810194909452600281015492840192909252600382015460608401526004820154608084015260059091015460a083015282918290815b8851811015613f54576001600089815260200190815260200160002060008a8381518110613ba857613ba8615ca1565b6020908102919091018101515160020b82528101919091526040016000205489516001600160801b039091169350899082908110613be857613be8615ca1565b6020026020010151602001516001600160801b031684600260008b815260200190815260200160002060008c8581518110613c2557613c25615ca1565b6020908102919091018101515160020b825281019190915260400160002054613c5791906001600160801b0316615c22565b613c619190615c22565b836001600160801b03161015613ca55760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b6044820152606401610919565b888181518110613cb757613cb7615ca1565b602002602001015160200151600260008a815260200190815260200160002060008b8481518110613cea57613cea615ca1565b6020908102919091018101515160020b825281019190915260400160009081208054909190613d239084906001600160801b0316615d61565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000808b6001600160a01b031663a34123a78c8581518110613d6b57613d6b615ca1565b6020026020010151600001518b8e8781518110613d8a57613d8a615ca1565b602002602001015160000151613da09190615c35565b8e8781518110613db257613db2615ca1565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af1158015613e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e3c9190615d24565b915091508b6001600160a01b0316634f1eb3d8308d8681518110613e6257613e62615ca1565b6020026020010151600001518c8f8881518110613e8157613e81615ca1565b602002602001015160000151613e979190615c35565b86866040518663ffffffff1660e01b8152600401613eb9959493929190615d81565b60408051808303816000875af1158015613ed7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613efb9190615dbe565b50613f0890508289615c22565b9750613f148188615c22565b9650613f3f8b8481518110613f2b57613f2b615ca1565b6020026020010151600001518b8e87614291565b50508080613f4c90615d48565b915050613b78565b50600085118015613f63575083155b80613f77575084158015613f775750600084115b613fab5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b6044820152606401610919565b8415613fc857613fc8613fc160208c018c614d8b565b3387613ff5565b8315613fe857613fe8613fe160408c0160208d01614d8b565b3386613ff5565b5050509550959350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916140519190615f43565b6000604051808303816000865af19150503d806000811461408e576040519150601f19603f3d011682016040523d82523d6000602084013e614093565b606091505b50915091508180156140bd5750805115806140bd5750808060200190518101906140bd9190615f5f565b6140ee5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610919565b5050505050565b600080806000198587098587029250828110838203039150508060000361412e576000841161412357600080fd5b508290049050610def565b8084116141665760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401610919565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000838015614273576001841680156141ee578592506141f2565b8392505b508260011c8460011c94505b841561426d578560801c1561421257600080fd5b8586028181018181101561422557600080fd5b859004965050600185161561426257858302838782041461424b57861561424b57600080fd5b8181018181101561425b57600080fd5b8590049350505b8460011c94506141fe565b50614289565b8380156142835760009250614287565b8392505b505b509392505050565b6001600160a01b0382166000908152600560209081526040808320600288810b808652918452828520888652600185528386208387528552838620548987529185528386209286529190935292205482546001600160801b039283169290911690670de0b6b3a76400009061436d9061430a9083615c22565b670de0b6b3a76400006111778760020154426143269190615c5a565b60018901546040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
}
