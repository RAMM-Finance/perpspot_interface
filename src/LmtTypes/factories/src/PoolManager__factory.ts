/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "premiumOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "premiumOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "feeAmountTickSpacing",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint160",
        name: "sqrtStartingPriceX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "startingTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "finishTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "binSize",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "lte",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "findNearestInitializedBin",
    outputs: [
      {
        internalType: "int24",
        name: "nextTick",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getPremiumsCollected",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "premium0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "premium1",
            type: "uint128",
          },
        ],
        internalType: "struct PremiumsCollected",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getURates",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "isBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "orderFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumInBorrowedAsset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumInPairAsset",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reclaimer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
      {
        internalType: "address",
        name: "bf",
        type: "address",
      },
      {
        internalType: "address",
        name: "of_",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapFactory",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "updateUtilizationGrowth",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "growth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct UtilizationGrowth",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600b8054600161ffff199182168117909255600d8054909116909117905534801561002e57600080fd5b50600f80546001600160a01b0319163317905560026020527febaffbad3b7fced837389fa2c76ef17bd16e01452243bc801329ba9c392c939f805462ffffff19908116600a179091557f8f2d796c159bb2bb788bc3f1a337a929c07b0cf1d9277451fd5f909c263c02d680548216603c1790556127106000527f5e7cc46d63c0d79d92b677239084c61b6b019c2759734090f1970fc4b4823988805490911660c8179055615fe280620000e26000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80638fd74d4d1161013b578063b3a4016e116100b8578063d57839531161007c578063d578395314610825578063d7d3ed6a14610852578063da69b0b314610865578063ddef519c14610899578063fe4f278a146108bd57600080fd5b8063b3a4016e146107aa578063c3419a71146107e4578063c5161a60146107f7578063d34879971461080a578063d41dcbea1461081d57600080fd5b8063a882c12d116100ff578063a882c12d1461072f578063aa966e5514610742578063abf978e414610764578063ac00b80914610777578063ac9650d81461078a57600080fd5b80638fd74d4d1461065d578063912a8e001461067057806395250923146106835780639744a42d146106a5578063a8404655146106d057600080fd5b80635955cad3116101c957806379378b411161018d57806379378b41146105cf5780637dc7306c146105e25780637f8f1dda146106025780638da5cb5b146106375780638f88d5601461064a57600080fd5b80635955cad3146104775780635a42047a14610504578063626a45181461052557806365197688146105575780636fc280e11461057a57600080fd5b806319fda2771161021057806319fda2771461033557806322afcccb14610381578063273cbaa0146103b95780634185a442146103ce57806345e61a4d146103e157600080fd5b80630229fb601461024d57806304ad52fc1461027a5780631653fc7d1461029b5780631698ee82146102b057806319fa103314610302575b600080fd5b61026061025b366004614c91565b6108d0565b604080519283526020830191909152015b60405180910390f35b61028d610288366004614d5b565b610c4b565b604051908152602001610271565b6102ae6102a9366004614ed4565b610d7c565b005b6102ea6102be366004614f64565b60036020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b039091168152602001610271565b610315610310366004614fa2565b611133565b604080516001600160801b03938416815292909116602083015201610271565b610369610343366004614fec565b60066020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b039091168152602001610271565b6103a661038f36600461501c565b600260208190526000918252604090912054900b81565b60405160029190910b8152602001610271565b6103c1611660565b6040516102719190615037565b6102606103dc366004615084565b611730565b6104656103ef3660046150d5565b600e60209081526000918252604091829020825160a0810184528154815260018201549281019290925260028101549282019290925260038201546060820152600482015460808201526005820154600683015460078401546008850154600990950154939492939192909161ffff9091169086565b604051610271969594939291906150f2565b6104ce61048536600461515a565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a001610271565b61051761051236600461517c565b6117e0565b60405161027192919061524f565b61026061053336600461526a565b60056020908152600092835260408084209091529082529020805460019091015482565b6103a6610565366004615298565b60006020819052908152604090205460020b81565b6105b461058836600461526a565b601760209081526000928352604080842090915290825290208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610271565b6102606105dd3660046152b1565b611a72565b6105f56105f036600461517c565b611e10565b6040516102719190615308565b61061561061036600461531b565b611f82565b6040805182518152602080840151908201529181015190820152606001610271565b600f546102ea906001600160a01b031681565b6102ae6106583660046153e5565b6121a0565b6012546102ea906001600160a01b031681565b61036961067e36600461531b565b6126c6565b610696610691366004615463565b612733565b6040516102719392919061547f565b61028d6106b3366004615518565b600760209081526000928352604080842090915290825290205481565b6106e36106de366004615543565b6128e3565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a001610271565b6010546102ea906001600160a01b031681565b61075561075036600461517c565b612a07565b60405161027193929190615593565b6102606107723660046155b8565b612c14565b6102ae610785366004615608565b6131a0565b61079d610798366004615659565b613230565b604051610271919061571d565b6107bd6107b836600461577f565b61331d565b6040805182516001600160801b039081168252602093840151169281019290925201610271565b6011546102ea906001600160a01b031681565b6013546102ea906001600160a01b031681565b6102ae61081836600461579b565b61339e565b6103c1613579565b61083861083336600461581a565b613642565b6040805160029390930b8352901515602083015201610271565b61026061086036600461588a565b6136f9565b610369610873366004614fec565b60016020908152600092835260408084209091529082529020546001600160801b031681565b6108ac6108a736600461590c565b613b39565b60405161027195949392919061595c565b6102ae6108cb36600461599a565b614099565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086516001600160a01b039081166000908152600360209081526040808320828c01805186168552908352818420828d01805162ffffff1686529084528285205490951660c08701528b519051945191519394600494869461096c9491016159d1565b60405160208183030381529060405280519060200120815260200190815260200160002060008888336040516020016109a7939291906159f9565b60408051601f198184030181529181528151602092830120835290820192909252810160002060c08401519151639887b58960e01b81526001600160a01b039092166004830152600289810b602484015288900b6044830152915073__$d23a8dd93b7205fa6b646ffed38c165d68$__90639887b589906064016040805180830381865af4158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190615a1f565b6020840152825260c0820151610a7990888888611730565b60608401526040830181905282518390610a94908390615a59565b9052506060820151602083018051610aad908390615a59565b90525087516020808a01516040808c01519051600094610ad19490939291016159d1565b60408051601f198184030181529190528051602090910120835190915015610b0a57600183600001818151610b069190615a6c565b9052505b602083015115610b2b57600183602001818151610b279190615a6c565b9052505b815483516002840154610b4f92909103906001600160801b0316600160801b61416c565b6001600160801b039081166080850152600183015460208501516002850154610b8293929091039116600160801b61416c565b6001600160801b0390811660a0850152608084015116151580610bb2575060008360a001516001600160801b0316115b15610c105760808301516002830180546001600160801b03600160801b8083048216909401811690930290831617905560a08401516003840180548084169092019092166fffffffffffffffffffffffffffffffff19919091161790555b5081518155602090910151600182015560028101546003909101546001600160801b03600160801b9092048216935016905094509492505050565b6001600160a01b0383166000908152601760209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290610d7190610cad90670de0b6b3a7640000615a59565b670de0b6b3a7640000610d6a846040015142610cc99190615a6c565b60208601516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$$eacbb88ed4bd2af84aa4d43bcf675bcf7e$$93dfed57e8f421caed97f24c336a056d51$__9063705819919060e4016040805180830381865af41580156136c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136ea9190615d62565b91509150965096945050505050565b6000808061370a60208a018a6150d5565b61371a60408b0160208c016150d5565b61372a60608c0160408d0161501c565b60405160200161373c939291906159d1565b60408051601f1981840301815291815281516020928301206000818152928390529082205490925060020b9081900361379c5760405162461bcd60e51b8152602060048201526002602482015261021760f41b6044820152606401610dbb565b8760020b8960020b126137c15760405162461bcd60e51b8152600401610dbb90615b76565b6000876001600160801b0316116137ea5760405162461bcd60e51b8152600401610dbb90615b76565b6137f4818a615c5d565b60020b15801561380e57506138098189615c5d565b60020b155b61382a5760405162461bcd60e51b8152600401610dbb90615b76565b600060038161383c60208e018e6150d5565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001602081019061387191906150d5565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c60400160208101906138a6919061501c565b62ffffff1681526020810191909152604001600020546001600160a01b03169050895b8960020b8160020b1215613a77576000806001600160a01b038416633c8a7d8d30856138f58982615b91565b8f8e60405160200161391691906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401613945959493929190615c7f565b60408051808303816000875af1158015613963573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139879190615a1f565b90925090506139968289615a59565b97506139a28188615a59565b6000878152600160209081526040808320600288900b84529091528120549198506001600160801b0390911690036139ed5760008681526007602052604090206139ed908487614771565b6000868152600160209081526040808320600287900b8452909152812080548d9290613a239084906001600160801b0316615afd565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550613a618e803603810190613a5b919061577f565b84611f82565b5050508281613a709190615b91565b90506138c9565b613a91613a89368e90038e018e61577f565b8c8c866108d0565b5050886004600086815260200190815260200160002060008d8d8c604051602001613abe939291906159f9565b60405160208183030381529060405280519060200120815260200190815260200160002060020160008282829054906101000a90046001600160801b0316613b069190615afd565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505050965096945050505050565b6010546000908190819081906060906001600160a01b0316331480613b6857506011546001600160a01b031633145b613b845760405162461bcd60e51b8152600401610dbb90615ade565b613b8c614b0f565b613b9960208c018c6150d5565b613ba960408d0160208e016150d5565b613bb960608e0160408f0161501c565b604051602001613bcb939291906159d1565b60408051601f19818403018152918152815160209283012090830152600390600090613bf9908e018e6150d5565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6020016020810190613c2e91906150d5565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6040016020810190613c63919061501c565b62ffffff16815260208082019290925260409081016000908120546001600160a01b0390811661012080870191825286850151845283865284842054600290810b60e0808a0191909152835185168652600e885294869020865161016081018852815460c08201908152600183015482890152928201546101008281019190915260038301549482019490945260048083015461014083015292815260058201549881019890985260068101548888015260078101546060890152600881015461ffff1660808901526009015460a088015290870195909552518351633850c7bd60e01b81529351911693633850c7bd93808201939291908290030181865afa158015613d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d989190615d91565b505050506001600160a01b03929092166020840152505060405163e5561d0d60e01b81528a15156004820152602481018990526044810188905273__$93dfed57e8f421caed97f24c336a056d51$__9063e5561d0d90606401602060405180830381865af4158015613e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e329190615d28565b95506000613e468b8a8c8560200151614813565b90508a613e6857806001600160a01b0316876001600160a01b03161115613e7f565b806001600160a01b0316876001600160a01b031610155b613ec45760405162461bcd60e51b8152602060048201526016602482015275696e76616c6964207374617274696e6720707269636560501b6044820152606401610dbb565b60408051610100810182528382015181528c151560208083019182526001600160a01b03808c1684860190815291870151811660608501908152608085018f8152600160a08701908152600360c08801908152670de0b6b3a764000060e089019081529851631967f40b60e11b81526007600482015297516024890152955115156044880152935183166064870152905190911660848501525160a48401525160c48301525160e4820152905161010482015273__$93dfed57e8f421caed97f24c336a056d51$__906332cfe8169061012401600060405180830381865af4158015613fb4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613fdc9190810190615e33565b608085019190915260608401829052935089146140255760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610dbb565b61403f8c8361012001518585604001518660e00151614408565b90965094508a61406b576060820151608083015161406691670de0b6b3a76400009061416c565b614088565b6080820151606083015161408891670de0b6b3a76400009061416c565b935050509550955095509550959050565b600f546001600160a01b031633146140dc5760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610dbb565b6001600160a01b03919091166000908152600e6020908152604091829020835180518255808301516001830155808401516002830155606080820151600384015560809182015160048401559285015160058301559284015160068201559083015160078201559082015160088201805461ffff191661ffff90921691909117905560a090910151600990910155565b60008080600019858709858702925082811083820303915050806000036141a5576000841161419a57600080fd5b508290049050610d75565b8084116141dd5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401610dbb565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60008380156142ea5760018416801561426557859250614269565b8392505b508260011c8460011c94505b84156142e4578560801c1561428957600080fd5b8586028181018181101561429c57600080fd5b85900496505060018516156142d95785830283878204146142c25786156142c257600080fd5b818101818110156142d257600080fd5b8590049350505b8460011c9450614275565b50614300565b8380156142fa57600092506142fe565b8392505b505b509392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916143649190615f3f565b6000604051808303816000865af19150503d80600081146143a1576040519150601f19603f3d011682016040523d82523d6000602084013e6143a6565b606091505b50915091508180156143d05750805115806143d05750808060200190518101906143d09190615d45565b6144015760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610dbb565b5050505050565b60008060005b85518110156146d35785818151811061442957614429615b47565b60200260200101516020015160066000878152602001908152602001600020600088848151811061445c5761445c615b47565b6020908102919091018101515160020b8252810191909152604001600090812080549091906144959084906001600160801b0316615afd565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600080886001600160a01b031663a34123a78985815181106144dd576144dd615b47565b602002602001015160000151888b87815181106144fc576144fc615b47565b6020026020010151600001516145129190615b91565b8b878151811061452457614524615b47565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af115801561458a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145ae9190615a1f565b91509150886001600160a01b0316634f1eb3d8308a86815181106145d4576145d4615b47565b602002602001015160000151898c88815181106145f3576145f3615b47565b6020026020010151600001516146099190615b91565b86866040518663ffffffff1660e01b815260040161462b959493929190615bb6565b60408051808303816000875af1158015614649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061466d9190615bf3565b5061467a90508286615a59565b94506146868185615a59565b93506146bd61469a368c90038c018c61577f565b8985815181106146ac576146ac615b47565b602002602001015160000151611f82565b50505080806146cb90615b5d565b91505061440e565b506000821180156146e2575080155b806146f65750811580156146f65750600081115b61472a5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b6044820152606401610dbb565b81156147475761474761474060208901896150d5565b3384614308565b8015614767576147676147606040890160208a016150d5565b3383614308565b9550959350505050565b8060020b8260020b8161478657614786615b1d565b0760020b1561479457600080fd5b6000806147c28360020b8560020b816147af576147af615b1d565b0560020b600881901d9161010090910790565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b6060610d758383604051806060016040528060278152602001615f86602791396148a3565b6000808561483f5761483a614835670de0b6b3a764000087610d6a8882615a59565b614911565b614860565b614860614835670de0b6b3a76400006148588789615a59565b88919061416c565b905061489981614877670de0b6b3a7640000614911565b61488a906001600160a01b038716615b33565b6148949190615f5b565b6149b5565b9695505050505050565b6060600080856001600160a01b0316856040516148c09190615f3f565b600060405180830381855af49150503d80600081146148fb576040519150601f19603f3d011682016040523d82523d6000602084013e614900565b606091505b509150915061489986838387614a07565b60b581600160881b811061492a5760409190911b9060801c5b690100000000000000000081106149465760209190911b9060401c5b65010000000000811061495e5760109190911b9060201c5b630100000081106149745760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c908190048111900390565b806001600160a01b0381168114614a025760405162461bcd60e51b8152602060048201526011602482015270189b181031b0b9ba34b7339032b93937b960791b6044820152606401610dbb565b919050565b60608315614a76578251600003614a6f576001600160a01b0385163b614a6f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610dbb565b50816129ff565b6129ff8383815115614a8b5781518083602001fd5b8060405162461bcd60e51b8152600401610dbb9190615f72565b6040518060c00160405280614ae26040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff168152602001600081525090565b6040518061014001604052806000815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600060020b8152602001614b6a614aa5565b8152600060209091015290565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715614baf57614baf614b77565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614bdd57614bdd614b77565b604052919050565b6001600160a01b0381168114614bfa57600080fd5b50565b803562ffffff81168114614a0257600080fd5b600060608284031215614c2257600080fd5b604051606081018181106001600160401b0382111715614c4457614c44614b77565b6040529050808235614c5581614be5565b81526020830135614c6581614be5565b6020820152614c7660408401614bfd565b60408201525092915050565b8060020b8114614bfa57600080fd5b60008060008060c08587031215614ca757600080fd5b614cb18686614c10565b93506060850135614cc181614c82565b92506080850135614cd181614c82565b915060a0850135614ce181614c82565b939692955090935050565b600060a08284031215614cfe57600080fd5b60405160a081018181106001600160401b0382111715614d2057614d20614b77565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b600080600060e08486031215614d7057600080fd5b8335614d7b81614be5565b92506020840135614d8b81614c82565b9150614d9a8560408601614cec565b90509250925092565b600060608284031215614db557600080fd5b50919050565b60006001600160401b03821115614dd457614dd4614b77565b5060051b60200190565b6001600160801b0381168114614bfa57600080fd5b600082601f830112614e0457600080fd5b81356020614e19614e1483614dbb565b614bb5565b82815260e09283028501820192828201919087851115614e3857600080fd5b8387015b85811015614eb95781818a031215614e545760008081fd5b614e5c614b8d565b8135614e6781614c82565b815281860135614e7681614dde565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c080830135908201528452928401928101614e3c565b5090979650505050505050565b8015158114614bfa57600080fd5b6000806000806000806000610120888a031215614ef057600080fd5b614efa8989614da3565b96506060880135614f0a81614be5565b955060808801356001600160401b03811115614f2557600080fd5b614f318a828b01614df3565b95505060a0880135614f4281614ec6565b9699959850939660c08101359560e08201359550610100909101359350915050565b600080600060608486031215614f7957600080fd5b8335614f8481614be5565b92506020840135614f9481614be5565b9150614d9a60408501614bfd565b600080600060a08486031215614fb757600080fd5b614fc18585614c10565b92506060840135614fd181614c82565b91506080840135614fe181614c82565b809150509250925092565b60008060408385031215614fff57600080fd5b82359150602083013561501181614c82565b809150509250929050565b60006020828403121561502e57600080fd5b610d7582614bfd565b6020808252825182820181905260009190848201906040850190845b818110156150785783516001600160a01b031683529284019291840191600101615053565b50909695505050505050565b6000806000806080858703121561509a57600080fd5b84356150a581614be5565b935060208501356150b581614c82565b925060408501356150c581614c82565b91506060850135614ce181614c82565b6000602082840312156150e757600080fd5b8135610d7581614be5565b610140810161512c828980518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b60a082019690965260c081019490945260e084019290925261ffff1661010083015261012090910152919050565b6000806040838503121561516d57600080fd5b50508035926020909101359150565b6000806080838503121561518f57600080fd5b6151998484614da3565b915060608301356001600160401b038111156151b457600080fd5b6151c085828601614df3565b9150509250929050565b600081518084526020808501945080840160005b83811015615244578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0808201519089015260c0908101519088015260e090960195908201906001016151de565b509495945050505050565b82151581526040602082015260006129ff60408301846151ca565b6000806040838503121561527d57600080fd5b823561528881614be5565b9150602083013561501181614c82565b6000602082840312156152aa57600080fd5b5035919050565b600080600060a084860312156152c657600080fd5b6152d08585614da3565b925060608401356001600160401b038111156152eb57600080fd5b6152f786828701614df3565b9250506080840135614fe181614be5565b602081526000610d7560208301846151ca565b6000806080838503121561532e57600080fd5b6153388484614c10565b9150606083013561501181614c82565b61ffff81168114614bfa57600080fd5b6000610140828403121561536b57600080fd5b60405160c081018181106001600160401b038211171561538d5761538d614b77565b60405290508061539d8484614cec565b815260a0830135602082015260c0830135604082015260e083013560608201526101008301356153cc81615348565b8060808301525061012083013560a08201525092915050565b6000806000806000806101e087890312156153ff57600080fd5b863561540a81614be5565b9550602087013561541a81614be5565b9450604087013561542a81614be5565b935061543860608801614bfd565b9250608087013561544881614c82565b91506154578860a08901615358565b90509295509295509295565b60006060828403121561547557600080fd5b610d758383614da3565b6001600160a01b0384168152600283900b602082015281516101808201906154d690604084019080518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b602083015160e08301526040830151610100830152606083015161012083015261ffff60808401511661014083015260a0830151610160830152949350505050565b6000806040838503121561552b57600080fd5b8235915060208301358060010b811461501157600080fd5b60008060008060c0858703121561555957600080fd5b6155638686614da3565b9350606085013561557381614c82565b9250608085013561558381614c82565b915060a0850135614ce181614be5565b6060815260006155a660608301866151ca565b60208301949094525060400152919050565b60008060008060c085870312156155ce57600080fd5b6155d88686614da3565b935060608501356155e881614c82565b925060808501356155f881614c82565b915060a0850135614ce181614dde565b6000806000806080858703121561561e57600080fd5b843561562981614be5565b9350602085013561563981614be5565b9250604085013561564981614be5565b91506060850135614ce181614be5565b6000806020838503121561566c57600080fd5b82356001600160401b038082111561568357600080fd5b818501915085601f83011261569757600080fd5b8135818111156156a657600080fd5b8660208260051b85010111156156bb57600080fd5b60209290920196919550909350505050565b60005b838110156156e85781810151838201526020016156d0565b50506000910152565b600081518084526157098160208601602086016156cd565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561577257603f198886030184526157608583516156f1565b94509285019290850190600101615744565b5092979650505050505050565b60006060828403121561579157600080fd5b610d758383614c10565b600080600080606085870312156157b157600080fd5b843593506020850135925060408501356001600160401b03808211156157d657600080fd5b818701915087601f8301126157ea57600080fd5b8135818111156157f957600080fd5b88602082850101111561580b57600080fd5b95989497505060200194505050565b60008060008060008060c0878903121561583357600080fd5b86359550602087013561584581614c82565b9450604087013561585581614c82565b9350606087013561586581614c82565b9250608087013561587581614ec6565b8092505060a087013590509295509295509295565b60008060008060008061010087890312156158a457600080fd5b6158ae8888614da3565b955060608701356158be81614c82565b945060808701356158ce81614c82565b935060a08701356158de81614dde565b925060c08701356158ee81614be5565b915060e08701356158fe81614be5565b809150509295509295509295565b600080600080600060e0868803121561592457600080fd5b61592e8787614da3565b9450606086013561593e81614ec6565b949794965050505060808301359260a08101359260c0909101359150565b60018060a01b038616815284602082015283604082015282606082015260a06080820152600061598f60a08301846151ca565b979650505050505050565b60008061016083850312156159ae57600080fd5b82356159b981614be5565b91506159c88460208501615358565b90509250929050565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b600293840b81529190920b60208201526001600160a01b03909116604082015260600190565b60008060408385031215615a3257600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b80820180821115611f7c57611f7c615a43565b81810381811115611f7c57611f7c615a43565b60c08101615ab8828580518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8260a08301529392505050565b600060208284031215615ad757600080fd5b5051919050565b602080825260059082015264042c2eae8d60db1b604082015260600190565b6001600160801b0381811683821601908082111561172957611729615a43565b634e487b7160e01b600052601260045260246000fd5b600082615b4257615b42615b1d565b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201615b6f57615b6f615a43565b5060010190565b6020808252600190820152606960f81b604082015260600190565b600281810b9083900b01627fffff8113627fffff1982121715611f7c57611f7c615a43565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b60008060408385031215615c0657600080fd5b8251615c1181614dde565b602084015190925061501181614dde565b6001600160801b0382811682821603908082111561172957611729615a43565b61ffff82811682821603908082111561172957611729615a43565b60008260020b80615c7057615c70615b1d565b808360020b0791505092915050565b60018060a01b03861681528460020b60208201528360020b60408201526001600160801b038316606082015260a06080820152600061598f60a08301846156f1565b600061ffff808316818103615cd857615cd8615a43565b6001019392505050565b6000808335601e19843603018112615cf957600080fd5b8301803591506001600160401b03821115615d1357600080fd5b602001915036819003821315611a6b57600080fd5b600060208284031215615d3a57600080fd5b8151610d7581614be5565b600060208284031215615d5757600080fd5b8151610d7581614ec6565b60008060408385031215615d7557600080fd5b8251615d8081614c82565b602084015190925061501181614ec6565b600080600080600080600060e0888a031215615dac57600080fd5b8751615db781614be5565b6020890151909750615dc881614c82565b6040890151909650615dd981615348565b6060890151909550615dea81615348565b6080890151909450615dfb81615348565b60a089015190935060ff81168114615e1257600080fd5b60c0890151909250615e2381614ec6565b8091505092959891949750929550565b60008060006060808587031215615e4957600080fd5b8451935060208086015193506040808701516001600160401b03811115615e6f57600080fd5b8701601f81018913615e8057600080fd5b8051615e8e614e1482614dbb565b81815260e0918202830185019185820191908c841115615ead57600080fd5b938601935b83851015615f2d5780858e031215615eca5760008081fd5b615ed2614b8d565b8551615edd81614c82565b815285880151615eec81614dde565b81890152858701518782015288860151898201526080808701519082015260a0808701519082015260c0808701519082015283529384019391860191615eb2565b50809750505050505050509250925092565b60008251615f518184602087016156cd565b9190910192915050565b8082028115828204841417611f7c57611f7c615a43565b602081526000610d7560208301846156f156fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e0f17f26553f53b43c0f5c2c86ccd9b802672ac5b73e575aa1f70e2f5617367364736f6c63430008120033";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/Util.sol:Utils"]: string;
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
}
