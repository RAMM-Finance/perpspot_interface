/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium1",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "PoolAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "REPAY_THRESHOLD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "collectedFees0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "collectedFees1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeParams",
    outputs: [
      {
        internalType: "uint128",
        name: "openFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "feeToPool",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFeeToPool",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "LPFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "finishPriceX96",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getHashedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getHashedPositionKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedKey",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "minLiquidities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolTrusted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFeeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "LPFee",
        type: "uint256",
      },
    ],
    name: "updateFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50615fd680620000216000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80639525092311610130578063aea84c91116100b8578063d34879971161007c578063d348799714610819578063d41dcbea1461082c578063d7a3dca014610841578063da69b0b314610873578063fc6e9cbf146108a757600080fd5b8063aea84c9114610744578063b8919fa614610757578063b9a402a51461076a578063bbd954721461077d578063c6c2c2ca1461079057600080fd5b8063a841fdd8116100ff578063a841fdd8146106bd578063a882c12d146106dd578063abf978e4146106f0578063ac9650d814610703578063ad16ab7e1461072357600080fd5b806395250923146105fe5780639744a42d146106205780639c47697c1461064b578063a84046551461065e57600080fd5b80635955cad3116101be5780636fc280e1116101825780636fc280e1146105535780637b4ee295146105a85780638129fc1c146105ca578063895f4ade146105d25780638da5cb5b146105e557600080fd5b80635955cad3146104575780635ea33ec5146104e457806365197688146104f7578063683356911461052d5780636cb42a2f1461054057600080fd5b806319fa10331161020557806319fa1033146102fe57806319fda27714610331578063406a3d021461037d57806345e61a4d1461039e578063482224421461044457600080fd5b80630229fb6014610237578063089ca8dd1461026457806313af4035146102975780631698ee82146102ac575b600080fd5b61024a610245366004614caa565b6108ba565b604080519283526020830191909152015b60405180910390f35b610287610272366004614d1a565b60106020526000908152604090205460ff1681565b604051901515815260200161025b565b6102aa6102a5366004614d1a565b61090d565b005b6102e66102ba366004614d4a565b600a6020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b03909116815260200161025b565b61031161030c366004614e71565b610967565b604080516001600160801b0393841681529290911660208301520161025b565b61036561033f366004614ebb565b60026020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b03909116815260200161025b565b61039061038b366004614eeb565b610b8b565b60405190815260200161025b565b6104316103ac366004614d1a565b600660208181526000928352604092839020835160c081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301546080820152600583015460a082015290820154600783015460088401546009850154600a860154600b90960154949593949293919261ffff909116919087565b60405161025b9796959493929190614f65565b610390610452366004614fac565b610bd8565b6104ae610465366004614fc8565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a00161025b565b61024a6104f2366004614fea565b610c27565b61051a610505366004615032565b60096020526000908152604090205460020b81565b60405160029190910b815260200161025b565b61039061053b3660046150a3565b610ccd565b61024a61054e3660046151e4565b610e08565b61058d61056136600461523b565b600560209081526000928352604080842090915290825290208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161025b565b6105bb6105b6366004615277565b6111b2565b60405161025b93929190615339565b6102aa61137f565b6102aa6105e0366004615401565b6114ae565b600d546102e6906201000090046001600160a01b031681565b61061161060c366004615438565b611583565b60405161025b93929190615454565b61039061062e3660046154ce565b600b60209081526000928352604080842090915290825290205481565b6102aa6106593660046154f9565b611709565b61067161066c366004615545565b611782565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a00161025b565b6103906106cb366004615032565b60076020526000908152604090205481565b600e546102e6906001600160a01b031681565b61024a6106fe366004615595565b611843565b6107166107113660046155e5565b612037565b60405161025b91906156a9565b61073661073136600461570b565b61212c565b60405161025b929190615769565b6102aa610752366004614d1a565b61228f565b61024a610765366004615782565b6122e1565b6102aa6107783660046157e4565b612a47565b61024a61078b366004615862565b6131f8565b6107de61079e366004615032565b6008602052600090815260409020805460018201546002909201546001600160801b0380831693600160801b938490048216938183169391049091169085565b604080516001600160801b0396871681529486166020860152928516928401929092529092166060820152608081019190915260a00161025b565b6102aa6108273660046158b0565b613340565b610834613490565b60405161025b919061592f565b61024a61084f366004614ebb565b60036020908152600092835260408084209091529082529020805460019091015482565b610365610881366004614ebb565b60016020908152600092835260408084209091529082529020546001600160801b031681565b6102aa6108b536600461597c565b61356d565b600080600f546001146108e85760405162461bcd60e51b81526004016108df906159d4565b60405180910390fd5b6002600f556108fb8686868660016138ed565b6001600f559097909650945050505050565b600d546201000090046001600160a01b0316331461093d5760405162461bcd60e51b81526004016108df906159f8565b600d80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b600080600f5460011461098c5760405162461bcd60e51b81526004016108df906159d4565b6002600f55600061099c86610bd8565b6000818152600960209081526040808320546004909252822092935060020b91816109c8898933610b8b565b8152602081019190915260400160009081206002810154909250600160801b90046001600160801b031615610ad45788516040516370a0823160e01b8152306004820152610a6a916001600160a01b0316906370a08231906024015b602060405180830381865afa158015610a41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a659190615a18565b613adb565b60028301549091506001600160801b03600160801b909104811690821610610aa6576002820154600160801b90046001600160801b0316610aa8565b805b9550610ac2896000015133886001600160801b0316613b29565b6002820180546001600160801b031690555b60038201546001600160801b031615610b785760208901516040516370a0823160e01b8152306004820152610b1b916001600160a01b0316906370a0823190602401610a24565b60038301549091506001600160801b0390811690821610610b495760038201546001600160801b0316610b4b565b805b9450610b65896020015133876001600160801b0316613b29565b6003820180546001600160801b03191690555b50506001600f5550919590945092505050565b60408051600285810b602083015284900b918101919091526001600160a01b03821660608201526000906080016040516020818303038152906040528051906020012090505b9392505050565b805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff16606080840191909152835180840390910181526080909201909252805191012090565b6000806000859050610c4c604051806040016040528060008152602001600081525090565b8560020b8260020b1215610cc257506000878152600360209081526040808320600285900b84528252918290208251808401909352805480845260019091015491830191909152610c9d9085615a47565b9350806020015183610caf9190615a47565b9250610cbb8583615a5a565b9150610c4c565b505094509492505050565b6001600160a01b0383166000908152600560209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290670de0b6b3a764000090610df590610d319083615a47565b670de0b6b3a7640000610dee856040015142610d4d9190615a7f565b60208701516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$$93dfed57e8f421caed97f24c336a056d51$__9063a1b461f89060c401600060405180830381865af41580156121cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121f59190810190615d1b565b6080840191909152606083018290529250871461223e5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b60448201526064016108df565b85612265576060810151608082015161226091670de0b6b3a764000090613ce7565b612282565b6080810151606082015161228291670de0b6b3a764000090613ce7565b9250509550959350505050565b600d546201000090046001600160a01b031633146122bf5760405162461bcd60e51b81526004016108df906159f8565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600080600f546001146123065760405162461bcd60e51b81526004016108df906159d4565b6002600f55612313614be3565b612325610452368a90038a018a614fac565b808252600090815260096020908152604082205460020b81840152600a908290612351908c018c614d1a565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60200160208101906123869190614d1a565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60400160208101906123bb9190615acc565b62ffffff16815260208082019290925260409081016000908120546001600160a01b031680825260068452828220835160c0810185528154815260018201548187015260028083015482870152600383015460608301526004830154608083015260059092015460a082015287850152865183526008909452919020820154610100850152915087810b9089900b1261247a5760405162461bcd60e51b81526020600482015260016024820152606960f81b60448201526064016108df565b60208201516124899089615e33565b60020b1580156124a8575060208201516124a39088615e33565b60020b155b6124d85760405162461bcd60e51b81526020600482015260016024820152601960fa1b60448201526064016108df565b875b8760020b8160020b12156128c657816001600160a01b0316633c8a7d8d30838660200151856125099190615a5a565b604080513360208201528d91016040516020818303038152906040526040518663ffffffff1660e01b8152600401612545959493929190615b1d565b60408051808303816000875af1158015612563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125879190615b6a565b60808501526060840181905261259d9086615a47565b94508260800151846125af9190615a47565b9350816001600160a01b031663514ea4bf30838660200151856125d29190615a5a565b60405160609390931b6bffffffffffffffffffffffff1916602084015260e891821b6034840152901b6037820152603a01604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161263791815260200190565b60a060405180830381865afa158015612654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126789190615e63565b6001600160801b0390811660c08901521660a08701819052151592508291506126a79050575060008360c00151115b1561273b57816001600160a01b0316634f1eb3d830838660200151856126cd9190615a5a565b6001600160801b03806040518663ffffffff1660e01b81526004016126f6959493929190615c69565b60408051808303816000875af1158015612714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127389190615ca6565b50505b82516000908152600160209081526040808320600285900b84529091529020546001600160801b031660e084018190521561281e5761010083015160a08401516000916127919190670de0b6b3a7640000613ce7565b61010085015160c08601519192506000916127b491670de0b6b3a7640000613ce7565b90508185610120018181516127c99190615a47565b905250610140850180518291906127e1908390615a47565b905250845160a0860151612817919085906127fd908690615a7f565b848960c0015161280d9190615a7f565b8960e001516143e8565b5050612840565b60208084015184516000908152600b909252604090912061284091839061446e565b82516000908152600160209081526040808320600285900b8452909152812080548992906128789084906001600160801b0316615c49565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506128b0818460000151848660400151613dc5565b60208301516128bf9082615a5a565b90506124da565b6128d88a8a8a866020015160006138ed565b505061012083015115612916576129166128f560208c018c614d1a565b600d60029054906101000a90046001600160a01b0316856101200151613b29565b610140830151156129555761295561293460408c0160208d01614d1a565b600d60029054906101000a90046001600160a01b0316856101400151613b29565b8251600090815260046020526040812088916129728c8c8b610b8b565b81526020810191909152604001600090812060020180549091906129a09084906001600160801b0316615c49565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550856001600160a01b0316826001600160a01b03167f7e1aa040ae22ae078b2e04d7e756a73671a8435cd8b72b0bd15f1cef372133d2898c8c604051612a2b939291906001600160801b03939093168352600291820b6020840152900b604082015260600190565b60405180910390a350506001600f555090969095509350505050565b600d546201000090046001600160a01b03163314612a775760405162461bcd60e51b81526004016108df906159f8565b600080856001600160a01b0316876001600160a01b031610612a9a578587612a9d565b86865b604080516001600160a01b03808516602083015283169181019190915262ffffff881660608201529193509150600090608001604051602081830303815290604052805190602001209050866001600160a01b0316886001600160a01b031603612b365760405162461bcd60e51b815260206004820152600a60248201526939b0b6b2903a37b5b2b760b11b60448201526064016108df565b6001600160a01b03831615801590612b5657506001600160a01b03821615155b612b915760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016108df565b6001600160a01b038381166000908152600a602090815260408083208685168452825280832062ffffff8b1684529091529020541615612c015760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b60448201526064016108df565b6001600160a01b038281166000908152600a602090815260408083208785168452825280832062ffffff8b1684529091529020541615612c715760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b60448201526064016108df565b60008181526009602052604090205460020b15612cbe5760405162461bcd60e51b815260206004820152600b60248201526a7469636b2065786973747360a81b60448201526064016108df565b60008560020b138015612d3d5750886001600160a01b031663d0c93a7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d2e9190615eb7565b612d389086615e33565b60020b155b612d735760405162461bcd60e51b815260206004820152600760248201526673706163696e6760c81b60448201526064016108df565b6001601060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555088600a6000856001600160a01b03166001600160a01b031681526020019081526020016000206000846001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555088600a6000846001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550846009600083815260200190815260200160002060006101000a81548162ffffff021916908360020b62ffffff1602179055506064600760008381526020019081526020016000208190555083600660008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155505060208201518160060155604082015181600701556060820151816008015560808201518160090160006101000a81548161ffff021916908361ffff16021790555060a082015181600a015560c082015181600b015590505088600c6000600d60009054906101000a900461ffff1661ffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600d600081819054906101000a900461ffff168092919061303e90615ed4565b825461ffff9182166101009390930a928302919092021990911617905550600e54604051633eb4adab60e01b81526001600160a01b038581166004830152848116602483015290911690633eb4adab90604401600060405180830381600087803b1580156130ab57600080fd5b505af11580156130bf573d6000803e3d6000fd5b505050600082815260086020526040908190207706f05b59d3b20000000000000000000000038d7ea4c6800081557706f05b59d3b20000000000000000000000b1a2bc2ec50000600182015567016345785d8a0000600282015590516332148f6760e01b8152606460048201529091506001600160a01b038b16906332148f6790602401600060405180830381600087803b15801561315d57600080fd5b505af1158015613171573d6000803e3d6000fd5b50505050613197604051806040016040528060018152602001606560f81b815250614510565b6040805162ffffff89168152600288900b60208201526001600160a01b038086169287821692918e16917fc57f9b9fa0ab86d2c86cc2d78f2f5d7cb8320503c0203fa154565617b830d0f9910160405180910390a450505050505050505050565b600e5460009081906001600160a01b031633146132275760405162461bcd60e51b81526004016108df90615aad565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261326461045236879003870187614fac565b60808201819052600090815260096020908152604082205460020b8352613332918791600a919061329790840184614d1a565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906132cc9190614d1a565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860400160208101906133019190615acc565b62ffffff168152602081019190915260400160002054608084015184516001600160a01b0390921691889190613ef8565b9093509150505b9250929050565b3360009081526010602052604090205460ff166133875760405162461bcd60e51b8152602060048201526005602482015264085c1bdbdb60da1b60448201526064016108df565b600061339582840184614d1a565b9050600080336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156133d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133fc9190615ef5565b336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561343a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061345e9190615ef5565b90925090508615613475576134758284338a614553565b85156134875761348781843389614553565b50505050505050565b600d546060906000906134a99060019061ffff16615f12565b61ffff1690506000816001600160401b038111156134c9576134c9614d91565b6040519080825280602002602001820160405280156134f2578160200160208202803683370190505b50905060005b8281101561212457600c600061350f836001615a47565b815260200190815260200160002060009054906101000a90046001600160a01b031682828151811061354357613543615ae7565b6001600160a01b03909216602092830291909101909101528061356581615b8e565b9150506134f8565b600e546001600160a01b031633146135975760405162461bcd60e51b81526004016108df90615aad565b6135f460405180610100016040528060006001600160801b03168152602001600081526020016000815260200160006001600160801b03168152602001600081526020016000801916815260200160008152602001600081525090565b61360661045236879003870187614fac565b60a0820181905260009081526008602052604081206002015460c0830152805b855181101561367c5785818151811061364157613641615ae7565b6020026020010151602001518360600181815161365e9190615c49565b6001600160801b03169052508061367481615b8e565b915050613626565b5060005b855181101561389057600160008460a00151815260200190815260200160002060008783815181106136b4576136b4615ae7565b6020908102919091018101515160020b8252810191909152604001600020546001600160801b031683528551613729908790839081106136f6576136f6615ae7565b6020026020010151602001516001600160801b031684606001516001600160801b031686613ce79092919063ffffffff16565b6040840181905260c0840151875161376d92670de0b6b3a7640000918a908690811061375757613757615ae7565b602002602001015160400151610dee9190615a47565b60e08401819052608084018051613785908390615a47565b915081815250506137e18360e0015184604001518884815181106137ab576137ab615ae7565b6020026020010151604001516137c19190615a47565b6137cb9190615a7f565b8451600160801b906001600160801b0316613ce7565b836020018181525050600360008460a001518152602001908152602001600020600087838151811061381557613815615ae7565b60200260200101516000015160020b60020b8152602001908152602001600020915084156138605782602001518260010160008282546138559190615a47565b9091555061387e9050565b82602001518260000160008282546138789190615a47565b90915550505b8061388881615b8e565b915050613680565b506080820151156138e5576138e5846138b5576138b06020880188614d1a565b6138c5565b6138c56040880160208901614d1a565b600d60029054906101000a90046001600160a01b03168460800151613b29565b505050505050565b6000806139546040518061012001604052806000815260200160008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b031681526020016000801916815260200160008152602001600081525090565b8315613965576139658888886145d6565b613977610452368a90038a018a614fac565b60c082018190526000908152600460205260408120816139988a8a33610b8b565b815260200190815260200160002090506139b88260c00151898989610c27565b6020840152808352815460028301546139e592610a65929003906001600160801b0316600160801b613ce7565b6001600160801b039081166080840152600182015460208401516002840154613a1b93610a65939092039116600160801b613ce7565b6001600160801b0390811660a0840152608083015116151580613a4b575060008260a001516001600160801b0316115b15613aa05760808201516002820180546001600160801b03600160801b8083048216909401811690930290831617905560a08301516003830180548084169092019092166001600160801b0319919091161790555b81518155602090910151600182015560028101546003909101546001600160801b03600160801b909204821693501690509550959350505050565b806001600160801b0381168114613b245760405162461bcd60e51b815260206004820152600d60248201526c31b0b9ba34b7339032b93937b960991b60448201526064016108df565b919050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691613b859190615f2d565b6000604051808303816000865af19150503d8060008114613bc2576040519150601f19603f3d011682016040523d82523d6000602084013e613bc7565b606091505b5091509150818015613bf1575080511580613bf1575080806020019051810190613bf19190615f49565b613c225760405162461bcd60e51b815260206004820152600260248201526114d560f21b60448201526064016108df565b5050505050565b6000838015613cc957600184168015613c4457859250613c48565b8392505b508260011c8460011c94505b8415613cc3578560801c15613c6857600080fd5b85860281810181811015613c7b57600080fd5b8590049650506001851615613cb8578583028387820414613ca1578615613ca157600080fd5b81810181811015613cb157600080fd5b8590049350505b8460011c9450613c54565b50613cdf565b838015613cd95760009250613cdd565b8392505b505b509392505050565b6000808060001985870985870292508281108382030391505080600003613d205760008411613d1557600080fd5b508290049050610bd1565b808411613d585760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b60448201526064016108df565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6001600160a01b0382166000908152600560209081526040808320600288810b808652918452828520888652600185528386208387528552838620548987529185528386209286529190935292205482546001600160801b039283169290911690670de0b6b3a764000090613ea190613e3e9083615a47565b670de0b6b3a7640000610dee876002015442613e5a9190615a7f565b60018901546040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91610d94918f9190600401615a92565b613eab9190615a7f565b83556001600160801b03811615613ee157613edc6001600160801b0382811690670de0b6b3a7640000908516613ce7565b613ee4565b60005b600184015550504260029091015550505050565b6000828152600760209081526040808320546001600160a01b038816845260068352818420825160c08101845281548152600182015494810194909452600281015492840192909252600382015460608401526004820154608084015260059091015460a083015282918290815b8851811015614347576001600089815260200190815260200160002060008a8381518110613f9657613f96615ae7565b6020908102919091018101515160020b82528101919091526040016000205489516001600160801b039091169350899082908110613fd657613fd6615ae7565b602002602001015160200151600260008a815260200190815260200160002060008b848151811061400957614009615ae7565b6020908102919091018101515160020b82528101919091526040016000205461403b91906001600160801b0316615c49565b6001600160801b0316836001600160801b031610156140885760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b60448201526064016108df565b88818151811061409a5761409a615ae7565b602002602001015160200151600260008a815260200190815260200160002060008b84815181106140cd576140cd615ae7565b6020908102919091018101515160020b8252810191909152604001600090812080549091906141069084906001600160801b0316615c49565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000808b6001600160a01b031663a34123a78c858151811061414e5761414e615ae7565b6020026020010151600001518b8e878151811061416d5761416d615ae7565b6020026020010151600001516141839190615a5a565b8e878151811061419557614195615ae7565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af11580156141fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061421f9190615b6a565b915091508b6001600160a01b0316634f1eb3d8308d868151811061424557614245615ae7565b6020026020010151600001518c8f888151811061426457614264615ae7565b60200260200101516000015161427a9190615a5a565b61428387613adb565b61428c87613adb565b6040518663ffffffff1660e01b81526004016142ac959493929190615c69565b60408051808303816000875af11580156142ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142ee9190615ca6565b506142fb90508289615a47565b97506143078188615a47565b96506143328b848151811061431e5761431e615ae7565b6020026020010151600001518b8e87613dc5565b5050808061433f90615b8e565b915050613f66565b50600085118015614356575083155b8061436a57508415801561436a5750600084115b61439e5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b60448201526064016108df565b84156143bb576143bb6143b460208c018c614d1a565b3387613b29565b83156143db576143db6143d460408c0160208d01614d1a565b3386613b29565b5050509550959350505050565b6000858152600360209081526040808320600288900b8452909152902061441d84600160801b6001600160801b038516613ce7565b8160000160008282546144309190615a47565b9091555061444e905083600160801b6001600160801b038516613ce7565b8160010160008282546144619190615a47565b9091555050505050505050565b8060020b8260020b8161448357614483615e1d565b0760020b1561449157600080fd5b6000806144bf8360020b8560020b816144ac576144ac615e1d565b0560020b600881901d9161010090910790565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b6060610bd18383604051806060016040528060278152602001615f7a602791396149cc565b6114ab816040516024016145249190615f66565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052614a44565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080613c225760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016108df565b60006145ea61045236869003860186614fac565b600081815260096020908152604080832054600883529083206002908101549495500b92869290918190819081908190600a90829061462b908f018f614d1a565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008d60200160208101906146609190614d1a565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008d60400160208101906146959190615acc565b62ffffff1681526020810191909152604001600020546001600160a01b031690505b8960020b8760020b121561495f57600089815260016020908152604080832060028b900b84529091529020546001600160801b03161561477f576001600160a01b03811663a34123a78861470b8b82615a5a565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526000604482015260640160408051808303816000875af1158015614758573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061477c9190615b6a565b50505b6000806001600160a01b038316634f1eb3d8308b61479d8e82615a5a565b6001600160801b03806040518663ffffffff1660e01b81526004016147c6959493929190615c69565b60408051808303816000875af11580156147e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148089190615ca6565b909250905060008061482c6001600160801b0385168b670de0b6b3a7640000613ce7565b6148486001600160801b0385168c670de0b6b3a7640000613ce7565b9092509050614857828a615a47565b98506148638189615a47565b9750600160008e815260200190815260200160002060008c60020b60020b815260200190815260200160002060009054906101000a90046001600160801b031696506000876001600160801b031611156149485760008d815260036020908152604080832060028f900b8452909152902095506149006148ec836001600160801b038716615a7f565b600160801b896001600160801b0316613ce7565b8660000160008282546149139190615a47565b9091555061492f90506148ec826001600160801b038616615a7f565b8660010160008282546149429190615a47565b90915550505b5050505087876149589190615a5a565b96506146b7565b841561498d5761498d61497560208e018e614d1a565b600d546201000090046001600160a01b031687613b29565b83156149be576149be6149a660408e0160208f01614d1a565b600d546201000090046001600160a01b031686613b29565b505050505050505050505050565b6060600080856001600160a01b0316856040516149e99190615f2d565b600060405180830381855af49150503d8060008114614a24576040519150601f19603f3d011682016040523d82523d6000602084013e614a29565b606091505b5091509150614a3a86838387614a65565b9695505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60608315614ad4578251600003614acd576001600160a01b0385163b614acd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108df565b508161183b565b61183b8383815115614ae95781518083602001fd5b8060405162461bcd60e51b81526004016108df9190615f66565b6040518061014001604052806000815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600060020b8152602001614b5e614b6b565b8152600060209091015290565b6040518060e00160405280614baf6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff16815260200160008152602001600081525090565b60405180610160016040528060008019168152602001600060020b8152602001614c3c6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160006001600160801b031681526020016000815260200160008152602001600081525090565b600060608284031215614c9557600080fd5b50919050565b8060020b81146114ab57600080fd5b60008060008060c08587031215614cc057600080fd5b614cca8686614c83565b93506060850135614cda81614c9b565b92506080850135614cea81614c9b565b915060a0850135614cfa81614c9b565b939692955090935050565b6001600160a01b03811681146114ab57600080fd5b600060208284031215614d2c57600080fd5b8135610bd181614d05565b803562ffffff81168114613b2457600080fd5b600080600060608486031215614d5f57600080fd5b8335614d6a81614d05565b92506020840135614d7a81614d05565b9150614d8860408501614d37565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715614dc957614dc9614d91565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614df757614df7614d91565b604052919050565b600060608284031215614e1157600080fd5b604051606081018181106001600160401b0382111715614e3357614e33614d91565b6040529050808235614e4481614d05565b81526020830135614e5481614d05565b6020820152614e6560408401614d37565b60408201525092915050565b600080600060a08486031215614e8657600080fd5b614e908585614dff565b92506060840135614ea081614c9b565b91506080840135614eb081614c9b565b809150509250925092565b60008060408385031215614ece57600080fd5b823591506020830135614ee081614c9b565b809150509250929050565b600080600060608486031215614f0057600080fd5b8335614f0b81614c9b565b92506020840135614f1b81614c9b565b91506040840135614eb081614d05565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b6101808101614f74828a614f2b565b8760c08301528660e08301528561010083015261ffff8516610120830152836101408301528261016083015298975050505050505050565b600060608284031215614fbe57600080fd5b610bd18383614dff565b60008060408385031215614fdb57600080fd5b50508035926020909101359150565b6000806000806080858703121561500057600080fd5b84359350602085013561501281614c9b565b9250604085013561502281614c9b565b91506060850135614cfa81614c9b565b60006020828403121561504457600080fd5b5035919050565b600060c0828403121561505d57600080fd5b615065614da7565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015292915050565b600080600061010084860312156150b957600080fd5b83356150c481614d05565b925060208401356150d481614c9b565b9150614d88856040860161504b565b60006001600160401b038211156150fc576150fc614d91565b5060051b60200190565b6001600160801b03811681146114ab57600080fd5b600082601f83011261512c57600080fd5b8135602061514161513c836150e3565b614dcf565b82815260c0928302850182019282820191908785111561516057600080fd5b8387015b858110156151d75781818a03121561517c5760008081fd5b615184614da7565b813561518f81614c9b565b81528186013561519e81615106565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101615164565b5090979650505050505050565b600080600060a084860312156151f957600080fd5b6152038585614c83565b925060608401356001600160401b0381111561521e57600080fd5b61522a8682870161511b565b9250506080840135614eb081614d05565b6000806040838503121561524e57600080fd5b823561525981614d05565b91506020830135614ee081614c9b565b80151581146114ab57600080fd5b60008060008060c0858703121561528d57600080fd5b6152978686614c83565b93506060850135925060808501356152ae81615269565b9396929550929360a00135925050565b600081518084526020808501945080840160005b8381101561532e578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c090960195908201906001016152d2565b509495945050505050565b838152826020820152606060408201526000610dff60608301846152be565b61ffff811681146114ab57600080fd5b6000610180828403121561537b57600080fd5b60405160e081018181106001600160401b038211171561539d5761539d614d91565b6040529050806153ad848461504b565b815260c0830135602082015260e0830135604082015261010083013560608201526101208301356153dd81615358565b8060808301525061014083013560a082015261016083013560c08201525092915050565b6000806101a0838503121561541557600080fd5b823561542081614d05565b915061542f8460208501615368565b90509250929050565b60006060828403121561544a57600080fd5b610bd18383614c83565b6001600160a01b0384168152600283900b602082015281516101c0820190615480906040840190614f2b565b60208301516101008301526040830151610120830152606083015161014083015261ffff60808401511661016083015260a083015161018083015260c08301516101a0830152949350505050565b600080604083850312156154e157600080fd5b8235915060208301358060010b8114614ee057600080fd5b600080600080600080610100878903121561551357600080fd5b61551d8888614dff565b986060880135985060808801359760a0810135975060c0810135965060e00135945092505050565b60008060008060c0858703121561555b57600080fd5b6155658686614c83565b9350606085013561557581614c9b565b9250608085013561558581614c9b565b915060a0850135614cfa81614d05565b60008060008060c085870312156155ab57600080fd5b6155b58686614c83565b935060608501356155c581614c9b565b925060808501356155d581614c9b565b915060a0850135614cfa81615106565b600080602083850312156155f857600080fd5b82356001600160401b038082111561560f57600080fd5b818501915085601f83011261562357600080fd5b81358181111561563257600080fd5b8660208260051b850101111561564757600080fd5b60209290920196919550909350505050565b60005b8381101561567457818101518382015260200161565c565b50506000910152565b60008151808452615695816020860160208601615659565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156156fe57603f198886030184526156ec85835161567d565b945092850192908501906001016156d0565b5092979650505050505050565b600080600080600060e0868803121561572357600080fd5b61572d8787614c83565b945060608601359350608086013561574481615269565b925060a0860135915060c086013561575b81614d05565b809150509295509295909350565b82815260406020820152600061183b60408301846152be565b600080600080600060e0868803121561579a57600080fd5b6157a48787614c83565b945060608601356157b481614c9b565b935060808601356157c481614c9b565b925060a08601356157d481615106565b915060c086013561575b81614d05565b60008060008060008061022087890312156157fe57600080fd5b863561580981614d05565b9550602087013561581981614d05565b9450604087013561582981614d05565b935061583760608801614d37565b9250608087013561584781614c9b565b91506158568860a08901615368565b90509295509295509295565b6000806080838503121561587557600080fd5b61587f8484614c83565b915060608301356001600160401b0381111561589a57600080fd5b6158a68582860161511b565b9150509250929050565b600080600080606085870312156158c657600080fd5b843593506020850135925060408501356001600160401b03808211156158eb57600080fd5b818701915087601f8301126158ff57600080fd5b81358181111561590e57600080fd5b88602082850101111561592057600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b818110156159705783516001600160a01b03168352928401929184019160010161594b565b50909695505050505050565b60008060008060c0858703121561599257600080fd5b61599c8686614c83565b935060608501356001600160401b038111156159b757600080fd5b6159c38782880161511b565b93505060808501356152ae81615269565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b600060208284031215615a2a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561212657612126615a31565b600281810b9083900b01627fffff8113627fffff198212171561212657612126615a31565b8181038181111561212657612126615a31565b60e08101615aa08285614f2b565b8260c08301529392505050565b602080825260059082015264042c2eae8d60db1b604082015260600190565b600060208284031215615ade57600080fd5b610bd182614d37565b634e487b7160e01b600052603260045260246000fd5b6001600160801b0382811682821603908082111561212457612124615a31565b60018060a01b03861681528460020b60208201528360020b60408201526001600160801b038316606082015260a060808201526000615b5f60a083018461567d565b979650505050505050565b60008060408385031215615b7d57600080fd5b505080516020909101519092909150565b600060018201615ba057615ba0615a31565b5060010190565b600080600080600080600060e0888a031215615bc257600080fd5b8751615bcd81614d05565b6020890151909750615bde81614c9b565b6040890151909650615bef81615358565b6060890151909550615c0081615358565b6080890151909450615c1181615358565b60a089015190935060ff81168114615c2857600080fd5b60c0890151909250615c3981615269565b8091505092959891949750929550565b6001600160801b0381811683821601908082111561212457612124615a31565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b60008060408385031215615cb957600080fd5b8251615cc481615106565b6020840151909250614ee081615106565b6000808335601e19843603018112615cec57600080fd5b8301803591506001600160401b03821115615d0657600080fd5b60200191503681900382131561333957600080fd5b60008060006060808587031215615d3157600080fd5b8451935060208086015193506040808701516001600160401b03811115615d5757600080fd5b8701601f81018913615d6857600080fd5b8051615d7661513c826150e3565b81815260c0918202830185019185820191908c841115615d9557600080fd5b938601935b83851015615e0b5780858e031215615db25760008081fd5b615dba614da7565b8551615dc581614c9b565b815285880151615dd481615106565b81890152858701518782015288860151898201526080808701519082015260a0808701519082015283529384019391860191615d9a565b50809750505050505050509250925092565b634e487b7160e01b600052601260045260246000fd5b60008260020b80615e5457634e487b7160e01b600052601260045260246000fd5b808360020b0791505092915050565b600080600080600060a08688031215615e7b57600080fd5b8551615e8681615106565b8095505060208601519350604086015192506060860151615ea681615106565b608087015190925061575b81615106565b600060208284031215615ec957600080fd5b8151610bd181614c9b565b600061ffff808316818103615eeb57615eeb615a31565b6001019392505050565b600060208284031215615f0757600080fd5b8151610bd181614d05565b61ffff82811682821603908082111561212457612124615a31565b60008251615f3f818460208701615659565b9190910192915050565b600060208284031215615f5b57600080fd5b8151610bd181615269565b602081526000610bd1602083018461567d56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206c5a694c046b246e322ba47cfa7aa9a65b2a1ec17274d11a6df016dd691b750264736f6c63430008120033";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
}
