/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium1",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "PoolAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "REPAY_THRESHOLD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "collectedFees0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "collectedFees1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeParams",
    outputs: [
      {
        internalType: "uint128",
        name: "openFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "feeToPool",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFeeToPool",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "LPFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "finishPriceX96",
        type: "uint160",
      },
    ],
    name: "findTicks",
    outputs: [
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "twatDiffScale",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getHashedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getHashedPositionKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedKey",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "minLiquidities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolTrusted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFeeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "LPFee",
        type: "uint256",
      },
    ],
    name: "updateFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twatDiffScale",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50615f7880620000216000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80638da5cb5b11610130578063aea84c91116100b8578063d34879971161007c578063d348799714610819578063d41dcbea1461082c578063d7a3dca014610841578063da69b0b314610873578063fc6e9cbf146108a757600080fd5b8063aea84c9114610744578063b8919fa614610757578063b9a402a51461076a578063bbd954721461077d578063c6c2c2ca1461079057600080fd5b8063a8404655116100ff578063a84046551461067f578063a841fdd8146106de578063a882c12d146106fe578063abf978e414610711578063ac9650d81461072457600080fd5b80638da5cb5b14610606578063952509231461061f5780639744a42d146106415780639c47697c1461066c57600080fd5b806348222442116101be578063683356911161018257806368335691146105705780636cb42a2f146105835780636fc280e1146105965780638129fc1c146105eb578063895f4ade146105f357600080fd5b8063482224421461046657806348c6f866146104795780635955cad31461049a5780635ea33ec514610527578063651976881461053a57600080fd5b80631698ee82116102055780631698ee82146102ce57806319fa10331461032057806319fda27714610353578063406a3d021461039f57806345e61a4d146103c057600080fd5b80630229fb6014610237578063089ca8dd146102645780630ea50f501461029757806313af4035146102b9575b600080fd5b61024a610245366004614c16565b6108ba565b604080519283526020830191909152015b60405180910390f35b610287610272366004614c86565b60106020526000908152604090205460ff1681565b604051901515815260200161025b565b6102aa6102a5366004614cb1565b61090d565b60405161025b93929190614d7d565b6102cc6102c7366004614c86565b610add565b005b6103086102dc366004614db4565b600a6020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b03909116815260200161025b565b61033361032e366004614edb565b610b37565b604080516001600160801b0393841681529290911660208301520161025b565b610387610361366004614f25565b60026020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b03909116815260200161025b565b6103b26103ad366004614f55565b610d8d565b60405190815260200161025b565b6104536103ce366004614c86565b600660208181526000928352604092839020835160c081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301546080820152600583015460a082015290820154600783015460088401546009850154600a860154600b90960154949593949293919261ffff909116919087565b60405161025b9796959493929190614fcf565b6103b2610474366004615016565b610dda565b61048c610487366004615032565b610e29565b60405161025b929190615099565b6104f16104a83660046150b2565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a00161025b565b61024a6105353660046150d4565b610f94565b61055d61054836600461511c565b60096020526000908152604090205460020b81565b60405160029190910b815260200161025b565b6103b261057e36600461518d565b61103a565b61024a6105913660046152ce565b611175565b6105d06105a4366004615325565b600560209081526000928352604080842090915290825290208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161025b565b6102cc61151f565b6102cc6106013660046153fc565b61164e565b600d54610308906201000090046001600160a01b031681565b61063261062d366004615433565b611723565b60405161025b9392919061544f565b6103b261064f3660046154c9565b600b60209081526000928352604080842090915290825290205481565b6102cc61067a3660046154f4565b6118a9565b61069261068d366004615540565b611922565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a00161025b565b6103b26106ec36600461511c565b60076020526000908152604090205481565b600e54610308906001600160a01b031681565b61024a61071f366004615590565b6119e3565b6107376107323660046155e0565b6121e8565b60405161025b91906156a4565b6102cc610752366004614c86565b6122dd565b61024a610765366004615706565b61232f565b6102cc610778366004615776565b612a95565b61024a61078b3660046157f4565b613220565b6107de61079e36600461511c565b6008602052600090815260409020805460018201546002909201546001600160801b0380831693600160801b938490048216938183169391049091169085565b604080516001600160801b0396871681529486166020860152928516928401929092529092166060820152608081019190915260a00161025b565b6102cc610827366004615842565b613368565b6108346134b8565b60405161025b91906158c1565b61024a61084f366004614f25565b60036020908152600092835260408084209091529082529020805460019091015482565b610387610881366004614f25565b60016020908152600092835260408084209091529082529020546001600160801b031681565b6102cc6108b536600461590e565b613595565b600080600f546001146108e85760405162461bcd60e51b81526004016108df90615976565b60405180910390fd5b6002600f556108fb868686866001613915565b6001600f559097909650945050505050565b600e5460009081906060906001600160a01b0316331461093f5760405162461bcd60e51b81526004016108df9061599a565b610947614a6f565b610959610474368b90038b018b615016565b6040820152600a600061096f60208c018c614c86565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60200160208101906109a49190614c86565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60400160208101906109d991906159b9565b62ffffff16815260208082019290925260409081016000908120546001600160a01b0390811661012086019081528584015183526009909452908290205460020b60e08086019190915292518251633850c7bd60e01b81529251911692633850c7bd92600480820193918290030181865afa158015610a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8091906159d4565b5050506001600160a01b0390931660208501819052610aab93508c92508b91508a908a908a90610e29565b905080925050610acb898261012001518484604001518560e00151613afe565b909a9099509197509095505050505050565b600d546201000090046001600160a01b03163314610b0d5760405162461bcd60e51b81526004016108df90615a76565b600d80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b600080600f54600114610b5c5760405162461bcd60e51b81526004016108df90615976565b6002600f556000610b6c86610dda565b6000818152600960209081526040808320546004909252822092935060020b9181610b98898933610d8d565b8152602081019190915260400160009081206002810154909250600160801b90046001600160801b031615610c9c5788516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c329190615a96565b60028301549091506001600160801b03600160801b909104811690821610610c6e576002820154600160801b90046001600160801b0316610c70565b805b9550610c8a896000015133886001600160801b0316613fe9565b6002820180546001600160801b031690555b60038201546001600160801b031615610d7a5760208901516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d9190615a96565b60038301549091506001600160801b0390811690821610610d4b5760038201546001600160801b0316610d4d565b805b9450610d67896020015133876001600160801b0316613fe9565b6003820180546001600160801b03191690555b50506001600f5550919590945092505050565b60408051600285810b602083015284900b918101919091526001600160a01b03821660608201526000906080016040516020818303038152906040528051906020012090505b9392505050565b805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff16606080840191909152835180840390910181526080909201909252805191012090565b60006060610e35614a6f565b610e47610474368b90038b018b615016565b60408083018290525163225e631360e21b8152600b600482015287151560248201526044810189905260648101879052608481018a90526001600160a01b03861660a482015260c481019190915273__$93dfed57e8f421caed97f24c336a056d51$__906389798c4c9060e401600060405180830381865af4158015610ed1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ef99190810190615aaf565b60808401919091526060830182905292508714610f425760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b60448201526064016108df565b85610f695760608101516080820151610f6491670de0b6b3a7640000906140e9565b610f86565b60808101516060820151610f8691670de0b6b3a7640000906140e9565b925050965096945050505050565b6000806000859050610fb9604051806040016040528060008152602001600081525090565b8560020b8260020b121561102f57506000878152600360209081526040808320600285900b8452825291829020825180840190935280548084526001909101549183019190915261100a9085615bc7565b935080602001518361101c9190615bc7565b92506110288583615bda565b9150610fb9565b505094509492505050565b6001600160a01b0383166000908152600560209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290670de0b6b3a7640000906111629061109e9083615bc7565b670de0b6b3a764000061115b8560400151426110ba9190615bff565b60208701516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91611101918e9190600401615c12565b602060405180830381865af415801561111e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111429190615a96565b61115490670de0b6b3a7640000615bc7565b91906141c7565b91906140e9565b61116c9190615bff565b95945050505050565b600e5460009081906001600160a01b031633146111a45760405162461bcd60e51b81526004016108df9061599a565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526000600a816111e160208a018a614c86565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906112169190614c86565b6001600160a01b03166001600160a01b03168152602001908152602001600020600088604001602081019061124b91906159b9565b62ffffff1681526020810191909152604001600020546001600160a01b0316905061127e61047436899003890189615016565b808352600090815260096020908152604080832054600290810b838701526001600160a01b038516845260068352818420825160c08101845281548152600182015494810194909452908101549183019190915260038101546060830152600481015460808301526005015460a0820152905b87518110156115135787818151811061130c5761130c615c2d565b602002602001015160200151600260008660000151815260200190815260200160002060008a848151811061134357611343615c2d565b6020908102919091018101515160020b82528101919091526040016000908120805490919061137c9084906001600160801b0316615c43565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550826001600160a01b0316633c8a7d8d308a84815181106113c2576113c2615c2d565b60200260200101516000015187602001518c86815181106113e5576113e5615c2d565b6020026020010151600001516113fb9190615bda565b8c868151811061140d5761140d615c2d565b6020026020010151602001518c60405160200161143991906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611468959493929190615c63565b60408051808303816000875af1158015611486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114aa9190615cb0565b6080860152606085018190526114c09087615bc7565b95508360800151856114d29190615bc7565b94506115018882815181106114e9576114e9615c2d565b60200260200101516000015185600001518585614285565b8061150b81615cd4565b9150506112f1565b50505050935093915050565b600054610100900460ff161580801561153f5750600054600160ff909116105b806115595750303b158015611559575060005460ff166001145b6115bc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108df565b6000805460ff1916600117905580156115df576000805461ff0019166101001790555b600d80546001600f8190556001600160b01b031990911633620100000261ffff191617179055801561164b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b600d546201000090046001600160a01b0316331461167e5760405162461bcd60e51b81526004016108df90615a76565b6001600160a01b03919091166000908152600660208181526040928390208451805182558083015160018301558085015160028301556060808201516003840155608080830151600485015560a0928301516005850155938701519483019490945593850151600782015591840151600883015583015160098201805461ffff191661ffff90921691909117905590820151600a82015560c090910151600b90910155565b60008061172e614ad7565b600a600061173f6020870187614c86565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160208101906117749190614c86565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560400160208101906117a991906159b9565b62ffffff16815260208101919091526040016000908120546001600160a01b031693506009906117e161047436889003880188615016565b815260208082019290925260409081016000908120546001600160a01b038716825260068085529183902083516101a081018552815460e082019081526001830154610100830152600283810154610120840152600384015461014084015260048401546101608401526005840154610180840152908252938201549581019590955260078101549385019390935260088301546060850152600983015461ffff166080850152600a83015460a0850152600b9092015460c08401529496940b945092915050565b600d546201000090046001600160a01b031633146118d95760405162461bcd60e51b81526004016108df90615a76565b60006118e487610dda565b60009081526008602052604090206001600160801b03968716600160801b968816870217815593861692909516909302176001820155600201555050565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526004600061196361047436899003890189615016565b8152602001908152602001600020600061197e868686610d8d565b81526020808201929092526040908101600020815160a0810183528154815260018201549381019390935260028101546001600160801b0380821693850193909352600160801b9004821660608401526003015416608082015290505b949350505050565b600080600f54600114611a085760405162461bcd60e51b81526004016108df90615976565b6002600f81905550611a6c6040518061014001604052806000815260200160008152602001600081526020016000815260200160008019168152602001600060020b8152602001600081526020016000815260200160008152602001600081525090565b611a7e61047436899003890189615016565b60808201818152600091825260096020908152604080842054600290810b60a08701528351855260088352818520015460e08601529151835260049052812081611ac9898933610d8d565b8152602081019190915260400160002060028101549091506001600160801b031615801590611b08575060028101546001600160801b03808716911610155b611b385760405162461bcd60e51b81526020600482015260016024820152603760f91b60448201526064016108df565b6000600a81611b4a60208c018c614c86565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6020016020810190611b7f9190614c86565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190611bb491906159b9565b62ffffff16815260208082019290925260409081016000908120546001600160a01b031680825260068452828220835160c080820186528254825260018301548288015260028301548287015260038301546060830152600483015460808084019190915260059093015460a083015291890151845260079095529290912054918601919091529150885b8860020b8160020b121561201c576080850180516000908152600160209081526040808320600286810b8086529184528285205460c08c0151965186529084528285209185529252909120546001600160801b039182169291611ca391168b615ced565b6001600160801b0316611cb69190615bc7565b816001600160801b03161015611cfa5760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b60448201526064016108df565b836001600160a01b031663a34123a7838860a0015185611d1a9190615bda565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526001600160801b038c16604482015260640160408051808303816000875af1158015611d6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d939190615cb0565b6020880152865260a086015160009081906001600160a01b03871690634f1eb3d89030908790611dc39082615bda565b6001600160801b03806040518663ffffffff1660e01b8152600401611dec959493929190615d0d565b60408051808303816000875af1158015611e0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2e9190615d4a565b90925090506001600160801b03831615611f26576000611e6e8960e00151670de0b6b3a76400008b60000151866001600160801b031661115b9190615bff565b90506000611e9c8a60e00151670de0b6b3a76400008c60200151866001600160801b031661115b9190615bff565b9050818a61010001818151611eb19190615bc7565b9052506101208a018051829190611ec9908390615bc7565b90525060808a01518a51611f23919088908590611eef906001600160801b038a16615bff565b611ef99190615bff565b848e60200151886001600160801b0316611f139190615bff565b611f1d9190615bff565b896143b8565b50505b8751604089018051611f39908390615bc7565b9052506020880151606089018051611f52908390615bc7565b90525060808801516000908152600160209081526040808320600288900b8452909152812080548d9290611f909084906001600160801b0316615c43565b92506101000a8154816001600160801b0302191690836001600160801b031602179055508a83611fc09190615c43565b6001600160801b0316600003611ff35760a088015160808901516000908152600b60205260409020611ff391869061443e565b6120038489608001518888614285565b50505060a08501516120159082615bda565b9050611c3f565b61202e8b8b8b8860a001516000613915565b50506080850151600090815260046020526040812089916120508d8d33610d8d565b815260208101919091526040016000908120600201805490919061207e9084906001600160801b0316615c43565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000856040015111156120ca576120ca6120bf60208d018d614c86565b338760400151613fe9565b6060850151156120f2576120f26120e760408d0160208e01614c86565b338760600151613fe9565b6101008501511561212e5761212e61210d60208d018d614c86565b600d60029054906101000a90046001600160a01b0316876101000151613fe9565b6101208501511561216d5761216d61214c60408d0160208e01614c86565b600d60029054906101000a90046001600160a01b0316876101200151613fe9565b604080516001600160801b038a16815260028c810b60208301528b900b81830152905133916001600160a01b038616917f49ae36094cb0a2af1fad270a75bb3188db1a6e13c5b0b9a230319221247fda9d9181900360600190a35050505060408101516060909101516001600f559097909650945050505050565b6060816001600160401b0381111561220257612202614dfb565b60405190808252806020026020018201604052801561223557816020015b60608152602001906001900390816122205790505b50905060005b828110156122d5576122a53085858481811061225957612259615c2d565b905060200281019061226b9190615d79565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506144bb92505050565b8282815181106122b7576122b7615c2d565b602002602001018190525080806122cd90615cd4565b91505061223b565b505b92915050565b600d546201000090046001600160a01b0316331461230d5760405162461bcd60e51b81526004016108df90615a76565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600080600f546001146123545760405162461bcd60e51b81526004016108df90615976565b6002600f55612361614b4f565b612373610474368a90038a018a615016565b808252600090815260096020908152604082205460020b81840152600a90829061239f908c018c614c86565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a60200160208101906123d49190614c86565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a604001602081019061240991906159b9565b62ffffff16815260208082019290925260409081016000908120546001600160a01b031680825260068452828220835160c0810185528154815260018201548187015260028083015482870152600383015460608301526004830154608083015260059092015460a082015287850152865183526008909452919020820154610100850152915087810b9089900b126124c85760405162461bcd60e51b81526020600482015260016024820152606960f81b60448201526064016108df565b60208201516124d79089615dd5565b60020b1580156124f6575060208201516124f19088615dd5565b60020b155b6125265760405162461bcd60e51b81526020600482015260016024820152601960fa1b60448201526064016108df565b875b8760020b8160020b121561291457816001600160a01b0316633c8a7d8d30838660200151856125579190615bda565b604080513360208201528d91016040516020818303038152906040526040518663ffffffff1660e01b8152600401612593959493929190615c63565b60408051808303816000875af11580156125b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125d59190615cb0565b6080850152606084018190526125eb9086615bc7565b94508260800151846125fd9190615bc7565b9350816001600160a01b031663514ea4bf30838660200151856126209190615bda565b60405160609390931b6bffffffffffffffffffffffff1916602084015260e891821b6034840152901b6037820152603a01604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161268591815260200190565b60a060405180830381865afa1580156126a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126c69190615e05565b6001600160801b0390811660c08901521660a08701819052151592508291506126f59050575060008360c00151115b1561278957816001600160a01b0316634f1eb3d8308386602001518561271b9190615bda565b6001600160801b03806040518663ffffffff1660e01b8152600401612744959493929190615d0d565b60408051808303816000875af1158015612762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127869190615d4a565b50505b82516000908152600160209081526040808320600285900b84529091529020546001600160801b031660e084018190521561286c5761010083015160a08401516000916127df9190670de0b6b3a76400006140e9565b61010085015160c086015191925060009161280291670de0b6b3a76400006140e9565b90508185610120018181516128179190615bc7565b9052506101408501805182919061282f908390615bc7565b905250845160a08601516128659190859061284b908690615bff565b848960c0015161285b9190615bff565b8960e001516143b8565b505061288e565b60208084015184516000908152600b909252604090912061288e91839061443e565b82516000908152600160209081526040808320600285900b8452909152812080548992906128c69084906001600160801b0316615ced565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506128fe818460000151848660400151614285565b602083015161290d9082615bda565b9050612528565b6129268a8a8a86602001516000613915565b5050610120830151156129645761296461294360208c018c614c86565b600d60029054906101000a90046001600160a01b0316856101200151613fe9565b610140830151156129a3576129a361298260408c0160208d01614c86565b600d60029054906101000a90046001600160a01b0316856101400151613fe9565b8251600090815260046020526040812088916129c08c8c8b610d8d565b81526020810191909152604001600090812060020180549091906129ee9084906001600160801b0316615ced565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550856001600160a01b0316826001600160a01b03167f7e1aa040ae22ae078b2e04d7e756a73671a8435cd8b72b0bd15f1cef372133d2898c8c604051612a79939291906001600160801b03939093168352600291820b6020840152900b604082015260600190565b60405180910390a350506001600f555090969095509350505050565b600d546201000090046001600160a01b03163314612ac55760405162461bcd60e51b81526004016108df90615a76565b600080856001600160a01b0316876001600160a01b031610612ae8578587612aeb565b86865b604080516001600160a01b03808516602083015283169181019190915262ffffff881660608201529193509150600090608001604051602081830303815290604052805190602001209050866001600160a01b0316886001600160a01b031603612b845760405162461bcd60e51b815260206004820152600a60248201526939b0b6b2903a37b5b2b760b11b60448201526064016108df565b6001600160a01b03831615801590612ba457506001600160a01b03821615155b612bdf5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016108df565b6001600160a01b038381166000908152600a602090815260408083208685168452825280832062ffffff8b1684529091529020541615612c4f5760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b60448201526064016108df565b6001600160a01b038281166000908152600a602090815260408083208785168452825280832062ffffff8b1684529091529020541615612cbf5760405162461bcd60e51b815260206004820152600b60248201526a706f6f6c2065786973747360a81b60448201526064016108df565b60008181526009602052604090205460020b15612d0c5760405162461bcd60e51b815260206004820152600b60248201526a7469636b2065786973747360a81b60448201526064016108df565b60008560020b138015612d8b5750886001600160a01b031663d0c93a7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d7c9190615e59565b612d869086615dd5565b60020b155b612dc15760405162461bcd60e51b815260206004820152600760248201526673706163696e6760c81b60448201526064016108df565b6001601060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555088600a6000856001600160a01b03166001600160a01b031681526020019081526020016000206000846001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555088600a6000846001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550846009600083815260200190815260200160002060006101000a81548162ffffff021916908360020b62ffffff1602179055506064600760008381526020019081526020016000208190555083600660008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155505060208201518160060155604082015181600701556060820151816008015560808201518160090160006101000a81548161ffff021916908361ffff16021790555060a082015181600a015560c082015181600b015590505088600c6000600d60009054906101000a900461ffff1661ffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600d600081819054906101000a900461ffff168092919061308c90615e76565b825461ffff9182166101009390930a928302919092021990911617905550600e54604051633eb4adab60e01b81526001600160a01b038581166004830152848116602483015290911690633eb4adab90604401600060405180830381600087803b1580156130f957600080fd5b505af115801561310d573d6000803e3d6000fd5b505050600082815260086020526040908190207706f05b59d3b20000000000000000000000038d7ea4c6800081557706f05b59d3b20000000000000000000000b1a2bc2ec50000600182015567016345785d8a0000600290910155516332148f6760e01b8152606460048201526001600160a01b038b1691506332148f6790602401600060405180830381600087803b1580156131a957600080fd5b505af11580156131bd573d6000803e3d6000fd5b50506040805162ffffff8a168152600289900b60208201526001600160a01b03808716945087811693508d16917fc57f9b9fa0ab86d2c86cc2d78f2f5d7cb8320503c0203fa154565617b830d0f9910160405180910390a4505050505050505050565b600e5460009081906001600160a01b0316331461324f5760405162461bcd60e51b81526004016108df9061599a565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261328c61047436879003870187615016565b60808201819052600090815260096020908152604082205460020b835261335a918791600a91906132bf90840184614c86565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906132f49190614c86565b6001600160a01b03166001600160a01b03168152602001908152602001600020600088604001602081019061332991906159b9565b62ffffff168152602081019190915260400160002054608084015184516001600160a01b0390921691889190613afe565b9093509150505b9250929050565b3360009081526010602052604090205460ff166133af5760405162461bcd60e51b8152602060048201526005602482015264085c1bdbdb60da1b60448201526064016108df565b60006133bd82840184614c86565b9050600080336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134249190615e97565b336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613462573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134869190615e97565b9092509050861561349d5761349d8284338a6144e0565b85156134af576134af818433896144e0565b50505050505050565b600d546060906000906134d19060019061ffff16615eb4565b61ffff1690506000816001600160401b038111156134f1576134f1614dfb565b60405190808252806020026020018201604052801561351a578160200160208202803683370190505b50905060005b828110156122d557600c6000613537836001615bc7565b815260200190815260200160002060009054906101000a90046001600160a01b031682828151811061356b5761356b615c2d565b6001600160a01b03909216602092830291909101909101528061358d81615cd4565b915050613520565b600e546001600160a01b031633146135bf5760405162461bcd60e51b81526004016108df9061599a565b61361c60405180610100016040528060006001600160801b03168152602001600081526020016000815260200160006001600160801b03168152602001600081526020016000801916815260200160008152602001600081525090565b61362e61047436879003870187615016565b60a0820181905260009081526008602052604081206002015460c0830152805b85518110156136a45785818151811061366957613669615c2d565b602002602001015160200151836060018181516136869190615ced565b6001600160801b03169052508061369c81615cd4565b91505061364e565b5060005b85518110156138b857600160008460a00151815260200190815260200160002060008783815181106136dc576136dc615c2d565b6020908102919091018101515160020b8252810191909152604001600020546001600160801b0316835285516137519087908390811061371e5761371e615c2d565b6020026020010151602001516001600160801b031684606001516001600160801b0316866140e99092919063ffffffff16565b6040840181905260c0840151875161379592670de0b6b3a7640000918a908690811061377f5761377f615c2d565b60200260200101516040015161115b9190615bc7565b60e084018190526080840180516137ad908390615bc7565b915081815250506138098360e0015184604001518884815181106137d3576137d3615c2d565b6020026020010151604001516137e99190615bc7565b6137f39190615bff565b8451600160801b906001600160801b03166140e9565b836020018181525050600360008460a001518152602001908152602001600020600087838151811061383d5761383d615c2d565b60200260200101516000015160020b60020b81526020019081526020016000209150841561388857826020015182600101600082825461387d9190615bc7565b909155506138a69050565b82602001518260000160008282546138a09190615bc7565b90915550505b806138b081615cd4565b9150506136a8565b5060808201511561390d5761390d846138dd576138d86020880188614c86565b6138ed565b6138ed6040880160208901614c86565b600d60029054906101000a90046001600160a01b03168460800151613fe9565b505050505050565b60008061397c6040518061012001604052806000815260200160008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b031681526020016000801916815260200160008152602001600081525090565b831561398d5761398d888888614563565b61399f610474368a90038a018a615016565b60c082018190526000908152600460205260408120816139c08a8a33610d8d565b815260200190815260200160002090506139e08260c00151898989610f94565b602084015280835281546002830154613a0b9291909103906001600160801b0316600160801b6140e9565b6001600160801b039081166080840152600182015460208401516002840154613a3e93929091039116600160801b6140e9565b6001600160801b0390811660a0840152608083015116151580613a6e575060008260a001516001600160801b0316115b15613ac35760808201516002820180546001600160801b03600160801b8083048216909401811690930290831617905560a08301516003830180548084169092019092166001600160801b0319919091161790555b81518155602090910151600182015560028101546003909101546001600160801b03600160801b909204821693501690509550959350505050565b6000828152600760209081526040808320546001600160a01b038816845260068352818420825160c08101845281548152600182015494810194909452600281015492840192909252600382015460608401526004820154608084015260059091015460a083015282918290815b8851811015613f48576001600089815260200190815260200160002060008a8381518110613b9c57613b9c615c2d565b6020908102919091018101515160020b82528101919091526040016000205489516001600160801b039091169350899082908110613bdc57613bdc615c2d565b6020026020010151602001516001600160801b031684600260008b815260200190815260200160002060008c8581518110613c1957613c19615c2d565b6020908102919091018101515160020b825281019190915260400160002054613c4b91906001600160801b0316615bc7565b613c559190615bc7565b836001600160801b03161015613c995760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b60448201526064016108df565b888181518110613cab57613cab615c2d565b602002602001015160200151600260008a815260200190815260200160002060008b8481518110613cde57613cde615c2d565b6020908102919091018101515160020b825281019190915260400160009081208054909190613d179084906001600160801b0316615ced565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000808b6001600160a01b031663a34123a78c8581518110613d5f57613d5f615c2d565b6020026020010151600001518b8e8781518110613d7e57613d7e615c2d565b602002602001015160000151613d949190615bda565b8e8781518110613da657613da6615c2d565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af1158015613e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e309190615cb0565b915091508b6001600160a01b0316634f1eb3d8308d8681518110613e5657613e56615c2d565b6020026020010151600001518c8f8881518110613e7557613e75615c2d565b602002602001015160000151613e8b9190615bda565b86866040518663ffffffff1660e01b8152600401613ead959493929190615d0d565b60408051808303816000875af1158015613ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613eef9190615d4a565b50613efc90508289615bc7565b9750613f088188615bc7565b9650613f338b8481518110613f1f57613f1f615c2d565b6020026020010151600001518b8e87614285565b50508080613f4090615cd4565b915050613b6c565b50600085118015613f57575083155b80613f6b575084158015613f6b5750600084115b613f9f5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b60448201526064016108df565b8415613fbc57613fbc613fb560208c018c614c86565b3387613fe9565b8315613fdc57613fdc613fd560408c0160208d01614c86565b3386613fe9565b5050509550959350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916140459190615ecf565b6000604051808303816000865af19150503d8060008114614082576040519150601f19603f3d011682016040523d82523d6000602084013e614087565b606091505b50915091508180156140b15750805115806140b15750808060200190518101906140b19190615eeb565b6140e25760405162461bcd60e51b815260206004820152600260248201526114d560f21b60448201526064016108df565b5050505050565b6000808060001985870985870292508281108382030391505080600003614122576000841161411757600080fd5b508290049050610dd3565b80841161415a5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b60448201526064016108df565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000838015614267576001841680156141e2578592506141e6565b8392505b508260011c8460011c94505b8415614261578560801c1561420657600080fd5b8586028181018181101561421957600080fd5b859004965050600185161561425657858302838782041461423f57861561423f57600080fd5b8181018181101561424f57600080fd5b8590049350505b8460011c94506141f2565b5061427d565b838015614277576000925061427b565b8392505b505b509392505050565b6001600160a01b0382166000908152600560209081526040808320600288810b808652918452828520888652600185528386208387528552838620548987529185528386209286529190935292205482546001600160801b039283169290911690670de0b6b3a764000090614361906142fe9083615bc7565b670de0b6b3a764000061115b87600201544261431a9190615bff565b60018901546040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91611101918f9190600401615c12565b61436b9190615bff565b83556001600160801b038116156143a15761439c6001600160801b0382811690670de0b6b3a76400009085166140e9565b6143a4565b60005b600184015550504260029091015550505050565b6000858152600360209081526040808320600288900b845290915290206143ed84600160801b6001600160801b0385166140e9565b8160000160008282546144009190615bc7565b9091555061441e905083600160801b6001600160801b0385166140e9565b8160010160008282546144319190615bc7565b9091555050505050505050565b8060020b8260020b8161445357614453615dbf565b0760020b1561446157600080fd5b60008061448f8360020b8560020b8161447c5761447c615dbf565b0560020b600881901d9161010090910790565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b6060610dd38383604051806060016040528060278152602001615f1c60279139614959565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806140e25760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016108df565b600061457761047436869003860186615016565b600081815260096020908152604080832054600883529083206002908101549495500b92869290918190819081908190600a9082906145b8908f018f614c86565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008d60200160208101906145ed9190614c86565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008d604001602081019061462291906159b9565b62ffffff1681526020810191909152604001600020546001600160a01b031690505b8960020b8760020b12156148ec57600089815260016020908152604080832060028b900b84529091529020546001600160801b03161561470c576001600160a01b03811663a34123a7886146988b82615bda565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526000604482015260640160408051808303816000875af11580156146e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147099190615cb0565b50505b6000806001600160a01b038316634f1eb3d8308b61472a8e82615bda565b6001600160801b03806040518663ffffffff1660e01b8152600401614753959493929190615d0d565b60408051808303816000875af1158015614771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147959190615d4a565b90925090506000806147b96001600160801b0385168b670de0b6b3a76400006140e9565b6147d56001600160801b0385168c670de0b6b3a76400006140e9565b90925090506147e4828a615bc7565b98506147f08189615bc7565b9750600160008e815260200190815260200160002060008c60020b60020b815260200190815260200160002060009054906101000a90046001600160801b031696506000876001600160801b031611156148d55760008d815260036020908152604080832060028f900b84529091529020955061488d614879836001600160801b038716615bff565b600160801b896001600160801b03166140e9565b8660000160008282546148a09190615bc7565b909155506148bc9050614879826001600160801b038616615bff565b8660010160008282546148cf9190615bc7565b90915550505b5050505087876148e59190615bda565b9650614644565b841561491a5761491a61490260208e018e614c86565b600d546201000090046001600160a01b031687613fe9565b831561494b5761494b61493360408e0160208f01614c86565b600d546201000090046001600160a01b031686613fe9565b505050505050505050505050565b6060600080856001600160a01b0316856040516149769190615ecf565b600060405180830381855af49150503d80600081146149b1576040519150601f19603f3d011682016040523d82523d6000602084013e6149b6565b606091505b50915091506149c7868383876149d1565b9695505050505050565b60608315614a40578251600003614a39576001600160a01b0385163b614a395760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108df565b50816119db565b6119db8383815115614a555781518083602001fd5b8060405162461bcd60e51b81526004016108df9190615f08565b6040518061014001604052806000815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600060020b8152602001614aca614ad7565b8152600060209091015290565b6040518060e00160405280614b1b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff16815260200160008152602001600081525090565b60405180610160016040528060008019168152602001600060020b8152602001614ba86040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160006001600160801b031681526020016000815260200160008152602001600081525090565b600060608284031215614c0157600080fd5b50919050565b8060020b811461164b57600080fd5b60008060008060c08587031215614c2c57600080fd5b614c368686614bef565b93506060850135614c4681614c07565b92506080850135614c5681614c07565b915060a0850135614c6681614c07565b939692955090935050565b6001600160a01b038116811461164b57600080fd5b600060208284031215614c9857600080fd5b8135610dd381614c71565b801515811461164b57600080fd5b600080600080600060e08688031215614cc957600080fd5b614cd38787614bef565b9450606086013593506080860135925060a0860135614cf181614ca3565b9497939650919460c0013592915050565b600081518084526020808501945080840160005b83811015614d72578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c09096019590820190600101614d16565b509495945050505050565b83815282602082015260606040820152600061116c6060830184614d02565b803562ffffff81168114614daf57600080fd5b919050565b600080600060608486031215614dc957600080fd5b8335614dd481614c71565b92506020840135614de481614c71565b9150614df260408501614d9c565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715614e3357614e33614dfb565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614e6157614e61614dfb565b604052919050565b600060608284031215614e7b57600080fd5b604051606081018181106001600160401b0382111715614e9d57614e9d614dfb565b6040529050808235614eae81614c71565b81526020830135614ebe81614c71565b6020820152614ecf60408401614d9c565b60408201525092915050565b600080600060a08486031215614ef057600080fd5b614efa8585614e69565b92506060840135614f0a81614c07565b91506080840135614f1a81614c07565b809150509250925092565b60008060408385031215614f3857600080fd5b823591506020830135614f4a81614c07565b809150509250929050565b600080600060608486031215614f6a57600080fd5b8335614f7581614c07565b92506020840135614f8581614c07565b91506040840135614f1a81614c71565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b6101808101614fde828a614f95565b8760c08301528660e08301528561010083015261ffff8516610120830152836101408301528261016083015298975050505050505050565b60006060828403121561502857600080fd5b610dd38383614e69565b600080600080600080610100878903121561504c57600080fd5b6150568888614bef565b9550606087013594506080870135935060a087013561507481614ca3565b925060c0870135915060e087013561508b81614c71565b809150509295509295509295565b8281526040602082015260006119db6040830184614d02565b600080604083850312156150c557600080fd5b50508035926020909101359150565b600080600080608085870312156150ea57600080fd5b8435935060208501356150fc81614c07565b9250604085013561510c81614c07565b91506060850135614c6681614c07565b60006020828403121561512e57600080fd5b5035919050565b600060c0828403121561514757600080fd5b61514f614e11565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015292915050565b600080600061010084860312156151a357600080fd5b83356151ae81614c71565b925060208401356151be81614c07565b9150614df28560408601615135565b60006001600160401b038211156151e6576151e6614dfb565b5060051b60200190565b6001600160801b038116811461164b57600080fd5b600082601f83011261521657600080fd5b8135602061522b615226836151cd565b614e39565b82815260c0928302850182019282820191908785111561524a57600080fd5b8387015b858110156152c15781818a0312156152665760008081fd5b61526e614e11565b813561527981614c07565b815281860135615288816151f0565b8187015260408281013590820152606080830135908201526080808301359082015260a08083013590820152845292840192810161524e565b5090979650505050505050565b600080600060a084860312156152e357600080fd5b6152ed8585614bef565b925060608401356001600160401b0381111561530857600080fd5b61531486828701615205565b9250506080840135614f1a81614c71565b6000806040838503121561533857600080fd5b823561534381614c71565b91506020830135614f4a81614c07565b61ffff8116811461164b57600080fd5b6000610180828403121561537657600080fd5b60405160e081018181106001600160401b038211171561539857615398614dfb565b6040529050806153a88484615135565b815260c0830135602082015260e0830135604082015261010083013560608201526101208301356153d881615353565b8060808301525061014083013560a082015261016083013560c08201525092915050565b6000806101a0838503121561541057600080fd5b823561541b81614c71565b915061542a8460208501615363565b90509250929050565b60006060828403121561544557600080fd5b610dd38383614bef565b6001600160a01b0384168152600283900b602082015281516101c082019061547b906040840190614f95565b60208301516101008301526040830151610120830152606083015161014083015261ffff60808401511661016083015260a083015161018083015260c08301516101a0830152949350505050565b600080604083850312156154dc57600080fd5b8235915060208301358060010b8114614f4a57600080fd5b600080600080600080610100878903121561550e57600080fd5b6155188888614e69565b986060880135985060808801359760a0810135975060c0810135965060e00135945092505050565b60008060008060c0858703121561555657600080fd5b6155608686614bef565b9350606085013561557081614c07565b9250608085013561558081614c07565b915060a0850135614c6681614c71565b60008060008060c085870312156155a657600080fd5b6155b08686614bef565b935060608501356155c081614c07565b925060808501356155d081614c07565b915060a0850135614c66816151f0565b600080602083850312156155f357600080fd5b82356001600160401b038082111561560a57600080fd5b818501915085601f83011261561e57600080fd5b81358181111561562d57600080fd5b8660208260051b850101111561564257600080fd5b60209290920196919550909350505050565b60005b8381101561566f578181015183820152602001615657565b50506000910152565b60008151808452615690816020860160208601615654565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156156f957603f198886030184526156e7858351615678565b945092850192908501906001016156cb565b5092979650505050505050565b600080600080600060e0868803121561571e57600080fd5b6157288787614bef565b9450606086013561573881614c07565b9350608086013561574881614c07565b925060a0860135615758816151f0565b915060c086013561576881614c71565b809150509295509295909350565b600080600080600080610220878903121561579057600080fd5b863561579b81614c71565b955060208701356157ab81614c71565b945060408701356157bb81614c71565b93506157c960608801614d9c565b925060808701356157d981614c07565b91506157e88860a08901615363565b90509295509295509295565b6000806080838503121561580757600080fd5b6158118484614bef565b915060608301356001600160401b0381111561582c57600080fd5b61583885828601615205565b9150509250929050565b6000806000806060858703121561585857600080fd5b843593506020850135925060408501356001600160401b038082111561587d57600080fd5b818701915087601f83011261589157600080fd5b8135818111156158a057600080fd5b8860208285010111156158b257600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b818110156159025783516001600160a01b0316835292840192918401916001016158dd565b50909695505050505050565b60008060008060c0858703121561592457600080fd5b61592e8686614bef565b935060608501356001600160401b0381111561594957600080fd5b61595587828801615205565b935050608085013561596681614ca3565b9396929550929360a00135925050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b602080825260059082015264042c2eae8d60db1b604082015260600190565b6000602082840312156159cb57600080fd5b610dd382614d9c565b600080600080600080600060e0888a0312156159ef57600080fd5b87516159fa81614c71565b6020890151909750615a0b81614c07565b6040890151909650615a1c81615353565b6060890151909550615a2d81615353565b6080890151909450615a3e81615353565b60a089015190935060ff81168114615a5557600080fd5b60c0890151909250615a6681614ca3565b8091505092959891949750929550565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b600060208284031215615aa857600080fd5b5051919050565b60008060006060808587031215615ac557600080fd5b8451935060208086015193506040808701516001600160401b03811115615aeb57600080fd5b8701601f81018913615afc57600080fd5b8051615b0a615226826151cd565b81815260c0918202830185019185820191908c841115615b2957600080fd5b938601935b83851015615b9f5780858e031215615b465760008081fd5b615b4e614e11565b8551615b5981614c07565b815285880151615b68816151f0565b81890152858701518782015288860151898201526080808701519082015260a0808701519082015283529384019391860191615b2e565b50809750505050505050509250925092565b634e487b7160e01b600052601160045260246000fd5b808201808211156122d7576122d7615bb1565b600281810b9083900b01627fffff8113627fffff19821217156122d7576122d7615bb1565b818103818111156122d7576122d7615bb1565b60e08101615c208285614f95565b8260c08301529392505050565b634e487b7160e01b600052603260045260246000fd5b6001600160801b038281168282160390808211156122d5576122d5615bb1565b60018060a01b03861681528460020b60208201528360020b60408201526001600160801b038316606082015260a060808201526000615ca560a0830184615678565b979650505050505050565b60008060408385031215615cc357600080fd5b505080516020909101519092909150565b600060018201615ce657615ce6615bb1565b5060010190565b6001600160801b038181168382160190808211156122d5576122d5615bb1565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b60008060408385031215615d5d57600080fd5b8251615d68816151f0565b6020840151909250614f4a816151f0565b6000808335601e19843603018112615d9057600080fd5b8301803591506001600160401b03821115615daa57600080fd5b60200191503681900382131561336157600080fd5b634e487b7160e01b600052601260045260246000fd5b60008260020b80615df657634e487b7160e01b600052601260045260246000fd5b808360020b0791505092915050565b600080600080600060a08688031215615e1d57600080fd5b8551615e28816151f0565b8095505060208601519350604086015192506060860151615e48816151f0565b6080870151909250615768816151f0565b600060208284031215615e6b57600080fd5b8151610dd381614c07565b600061ffff808316818103615e8d57615e8d615bb1565b6001019392505050565b600060208284031215615ea957600080fd5b8151610dd381614c71565b61ffff8281168282160390808211156122d5576122d5615bb1565b60008251615ee1818460208701615654565b9190910192915050565b600060208284031215615efd57600080fd5b8151610dd381614ca3565b602081526000610dd3602083018461567856fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207905d0db182956cc154d1881b6adf2c755c939c33ab6595791439eecbf89f5e064736f6c63430008120033";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
}
