/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "amount0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "feeAmountTickSpacing",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "estimatedMinimumSlippage",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint160",
        name: "sqrtStartingPriceX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "startingTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "finishTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "binSize",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "lte",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "findNearestInitializedBin",
    outputs: [
      {
        internalType: "int24",
        name: "nextTick",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "getURates",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "isBorrowable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "reducePercentage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "orderFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reclaimer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
      {
        internalType: "address",
        name: "bf",
        type: "address",
      },
      {
        internalType: "address",
        name: "of_",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapFactory",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "updateUtilizationGrowth",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "growth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct UtilizationGrowth",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "Urate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600b8054600161ffff199182168117909255600d8054909116909117905534801561002e57600080fd5b50600f80546001600160a01b0319163317905560026020527febaffbad3b7fced837389fa2c76ef17bd16e01452243bc801329ba9c392c939f805462ffffff19908116600a179091557f8f2d796c159bb2bb788bc3f1a337a929c07b0cf1d9277451fd5f909c263c02d680548216603c1790556127106000527f5e7cc46d63c0d79d92b677239084c61b6b019c2759734090f1970fc4b4823988805490911660c8179055615a6e80620000e26000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c80637f8f1dda1161013b578063abf978e4116100b8578063d41dcbea1161007c578063d41dcbea146107ef578063d5783953146107f7578063d7d3ed6a14610824578063da69b0b314610837578063fe4f278a1461086b57600080fd5b8063abf978e414610790578063ac00b809146107a3578063c3419a71146107b6578063c5161a60146107c9578063d3487997146107dc57600080fd5b806395250923116100ff57806395250923146106af5780639744a42d146106d1578063a8404655146106fc578063a882c12d1461075b578063aa966e551461076e57600080fd5b80637f8f1dda1461062e5780638da5cb5b146106635780638f88d560146106765780638fd74d4d14610689578063912a8e001461069c57600080fd5b80634185a442116101c9578063626a45181161018d578063626a45181461055157806365197688146105835780636fc280e1146105a657806379378b41146105fb5780637dc7306c1461060e57600080fd5b80634185a442146103e757806345e61a4d146103fa5780634d18e0d0146104905780635955cad3146104a35780635a42047a1461053057600080fd5b806319fa10331161021057806319fa10331461030657806319fda2771461033957806322afcccb14610385578063273cbaa0146103bd5780632a6fc4ba146103d257600080fd5b80630229fb601461024257806304ad52fc1461026f5780630ea50f50146102905780631698ee82146102b4575b600080fd5b61025561025036600461485a565b61087e565b604080519283526020830191909152015b60405180910390f35b61028261027d366004614924565b610b74565b604051908152602001610266565b6102a361029e366004614992565b610ca5565b604051610266959493929190614a68565b6102ee6102c2366004614aa6565b60036020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b039091168152602001610266565b610319610314366004614ae4565b611224565b604080516001600160801b03938416815292909116602083015201610266565b61036d610347366004614b2e565b60066020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b039091168152602001610266565b6103aa610393366004614b5e565b600260208190526000918252604090912054900b81565b60405160029190910b8152602001610266565b6103c56114bf565b6040516102669190614b79565b6103e56103e0366004614cd1565b61158f565b005b6102556103f5366004614d3b565b6117dd565b61047e610408366004614d8c565b600e60209081526000918252604091829020825160a0810184528154815260018201549281019290925260028101549282019290925260038201546060820152600482015460808201526005820154600683015460078401546008850154600990950154939492939192909161ffff9091169086565b60405161026696959493929190614da9565b6103e561049e366004614e11565b61188d565b6104fa6104b1366004614e70565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a001610266565b61054361053e366004614e92565b611c47565b604051610266929190614ee0565b61025561055f366004614f03565b60056020908152600092835260408084209091529082529020805460019091015482565b6103aa610591366004614f31565b60006020819052908152604090205460020b81565b6105e06105b4366004614f03565b601660209081526000928352604080842090915290825290208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610266565b610255610609366004614f4a565b611ed9565b61062161061c366004614e92565b61229c565b6040516102669190614fa1565b61064161063c366004614fb4565b61240e565b6040805182518152602080840151908201529181015190820152606001610266565b600f546102ee906001600160a01b031681565b6103e561068436600461507e565b61262c565b6012546102ee906001600160a01b031681565b61036d6106aa366004614fb4565b612bf4565b6106c26106bd3660046150fc565b612c61565b60405161026693929190615118565b6102826106df3660046151b1565b600760209081526000928352604080842090915290825290205481565b61070f61070a3660046151dc565b612e11565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a001610266565b6010546102ee906001600160a01b031681565b61078161077c366004614e92565b612f33565b6040516102669392919061522c565b61025561079e366004615251565b613140565b6103e56107b13660046152a1565b6136cc565b6011546102ee906001600160a01b031681565b6013546102ee906001600160a01b031681565b6103e56107ea3660046152f2565b61375c565b6103c5613937565b61080a610805366004615371565b613a00565b6040805160029390930b8352901515602083015201610266565b6102556108323660046153e1565b613ab7565b61036d610845366004614b2e565b60016020908152600092835260408084209091529082529020546001600160801b031681565b6103e5610879366004615463565b613ef7565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086516001600160a01b039081166000908152600360209081526040808320828c01805186168552908352818420828d01805162ffffff1686529084528285205490951660c08701528b519051945191519394600494869461091a94910161549a565b6040516020818303038152906040528051906020012081526020019081526020016000206000888833604051602001610955939291906154c2565b60408051601f198184030181529181528151602092830120835290820192909252810160002060c08401519151639887b58960e01b81526001600160a01b039092166004830152600289810b602484015288900b6044830152915073__$d23a8dd93b7205fa6b646ffed38c165d68$__90639887b589906064016040805180830381865af41580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f91906154e8565b6020840152825260c0820151610a27908888886117dd565b60608401526040830181905282518390610a42908390615522565b9052506060820151602083018051610a5b908390615522565b905250805482516002830154610a8292909103906001600160801b0316600160801b613fca565b6001600160801b039081166080840152600182015460208401516002840154610ab593929091039116600160801b613fca565b6001600160801b0390811660a0840152608083015116151580610ae5575060008260a001516001600160801b0316115b15610b3a5760808201516002820180546001600160801b03600160801b8083048216909401811690930290831617905560a08301516003830180548084169092019092166001600160801b0319919091161790555b81518155602090910151600182015560028101546003909101546001600160801b03600160801b9092048216935016905094509492505050565b6001600160a01b0383166000908152601660209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290610c9a90610bd690670de0b6b3a7640000615522565b670de0b6b3a7640000610c93846040015142610bf29190615535565b60208601516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91610c39918d9190600401615548565b602060405180830381865af4158015610c56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7a919061558e565b610c8c90670de0b6b3a7640000615522565b91906140a8565b9190613fca565b9150505b9392505050565b6010546000908190819081906060906001600160a01b0316331480610cd457506011546001600160a01b031633145b610cf95760405162461bcd60e51b8152600401610cf0906155a7565b60405180910390fd5b610d01614669565b610d0e60208c018c614d8c565b610d1e60408d0160208e01614d8c565b610d2e60608e0160408f01614b5e565b604051602001610d409392919061549a565b60408051601f19818403018152918152815160209092019190912090820152610d76670de0b6b3a76400008b610c938c82615522565b815260036000610d8960208e018e614d8c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6020016020810190610dbe9190614d8c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6040016020810190610df39190614b5e565b62ffffff16815260208082019290925260409081016000908120546001600160a01b0390811661012080870191825286850151845283865284842054600290810b60e0808a0191909152835185168652600e885294869020865161016081018852815460c08201908152600183015482890152928201546101008281019190915260038301549482019490945260048083015461014083015292815260058201549881019890985260068101548888015260078101546060890152600881015461ffff1660808901526009015460a088015290870195909552518351633850c7bd60e01b81529351911693633850c7bd93808201939291908290030181865afa158015610f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2891906155c6565b505050506001600160a01b0392909216602084018190528351604051630c7b626960e11b81528c1515600482015260248101919091526044810191909152606481018a905273__$93dfed57e8f421caed97f24c336a056d51$__92506318f6c4d29150608401602060405180830381865af4158015610fab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcf9190615668565b955087610ff457856001600160a01b031681602001516001600160a01b03161061100e565b856001600160a01b031681602001516001600160a01b0316115b6110505760405162461bcd60e51b8152602060048201526013602482015272696e6665617369626c6520736c69707061676560681b6044820152606401610cf0565b604080516101008101825282820151815289151560208083019182526001600160a01b03808b1684860190815291860151811660608501908152608085018f8152600160a08701908152600360c08801908152670de0b6b3a764000060e089019081529851631967f40b60e11b81526007600482015297516024890152955115156044880152935183166064870152905190911660848501525160a48401525160c48301525160e4820152905161010482015273__$93dfed57e8f421caed97f24c336a056d51$__906332cfe8169061012401600060405180830381865af4158015611140573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111689190810190615685565b608084019190915260608301829052925089146111b15760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610cf0565b6111cb8b8261012001518484604001518560e00151614166565b9095509350876111f757606081015160808201516111f291670de0b6b3a764000090613fca565b611214565b6080810151606082015161121491670de0b6b3a764000090613fca565b9250509550955095509550959050565b600080600085600001518660200151876040015160405160200161124a9392919061549a565b60408051601f1981840301815291815281516020928301206000818152928390529082205490925060020b908190036112ad5760405162461bcd60e51b8152602060048201526005602482015264085c1bdbdb60da1b6044820152606401610cf0565b8460020b8660020b126112d25760405162461bcd60e51b8152600401610cf090615791565b86516001600160a01b039081166000908152600360209081526040808320828c0151851684528252808320818c015162ffffff16845290915290205416865b8660020b8160020b12156113b9576001600160a01b038216634f1eb3d8308361133a87826157ac565b6001600160801b03806040518663ffffffff1660e01b81526004016113639594939291906157d1565b60408051808303816000875af1158015611381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a5919061580e565b506113b2905083826157ac565b9050611311565b60006004600086815260200190815260200160002060008a8a336040516020016113e5939291906154c2565b60408051808303601f190181529181528151602092830120835290820192909252016000206002810154909150600160801b90046001600160801b03161561144a578951600282015461144a91903390600160801b90046001600160801b03166144ac565b60038101546001600160801b03161561147c5760208a0151600382015461147c919033906001600160801b03166144ac565b600281018054600390920180546001600160801b038085169093556001600160801b03198116909155600160801b90920481169b91169950975050505050505050565b600b546060906000906114d89060019061ffff1661583d565b61ffff1690506000816001600160401b038111156114f8576114f861473b565b604051908082528060200260200182016040528015611521578160200160208202803683370190505b50905060005b82811015611588576000818152600a602052604090205482516001600160a01b039091169083908390811061155e5761155e615858565b6001600160a01b0390921660209283029190910190910152806115808161586e565b915050611527565b5092915050565b6010546001600160a01b03163314806115b257506011546001600160a01b031633145b6115ce5760405162461bcd60e51b8152600401610cf0906155a7565b60006115dd6020870187614d8c565b6115ed6040880160208901614d8c565b6115fd6060890160408a01614b5e565b60405160200161160f9392919061549a565b60405160208183030381529060405280519060200120905060008060008087518661163a919061589d565b905060005b88518110156117d0576001600087815260200190815260200160002060008a838151811061166f5761166f615858565b6020908102919091018101515160020b82528181019290925260409081016000908120546001600160a01b038e16825260059093529081208b516001600160801b039093169650918b90849081106116c9576116c9615858565b60200260200101516000015160020b60020b8152602001908152602001600020945061172b828a838151811061170157611701615858565b6020026020010151604001516117179190615522565b600160801b866001600160801b0316613fca565b9250871561175257828560010160008282546117479190615522565b9091555061176c9050565b828560000160008282546117669190615522565b90915550505b6001600160a01b038a1660009081526005602052604081208a519091908b908490811061179b5761179b615858565b60200260200101516000015160020b60020b8152602001908152602001600020945080806117c89061586e565b91505061163f565b5050505050505050505050565b6000806000859050611802604051806040016040528060008152602001600081525090565b8560020b8260020b121561188257506001600160a01b0387166000908152600560209081526040808320600285900b8452825291829020825180840190935280548084526001909101549183019190915261185d9085615522565b935080602001518361186f9190615522565b925061187b85836157ac565b9150611802565b505094509492505050565b6010546001600160a01b03163314806118b057506011546001600160a01b031633145b806118c557506012546001600160a01b031633145b806118da57506013546001600160a01b031633145b6118f65760405162461bcd60e51b8152600401610cf0906155a7565b6040805160808101825260008082526020820181905291810182905260608101919091526003600061192b6020880188614d8c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008660200160208101906119609190614d8c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008660400160208101906119959190614b5e565b62ffffff168152602080820192909252604001600020546001600160a01b031660608301526119c690860186614d8c565b6119d66040870160208801614d8c565b6119e66060880160408901614b5e565b6040516020016119f89392919061549a565b60408051601f19818403018152918152815160209283012080845260009081528083529081205460020b918301919091525b8451811015611c3f57611a7684670de0b6b3a7640000878481518110611a5257611a52615858565b6020026020010151602001516001600160801b03166145ac9092919063ffffffff16565b6001600160801b031660408084018290528351600090815260066020529081208751909190889085908110611aad57611aad615858565b6020908102919091018101515160020b825281019190915260400160009081208054909190611ae69084906001600160801b03166158b1565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555081606001516001600160a01b0316633c8a7d8d30878481518110611b3057611b30615858565b6020026020010151600001518560200151898681518110611b5357611b53615858565b602002602001015160000151611b6991906157ac565b60408088015181516001600160a01b038b1660208201529091016040516020818303038152906040526040518663ffffffff1660e01b8152600401611bb29594939291906158f5565b60408051808303816000875af1158015611bd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf491906154e8565b50611c2c9050611c093688900388018861595b565b868381518110611c1b57611c1b615858565b60200260200101516000015161240e565b5080611c378161586e565b915050611a2a565b505050505050565b600060606000835111611c895760405162461bcd60e51b815260206004820152600a602482015269656d70747920696e666f60b01b6044820152606401610cf0565b60008080611c9a6020880188614d8c565b611caa6040890160208a01614d8c565b611cba60608a0160408b01614b5e565b604051602001611ccc9392919061549a565b60408051601f1981840301815291815281516020928301206000818152928390529082205490925060020b905b8751811015611ec55781888281518110611d1557611d15615858565b602002602001015160000151611d2b9190615977565b60020b15611d695760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69645469636b60a81b6044820152606401610cf0565b600160008481526020019081526020016000206000898381518110611d9057611d90615858565b6020908102919091018101515160020b82528101919091526040016000908120546001600160801b03169550859003611dd457600088965096505050505050611ed2565b600660008481526020019081526020016000206000898381518110611dfb57611dfb615858565b6020908102919091018101515160020b8252810191909152604001600020546001600160801b039081169450611e3e908590670de0b6b3a7640000908816613fca565b888281518110611e5057611e50615858565b60200260200101516060018181525050878181518110611e7257611e72615858565b60200260200101516020015184611e899190615999565b6001600160801b0316856001600160801b03161015611eb357600088965096505050505050611ed2565b80611ebd8161586e565b915050611cf9565b5060018795509550505050505b9250929050565b60105460009081906001600160a01b0316331480611f0157506011546001600160a01b031633145b80611f1657506012546001600160a01b031633145b80611f2b57506013546001600160a01b031633145b611f475760405162461bcd60e51b8152600401610cf0906155a7565b60408051608081018252600080825260208201819052918101829052606081019190915260036000611f7c6020890189614d8c565b6001600160a01b03166001600160a01b031681526020019081526020016000206000876020016020810190611fb19190614d8c565b6001600160a01b03166001600160a01b031681526020019081526020016000206000876040016020810190611fe69190614b5e565b62ffffff168152602080820192909252604001600020546001600160a01b0316606083015261201790870187614d8c565b6120276040880160208901614d8c565b6120376060890160408a01614b5e565b6040516020016120499392919061549a565b60408051601f19818403018152918152815160209283012080845260009081528083529081205460020b918301919091525b85518110156122925785818151811061209657612096615858565b602002602001015160200151600660008460000151815260200190815260200160002060008884815181106120cd576120cd615858565b6020908102919091018101515160020b8252810191909152604001600090812080549091906121069084906001600160801b03166158b1565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060008083606001516001600160a01b0316633c8a7d8d308a868151811061215357612153615858565b60200260200101516000015187602001518c888151811061217657612176615858565b60200260200101516000015161218c91906157ac565b8c888151811061219e5761219e615858565b6020026020010151602001518c6040516020016121ca91906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016121f99594939291906158f5565b60408051808303816000875af1158015612217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061223b91906154e8565b909250905061224a8287615522565b95506122568186615522565b945061227c61226a368b90038b018b61595b565b898581518110611c1b57611c1b615858565b505050808061228a9061586e565b91505061207b565b5050935093915050565b606060006122ad6020850185614d8c565b6122bd6040860160208701614d8c565b6122cd6060870160408801614b5e565b6040516020016122df9392919061549a565b60405160208183030381529060405280519060200120905060008060005b85518110156124005760016000858152602001908152602001600020600087838151811061232d5761232d615858565b60200260200101516000015160020b60020b815260200190815260200160002060009054906101000a90046001600160801b0316925060066000858152602001908152602001600020600087838151811061238a5761238a615858565b6020908102919091018101515160020b8252810191909152604001600020546001600160801b0390811692506123cd908390670de0b6b3a7640000908616613fca565b8682815181106123df576123df615858565b602090810291909101015160600152806123f88161586e565b9150506122fd565b508493505050505b92915050565b61243260405180606001604052806000815260200160008152602001600081525090565b60008360000151846020015185604001516040516020016124559392919061549a565b60408051601f19818403018152828252805160209182012087516001600160a01b03908116600090815260038085528582208b8601518416835285528582208b87015162ffffff1683528552858220549092168082526016855285822060028b810b808552918752878420838552600e885288852060a08b018a5280548b526001818101548c8b0152928101548b8b01529586015460608b015260049095015460808a015285845286528683208184528652868320548584526006875287842091845295529490205481549296509394909390926001600160801b0390811692911690670de0b6b3a7640000906125b3906125509083615522565b670de0b6b3a7640000610c9388600201544261256c9190615535565b60018a01546040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91610c39918e9190600401615548565b6125bd9190615535565b84556001600160801b038116156125f3576125ee6001600160801b0382811690670de0b6b3a7640000908516613fca565b6125f6565b60005b60018501819055426002860181905560408051606081018252965487526020870192909252908501525091979650505050505050565b600080856001600160a01b0316876001600160a01b03161061264f578587612652565b86865b91509150856001600160a01b0316876001600160a01b03160361267457600080fd5b6001600160a01b03821661268757600080fd5b6001600160a01b0382811660009081526003602090815260408083208585168452825280832062ffffff8a16845290915290205416156126c657600080fd5b6001600160a01b0381811660009081526003602090815260408083208685168452825280832062ffffff8a168452909152902054161561270557600080fd5b60008083838860405160200161271d9392919061549a565b60408051601f198184030181529181528151602092830120835290820192909252016000205460020b1561275057600080fd5b60008460020b1361276057600080fd5b6000600260008762ffffff1662ffffff16815260200190815260200160002060009054906101000a900460020b90508860036000856001600160a01b03166001600160a01b031681526020019081526020016000206000846001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508860036000846001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160a01b03166001600160a01b0316815260200190815260200160002060008862ffffff1662ffffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508460008085858a6040516020016128b89392919061549a565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548162ffffff021916908360020b62ffffff160217905550600d60009054906101000a900461ffff16846080019061ffff16908161ffff168152505083600e60008b6001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000016000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040155505060208201518160050155604082015181600601556060820151816007015560808201518160080160006101000a81548161ffff021916908361ffff16021790555060a0820151816009015590505088600c6000600d60009054906101000a900461ffff1661ffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600d600081819054906101000a900461ffff1680929190612a3c906159b9565b825461ffff9182166101009390930a9283029190920219909116179055506001600160a01b03831660009081526009602052604090205460ff16612aee57600b805461ffff9081166000908152600a6020908152604080832080546001600160a01b0319166001600160a01b038a16908117909155855490845260089092528220908316905582549091169190612ad2836159b9565b91906101000a81548161ffff021916908361ffff160217905550505b6001600160a01b03821660009081526009602052604090205460ff16612b8257600b805461ffff9081166000908152600a6020908152604080832080546001600160a01b0319166001600160a01b038916908117909155855490845260089092528220908316905582549091169190612b66836159b9565b91906101000a81548161ffff021916908361ffff160217905550505b601054604051633eb4adab60e01b81526001600160a01b038581166004830152848116602483015290911690633eb4adab90604401600060405180830381600087803b158015612bd157600080fd5b505af1158015612be5573d6000803e3d6000fd5b50505050505050505050505050565b600060016000846000015185602001518660400151604051602001612c1b9392919061549a565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120600286900b825290915220546001600160801b0316905092915050565b600080612c6c6146d1565b60036000612c7d6020870187614d8c565b6001600160a01b03166001600160a01b031681526020019081526020016000206000856020016020810190612cb29190614d8c565b6001600160a01b03166001600160a01b031681526020019081526020016000206000856040016020810190612ce79190614b5e565b62ffffff1681526020808201929092526040016000908120546001600160a01b03169450908190612d1a90870187614d8c565b612d2a6040880160208901614d8c565b612d3a6060890160408a01614b5e565b604051602001612d4c9392919061549a565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120546001600160a01b0387168252600e835290839020835161016081018552815460c08201908152600183015460e08301526002838101546101008401526003840154610120840152600484015461014084015290825260058301549482019490945260068201549481019490945260078101546060850152600881015461ffff1660808501526009015460a0840152949694900b945092915050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915260046000612e4d6020880188614d8c565b612e5d6040890160208a01614d8c565b612e6d60608a0160408b01614b5e565b604051602001612e7f9392919061549a565b6040516020818303038152906040528051906020012081526020019081526020016000206000858585604051602001612eba939291906154c2565b60408051808303601f190181529181528151602092830120835282820193909352908201600020825160a0810184528154815260018201549281019290925260028101546001600160801b0380821694840194909452600160801b90048316606083015260030154909116608082015295945050505050565b60105460609060009081906001600160a01b0316331480612f5e57506011546001600160a01b031633145b80612f7357506012546001600160a01b031633145b612f8f5760405162461bcd60e51b8152600401610cf0906155a7565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915260036000612fd26020890189614d8c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008760200160208101906130079190614d8c565b6001600160a01b03166001600160a01b03168152602001908152602001600020600087604001602081019061303c9190614b5e565b62ffffff168152602080820192909252604001600020546001600160a01b031660a083015261306d90870187614d8c565b61307d6040880160208901614d8c565b61308d6060890160408a01614b5e565b60405160200161309f9392919061549a565b60408051601f1981840301815291815281516020928301206080840181905260009081529182905290205460020b81526130d98686611c47565b9015156020830181905290955061311b5760405162461bcd60e51b8152600401610cf090602080825260049082015263216c697160e01b604082015260600190565b613134868260a001518784608001518560000151614166565b95979096509350505050565b6000806131786040518060a0016040528060008152602001600081526020016000815260200160008152602001600080191681525090565b6131856020880188614d8c565b6131956040890160208a01614d8c565b6131a560608a0160408b01614b5e565b6040516020016131b79392919061549a565b60408051601f1981840301815291815281516020928301206080840181905260009081529182905281205460020b90879082900361321f5760405162461bcd60e51b8152602060048201526005602482015264085c1bdbdb60da1b6044820152606401610cf0565b8660020b8860020b126132445760405162461bcd60e51b8152600401610cf090615791565b600060038161325660208d018d614d8c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001602081019061328b9190614d8c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008b60400160208101906132c09190614b5e565b62ffffff1681526020810191909152604001600020546001600160a01b031690505b8760020b8260020b12156135aa576080840180516000908152600660209081526040808320600287900b8085529083528184205494518452600183528184209084529091529020546001600160801b0391821691613342918a91166158b1565b6001600160801b031610156133855760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b6044820152606401610cf0565b6001600160a01b03811663a34123a78361339f86826157ac565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526001600160801b038a16604482015260640160408051808303816000875af11580156133f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061341891906154e8565b602086015284526001600160a01b038116634f1eb3d8308461343a87826157ac565b885160208a01516040516001600160e01b031960e088901b1681526134669594939291906004016157d1565b60408051808303816000875af1158015613484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134a8919061580e565b505083516040850180516134bd908390615522565b90525060208401516060850180516134d6908390615522565b90525060808401516000908152600160209081526040808320600286900b8452909152812080548992906135149084906001600160801b03166158b1565b82546101009290920a6001600160801b0381810219909316918316021790915560808601516000908152600160209081526040808320600288900b84529091528120549091169003905061358057608084015160009081526007602052604090206135809083856145ec565b613598613592368c90038c018c61595b565b8361240e565b506135a383836157ac565b91506132e2565b6135c46135bc368c90038c018c61595b565b8a8a8661087e565b505086600460008660800151815260200190815260200160002060008b8b336040516020016135f5939291906154c2565b60405160208183030381529060405280519060200120815260200190815260200160002060020160008282829054906101000a90046001600160801b031661363d91906158b1565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000846040015111156136895761368961367e60208c018c614d8c565b3386604001516144ac565b6060840151156136b1576136b16136a660408c0160208d01614d8c565b3386606001516144ac565b83604001518460600151955095505050505094509492505050565b600f546001600160a01b0316331461370f5760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610cf0565b601480546001600160a01b03199081166001600160a01b03938416179091556010805482169583169590951790945560118054851693821693909317909255601280549093169116179055565b600061376a82840184614d8c565b9050600080336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156137ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137d19190615668565b336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561380f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138339190615668565b6040516323b872dd60e01b81526001600160a01b038681166004830152336024830152604482018b9052929450909250908316906323b872dd906064016020604051808303816000875af115801561388f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138b391906159d0565b506040516323b872dd60e01b81526001600160a01b038481166004830152336024830152604482018890528216906323b872dd906064016020604051808303816000875af1158015613909573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061392d91906159d0565b5050505050505050565b600d546060906000906139509060019061ffff1661583d565b61ffff1690506000816001600160401b038111156139705761397061473b565b604051908082528060200260200182016040528015613999578160200160208202803683370190505b50905060005b82811015611588576000818152600c602052604090205482516001600160a01b03909116908390839081106139d6576139d6615858565b6001600160a01b0390921660209283029190910190910152806139f88161586e565b91505061399f565b604051637058199160e01b815260076004820152600286810b602483015285810b604483015284900b6064820152821515608482015260a4810187905260c48101829052600090819073__$93dfed57e8f421caed97f24c336a056d51$__9063705819919060e4016040805180830381865af4158015613a84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613aa891906159ed565b91509150965096945050505050565b60008080613ac860208a018a614d8c565b613ad860408b0160208c01614d8c565b613ae860608c0160408d01614b5e565b604051602001613afa9392919061549a565b60408051601f1981840301815291815281516020928301206000818152928390529082205490925060020b90819003613b5a5760405162461bcd60e51b8152602060048201526002602482015261021760f41b6044820152606401610cf0565b8760020b8960020b12613b7f5760405162461bcd60e51b8152600401610cf090615791565b6000876001600160801b031611613ba85760405162461bcd60e51b8152600401610cf090615791565b613bb2818a615977565b60020b158015613bcc5750613bc78189615977565b60020b155b613be85760405162461bcd60e51b8152600401610cf090615791565b6000600381613bfa60208e018e614d8c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6020016020810190613c2f9190614d8c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6040016020810190613c649190614b5e565b62ffffff1681526020810191909152604001600020546001600160a01b03169050895b8960020b8160020b1215613e35576000806001600160a01b038416633c8a7d8d3085613cb389826157ac565b8f8e604051602001613cd491906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401613d039594939291906158f5565b60408051808303816000875af1158015613d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d4591906154e8565b9092509050613d548289615522565b9750613d608188615522565b6000878152600160209081526040808320600288900b84529091528120549198506001600160801b039091169003613dab576000868152600760205260409020613dab9084876145ec565b6000868152600160209081526040808320600287900b8452909152812080548d9290613de19084906001600160801b0316615999565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550613e1f8e803603810190613e19919061595b565b8461240e565b5050508281613e2e91906157ac565b9050613c87565b613e4f613e47368e90038e018e61595b565b8c8c8661087e565b5050886004600086815260200190815260200160002060008d8d8c604051602001613e7c939291906154c2565b60405160208183030381529060405280519060200120815260200190815260200160002060020160008282829054906101000a90046001600160801b0316613ec49190615999565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505050965096945050505050565b600f546001600160a01b03163314613f3a5760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610cf0565b6001600160a01b03919091166000908152600e6020908152604091829020835180518255808301516001830155808401516002830155606080820151600384015560809182015160048401559285015160058301559284015160068201559083015160078201559082015160088201805461ffff191661ffff90921691909117905560a090910151600990910155565b60008080600019858709858702925082811083820303915050806000036140035760008411613ff857600080fd5b508290049050610c9e565b80841161403b5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401610cf0565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000838015614148576001841680156140c3578592506140c7565b8392505b508260011c8460011c94505b8415614142578560801c156140e757600080fd5b858602818101818110156140fa57600080fd5b859004965050600185161561413757858302838782041461412057861561412057600080fd5b8181018181101561413057600080fd5b8590049350505b8460011c94506140d3565b5061415e565b838015614158576000925061415c565b8392505b505b509392505050565b60008060005b855181101561440e5785818151811061418757614187615858565b6020026020010151602001516006600087815260200190815260200160002060008884815181106141ba576141ba615858565b6020908102919091018101515160020b8252810191909152604001600090812080549091906141f39084906001600160801b0316615999565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600080886001600160a01b031663a34123a789858151811061423b5761423b615858565b602002602001015160000151888b878151811061425a5761425a615858565b60200260200101516000015161427091906157ac565b8b878151811061428257614282615858565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af11580156142e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061430c91906154e8565b91509150886001600160a01b0316634f1eb3d8308a868151811061433257614332615858565b602002602001015160000151898c888151811061435157614351615858565b60200260200101516000015161436791906157ac565b86866040518663ffffffff1660e01b81526004016143899594939291906157d1565b60408051808303816000875af11580156143a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143cb919061580e565b506143d890508286615522565b94506143e48185615522565b93506143f861226a368c90038c018c61595b565b50505080806144069061586e565b91505061416c565b5060008211801561441d575080155b806144315750811580156144315750600081115b6144655760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b6044820152606401610cf0565b81156144825761448261447b6020890189614d8c565b33846144ac565b80156144a2576144a261449b6040890160208a01614d8c565b33836144ac565b9550959350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916145089190615a1c565b6000604051808303816000865af19150503d8060008114614545576040519150601f19603f3d011682016040523d82523d6000602084013e61454a565b606091505b509150915081801561457457508051158061457457508080602001905181019061457491906159d0565b6145a55760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610cf0565b5050505050565b60006145b9848484613fca565b9050600082806145cb576145cb615887565b8486091115610c9e5760001981106145e257600080fd5b6001019392505050565b8060020b8260020b8161460157614601615887565b0760020b1561460f57600080fd5b60008061463d8360020b8560020b8161462a5761462a615887565b0560020b600881901d9161010090910790565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b6040518061014001604052806000815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600060020b81526020016146c46146d1565b8152600060209091015290565b6040518060c0016040528061470e6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff168152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b03811182821017156147735761477361473b565b60405290565b604051601f8201601f191681016001600160401b03811182821017156147a1576147a161473b565b604052919050565b6001600160a01b03811681146147be57600080fd5b50565b803562ffffff811681146147d457600080fd5b919050565b6000606082840312156147eb57600080fd5b604051606081018181106001600160401b038211171561480d5761480d61473b565b604052905080823561481e816147a9565b8152602083013561482e816147a9565b602082015261483f604084016147c1565b60408201525092915050565b8060020b81146147be57600080fd5b60008060008060c0858703121561487057600080fd5b61487a86866147d9565b9350606085013561488a8161484b565b9250608085013561489a8161484b565b915060a08501356148aa8161484b565b939692955090935050565b600060a082840312156148c757600080fd5b60405160a081018181106001600160401b03821117156148e9576148e961473b565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b600080600060e0848603121561493957600080fd5b8335614944816147a9565b925060208401356149548161484b565b915061496385604086016148b5565b90509250925092565b60006060828403121561497e57600080fd5b50919050565b80151581146147be57600080fd5b600080600080600060e086880312156149aa57600080fd5b6149b4878761496c565b9450606086013593506080860135925060a08601356149d281614984565b9497939650919460c0013592915050565b600081518084526020808501945080840160005b83811015614a5d578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0808201519089015260c0908101519088015260e090960195908201906001016149f7565b509495945050505050565b60018060a01b038616815284602082015283604082015282606082015260a060808201526000614a9b60a08301846149e3565b979650505050505050565b600080600060608486031215614abb57600080fd5b8335614ac6816147a9565b92506020840135614ad6816147a9565b9150614963604085016147c1565b600080600060a08486031215614af957600080fd5b614b0385856147d9565b92506060840135614b138161484b565b91506080840135614b238161484b565b809150509250925092565b60008060408385031215614b4157600080fd5b823591506020830135614b538161484b565b809150509250929050565b600060208284031215614b7057600080fd5b610c9e826147c1565b6020808252825182820181905260009190848201906040850190845b81811015614bba5783516001600160a01b031683529284019291840191600101614b95565b50909695505050505050565b60006001600160401b03821115614bdf57614bdf61473b565b5060051b60200190565b6001600160801b03811681146147be57600080fd5b600082601f830112614c0f57600080fd5b81356020614c24614c1f83614bc6565b614779565b82815260e09283028501820192828201919087851115614c4357600080fd5b8387015b85811015614cc45781818a031215614c5f5760008081fd5b614c67614751565b8135614c728161484b565b815281860135614c8181614be9565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c080830135908201528452928401928101614c47565b5090979650505050505050565b600080600080600060e08688031215614ce957600080fd5b614cf3878761496c565b94506060860135614d03816147a9565b935060808601356001600160401b03811115614d1e57600080fd5b614d2a88828901614bfe565b93505060a08601356149d281614984565b60008060008060808587031215614d5157600080fd5b8435614d5c816147a9565b93506020850135614d6c8161484b565b92506040850135614d7c8161484b565b915060608501356148aa8161484b565b600060208284031215614d9e57600080fd5b8135610c9e816147a9565b6101408101614de3828980518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b60a082019690965260c081019490945260e084019290925261ffff1661010083015261012090910152919050565b60008060008060c08587031215614e2757600080fd5b614e31868661496c565b935060608501356001600160401b03811115614e4c57600080fd5b614e5887828801614bfe565b9350506080850135915060a08501356148aa816147a9565b60008060408385031215614e8357600080fd5b50508035926020909101359150565b60008060808385031215614ea557600080fd5b614eaf848461496c565b915060608301356001600160401b03811115614eca57600080fd5b614ed685828601614bfe565b9150509250929050565b8215158152604060208201526000614efb60408301846149e3565b949350505050565b60008060408385031215614f1657600080fd5b8235614f21816147a9565b91506020830135614b538161484b565b600060208284031215614f4357600080fd5b5035919050565b600080600060a08486031215614f5f57600080fd5b614f69858561496c565b925060608401356001600160401b03811115614f8457600080fd5b614f9086828701614bfe565b9250506080840135614b23816147a9565b602081526000610c9e60208301846149e3565b60008060808385031215614fc757600080fd5b614fd184846147d9565b91506060830135614b538161484b565b61ffff811681146147be57600080fd5b6000610140828403121561500457600080fd5b60405160c081018181106001600160401b03821117156150265761502661473b565b60405290508061503684846148b5565b815260a0830135602082015260c0830135604082015260e0830135606082015261010083013561506581614fe1565b8060808301525061012083013560a08201525092915050565b6000806000806000806101e0878903121561509857600080fd5b86356150a3816147a9565b955060208701356150b3816147a9565b945060408701356150c3816147a9565b93506150d1606088016147c1565b925060808701356150e18161484b565b91506150f08860a08901614ff1565b90509295509295509295565b60006060828403121561510e57600080fd5b610c9e838361496c565b6001600160a01b0384168152600283900b6020820152815161018082019061516f90604084019080518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b602083015160e08301526040830151610100830152606083015161012083015261ffff60808401511661014083015260a0830151610160830152949350505050565b600080604083850312156151c457600080fd5b8235915060208301358060010b8114614b5357600080fd5b60008060008060c085870312156151f257600080fd5b6151fc868661496c565b9350606085013561520c8161484b565b9250608085013561521c8161484b565b915060a08501356148aa816147a9565b60608152600061523f60608301866149e3565b60208301949094525060400152919050565b60008060008060c0858703121561526757600080fd5b615271868661496c565b935060608501356152818161484b565b925060808501356152918161484b565b915060a08501356148aa81614be9565b600080600080608085870312156152b757600080fd5b84356152c2816147a9565b935060208501356152d2816147a9565b925060408501356152e2816147a9565b915060608501356148aa816147a9565b6000806000806060858703121561530857600080fd5b843593506020850135925060408501356001600160401b038082111561532d57600080fd5b818701915087601f83011261534157600080fd5b81358181111561535057600080fd5b88602082850101111561536257600080fd5b95989497505060200194505050565b60008060008060008060c0878903121561538a57600080fd5b86359550602087013561539c8161484b565b945060408701356153ac8161484b565b935060608701356153bc8161484b565b925060808701356153cc81614984565b8092505060a087013590509295509295509295565b60008060008060008061010087890312156153fb57600080fd5b615405888861496c565b955060608701356154158161484b565b945060808701356154258161484b565b935060a087013561543581614be9565b925060c0870135615445816147a9565b915060e0870135615455816147a9565b809150509295509295509295565b600080610160838503121561547757600080fd5b8235615482816147a9565b91506154918460208501614ff1565b90509250929050565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b600293840b81529190920b60208201526001600160a01b03909116604082015260600190565b600080604083850312156154fb57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b808201808211156124085761240861550c565b818103818111156124085761240861550c565b60c08101615581828580518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8260a08301529392505050565b6000602082840312156155a057600080fd5b5051919050565b602080825260059082015264042c2eae8d60db1b604082015260600190565b600080600080600080600060e0888a0312156155e157600080fd5b87516155ec816147a9565b60208901519097506155fd8161484b565b604089015190965061560e81614fe1565b606089015190955061561f81614fe1565b608089015190945061563081614fe1565b60a089015190935060ff8116811461564757600080fd5b60c089015190925061565881614984565b8091505092959891949750929550565b60006020828403121561567a57600080fd5b8151610c9e816147a9565b6000806000606080858703121561569b57600080fd5b8451935060208086015193506040808701516001600160401b038111156156c157600080fd5b8701601f810189136156d257600080fd5b80516156e0614c1f82614bc6565b81815260e0918202830185019185820191908c8411156156ff57600080fd5b938601935b8385101561577f5780858e03121561571c5760008081fd5b615724614751565b855161572f8161484b565b81528588015161573e81614be9565b81890152858701518782015288860151898201526080808701519082015260a0808701519082015260c0808701519082015283529384019391860191615704565b50809750505050505050509250925092565b6020808252600190820152606960f81b604082015260600190565b600281810b9083900b01627fffff8113627fffff19821217156124085761240861550c565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b6000806040838503121561582157600080fd5b825161582c81614be9565b6020840151909250614b5381614be9565b61ffff8281168282160390808211156115885761158861550c565b634e487b7160e01b600052603260045260246000fd5b6000600182016158805761588061550c565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826158ac576158ac615887565b500490565b6001600160801b038281168282160390808211156115885761158861550c565b60005b838110156158ec5781810151838201526020016158d4565b50506000910152565b60018060a01b03861681528460020b60208201528360020b60408201526001600160801b038316606082015260a06080820152600082518060a08401526159438160c08501602087016158d1565b601f01601f19169190910160c0019695505050505050565b60006060828403121561596d57600080fd5b610c9e83836147d9565b60008260020b8061598a5761598a615887565b808360020b0791505092915050565b6001600160801b038181168382160190808211156115885761158861550c565b600061ffff8083168181036145e2576145e261550c565b6000602082840312156159e257600080fd5b8151610c9e81614984565b60008060408385031215615a0057600080fd5b8251615a0b8161484b565b6020840151909250614b5381614984565b60008251615a2e8184602087016158d1565b919091019291505056fea2646970667358221220ef31c403f3a7dc6981feda5a26153e153a41fce20c30378836ffcba7d1aa8df064736f6c63430008120033";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/Util.sol:Utils"]: string;
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
}
