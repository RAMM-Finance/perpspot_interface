/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PoolManager, PoolManagerInterface } from "../../src/PoolManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium1",
        type: "uint256",
      },
    ],
    name: "CollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "Interests",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "LiquidityBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "LiquidityPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside0LastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeGrowthInside1LastX128",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "tokensOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "uParam",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchRight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSearchLeft",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "poolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "MIN_PREMIUM_DEPOSIT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "REPAY_THRESHOLD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "UtilizationGrowths",
    outputs: [
      {
        internalType: "uint256",
        name: "growth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastURate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "_updateUtilizationGrowth",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "growth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct UtilizationGrowth",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    name: "binBitmaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "borrowedLiquidities",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "collectFees",
    outputs: [
      {
        internalType: "uint128",
        name: "premiumOwed0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "premiumOwed1",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeParams",
    outputs: [
      {
        internalType: "uint128",
        name: "openFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "feeToPool",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "profitFeeToPool",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "margin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "borrowBelow",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "simulatedOutput",
        type: "uint256",
      },
    ],
    name: "findAndWithdraw",
    outputs: [
      {
        internalType: "uint160",
        name: "sqrtStartingPriceX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averagePrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "startingTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "finishTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "binSize",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "lte",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "findNearestInitializedBin",
    outputs: [
      {
        internalType: "int24",
        name: "nextTick",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getBorrowedLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getFeeParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getHashedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getHashedPositionKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedKey",
        type: "bytes32",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "getInterestGrowthInside",
    outputs: [
      {
        internalType: "uint256",
        name: "interest0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interest1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getLiquidityInBin",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLiquidityPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "tokensOwed1",
            type: "uint128",
          },
        ],
        internalType: "struct UniswapPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getPremiumsCollected",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "premium0",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "premium1",
            type: "uint128",
          },
        ],
        internalType: "struct PremiumsCollected",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
    ],
    name: "getProfitFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marginFacility",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "minLiquidities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "repayInfo",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "mintToRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "positionIsToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feePortion",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumInBorrowedAsset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumInPairAsset",
        type: "uint256",
      },
    ],
    name: "payInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
    ],
    name: "provideDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "collectPaused",
        type: "bool",
      },
    ],
    name: "setCollectPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mf",
        type: "address",
      },
      {
        internalType: "address",
        name: "bf",
        type: "address",
      },
      {
        internalType: "address",
        name: "of_",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapFactory",
        type: "address",
      },
    ],
    name: "setFacilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "minLiquidity",
        type: "uint256",
      },
    ],
    name: "setMinLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "providePaused",
        type: "bool",
      },
    ],
    name: "setProvidePaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "withdrawPaused",
        type: "bool",
      },
    ],
    name: "setWithdrawPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tickDiscretizations",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
    ],
    name: "updateCollectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitFeeToPool",
        type: "uint256",
      },
    ],
    name: "updateFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pivotRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intercept2",
                type: "uint256",
              },
            ],
            internalType: "struct URateParam",
            name: "uParam",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchRight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSearchLeft",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "poolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "MIN_PREMIUM_DEPOSIT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "REPAY_THRESHOLD",
            type: "uint256",
          },
        ],
        internalType: "struct PoolParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "updatePoolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "updateUtilizationGrowth",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "growth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastURate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct UtilizationGrowth",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "withdrawDiscreteLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "withdrawToBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016000819055600e805461ffff1916909117905534801561002557600080fd5b50600e805462010000600160b01b031916336201000002179055615fc4806200004f6000396000f3fe608060405234801561001057600080fd5b50600436106102a05760003560e01c80638bdb2afa11610167578063b75323a7116100ce578063d7a3dca011610087578063d7a3dca01461095b578063d7d3ed6a1461098d578063da69b0b3146109a0578063dc724d3a146109d4578063f2d490a5146109e7578063fd8d019c146109fa57600080fd5b8063b75323a714610866578063bbd9547214610879578063c6c2c2ca1461088c578063d348799714610906578063d41dcbea14610919578063d57839531461092e57600080fd5b8063a841fdd811610120578063a841fdd8146107b3578063a882c12d146107d3578063abf978e4146107e6578063ac00b809146107f9578063ac9650d81461080c578063b3a4016e1461082c57600080fd5b80638bdb2afa146106c85780638da5cb5b146106db578063912a8e00146106f457806395250923146107075780639744a42d14610729578063a84046551461075457600080fd5b806334f3b11a1161020b5780635ea33ec5116101c45780635ea33ec5146105cf57806365197688146105e25780636cb42a2f146106185780636fc280e11461062b5780637f8f1dda146106805780638228108a146106b557600080fd5b806334f3b11a1461045c57806337d151391461046f578063406a3d021461048257806345e61a4d14610495578063482224421461052f5780635955cad31461054257600080fd5b806318cdea9d1161025d57806318cdea9d1461039157806319fa1033146103a457806319fda277146103d75780632398c1a91461042357806325f149ce1461043657806329aa38191461044957600080fd5b80630229fb60146102a557806304ad52fc146102d25780630ea50f50146102f35780630f4299311461031757806313af40351461032c5780631698ee821461033f575b600080fd5b6102b86102b3366004614bcb565b610a0d565b604080519283526020830191909152015b60405180910390f35b6102e56102e0366004614c95565b610a5e565b6040519081526020016102c9565b610306610301366004614d03565b610b9b565b6040516102c9959493929190614d54565b61032a610325366004614ea5565b6111af565b005b61032a61033a366004614f23565b611653565b61037961034d366004614f40565b600b6020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6040516001600160a01b0390911681526020016102c9565b61032a61039f366004614f7e565b6116ad565b6103b76103b2366004614fa9565b61172c565b604080516001600160801b039384168152929091166020830152016102c9565b61040b6103e5366004614ff3565b60026020908152600092835260408084209091529082529020546001600160801b031681565b6040516001600160801b0390911681526020016102c9565b61032a610431366004615023565b611cdd565b61032a610444366004615066565b611d56565b61040b610457366004615083565b611da4565b61032a61046a3660046150b0565b611de7565b61032a61047d366004615066565b611eb3565b6102e56104903660046150e7565b611f01565b61051c6104a3366004614f23565b600760208181526000928352604092839020835160a081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301546080820152600583015460068401549284015460088501546009860154600a909601549395929493919261ffff9091169187565b6040516102c99796959493929190615127565b6102e561053d366004615198565b611f4d565b6105996105503660046151b4565b60046020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160801b0380831692600160801b90048116911685565b6040805195865260208601949094526001600160801b03928316938501939093528116606084015216608082015260a0016102c9565b6102b86105dd3660046151d6565b611f8d565b6106056105f036600461521e565b600a6020526000908152604090205460020b81565b60405160029190910b81526020016102c9565b6102b8610626366004615338565b612033565b61066561063936600461538f565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b604080519384526020840192909252908201526060016102c9565b61069361068e366004615083565b61238e565b60408051825181526020808401519082015291810151908201526060016102c9565b6106936106c3366004615083565b6123ef565b601054610379906001600160a01b031681565b600e54610379906201000090046001600160a01b031681565b61040b610702366004615083565b6125e5565b61071a6107153660046153bd565b6125f4565b6040516102c9939291906153d9565b6102e561073736600461547d565b600c60209081526000928352604080842090915290825290205481565b6107676107623660046154a8565b6127b1565b604080518251815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a0016102c9565b6102e56107c136600461521e565b60086020526000908152604090205481565b600f54610379906001600160a01b031681565b6102b86107f43660046154f8565b612872565b61032a610807366004615548565b612f10565b61081f61081a366004615599565b612f74565b6040516102c9919061565d565b61083f61083a366004615198565b613068565b6040805182516001600160801b0390811682526020938401511692810192909252016102c9565b6102b8610874366004615198565b6130c8565b6102b86108873660046156bf565b613105565b6108d361089a36600461521e565b600960205260009081526040902080546001909101546001600160801b0380831692600160801b90819004821692808316929190041684565b604080516001600160801b03958616815293851660208501529184169183019190915290911660608201526080016102c9565b61032a61091436600461570d565b61324d565b610921613349565b6040516102c9919061578c565b61094161093c3660046157d9565b613426565b6040805160029390930b83529015156020830152016102c9565b6102b8610969366004614ff3565b60036020908152600092835260408084209091529082529020805460019091015482565b6102b861099b366004615849565b6134dd565b61040b6109ae366004614ff3565b60016020908152600092835260408084209091529082529020546001600160801b031681565b61032a6109e2366004615066565b6139db565b6102b86109f5366004615198565b613a29565b61032a610a083660046158cb565b613a63565b600080600054600114610a3b5760405162461bcd60e51b8152600401610a329061595b565b60405180910390fd5b6002600055610a4c86868686613dd5565b60016000559097909650945050505050565b6001600160a01b0383166000908152600660209081526040808320600286810b8552908352818420825160608101845281548082526001830154958201959095529101549181019190915290670de0b6b3a764000090610b8690610ac29083615995565b670de0b6b3a7640000610b7f856040015142610ade91906159a8565b60208701516040516317b474bf60e01b8152670de0b6b3a76400009173__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91610b25918e91906004016159bb565b602060405180830381865af4158015610b42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b669190615a01565b610b7890670de0b6b3a7640000615995565b9190614070565b919061412e565b610b9091906159a8565b9150505b9392505050565b600f546000908190819081906060906001600160a01b03163314610bd15760405162461bcd60e51b8152600401610a3290615a1a565b610bd96149d3565b610be660208c018c614f23565b610bf660408d0160208e01614f23565b610c0660608e0160408f01615a39565b604051602001610c1893929190615a54565b60408051601f19818403018152918152815160209283012090830152600b90600090610c46908e018e614f23565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6020016020810190610c7b9190614f23565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6040016020810190610cb09190615a39565b62ffffff16815260208082019290925260409081016000908120546001600160a01b03908116610120808701918252868501518452600a80875285852054600290810b60e0808b01919091528451861687526007808a5296889020885161018081018a5281548184019081526001830154610100838101919091529483015496820196909652600382015461014082015260048083015461016083015295815260058201549a81019a909a5260068101548a8a01529687015460608a0152600887015461ffff1660808a0152600987015460a08a0152959091015460c0880152870195909552518351633850c7bd60e01b81529351911693633850c7bd93808201939291908290030181865afa158015610dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df29190615a7c565b505050506001600160a01b03929092166020840152505060405163e5561d0d60e01b81528815156004820152602481018a90526044810188905273__$93dfed57e8f421caed97f24c336a056d51$__9063e5561d0d90606401602060405180830381865af4158015610e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8c9190615b1e565b602082015160405163332b1def60e21b81528a15156004820152602481018c9052604481018d90526001600160a01b03909116606482015290965060009073__$93dfed57e8f421caed97f24c336a056d51$__9063ccac77bc90608401602060405180830381865af4158015610f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2a9190615b1e565b905088610f4c57806001600160a01b0316876001600160a01b03161115610f63565b806001600160a01b0316876001600160a01b031610155b610fa85760405162461bcd60e51b8152602060048201526016602482015275696e76616c6964207374617274696e6720707269636560501b6044820152606401610a32565b73__$93dfed57e8f421caed97f24c336a056d51$$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__916317b474bf91610b25918e91906004016159bb565b61257691906159a8565b84556001600160801b038116156125ac576125a76001600160801b0382811690670de0b6b3a764000090851661412e565b6125af565b60005b60018501819055426002860181905560408051606081018252965487526020870192909252908501525091979650505050505050565b600060016000611db385611f4d565b6000806125ff614a3b565b600b60006126106020870187614f23565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160208101906126459190614f23565b6001600160a01b03166001600160a01b03168152602001908152602001600020600085604001602081019061267a9190615a39565b62ffffff1681526020808201929092526040016000908120546001600160a01b03169450600a916126ad90870187614f23565b6126bd6040880160208901614f23565b6126cd6060890160408a01615a39565b6040516020016126df93929190615a54565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120546001600160a01b0387168252600780845291849020845161018081018652815460e08201908152600183015461010083015260028381015461012084015260038401546101408401526004840154610160840152908252600583015495820195909552600682015495810195909552918201546060850152600882015461ffff166080850152600982015460a0850152600a9091015460c0840152949694900b945092915050565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152600460006127f261053d36899003890189615198565b8152602001908152602001600020600061280d868686611f01565b81526020808201929092526040908101600020815160a0810183528154815260018201549381019390935260028101546001600160801b0380821693850193909352600160801b9004821660608401526003015416608082015290505b949350505050565b6000806000546001146128975760405162461bcd60e51b8152600401610a329061595b565b600260009081556040805160e08101825282815260208101839052908101829052606081018290526080810182905260a0810182905260c08101919091526128e761053d36899003890189615198565b608082018181526000918252600a602090815260408084205460020b60a0860152915183526004905281208161291e898933611f01565b81526020019081526020016000209050601060159054906101000a900460ff161561295b5760405162461bcd60e51b8152600401610a3290615c7e565b8160a0015160020b6000036129825760405162461bcd60e51b8152600401610a3290615c9e565b8560020b8760020b126129a75760405162461bcd60e51b8152600401610a3290615cb9565b60028101546001600160801b0316158015906129d3575060028101546001600160801b03808716911610155b612a035760405162461bcd60e51b81526020600482015260016024820152603760f91b6044820152606401610a32565b6000600b81612a1560208c018c614f23565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6020016020810190612a4a9190614f23565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190612a7f9190615a39565b62ffffff1681526020808201929092526040908101600090812054608087015182526008909352205460c08501526001600160a01b03169050875b8760020b8160020b1215612db4576080840180516000908152600160209081526040808320600286810b8086529184528285205460c08b0151965186529084528285209185529252909120546001600160801b039182169291612b1e91168a615d89565b6001600160801b0316612b319190615995565b816001600160801b03161015612b755760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b6044820152606401610a32565b826001600160a01b031663a34123a7838760a0015185612b959190615cd4565b6040516001600160e01b031960e085901b168152600292830b6004820152910b60248201526001600160801b038b16604482015260640160408051808303816000875af1158015612bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c0e9190615cf9565b6020870152855260a08501516001600160a01b03841690634f1eb3d89030908590612c399082615cd4565b895160208b01516040516001600160e01b031960e088901b168152612c65959493929190600401615d1d565b60408051808303816000875af1158015612c83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ca79190615d5a565b50508451604086018051612cbc908390615995565b9052506020850151606086018051612cd5908390615995565b90525060808501516000908152600160209081526040808320600286900b8452909152812080548a9290612d139084906001600160801b0316615da9565b82546101009290920a6001600160801b0381810219909316918316021790915560808701516000908152600160209081526040808320600288900b845290915281205490911690039050612d845760a085015160808601516000908152600c60205260409020612d84918490614798565b612d9c612d96368d90038d018d615198565b836123ef565b505060a0840151612dad9082615cd4565b9050612aba565b612dd2612dc6368c90038c018c615198565b8a8a8760a00151613dd5565b5050608084015160009081526004602052604081208891612df48c8c33611f01565b8152602081019190915260400160009081206002018054909190612e229084906001600160801b0316615da9565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600084604001511115612e6e57612e6e612e6360208c018c614f23565b338660400151614698565b606084015115612e9657612e96612e8b60408c0160208d01614f23565b338660600151614698565b604080516001600160801b038916815260028b810b60208301528a900b81830152905133916001600160a01b038516917f49ae36094cb0a2af1fad270a75bb3188db1a6e13c5b0b9a230319221247fda9d9181900360600190a3505050604081015160609091015160016000559097909650945050505050565b600e546201000090046001600160a01b03163314612f405760405162461bcd60e51b8152600401610a3290615c5e565b601080546001600160a01b039283166001600160a01b031991821617909155600f8054959092169416939093179092555050565b6060816001600160401b03811115612f8e57612f8e614aac565b604051908082528060200260200182016040528015612fc157816020015b6060815260200190600190039081612fac5790505b50905060005b828110156130615761303130858584818110612fe557612fe5615dc9565b9050602002810190612ff79190615e45565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061481592505050565b82828151811061304357613043615dc9565b6020026020010181905250808061305990615e2c565b915050612fc7565b5092915050565b60408051808201909152600080825260208201526005600061308984611f4d565b815260208082019290925260409081016000208151808301909252546001600160801b038082168352600160801b909104169181019190915292915050565b60008060006130d684611f4d565b6000908152600960205260409020600101546001600160801b0380821696600160801b90920416945092505050565b600f5460009081906001600160a01b031633146131345760405162461bcd60e51b8152600401610a3290615a1a565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261317161053d36879003870187615198565b608082018190526000908152600a6020908152604082205460020b835261323f918791600b91906131a490840184614f23565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906131d99190614f23565b6001600160a01b03166001600160a01b03168152602001908152602001600020600088604001602081019061320e9190615a39565b62ffffff168152602081019190915260400160002054608084015184516001600160a01b039092169188919061420c565b9093509150505b9250929050565b600061325b82840184614f23565b9050600080336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561329e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132c29190615b1e565b336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133249190615b1e565b915091506133348284338a61483a565b6133408184338961483a565b50505050505050565b600e546060906000906133629060019061ffff16615e8b565b61ffff1690506000816001600160401b0381111561338257613382614aac565b6040519080825280602002602001820160405280156133ab578160200160208202803683370190505b50905060005b8281101561306157600d60006133c8836001615995565b815260200190815260200160002060009054906101000a90046001600160a01b03168282815181106133fc576133fc615dc9565b6001600160a01b03909216602092830291909101909101528061341e81615e2c565b9150506133b1565b604051637058199160e01b8152600c6004820152600286810b602483015285810b604483015284900b6064820152821515608482015260a4810187905260c48101829052600090819073__$93dfed57e8f421caed97f24c336a056d51$__9063705819919060e4016040805180830381865af41580156134aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134ce9190615ea6565b91509150965096945050505050565b6000806000546001146135025760405162461bcd60e51b8152600401610a329061595b565b6002600090815561351b61053d368b90038b018b615198565b6000818152600a602052604090205460105491925060020b90600160a01b900460ff161561355b5760405162461bcd60e51b8152600401610a3290615c7e565b8060020b60000361357e5760405162461bcd60e51b8152600401610a3290615c9e565b8760020b8960020b126135a35760405162461bcd60e51b8152600401610a3290615cb9565b6000876001600160801b0316116135e05760405162461bcd60e51b81526020600482015260016024820152601b60fa1b6044820152606401610a32565b6135ea818a615eeb565b60020b15801561360457506135ff8189615eeb565b60020b155b6136345760405162461bcd60e51b81526020600482015260016024820152601960fa1b6044820152606401610a32565b6000600b8161364660208e018e614f23565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001602081019061367b9190614f23565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c60400160208101906136b09190615a39565b62ffffff1681526020810191909152604001600020546001600160a01b03169050895b8960020b8160020b1215613881576000806001600160a01b038416633c8a7d8d30856136ff8982615cd4565b8f8e60405160200161372091906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161374f959493929190615ddf565b60408051808303816000875af115801561376d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137919190615cf9565b90925090506137a08289615995565b97506137ac8188615995565b6000878152600160209081526040808320600288900b84529091528120549198506001600160801b0390911690036137f7576000868152600c602052604090206137f7908487614798565b6000868152600160209081526040808320600287900b8452909152812080548d929061382d9084906001600160801b0316615d89565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061386b8e8036038101906138659190615198565b846123ef565b505050828161387a9190615cd4565b90506136d3565b61389b613893368e90038e018e615198565b8c8c86613dd5565b5050886004600086815260200190815260200160002060008d8d8c6040516020016138ea93929190600293840b81529190920b60208201526001600160a01b0391909116604082015260600190565b60405160208183030381529060405280519060200120815260200190815260200160002060020160008282829054906101000a90046001600160801b03166139329190615d89565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550876001600160a01b0316826001600160a01b03167f7e1aa040ae22ae078b2e04d7e756a73671a8435cd8b72b0bd15f1cef372133d28b8e8e6040516139bd939291906001600160801b03939093168352600291820b6020840152900b604082015260600190565b60405180910390a35050600160005550919890975095505050505050565b600e546201000090046001600160a01b03163314613a0b5760405162461bcd60e51b8152600401610a3290615c5e565b60108054911515600160b01b0260ff60b01b19909216919091179055565b6000806000613a3784611f4d565b6000908152600960205260409020546001600160801b0380821696600160801b90920416945092505050565b600f546001600160a01b03163314613a8d5760405162461bcd60e51b8152600401610a3290615a1a565b6000613aa161053d368a90038a018a615198565b60008181526005602052604090209091508515613b5757613ac28585615d89565b81548290601090613ae4908490600160801b90046001600160801b0316615d89565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550828160000160008282829054906101000a90046001600160801b0316613b2e9190615d89565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550613beb565b613b618585615d89565b81548290600090613b7c9084906001600160801b0316615d89565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550828160000160108282829054906101000a90046001600160801b0316613bc69190615d89565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b6000806000806000805b8c51811015613c3b578c8181518110613c1057613c10615dc9565b60200260200101516020015182613c279190615d89565b915080613c3381615e2c565b915050613bf5565b5060005b8c51811015613dc4576001600089815260200190815260200160002060008e8381518110613c6f57613c6f615dc9565b60200260200101516000015160020b60020b815260200190815260200160002060009054906101000a90046001600160801b03169450613ce98d8281518110613cba57613cba615dc9565b6020026020010151602001516001600160801b0316836001600160801b03168d61412e9092919063ffffffff16565b9250613d2b838e8381518110613d0157613d01615dc9565b602002602001015160400151613d179190615995565b600160801b876001600160801b031661412e565b60008981526003602052604081208f51929650918f9084908110613d5157613d51615dc9565b60200260200101516000015160020b60020b815260200190815260200160002095508b15613d985783866001016000828254613d8d9190615995565b90915550613db29050565b83866000016000828254613dac9190615995565b90915550505b80613dbc81615e2c565b915050613c3f565b505050505050505050505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086516001600160a01b039081166000908152600b60209081526040808320828c0151851684528252808320818c015162ffffff16845290915290205416613e5588611f4d565b60c08301819052600090815260046020526040812081613e768a8a33611f01565b8152602081019190915260409081016000209051639887b58960e01b81526001600160a01b038416600482015260028a810b602483015289900b604482015290915073__$eacbb88ed4bd2af84aa4d43bcf675bcf7e$__90639887b589906064016040805180830381865af4158015613ef3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f179190615cf9565b6020850152835260c0830151613f2f90898989611f8d565b6060850181905260408501829052845190910180855260208501805190920190915281546002830154613f749291909103906001600160801b0316600160801b61412e565b6001600160801b039081166080850152600182015460208501516002840154613fa793929091039116600160801b61412e565b6001600160801b0390811660a0850152608084015116151580613fd7575060008360a001516001600160801b0316115b156140355760808301516002820180546001600160801b03600160801b8083048216909401811690930290831617905560a08401516003830180548084169092019092166fffffffffffffffffffffffffffffffff19919091161790555b8251815560209092015160018301555060028101546003909101546001600160801b03600160801b9092048216935016905094509492505050565b60008380156141105760018416801561408b5785925061408f565b8392505b508260011c8460011c94505b841561410a578560801c156140af57600080fd5b858602818101818110156140c257600080fd5b85900496505060018516156140ff5785830283878204146140e85786156140e857600080fd5b818101818110156140f857600080fd5b8590049350505b8460011c945061409b565b50614126565b8380156141205760009250614124565b8392505b505b509392505050565b6000808060001985870985870292508281108382030391505080600003614167576000841161415c57600080fd5b508290049050610b94565b80841161419f5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b6044820152606401610a32565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600082815260086020526040812054819081805b87518110156145f85760016000888152602001908152602001600020600089838151811061425057614250615dc9565b6020908102919091018101515160020b82528101919091526040016000205488516001600160801b03909116925088908290811061429057614290615dc9565b6020026020010151602001516001600160801b031683600260008a815260200190815260200160002060008b85815181106142cd576142cd615dc9565b6020908102919091018101515160020b8252810191909152604001600020546142ff91906001600160801b0316615995565b6143099190615995565b826001600160801b0316101561434d5760405162461bcd60e51b815260206004820152600960248201526821776974686472617760b81b6044820152606401610a32565b87818151811061435f5761435f615dc9565b6020026020010151602001516002600089815260200190815260200160002060008a848151811061439257614392615dc9565b6020908102919091018101515160020b8252810191909152604001600090812080549091906143cb9084906001600160801b0316615d89565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000808a6001600160a01b031663a34123a78b858151811061441357614413615dc9565b6020026020010151600001518a8d878151811061443257614432615dc9565b6020026020010151600001516144489190615cd4565b8d878151811061445a5761445a615dc9565b60209081029190910181015101516040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af11580156144c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144e49190615cf9565b915091508a6001600160a01b0316634f1eb3d8308c868151811061450a5761450a615dc9565b6020026020010151600001518b8e888151811061452957614529615dc9565b60200260200101516000015161453f9190615cd4565b86866040518663ffffffff1660e01b8152600401614561959493929190615d1d565b60408051808303816000875af115801561457f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145a39190615d5a565b506145b090508288615995565b96506145bc8187615995565b95506145e26145d0368e90038e018e615198565b8b858151811061235f5761235f615dc9565b50505080806145f090615e2c565b915050614220565b50600084118015614607575082155b8061461b57508315801561461b5750600083115b61464f5760405162461bcd60e51b8152602060048201526005602482015264217469636b60d81b6044820152606401610a32565b831561466c5761466c61466560208b018b614f23565b3386614698565b821561468c5761468c61468560408b0160208c01614f23565b3385614698565b50509550959350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916146f49190615f1b565b6000604051808303816000865af19150503d8060008114614731576040519150601f19603f3d011682016040523d82523d6000602084013e614736565b606091505b50915091508180156147605750805115806147605750808060200190518101906147609190615f37565b6147915760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610a32565b5050505050565b8060020b8260020b816147ad576147ad615ed5565b0760020b156147bb57600080fd5b6000806147e98360020b8560020b816147d6576147d6615ed5565b0560020b600881901d9161010090910790565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b6060610b948383604051806060016040528060278152602001615f68602791396148bd565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806147915760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610a32565b6060600080856001600160a01b0316856040516148da9190615f1b565b600060405180830381855af49150503d8060008114614915576040519150601f19603f3d011682016040523d82523d6000602084013e61491a565b606091505b509150915061492b86838387614935565b9695505050505050565b606083156149a457825160000361499d576001600160a01b0385163b61499d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a32565b508161286a565b61286a83838151156149b95781518083602001fd5b8060405162461bcd60e51b8152600401610a329190615f54565b6040518061014001604052806000815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600060020b8152602001614a2e614a3b565b8152600060209091015290565b6040518060e00160405280614a786040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160008152602001600061ffff16815260200160008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715614ae457614ae4614aac565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614b1257614b12614aac565b604052919050565b6001600160a01b0381168114614b2f57600080fd5b50565b803562ffffff81168114614b4557600080fd5b919050565b600060608284031215614b5c57600080fd5b604051606081018181106001600160401b0382111715614b7e57614b7e614aac565b6040529050808235614b8f81614b1a565b81526020830135614b9f81614b1a565b6020820152614bb060408401614b32565b60408201525092915050565b8060020b8114614b2f57600080fd5b60008060008060c08587031215614be157600080fd5b614beb8686614b4a565b93506060850135614bfb81614bbc565b92506080850135614c0b81614bbc565b915060a0850135614c1b81614bbc565b939692955090935050565b600060a08284031215614c3857600080fd5b60405160a081018181106001600160401b0382111715614c5a57614c5a614aac565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b600080600060e08486031215614caa57600080fd5b8335614cb581614b1a565b92506020840135614cc581614bbc565b9150614cd48560408601614c26565b90509250925092565b600060608284031215614cef57600080fd5b50919050565b8015158114614b2f57600080fd5b600080600080600060e08688031215614d1b57600080fd5b614d258787614cdd565b9450606086013593506080860135925060a0860135614d4381614cf5565b9497939650919460c0013592915050565b600060a080830160018060a01b03891684526020888186015260408881870152606088818801526080858189015284895180875260c09650868a019150858b0160005b82811015614de8578151805160020b8552888101516001600160801b0316898601528781015188860152868101518786015285810151868601528a01518a8501529288019290870190600101614d97565b50919f9e505050505050505050505050505050565b61ffff81168114614b2f57600080fd5b60006101608284031215614e2057600080fd5b60405160e081018181106001600160401b0382111715614e4257614e42614aac565b604052905080614e528484614c26565b815260a0830135602082015260c0830135604082015260e08301356060820152610100830135614e8181614dfd565b8060808301525061012083013560a082015261014083013560c08201525092915050565b6000806000806000806102008789031215614ebf57600080fd5b8635614eca81614b1a565b95506020870135614eda81614b1a565b94506040870135614eea81614b1a565b9350614ef860608801614b32565b92506080870135614f0881614bbc565b9150614f178860a08901614e0d565b90509295509295509295565b600060208284031215614f3557600080fd5b8135610b9481614b1a565b600080600060608486031215614f5557600080fd5b8335614f6081614b1a565b92506020840135614f7081614b1a565b9150614cd460408501614b32565b60008060808385031215614f9157600080fd5b614f9b8484614b4a565b946060939093013593505050565b600080600060a08486031215614fbe57600080fd5b614fc88585614b4a565b92506060840135614fd881614bbc565b91506080840135614fe881614bbc565b809150509250925092565b6000806040838503121561500657600080fd5b82359150602083013561501881614bbc565b809150509250929050565b600080600080600060e0868803121561503b57600080fd5b6150458787614b4a565b976060870135975060808701359660a0810135965060c00135945092505050565b60006020828403121561507857600080fd5b8135610b9481614cf5565b6000806080838503121561509657600080fd5b6150a08484614b4a565b9150606083013561501881614bbc565b60008061018083850312156150c457600080fd5b82356150cf81614b1a565b91506150de8460208501614e0d565b90509250929050565b6000806000606084860312156150fc57600080fd5b833561510781614bbc565b9250602084013561511781614bbc565b91506040840135614fe881614b1a565b6101608101615161828a80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8760a08301528660c08301528560e083015261ffff8516610100830152836101208301528261014083015298975050505050505050565b6000606082840312156151aa57600080fd5b610b948383614b4a565b600080604083850312156151c757600080fd5b50508035926020909101359150565b600080600080608085870312156151ec57600080fd5b8435935060208501356151fe81614bbc565b9250604085013561520e81614bbc565b91506060850135614c1b81614bbc565b60006020828403121561523057600080fd5b5035919050565b60006001600160401b0382111561525057615250614aac565b5060051b60200190565b6001600160801b0381168114614b2f57600080fd5b600082601f83011261528057600080fd5b8135602061529561529083615237565b614aea565b82815260c092830285018201928282019190878511156152b457600080fd5b8387015b8581101561532b5781818a0312156152d05760008081fd5b6152d8614ac2565b81356152e381614bbc565b8152818601356152f28161525a565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015284529284019281016152b8565b5090979650505050505050565b600080600060a0848603121561534d57600080fd5b6153578585614cdd565b925060608401356001600160401b0381111561537257600080fd5b61537e8682870161526f565b9250506080840135614fe881614b1a565b600080604083850312156153a257600080fd5b82356153ad81614b1a565b9150602083013561501881614bbc565b6000606082840312156153cf57600080fd5b610b948383614cdd565b6001600160a01b0384168152600283900b602082015281516101a082019061543090604084019080518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b602083015160e08301526040830151610100830152606083015161012083015261ffff60808401511661014083015260a083015161016083015260c0830151610180830152949350505050565b6000806040838503121561549057600080fd5b8235915060208301358060010b811461501857600080fd5b60008060008060c085870312156154be57600080fd5b6154c88686614cdd565b935060608501356154d881614bbc565b925060808501356154e881614bbc565b915060a0850135614c1b81614b1a565b60008060008060c0858703121561550e57600080fd5b6155188686614cdd565b9350606085013561552881614bbc565b9250608085013561553881614bbc565b915060a0850135614c1b8161525a565b6000806000806080858703121561555e57600080fd5b843561556981614b1a565b9350602085013561557981614b1a565b9250604085013561558981614b1a565b91506060850135614c1b81614b1a565b600080602083850312156155ac57600080fd5b82356001600160401b03808211156155c357600080fd5b818501915085601f8301126155d757600080fd5b8135818111156155e657600080fd5b8660208260051b85010111156155fb57600080fd5b60209290920196919550909350505050565b60005b83811015615628578181015183820152602001615610565b50506000910152565b6000815180845261564981602086016020860161560d565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156156b257603f198886030184526156a0858351615631565b94509285019290850190600101615684565b5092979650505050505050565b600080608083850312156156d257600080fd5b6156dc8484614cdd565b915060608301356001600160401b038111156156f757600080fd5b6157038582860161526f565b9150509250929050565b6000806000806060858703121561572357600080fd5b843593506020850135925060408501356001600160401b038082111561574857600080fd5b818701915087601f83011261575c57600080fd5b81358181111561576b57600080fd5b88602082850101111561577d57600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b818110156157cd5783516001600160a01b0316835292840192918401916001016157a8565b50909695505050505050565b60008060008060008060c087890312156157f257600080fd5b86359550602087013561580481614bbc565b9450604087013561581481614bbc565b9350606087013561582481614bbc565b9250608087013561583481614cf5565b8092505060a087013590509295509295509295565b600080600080600080610100878903121561586357600080fd5b61586d8888614cdd565b9550606087013561587d81614bbc565b9450608087013561588d81614bbc565b935060a087013561589d8161525a565b925060c08701356158ad81614b1a565b915060e08701356158bd81614b1a565b809150509295509295509295565b6000806000806000806000610120888a0312156158e757600080fd5b6158f18989614cdd565b9650606088013561590181614b1a565b955060808801356001600160401b0381111561591c57600080fd5b6159288a828b0161526f565b95505060a088013561593981614cf5565b9699959850939660c08101359560e08201359550610100909101359350915050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611de157611de161597f565b81810381811115611de157611de161597f565b60c081016159f4828580518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8260a08301529392505050565b600060208284031215615a1357600080fd5b5051919050565b602080825260059082015264042c2eae8d60db1b604082015260600190565b600060208284031215615a4b57600080fd5b610b9482614b32565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b600080600080600080600060e0888a031215615a9757600080fd5b8751615aa281614b1a565b6020890151909750615ab381614bbc565b6040890151909650615ac481614dfd565b6060890151909550615ad581614dfd565b6080890151909450615ae681614dfd565b60a089015190935060ff81168114615afd57600080fd5b60c0890151909250615b0e81614cf5565b8091505092959891949750929550565b600060208284031215615b3057600080fd5b8151610b9481614b1a565b60008060006060808587031215615b5157600080fd5b8451935060208086015193506040808701516001600160401b03811115615b7757600080fd5b8701601f81018913615b8857600080fd5b8051615b9661529082615237565b81815260c0918202830185019185820191908c841115615bb557600080fd5b938601935b83851015615c2b5780858e031215615bd25760008081fd5b615bda614ac2565b8551615be581614bbc565b815285880151615bf48161525a565b81890152858701518782015288860151898201526080808701519082015260a0808701519082015283529384019391860191615bba565b50809750505050505050509250925092565b600061ffff808316818103615c5457615c5461597f565b6001019392505050565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b6020808252600690820152651c185d5cd95960d21b604082015260600190565b6020808252600190820152600760fc1b604082015260600190565b6020808252600190820152606960f81b604082015260600190565b600281810b9083900b01627fffff8113627fffff1982121715611de157611de161597f565b60008060408385031215615d0c57600080fd5b505080516020909101519092909150565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b60008060408385031215615d6d57600080fd5b8251615d788161525a565b60208401519092506150188161525a565b6001600160801b038181168382160190808211156130615761306161597f565b6001600160801b038281168282160390808211156130615761306161597f565b634e487b7160e01b600052603260045260246000fd5b60018060a01b03861681528460020b60208201528360020b60408201526001600160801b038316606082015260a060808201526000615e2160a0830184615631565b979650505050505050565b600060018201615e3e57615e3e61597f565b5060010190565b6000808335601e19843603018112615e5c57600080fd5b8301803591506001600160401b03821115615e7657600080fd5b60200191503681900382131561324657600080fd5b61ffff8281168282160390808211156130615761306161597f565b60008060408385031215615eb957600080fd5b8251615ec481614bbc565b602084015190925061501881614cf5565b634e487b7160e01b600052601260045260246000fd5b60008260020b80615f0c57634e487b7160e01b600052601260045260246000fd5b808360020b0791505092915050565b60008251615f2d81846020870161560d565b9190910192915050565b600060208284031215615f4957600080fd5b8151610b9481614cf5565b602081526000610b94602083018461563156fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212204394a1465e755e0c8fc8379305312c05a3ed73f9fbc2339d86df839968d00a5864736f6c63430008120033";

type PoolManagerConstructorParams =
  | [linkLibraryAddresses: PoolManagerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolManager__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$eacbb88ed4bd2af84aa4d43bcf675bcf7e\\$__", "g"),
      linkLibraryAddresses["src/PremiumComputer.sol:PremiumComputer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$93dfed57e8f421caed97f24c336a056d51\\$__", "g"),
      linkLibraryAddresses["src/MatchingEngine.sol:MatchingEngine"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolManager> {
    return super.deploy(overrides || {}) as Promise<PoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  override connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}

export interface PoolManagerLibraryAddresses {
  ["src/PremiumComputer.sol:PremiumComputer"]: string;
  ["src/MatchingEngine.sol:MatchingEngine"]: string;
}
