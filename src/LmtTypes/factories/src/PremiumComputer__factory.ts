/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PremiumComputer,
  PremiumComputerInterface,
} from "../../src/PremiumComputer";

const _abi = [
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolManager",
        type: "address",
      },
      {
        internalType: "bool",
        name: "borrowToken0",
        type: "bool",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
    ],
    name: "computePremium",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolManager",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickDiscretization",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "borrowInfo",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
    ],
    name: "getInitFeeGrowthInside",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1LastX128",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastGrowth",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityLoan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pivotRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slope2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "intercept2",
            type: "uint256",
          },
        ],
        internalType: "struct URateParam",
        name: "param",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "uRate",
        type: "uint256",
      },
    ],
    name: "getInterestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "ratePerSecond",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6112b861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80630d527ba91461005057806317b474bf1461007b578063cf2778e91461009c575b600080fd5b61006361005e366004610f0a565b6100bc565b6040516100729392919061101e565b60405180910390f35b61008e610089366004611043565b6105d7565b604051908152602001610072565b6100af6100aa36600461106e565b610641565b60405161007291906110f0565b606060008061010960405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60005b85518110156105b95773__$d23a8dd93b7205fa6b646ffed38c165d68$__639887b5898c88848151811061014257610142611103565b6020026020010151600001518b8a868151811061016157610161611103565b602002602001015160000151610177919061112f565b6040516001600160e01b031960e086901b1681526001600160a01b039093166004840152600291820b6024840152900b60448201526064016040805180830381865af41580156101cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ef9190611154565b60208401528252855161025c9087908390811061020e5761020e611103565b6020026020010151602001516001600160801b0316600160801b88848151811061023a5761023a611103565b60200260200101516060015185600001516102559190611178565b9190610848565b604083015285516102c09087908390811061027957610279611103565b6020026020010151602001516001600160801b0316600160801b8884815181106102a5576102a5611103565b60200260200101516080015185602001516102559190611178565b6060830152815186518790839081106102db576102db611103565b60200260200101516060018181525050816020015186828151811061030257610302611103565b60200260200101516080018181525050896001600160a01b03166304ad52fc8c88848151811061033457610334611103565b6020026020010151600001518a6040518463ffffffff1660e01b815260040161035f9392919061118b565b602060405180830381865afa15801561037c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a091906111de565b60a083015285518690829081106103b9576103b9611103565b602002602001015160a001518260a001516103d49190611178565b608083015260a082015186518790839081106103f2576103f2611103565b602002602001015160a0018181525050886104f5576104ad61043087838151811061041f5761041f611103565b60200260200101516000015161092b565b6104618a89858151811061044657610446611103565b60200260200101516000015161045c919061112f565b61092b565b6104a889858151811061047657610476611103565b6020026020010151602001516001600160801b0316670de0b6b3a764000087608001516108489092919063ffffffff16565b610c4e565b6080830181905260608301516104c391906111f7565b8260c0018181516104d491906111f7565b905250604082015160e0830180516104ed9083906111f7565b905250610581565b61053d61050d87838151811061041f5761041f611103565b6105238a89858151811061044657610446611103565b61053889858151811061047657610476611103565b610ca0565b60808301819052604083015161055391906111f7565b8260c00181815161056491906111f7565b905250606082015160e08301805161057d9083906111f7565b9052505b816080015186828151811061059857610598611103565b602090810291909101015160400152806105b18161120a565b91505061010c565b5060c081015160e090910151949a9099509397509295505050505050565b815160009082101561061157604083015160208401516106009084670de0b6b3a7640000610848565b61060a91906111f7565b905061063b565b6080830151606084015161062e9084670de0b6b3a7640000610848565b61063891906111f7565b90505b92915050565b606060008060005b855181101561083b5773__$d23a8dd93b7205fa6b646ffed38c165d68$__639887b5898a88848151811061067f5761067f611103565b6020026020010151600001518a8a868151811061069e5761069e611103565b6020026020010151600001516106b4919061112f565b6040516001600160e01b031960e086901b1681526001600160a01b039093166004840152600291820b6024840152900b60448201526064016040805180830381865af4158015610708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c9190611154565b80935081945050508286828151811061074757610747611103565b602002602001015160600181815250508186828151811061076a5761076a611103565b60200260200101516080018181525050876001600160a01b03166304ad52fc8a88848151811061079c5761079c611103565b602002602001015160000151886040518463ffffffff1660e01b81526004016107c79392919061118b565b602060405180830381865afa1580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080891906111de565b86828151811061081a5761081a611103565b602090810291909101015160a00152806108338161120a565b915050610649565b5093979650505050505050565b6000808060001985870985870292508281108382030391505080600003610881576000841161087657600080fd5b508290049050610924565b8084116108bd5760405162461bcd60e51b815260206004820152600660248201526536bab62234bb60d11b604482015260640160405180910390fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60008060008360020b12610942578260020b61094a565b8260020b6000035b9050620d89e8811115610970576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361098757600160801b610999565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156109cd576ffff97272373d413259a46990580e213a0260801c5b60048216156109ec576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610a0b576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610a2a576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610a49576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610a68576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610a87576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610aa7576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610ac7576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610ae7576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610b07576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610b27576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610b47576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610b67576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610b87576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610ba8576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610bc8576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610be7576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610c04576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610c25578060001981610c2157610c21611223565b0490505b640100000000810615610c39576001610c3c565b60005b60ff16602082901c0192505050919050565b6000826001600160a01b0316846001600160a01b03161115610c6e579192915b610c986001600160801b038316610c858686611239565b6001600160a01b0316600160601b610848565b949350505050565b6000826001600160a01b0316846001600160a01b03161115610cc0579192915b6001600160a01b038416610d096fffffffffffffffffffffffffffffffff60601b606085901b16610cf18787611239565b6001600160a01b0316866001600160a01b0316610848565b610c989190611260565b80356001600160a01b0381168114610d2a57600080fd5b919050565b8035600281900b8114610d2a57600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610d7a57610d7a610d41565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610da957610da9610d41565b604052919050565b600060a08284031215610dc357600080fd5b60405160a0810181811067ffffffffffffffff82111715610de657610de6610d41565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b600082601f830112610e3257600080fd5b8135602067ffffffffffffffff821115610e4e57610e4e610d41565b610e5c818360051b01610d80565b82815260c09283028501820192828201919087851115610e7b57600080fd5b8387015b85811015610efd5781818a031215610e975760008081fd5b610e9f610d57565b610ea882610d2f565b8152858201356001600160801b0381168114610ec45760008081fd5b8187015260408281013590820152606080830135908201526080808301359082015260a080830135908201528452928401928101610e7f565b5090979650505050505050565b6000806000806000806101408789031215610f2457600080fd5b610f2d87610d13565b9550610f3b60208801610d13565b945060408701358015158114610f5057600080fd5b9350610f5e60608801610d2f565b9250610f6d8860808901610db1565b915061012087013567ffffffffffffffff811115610f8a57600080fd5b610f9689828a01610e21565b9150509295509295509295565b600081518084526020808501945080840160005b83811015611013578151805160020b8852838101516001600160801b03168489015260408082015190890152606080820151908901526080808201519089015260a0908101519088015260c09096019590820190600101610fb7565b509495945050505050565b6060815260006110316060830186610fa3565b60208301949094525060400152919050565b60008060c0838503121561105657600080fd5b6110608484610db1565b9460a0939093013593505050565b6000806000806000610120868803121561108757600080fd5b61109086610d13565b945061109e60208701610d13565b93506110ac60408701610d2f565b9250606086013567ffffffffffffffff8111156110c857600080fd5b6110d488828901610e21565b9250506110e48760808801610db1565b90509295509295909350565b6020815260006106386020830184610fa3565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600281810b9083900b01627fffff8113627fffff198212171561063b5761063b611119565b6000806040838503121561116757600080fd5b505080516020909101519092909150565b8181038181111561063b5761063b611119565b600060e08201905060018060a01b03851682528360020b6020830152825160408301526020830151606083015260408301516080830152606083015160a0830152608083015160c0830152949350505050565b6000602082840312156111f057600080fd5b5051919050565b8082018082111561063b5761063b611119565b60006001820161121c5761121c611119565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b0382811682821603908082111561125957611259611119565b5092915050565b60008261127d57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122064a830c0ff429126fd7e1510a1d555252813bd444b80ebf760554af8a1bb3ef964736f6c63430008120033";

type PremiumComputerConstructorParams =
  | [linkLibraryAddresses: PremiumComputerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PremiumComputerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PremiumComputer__factory extends ContractFactory {
  constructor(...args: PremiumComputerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PremiumComputer__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PremiumComputerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d23a8dd93b7205fa6b646ffed38c165d68\\$__", "g"),
      linkLibraryAddresses["src/Util.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PremiumComputer> {
    return super.deploy(overrides || {}) as Promise<PremiumComputer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PremiumComputer {
    return super.attach(address) as PremiumComputer;
  }
  override connect(signer: Signer): PremiumComputer__factory {
    return super.connect(signer) as PremiumComputer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PremiumComputerInterface {
    return new utils.Interface(_abi) as PremiumComputerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PremiumComputer {
    return new Contract(address, _abi, signerOrProvider) as PremiumComputer;
  }
}

export interface PremiumComputerLibraryAddresses {
  ["src/Util.sol:Utils"]: string;
}
